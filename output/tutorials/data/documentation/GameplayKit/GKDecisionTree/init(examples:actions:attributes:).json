{
  "abstract": [
    {
      "text": "Creates an automatically learned decision tree using the specified attributes, example items, and actions.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.gameplaykit/documentation/GameplayKit",
        "doc://com.apple.gameplaykit/documentation/GameplayKit/GKDecisionTree"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.gameplaykit/documentation/GameplayKit/GKDecisionTree/init(examples:actions:attributes:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(cs)GKDecisionTree(im)initWithExamples:actions:attributes:",
    "fragments": [
      {
        "kind": "identifier",
        "text": "init"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "examples"
      },
      {
        "kind": "text",
        "text": ": [[any "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "c:objc(pl)NSObject",
        "text": "NSObjectProtocol"
      },
      {
        "kind": "text",
        "text": "]], "
      },
      {
        "kind": "externalParam",
        "text": "actions"
      },
      {
        "kind": "text",
        "text": ": [any "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "c:objc(pl)NSObject",
        "text": "NSObjectProtocol"
      },
      {
        "kind": "text",
        "text": "], "
      },
      {
        "kind": "externalParam",
        "text": "attributes"
      },
      {
        "kind": "text",
        "text": ": [any "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "c:objc(pl)NSObject",
        "text": "NSObjectProtocol"
      },
      {
        "kind": "text",
        "text": "])"
      }
    ],
    "modules": [
      {
        "name": "GameplayKit"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "initWithExamples:actions:attributes:"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.1",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.12",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Initializer",
    "symbolKind": "init",
    "title": "init(examples:actions:attributes:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "init"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "examples"
            },
            {
              "kind": "text",
              "text": ": [[any "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObjectProtocol"
            },
            {
              "kind": "text",
              "text": "]], "
            },
            {
              "kind": "externalParam",
              "text": "actions"
            },
            {
              "kind": "text",
              "text": ": [any "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObjectProtocol"
            },
            {
              "kind": "text",
              "text": "], "
            },
            {
              "kind": "externalParam",
              "text": "attributes"
            },
            {
              "kind": "text",
              "text": ": [any "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObjectProtocol"
            },
            {
              "kind": "text",
              "text": "])"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "An array of arrays. Each entry in the outer array is a list of example inputs, one for each attribute in the ",
                  "type": "text"
                },
                {
                  "code": "attributes",
                  "type": "codeVoice"
                },
                {
                  "text": " array.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "examples"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "An array of actions. Each item in this array is the action, or final decision, corresponding to the example input at the same index in the ",
                  "type": "text"
                },
                {
                  "code": "examples",
                  "type": "codeVoice"
                },
                {
                  "text": " array.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "actions"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "An array of questions, or attributes to be tested by the decision tree. In the inner arrays of the ",
                  "type": "text"
                },
                {
                  "code": "examples",
                  "type": "codeVoice"
                },
                {
                  "text": " array, each entry corresponds to the attribute at the same index in this array.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "attributes"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A new decision tree.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "Discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When you use this initializer, the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.gameplaykit/documentation/GameplayKit/GKDecisionTree",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " class automatically infers a decision tree structure that chooses actions based on the attribute values in the examples array. That is, if you later use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.gameplaykit/documentation/GameplayKit/GKDecisionTree/findAction(forAnswers:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method with a set of attribute values (or answers to questions) matching one of the entries in the ",
              "type": "text"
            },
            {
              "code": "examples",
              "type": "codeVoice"
            },
            {
              "text": " array, the tree will choose the action at the corresponding index in the ",
              "type": "text"
            },
            {
              "code": "actions",
              "type": "codeVoice"
            },
            {
              "text": " array. However, a decision tree is a predictive model, so the created tree is not limited to handling cases that exactly match the examples—if you call the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.gameplaykit/documentation/GameplayKit/GKDecisionTree/findAction(forAnswers:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " with a set of answers not in the examples array, the tree predicts an action by generalizing from similar examples.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example the following code creates a tree with data similar to that shown in ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.gameplaykit/documentation/GameplayKit/GKDecisionTree#Creating-a-Decision-Tree",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "let attributes = [ \"Type?\", \"HP?\", \"Special?\" ]",
                    "let examples = [",
                    "    // Each sub-array has a value for each attribute:",
                    "    [ MyEnemyType.Electric.rawValue, 10, true ], // Note: enum value for the \"Type?\" attribute",
                    "    [ MyEnemyType.Electric.rawValue, 30, false ],",
                    "    [ MyEnemyType.Electric.rawValue, 40, true ],",
                    "    [ MyEnemyType.Fire.rawValue, 20, false ],",
                    "    [ MyEnemyType.Fire.rawValue, 30, false ],",
                    "    [ MyEnemyType.Water.rawValue, 50, true],",
                    "    [ MyEnemyType.Water.rawValue, 40, false ],",
                    "]",
                    "let actions = [ // One for each entry in the examples array",
                    "    \"Psychic Strike\",",
                    "    \"Pound\",",
                    "    \"Barrier\",",
                    "    \"Pound\",",
                    "    \"Tackle\",",
                    "    \"Pound\",",
                    "    \"Tackle\",",
                    "]",
                    " ",
                    "// Multiple type casts required to convert to collections of NSObjectProtocol in Swift",
                    "let decisionTree = GKDecisionTree(examples: examples as NSArray as! [[NSObjectProtocol]],",
                    "                                  actions: actions as NSArray as! [NSObjectProtocol],",
                    "                                  attributes: attributes as NSArray as! [NSObjectProtocol])"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "NSArray *attributes = @[@\"Type?\", @\"HP?\", @\"Special?\"];",
                    "NSArray *examples = @[",
                    "    // Each sub-array has a value for each attribute:",
                    "    @[@(MyEnemyTypeElectric), @10, @YES],  // Note: enum value for the \"Type?\" attribute",
                    "    @[@(MyEnemyTypeElectric), @30, @NO],",
                    "    @[@(MyEnemyTypeElectric), @40, @YES],",
                    "    @[@(MyEnemyTypeFire), @20, @NO],",
                    "    @[@(MyEnemyTypeFire), @30, @NO],",
                    "    @[@(MyEnemyTypeWater), @50, @YES],",
                    "    @[@(MyEnemyTypeWater), @40, @NO],",
                    "];",
                    "NSArray *actions = @[ // One for each entry in the examples array",
                    "    @\"Psychic Strike\",",
                    "    @\"Pound\",",
                    "    @\"Barrier\",",
                    "    @\"Pound\",",
                    "    @\"Tackle\",",
                    "    @\"Pound\",",
                    "    @\"Tackle\",",
                    "];",
                    " ",
                    "GKDecisionTree *decisionTree = [[GKDecisionTree alloc] initWithExamples:examples actions:actions attributes:attributes];"
                  ],
                  "syntax": "objc",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "When creating an automatically learned decision tree, be sure to provide enough examples to predict actions for all of the possible answer sets you expect to handle, and no contradictory examples.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example, ",
              "type": "text"
            },
            {
              "identifier": "/documentation/gameplaykit/gkdecisiontree#1965709",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " shows the tree inferred from the input in the above code example. This tree always chooses the “Psychic Strike” action when the opponent’s health is below 15, because the only example with that action fits that condition. If you want to choose that action based on answers to both the “HP?” and “Special?” attributes, you’d need to provide multiple examples where that action corresponds to different sets of attribute values.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "/documentation/gameplaykit/gkdecisiontree#1965709": {
      "identifier": "/documentation/gameplaykit/gkdecisiontree#1965709",
      "title": "Figure 1",
      "titleInlineContent": [
        {
          "text": "Figure 1",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "/documentation/gameplaykit/gkdecisiontree#1965709"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.gameplaykit/documentation/GameplayKit": {
      "abstract": [
        {
          "text": "Architect and organize your game logic. Incorporate common gameplay behaviors such as random number generation, artificial intelligence, pathfinding, and agent behavior.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.gameplaykit/documentation/GameplayKit",
      "kind": "symbol",
      "role": "collection",
      "title": "GameplayKit",
      "type": "topic",
      "url": "/documentation/gameplaykit"
    },
    "doc://com.apple.gameplaykit/documentation/GameplayKit/GKDecisionTree": {
      "abstract": [
        {
          "text": "A data structure that models a set of specific questions, their possible answers, and the actions that follow from a series of answers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GKDecisionTree"
        }
      ],
      "identifier": "doc://com.apple.gameplaykit/documentation/GameplayKit/GKDecisionTree",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "GKDecisionTree"
        }
      ],
      "role": "symbol",
      "title": "GKDecisionTree",
      "type": "topic",
      "url": "/documentation/gameplaykit/gkdecisiontree"
    },
    "doc://com.apple.gameplaykit/documentation/GameplayKit/GKDecisionTree#Creating-a-Decision-Tree": {
      "abstract": [],
      "identifier": "doc://com.apple.gameplaykit/documentation/GameplayKit/GKDecisionTree#Creating-a-Decision-Tree",
      "kind": "section",
      "title": "Creating a Decision Tree",
      "type": "topic",
      "url": "/documentation/gameplaykit/gkdecisiontree#Creating-a-Decision-Tree"
    },
    "doc://com.apple.gameplaykit/documentation/GameplayKit/GKDecisionTree/findAction(forAnswers:)": {
      "abstract": [
        {
          "text": "Searches the decision tree, following the branches corresponding to each of the specified answers, and returns the resulting action object.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "findAction"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "forAnswers"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s11AnyHashableV",
          "text": "AnyHashable"
        },
        {
          "kind": "text",
          "text": " : any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        },
        {
          "kind": "text",
          "text": "]) -> (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.gameplaykit/documentation/GameplayKit/GKDecisionTree/findAction(forAnswers:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "findActionForAnswers:"
        }
      ],
      "role": "symbol",
      "title": "findAction(forAnswers:)",
      "type": "topic",
      "url": "/documentation/gameplaykit/gkdecisiontree/findaction(foranswers:)"
    },
    "doc://com.apple.gameplaykit/documentation/GameplayKit/GKDecisionTree/init(examples:actions:attributes:)": {
      "abstract": [
        {
          "text": "Creates an automatically learned decision tree using the specified attributes, example items, and actions.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "examples"
        },
        {
          "kind": "text",
          "text": ": [[any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        },
        {
          "kind": "text",
          "text": "]], "
        },
        {
          "kind": "externalParam",
          "text": "actions"
        },
        {
          "kind": "text",
          "text": ": [any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "attributes"
        },
        {
          "kind": "text",
          "text": ": [any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.gameplaykit/documentation/GameplayKit/GKDecisionTree/init(examples:actions:attributes:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "initWithExamples:actions:attributes:"
        }
      ],
      "role": "symbol",
      "title": "init(examples:actions:attributes:)",
      "type": "topic",
      "url": "/documentation/gameplaykit/gkdecisiontree/init(examples:actions:attributes:)"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSObject": {
      "abstract": [
        {
          "text": "The group of methods that are fundamental to all Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObjectProtocol",
      "type": "topic",
      "url": "/documentation/objectivec/nsobjectprotocol"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.0",
              "name": "iOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.0",
              "name": "iPadOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "13.1",
              "name": "Mac Catalyst",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.12",
              "name": "macOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.0",
              "name": "tvOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "1.0",
              "name": "visionOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Instance Method"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "initWithExamples:actions:attributes:"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "method"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "initWithExamples:actions:attributes:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.gameplaykit/documentation/GameplayKit",
                "doc://com.apple.gameplaykit/documentation/GameplayKit/GKDecisionTree"
              ]
            ]
          }
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "add",
          "path": "/relationshipsSections",
          "value": null
        },
        {
          "op": "add",
          "path": "/seeAlsoSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "iOS",
                  "iPadOS",
                  "Mac Catalyst",
                  "macOS",
                  "tvOS",
                  "visionOS"
                ],
                "tokens": [
                  {
                    "kind": "text",
                    "text": "- ("
                  },
                  {
                    "kind": "keyword",
                    "text": "instancetype"
                  },
                  {
                    "kind": "text",
                    "text": ") "
                  },
                  {
                    "kind": "identifier",
                    "text": "initWithExamples:"
                  },
                  {
                    "kind": "text",
                    "text": "("
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:Q$objc(cs)NSArray",
                    "text": "NSArray<NSArray<id<NSObject>> *>"
                  },
                  {
                    "kind": "text",
                    "text": " *) "
                  },
                  {
                    "kind": "internalParam",
                    "text": "examples"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "actions:"
                  },
                  {
                    "kind": "text",
                    "text": "("
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:Q$objc(cs)NSArray",
                    "text": "NSArray<id<NSObject>>"
                  },
                  {
                    "kind": "text",
                    "text": " *) "
                  },
                  {
                    "kind": "internalParam",
                    "text": "actions"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "attributes:"
                  },
                  {
                    "kind": "text",
                    "text": "("
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:Q$objc(cs)NSArray",
                    "text": "NSArray<id<NSObject>>"
                  },
                  {
                    "kind": "text",
                    "text": " *) "
                  },
                  {
                    "kind": "internalParam",
                    "text": "attributes"
                  },
                  {
                    "kind": "text",
                    "text": ";"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/1",
          "value": {
            "kind": "parameters",
            "parameters": [
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "An array of arrays. Each entry in the outer array is a list of example inputs, one for each attribute in the ",
                        "type": "text"
                      },
                      {
                        "code": "attributes",
                        "type": "codeVoice"
                      },
                      {
                        "text": " array.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "examples"
              },
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "An array of actions. Each item in this array is the action, or final decision, corresponding to the example input at the same index in the ",
                        "type": "text"
                      },
                      {
                        "code": "examples",
                        "type": "codeVoice"
                      },
                      {
                        "text": " array.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "actions"
              },
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "An array of questions, or attributes to be tested by the decision tree. In the inner arrays of the ",
                        "type": "text"
                      },
                      {
                        "code": "examples",
                        "type": "codeVoice"
                      },
                      {
                        "text": " array, each entry corresponds to the attribute at the same index in this array.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "attributes"
              }
            ]
          }
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/2",
          "value": {
            "content": [
              {
                "anchor": "return-value",
                "level": 2,
                "text": "Return Value",
                "type": "heading"
              },
              {
                "inlineContent": [
                  {
                    "text": "A new decision tree.",
                    "type": "text"
                  }
                ],
                "type": "paragraph"
              }
            ],
            "kind": "content"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gameplaykit~1documentation~1GameplayKit~1GKDecisionTree~1findAction(forAnswers:)/title",
          "value": "findActionForAnswers:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gameplaykit~1documentation~1GameplayKit~1GKDecisionTree~1findAction(forAnswers:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "findActionForAnswers:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gameplaykit~1documentation~1GameplayKit~1GKDecisionTree/title",
          "value": "GKDecisionTree"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gameplaykit~1documentation~1GameplayKit~1GKDecisionTree/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "GKDecisionTree"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gameplaykit~1documentation~1GameplayKit~1GKDecisionTree/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "GKDecisionTree"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gameplaykit~1documentation~1GameplayKit~1GKDecisionTree~1init(examples:actions:attributes:)/title",
          "value": "initWithExamples:actions:attributes:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gameplaykit~1documentation~1GameplayKit~1GKDecisionTree~1init(examples:actions:attributes:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "initWithExamples:actions:attributes:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSObject/title",
          "value": "NSObject"
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/gameplaykit/gkdecisiontree/init(examples:actions:attributes:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/gameplaykit/gkdecisiontree/init(examples:actions:attributes:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
