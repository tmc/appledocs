{
  "abstract": [
    {
      "text": "Create a ",
      "type": "text"
    },
    {
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessCodeRequirement",
      "isActive": true,
      "type": "reference"
    },
    {
      "text": " that requires matching any of the provided constraints.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessCodeRequirement"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessCodeRequirement/anyOf(requirement:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:27LightweightCodeRequirements07ProcessB11RequirementV5anyOf11requirementACSayAA0D10Constraint_pGyXE_tKFZ",
    "fragments": [
      {
        "kind": "keyword",
        "text": "static"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "anyOf"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "requirement"
      },
      {
        "kind": "text",
        "text": ": () -> [any "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:27LightweightCodeRequirements17ProcessConstraintP",
        "text": "ProcessConstraint"
      },
      {
        "kind": "text",
        "text": "]) "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:27LightweightCodeRequirements07ProcessB11RequirementV",
        "text": "ProcessCodeRequirement"
      }
    ],
    "modules": [
      {
        "name": "LightweightCodeRequirements"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.4",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.4",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.4",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.4",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.4",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.1",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.4",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Type Method",
    "symbolKind": "method",
    "title": "anyOf(requirement:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "static"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "anyOf"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "attribute",
              "text": "@"
            },
            {
              "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessConstraintBuilder",
              "kind": "attribute",
              "preciseIdentifier": "s:27LightweightCodeRequirements24ProcessConstraintBuilderV",
              "text": "ProcessConstraintBuilder"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "externalParam",
              "text": "requirement"
            },
            {
              "kind": "text",
              "text": ": () -> [any "
            },
            {
              "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessConstraint",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:27LightweightCodeRequirements17ProcessConstraintP",
              "text": "ProcessConstraint"
            },
            {
              "kind": "text",
              "text": "]) "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessCodeRequirement",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:27LightweightCodeRequirements07ProcessB11RequirementV",
              "text": "ProcessCodeRequirement"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This operation will throw ConstraintError.duplicateKeys if more than one constraint of the same type is found in the same",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "logical grouping. For example the following snippets will throw:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "    let req1 = try ProcessCodeRequirement.anyOf {",
            "        SigningIdentifier(\"com.apple.ls\")",
            "        SigningIdentifier(\"com.apple.ps\")",
            "    }",
            "    let req2 = try ProcessCodeRequirement.anyOf {",
            "           SigningIdentifier(\"com.apple.ls\")",
            "           allOf {",
            "               SigningIdentifier(\"com.apple.ps\")",
            "           }",
            "    }",
            "    let req3 = try ProcessCodeRequirement.anyOf {",
            "        SigningIdentifier(\"com.apple.ls\")",
            "        anyOf {",
            "            ValidationCategory(.platform)",
            "            SigningIdentifier(\"com.apple.ps\")",
            "        }",
            "    }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The second requirement throws because a single constraint within allOf has no effect and so it gets lifted to the higher logical",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "group. Similarly, the third requirement throws because an anyOf operation nested in an anyOf operation has no logical effect, so all of the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "constraints in the nested operation get lifted into the higher level group.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "On the other hand the following snippet will not throw:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "    let req4 = try ProcessCodeRequirement.anyOf {",
            "        allOf {",
            "            SigningIdentifier(\"com.apple.ls\")",
            "            ValidationCategory(.platform)",
            "        }",
            "        allOf {",
            "            SigningIdentifier(\"com.apple.ps\")",
            "            ValidationCategory(.platform)",
            "        }",
            "    }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "In this requirement, both allOf operations provide different requirements that are each options., so the two groups are considered",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "separate.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements": {
      "abstract": [
        {
          "text": "Test the identity of executable code on disk and in running processes.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements",
      "kind": "symbol",
      "role": "collection",
      "title": "LightweightCodeRequirements",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessCodeRequirement": {
      "abstract": [
        {
          "text": "A lightweight code requirement that you use to evaluate a running process.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ProcessCodeRequirement"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessCodeRequirement",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ProcessCodeRequirement"
        }
      ],
      "role": "symbol",
      "title": "ProcessCodeRequirement",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/processcoderequirement"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessCodeRequirement/anyOf(requirement:)": {
      "abstract": [
        {
          "text": "Create a ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessCodeRequirement",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " that requires matching any of the provided constraints.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "anyOf"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "requirement"
        },
        {
          "kind": "text",
          "text": ": () -> [any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17ProcessConstraintP",
          "text": "ProcessConstraint"
        },
        {
          "kind": "text",
          "text": "]) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements07ProcessB11RequirementV",
          "text": "ProcessCodeRequirement"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessCodeRequirement/anyOf(requirement:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "anyOf(requirement:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/processcoderequirement/anyof(requirement:)"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessConstraint": {
      "abstract": [
        {
          "text": "A protocol to which a lightweight code requirement constraint conforms if you can use it in process code requirements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ProcessConstraint"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessConstraint",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ProcessConstraint"
        }
      ],
      "role": "symbol",
      "title": "ProcessConstraint",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/processconstraint"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessConstraintBuilder": {
      "abstract": [
        {
          "text": "A custom parameter attribute that constructs process constraints from closures.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ProcessConstraintBuilder"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessConstraintBuilder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ProcessConstraintBuilder"
        }
      ],
      "role": "symbol",
      "title": "ProcessConstraintBuilder",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/processconstraintbuilder"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/lightweightcoderequirements/processcoderequirement/anyof(requirement:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
