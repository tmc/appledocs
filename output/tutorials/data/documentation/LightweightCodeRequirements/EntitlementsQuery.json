{
  "abstract": [
    {
      "text": "A constraint that tests values in the entitlements dictionary associated with a process or code file.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:27LightweightCodeRequirements17EntitlementsQueryC",
    "fragments": [
      {
        "kind": "keyword",
        "text": "class"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "EntitlementsQuery"
      }
    ],
    "modules": [
      {
        "name": "LightweightCodeRequirements"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "EntitlementsQuery"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.4",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.4",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.4",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.4",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.4",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.1",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.4",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Class",
    "symbolKind": "class",
    "title": "EntitlementsQuery"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "class"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "EntitlementsQuery"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Entitlements dictionaries use strings for keys. The value of each key could be a bool, integer, string, array or another dictionary. Arrays are homogenous.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Entitlements queries are a chain of operations that allow matching against arbitrarily nested values in the dictionary.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Example entitlements dictionary:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "<dict>",
            "    <key>com.apple.application-identifier</key>",
            "    <string>com.apple.TextEdit</string>",
            "    <key>com.apple.developer.ubiquity-container-identifiers</key>",
            "    <array>",
            "        <string>com.apple.TextEdit</string>",
            "    </array>",
            "    <key>com.apple.private.hid.client.event-dispatch.internal</key>",
            "    <true/>",
            "</dict>"
          ],
          "syntax": "xml",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Example query to match the first entitlement exactly",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "EntitlementsQuery.key(\"com.apple.application-identifier\").matchSingle(com.apple.TextEdit)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Example query to match the second entitlement exactly.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "EntitlementsQuery.key(\"com.apple.developer.ubiquity-container-identifiers\").elementAtIndex(0).matchSingle(\"com.apple.TextEdit\")"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "or to match the second entitlement less specifically",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "EntitlementsQuery.key(\"com.apple.developer.ubiquity-container-identifiers\").match(\"com.apple.TextEdit\")"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The following query will detect the presence of the com.apple.private.hid.client.event-dispatch.internal key without checking its value.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "EntitlementsQuery.key(\"com.apple.private.hid.client.event-dispatch.internal\")"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "To match its value add a match() call to the chain.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "EntitlementsQuery.key(\"com.apple.private.hid.client.event-dispatch.internal\").match(true)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The following example demonstrate the keyPrefix query.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "EntitlementsQuery.keyPrefix(\"com.apple.\").match(true)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The keyPrefix query will match the “com.apple.application-identifier” only. Then the match query will fail because true does not match “com.apple.TextEdit”.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "This constraint will cause a matching failure if the process or file being matched does not include entitlements.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements": {
      "abstract": [
        {
          "text": "Test the identity of executable code on disk and in running processes.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements",
      "kind": "symbol",
      "role": "collection",
      "title": "LightweightCodeRequirements",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/CodeDirectoryHash": {
      "abstract": [
        {
          "text": "A constraint that matches the hash of a code directory of a code file or of a running or launching process.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CodeDirectoryHash"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/CodeDirectoryHash",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CodeDirectoryHash"
        }
      ],
      "role": "symbol",
      "title": "CodeDirectoryHash",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/codedirectoryhash"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery": {
      "abstract": [
        {
          "text": "A constraint that tests values in the entitlements dictionary associated with a process or code file.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EntitlementsQuery"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EntitlementsQuery"
        }
      ],
      "role": "symbol",
      "title": "EntitlementsQuery",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/DataType": {
      "abstract": [
        {
          "text": "The types of elements allowed in entitlements dictionaries.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DataType"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/DataType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DataType"
        }
      ],
      "role": "symbol",
      "title": "EntitlementsQuery.DataType",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/datatype"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/elementAtIndex(_:)": {
      "abstract": [
        {
          "text": "Match against the specified index (0 based) in an array. Chain additional qualifiers to constrain the value of element.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "elementAtIndex"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17EntitlementsQueryC",
          "text": "EntitlementsQuery"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/elementAtIndex(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "elementAtIndex(_:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/elementatindex(_:)"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/encode(to:)": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/encode(to:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/encode(to:)"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/init(from:)": {
      "abstract": [
        {
          "text": "Create a new instance by decoding from the given decoder",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/init(from:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/init(from:)"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/key(_:)-swift.method": {
      "abstract": [
        {
          "text": "Match the specified key in a nested dictionary",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "key"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17EntitlementsQueryC",
          "text": "EntitlementsQuery"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/key(_:)-swift.method",
      "kind": "symbol",
      "role": "symbol",
      "title": "key(_:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/key(_:)-swift.method"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/key(_:)-swift.type.method": {
      "abstract": [
        {
          "text": "Match against the specified key name at the root of the entitlements dictionary.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "key"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17EntitlementsQueryC",
          "text": "EntitlementsQuery"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/key(_:)-swift.type.method",
      "kind": "symbol",
      "role": "symbol",
      "title": "key(_:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/key(_:)-swift.type.method"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/keyPrefix(_:)-swift.method": {
      "abstract": [
        {
          "text": "Match the specified key prefix in a nested dictionary.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "keyPrefix"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17EntitlementsQueryC",
          "text": "EntitlementsQuery"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/keyPrefix(_:)-swift.method",
      "kind": "symbol",
      "role": "symbol",
      "title": "keyPrefix(_:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/keyprefix(_:)-swift.method"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/keyPrefix(_:)-swift.type.method": {
      "abstract": [
        {
          "text": "Match the specified key prefix at the root of the entitlements dicitonary. Chain additional qualifiers to constrain the value of the key.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "keyPrefix"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17EntitlementsQueryC",
          "text": "EntitlementsQuery"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/keyPrefix(_:)-swift.type.method",
      "kind": "symbol",
      "role": "symbol",
      "title": "keyPrefix(_:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/keyprefix(_:)-swift.type.method"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/match(_:)-5cqvy": {
      "abstract": [
        {
          "text": "Match the specified string value against a string or an array of strings.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "match"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17EntitlementsQueryC",
          "text": "EntitlementsQuery"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/match(_:)-5cqvy",
      "kind": "symbol",
      "role": "symbol",
      "title": "match(_:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/match(_:)-5cqvy"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/match(_:)-5cw98": {
      "abstract": [
        {
          "text": "Match the specified bool value against a bool value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "match"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17EntitlementsQueryC",
          "text": "EntitlementsQuery"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/match(_:)-5cw98",
      "kind": "symbol",
      "role": "symbol",
      "title": "match(_:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/match(_:)-5cw98"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/match(_:)-6msza": {
      "abstract": [
        {
          "text": "Match the specified Int64 against an integer or array of integers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "match"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17EntitlementsQueryC",
          "text": "EntitlementsQuery"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/match(_:)-6msza",
      "kind": "symbol",
      "role": "symbol",
      "title": "match(_:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/match(_:)-6msza"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/matchPrefix(_:)": {
      "abstract": [
        {
          "text": "Match the specified string prefix against a string value or array.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "matchPrefix"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17EntitlementsQueryC",
          "text": "EntitlementsQuery"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/matchPrefix(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "matchPrefix(_:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/matchprefix(_:)"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/matchPrefixSingle(_:)": {
      "abstract": [
        {
          "text": "Match the specified string prefix value against a string value (not an array).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "matchPrefixSingle"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17EntitlementsQueryC",
          "text": "EntitlementsQuery"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/matchPrefixSingle(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "matchPrefixSingle(_:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/matchprefixsingle(_:)"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/matchSingle(_:)-49kv7": {
      "abstract": [
        {
          "text": "Match the specified Int64 value against an integer value (not an array).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "matchSingle"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17EntitlementsQueryC",
          "text": "EntitlementsQuery"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/matchSingle(_:)-49kv7",
      "kind": "symbol",
      "role": "symbol",
      "title": "matchSingle(_:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/matchsingle(_:)-49kv7"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/matchSingle(_:)-8ggh1": {
      "abstract": [
        {
          "text": "Match the specified string against a string value (not an array).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "matchSingle"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17EntitlementsQueryC",
          "text": "EntitlementsQuery"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/matchSingle(_:)-8ggh1",
      "kind": "symbol",
      "role": "symbol",
      "title": "matchSingle(_:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/matchsingle(_:)-8ggh1"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/matchType(_:)": {
      "abstract": [
        {
          "text": "Matches the specified type against the current element.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "matchType"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17EntitlementsQueryC",
          "text": "EntitlementsQuery"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17EntitlementsQueryC8DataTypeO",
          "text": "DataType"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:27LightweightCodeRequirements17EntitlementsQueryC",
          "text": "EntitlementsQuery"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/matchType(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "matchType(_:)",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/entitlementsquery/matchtype(_:)"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/InfoPlistHash": {
      "abstract": [
        {
          "text": "A constraint that tests the specified hash against the Information property list hash stored in the code signature of the process or code file.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "InfoPlistHash"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/InfoPlistHash",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "InfoPlistHash"
        }
      ],
      "role": "symbol",
      "title": "InfoPlistHash",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/infoplisthash"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/IsInitProcess": {
      "abstract": [
        {
          "text": "A constraint that tests whether a process is the operating system’s initial process.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "IsInitProcess"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/IsInitProcess",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IsInitProcess"
        }
      ],
      "role": "symbol",
      "title": "IsInitProcess",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/isinitprocess"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/IsMainBinary": {
      "abstract": [
        {
          "text": "A constraint that tests whether a code file is a main binary.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "IsMainBinary"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/IsMainBinary",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IsMainBinary"
        }
      ],
      "role": "symbol",
      "title": "IsMainBinary",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/ismainbinary"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/IsSIPProtected": {
      "abstract": [
        {
          "text": "A constraint that tests whether a code file or process is on a volume protected by System Integrity Protection (SIP).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "IsSIPProtected"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/IsSIPProtected",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IsSIPProtected"
        }
      ],
      "role": "symbol",
      "title": "IsSIPProtected",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/issipprotected"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/LaunchConstraint": {
      "abstract": [
        {
          "text": "A protocol to which a lightweight code requirement constraint conforms if you can use it in launch code requirements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LaunchConstraint"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/LaunchConstraint",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LaunchConstraint"
        }
      ],
      "role": "symbol",
      "title": "LaunchConstraint",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/launchconstraint"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/OnDiskConstraint": {
      "abstract": [
        {
          "text": "A protocol to which a lightweight code requirement constraint conforms if you can use it in on-disk code requirements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "OnDiskConstraint"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/OnDiskConstraint",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "OnDiskConstraint"
        }
      ],
      "role": "symbol",
      "title": "OnDiskConstraint",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/ondiskconstraint"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/PlatformType": {
      "abstract": [
        {
          "text": "A constraint that tests whether a code file or running process targets a given platform.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PlatformType"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/PlatformType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PlatformType"
        }
      ],
      "role": "symbol",
      "title": "PlatformType",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/platformtype"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessConstraint": {
      "abstract": [
        {
          "text": "A protocol to which a lightweight code requirement constraint conforms if you can use it in process code requirements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ProcessConstraint"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessConstraint",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ProcessConstraint"
        }
      ],
      "role": "symbol",
      "title": "ProcessConstraint",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/processconstraint"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/SigningIdentifier": {
      "abstract": [
        {
          "text": "A constraint that tests whether the provided signing identifier matches the signature attached to the code.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SigningIdentifier"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/SigningIdentifier",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SigningIdentifier"
        }
      ],
      "role": "symbol",
      "title": "SigningIdentifier",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/signingidentifier"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/TeamIdentifier": {
      "abstract": [
        {
          "text": "A constraint that tests whether the provided team identifier matches the team identified in the code signature.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TeamIdentifier"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/TeamIdentifier",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TeamIdentifier"
        }
      ],
      "role": "symbol",
      "title": "TeamIdentifier",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/teamidentifier"
    },
    "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ValidationCategory": {
      "abstract": [
        {
          "text": "A constraint that tests whether a code file or running process is signed in a way that conforms to the specified validation category.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ValidationCategory"
        }
      ],
      "identifier": "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ValidationCategory",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ValidationCategory"
        }
      ],
      "role": "symbol",
      "title": "ValidationCategory",
      "type": "topic",
      "url": "/documentation/lightweightcoderequirements/validationcategory"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:SE": {
      "abstract": [
        {
          "text": "A type that can encode itself to an external representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Encodable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SE",
      "kind": "symbol",
      "role": "symbol",
      "title": "Encodable",
      "type": "topic",
      "url": "/documentation/Swift/Encodable"
    },
    "doc://com.externally.resolved.symbol/s:Se": {
      "abstract": [
        {
          "text": "A type that can decode itself from an external representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Decodable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Se",
      "kind": "symbol",
      "role": "symbol",
      "title": "Decodable",
      "type": "topic",
      "url": "/documentation/Swift/Decodable"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:Se",
        "doc://com.externally.resolved.symbol/s:SE",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/LaunchConstraint",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/OnDiskConstraint",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ProcessConstraint",
        "doc://com.externally.resolved.symbol/s:s8SendableP"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Testing-properties-of-executable-code",
      "generated": true,
      "identifiers": [
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/CodeDirectoryHash",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/InfoPlistHash",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/IsInitProcess",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/IsMainBinary",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/IsSIPProtected",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/PlatformType",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/SigningIdentifier",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/TeamIdentifier",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/ValidationCategory"
      ],
      "title": "Testing properties of executable code"
    }
  ],
  "topicSections": [
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/init(from:)"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/elementAtIndex(_:)",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/encode(to:)",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/key(_:)-swift.method",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/keyPrefix(_:)-swift.method",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/match(_:)-5cqvy",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/match(_:)-5cw98",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/match(_:)-6msza",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/matchPrefix(_:)",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/matchPrefixSingle(_:)",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/matchSingle(_:)-49kv7",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/matchSingle(_:)-8ggh1",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/matchType(_:)"
      ],
      "title": "Instance Methods"
    },
    {
      "anchor": "Type-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/key(_:)-swift.type.method",
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/keyPrefix(_:)-swift.type.method"
      ],
      "title": "Type Methods"
    },
    {
      "anchor": "Enumerations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.LightweightCodeRequirements/documentation/LightweightCodeRequirements/EntitlementsQuery/DataType"
      ],
      "title": "Enumerations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/lightweightcoderequirements/entitlementsquery"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
