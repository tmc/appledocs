{
  "abstract": [
    {
      "text": "Outputs each of the channels of a vector2 or integer2 as individual float or integer outputs.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://ShaderGraph-Docs/documentation/ShaderGraph",
        "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Separate-2"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "Shader_ND_separate2_vector2",
    "images": [
      {
        "identifier": "purple.arrow.triangle.branch.png",
        "type": "icon"
      }
    ],
    "modules": [
      {
        "name": "ShaderGraph"
      }
    ],
    "role": "symbol",
    "roleHeading": "ShaderGraph Node",
    "symbolKind": "subscript",
    "title": "Separate 2"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Parameter-Types",
          "level": 2,
          "text": "Parameter Types",
          "type": "heading"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "columns": [
                    {
                      "content": [
                        {
                          "header": "row",
                          "rows": [
                            [
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "text": "Input",
                                      "type": "text"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "text": "Type",
                                      "type": "text"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ]
                            ],
                            [
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "code": "In",
                                      "type": "codeVoice"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "text": "Vector2f",
                                      "type": "text"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ]
                            ]
                          ],
                          "type": "table"
                        }
                      ],
                      "size": 1
                    },
                    {
                      "content": [
                        {
                          "header": "row",
                          "rows": [
                            [
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "text": "Output",
                                      "type": "text"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "text": "Type",
                                      "type": "text"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ]
                            ],
                            [
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "code": "x",
                                      "type": "codeVoice"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "text": "Float",
                                      "type": "text"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ]
                            ],
                            [
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "code": "y",
                                      "type": "codeVoice"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "text": "Float",
                                      "type": "text"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ]
                            ]
                          ],
                          "type": "table"
                        }
                      ],
                      "size": 1
                    }
                  ],
                  "numberOfColumns": 2,
                  "type": "row"
                }
              ],
              "title": "Separate 2 (vector2f)"
            },
            {
              "content": [
                {
                  "columns": [
                    {
                      "content": [
                        {
                          "header": "row",
                          "rows": [
                            [
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "text": "Input",
                                      "type": "text"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "text": "Type",
                                      "type": "text"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ]
                            ],
                            [
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "code": "In",
                                      "type": "codeVoice"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "text": "Integer2",
                                      "type": "text"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ]
                            ]
                          ],
                          "type": "table"
                        }
                      ],
                      "size": 1
                    },
                    {
                      "content": [
                        {
                          "header": "row",
                          "rows": [
                            [
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "text": "Output",
                                      "type": "text"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "text": "Type",
                                      "type": "text"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ]
                            ],
                            [
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "code": "Outx",
                                      "type": "codeVoice"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "text": "Int32",
                                      "type": "text"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ]
                            ],
                            [
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "code": "Outy",
                                      "type": "codeVoice"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              [
                                {
                                  "inlineContent": [
                                    {
                                      "text": "Int32",
                                      "type": "text"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ]
                            ]
                          ],
                          "type": "table"
                        }
                      ],
                      "size": 1
                    }
                  ],
                  "numberOfColumns": 2,
                  "type": "row"
                }
              ],
              "title": "Separate 2"
            }
          ],
          "type": "tabNavigator"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://ShaderGraph-Docs/documentation/ShaderGraph": {
      "abstract": [
        {
          "text": "Create custom materials and effects for 3D content in Reality Composer Pro.",
          "type": "text"
        }
      ],
      "identifier": "doc://ShaderGraph-Docs/documentation/ShaderGraph",
      "kind": "symbol",
      "role": "collection",
      "title": "ShaderGraph",
      "type": "topic",
      "url": "/documentation/shadergraph"
    },
    "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data": {
      "abstract": [
        {
          "text": "Convert data values to different formats, or manipulate individual elements within a data structure.",
          "type": "text"
        }
      ],
      "identifier": "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data",
      "kind": "symbol",
      "role": "symbol",
      "title": "Data",
      "type": "topic",
      "url": "/documentation/shadergraph/data"
    },
    "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Combine-2": {
      "abstract": [
        {
          "text": "Combines the channels from two streams into two channels of a single output stream of a compatible type.",
          "type": "text"
        }
      ],
      "identifier": "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Combine-2",
      "images": [
        {
          "identifier": "purple.arrow.triangle.merge.png",
          "type": "icon"
        }
      ],
      "kind": "symbol",
      "role": "symbol",
      "title": "Combine 2",
      "type": "topic",
      "url": "/documentation/shadergraph/data/combine-2"
    },
    "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Combine-3": {
      "abstract": [
        {
          "text": "Combines the channels from three streams into three channels of a single output stream of a compatible type.",
          "type": "text"
        }
      ],
      "identifier": "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Combine-3",
      "images": [
        {
          "identifier": "purple.arrow.triangle.merge.png",
          "type": "icon"
        }
      ],
      "kind": "symbol",
      "role": "symbol",
      "title": "Combine 3",
      "type": "topic",
      "url": "/documentation/shadergraph/data/combine-3"
    },
    "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Combine-4": {
      "abstract": [
        {
          "text": "Combines the channels from four streams into four channels of a single output stream of a compatible type.",
          "type": "text"
        }
      ],
      "identifier": "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Combine-4",
      "images": [
        {
          "identifier": "purple.arrow.triangle.merge.png",
          "type": "icon"
        }
      ],
      "kind": "symbol",
      "role": "symbol",
      "title": "Combine 4",
      "type": "topic",
      "url": "/documentation/shadergraph/data/combine-4"
    },
    "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Convert": {
      "abstract": [
        {
          "text": "Converts a stream from one data type to another.",
          "type": "text"
        }
      ],
      "identifier": "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Convert",
      "images": [
        {
          "identifier": "purple.diamond.inset.filled.png",
          "type": "icon"
        }
      ],
      "kind": "symbol",
      "role": "symbol",
      "title": "Convert",
      "type": "topic",
      "url": "/documentation/shadergraph/data/convert"
    },
    "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Extract": {
      "abstract": [
        {
          "text": "Generates a float stream from one channel of a color​N o​r vector​N ​stream.",
          "type": "text"
        }
      ],
      "identifier": "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Extract",
      "images": [
        {
          "identifier": "purple.arrow.up.right.circle.png",
          "type": "icon"
        }
      ],
      "kind": "symbol",
      "role": "symbol",
      "title": "Extract",
      "type": "topic",
      "url": "/documentation/shadergraph/data/extract"
    },
    "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Primvar-Reader": {
      "abstract": [
        {
          "text": "A node that provides the ability for shading networks to consume data defined on geometry.",
          "type": "text"
        }
      ],
      "identifier": "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Primvar-Reader",
      "images": [
        {
          "identifier": "purple.doc.text.magnifyingglass.png",
          "type": "icon"
        }
      ],
      "kind": "symbol",
      "role": "symbol",
      "title": "Primvar Reader",
      "type": "topic",
      "url": "/documentation/shadergraph/data/primvar-reader"
    },
    "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Separate-2": {
      "abstract": [
        {
          "text": "Outputs each of the channels of a vector2 or integer2 as individual float or integer outputs.",
          "type": "text"
        }
      ],
      "identifier": "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Separate-2",
      "images": [
        {
          "identifier": "purple.arrow.triangle.branch.png",
          "type": "icon"
        }
      ],
      "kind": "symbol",
      "role": "symbol",
      "title": "Separate 2",
      "type": "topic",
      "url": "/documentation/shadergraph/data/separate-2"
    },
    "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Separate-3": {
      "abstract": [
        {
          "text": "Outputs each of the channels of a color3, vector3, or integer3 as individual float or integer outputs.",
          "type": "text"
        }
      ],
      "identifier": "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Separate-3",
      "images": [
        {
          "identifier": "purple.arrow.triangle.branch.png",
          "type": "icon"
        }
      ],
      "kind": "symbol",
      "role": "symbol",
      "title": "Separate 3",
      "type": "topic",
      "url": "/documentation/shadergraph/data/separate-3"
    },
    "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Separate-4": {
      "abstract": [
        {
          "text": "Outputs each of the channels of a color4, vector4, or integer4 as individual float or integer outputs.",
          "type": "text"
        }
      ],
      "identifier": "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Separate-4",
      "images": [
        {
          "identifier": "purple.arrow.triangle.branch.png",
          "type": "icon"
        }
      ],
      "kind": "symbol",
      "role": "symbol",
      "title": "Separate 4",
      "type": "topic",
      "url": "/documentation/shadergraph/data/separate-4"
    },
    "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Swizzle": {
      "abstract": [
        {
          "text": "Performs an arbitrary permutation of the channels of the input stream, returning a new stream of the specified type.",
          "type": "text"
        }
      ],
      "identifier": "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Swizzle",
      "images": [
        {
          "identifier": "purple.arrow.triangle.swap.png",
          "type": "icon"
        }
      ],
      "kind": "symbol",
      "role": "symbol",
      "title": "Swizzle",
      "type": "topic",
      "url": "/documentation/shadergraph/data/swizzle"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "purple.arrow.triangle.branch.png": {
      "alt": "nil",
      "identifier": "purple.arrow.triangle.branch.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/18b483f30a826208732f3903b40176bd/purple.arrow.triangle.branch.png"
        }
      ]
    },
    "purple.arrow.triangle.merge.png": {
      "alt": "nil",
      "identifier": "purple.arrow.triangle.merge.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/d0900bd6c570e7a856d180bfdd5fb10c/purple.arrow.triangle.merge.png"
        }
      ]
    },
    "purple.arrow.triangle.swap.png": {
      "alt": "nil",
      "identifier": "purple.arrow.triangle.swap.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/c90247d1ede9968cc5e403a40e6e7598/purple.arrow.triangle.swap.png"
        }
      ]
    },
    "purple.arrow.up.right.circle.png": {
      "alt": "nil",
      "identifier": "purple.arrow.up.right.circle.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/64e4a794e5f9633bb028c860f3ca22fc/purple.arrow.up.right.circle.png"
        }
      ]
    },
    "purple.diamond.inset.filled.png": {
      "alt": "nil",
      "identifier": "purple.diamond.inset.filled.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/a6e61303dc0c1344bf5ddbca1f12ecf9/purple.diamond.inset.filled.png"
        }
      ]
    },
    "purple.doc.text.magnifyingglass.png": {
      "alt": "nil",
      "identifier": "purple.doc.text.magnifyingglass.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/dee6999756579a8e0dae06e7a0f88cda/purple.doc.text.magnifyingglass.png"
        }
      ]
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Nodes",
      "generated": true,
      "identifiers": [
        "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Convert",
        "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Swizzle",
        "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Combine-2",
        "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Combine-3",
        "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Combine-4",
        "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Extract",
        "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Separate-3",
        "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Separate-4",
        "doc://ShaderGraph-Docs/documentation/ShaderGraph/Data/Primvar-Reader"
      ],
      "title": "Nodes"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/shadergraph/data/separate-2"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
