{
  "abstract": [
    {
      "text": "Encodes this value into the given encoder, when the type’s ",
      "type": "text"
    },
    {
      "code": "RawValue",
      "type": "codeVoice"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "is ",
      "type": "text"
    },
    {
      "code": "String",
      "type": "codeVoice"
    },
    {
      "text": ".",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.WeatherKit/documentation/WeatherKit",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/WeatherCondition"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.WeatherKit/documentation/WeatherKit/WeatherCondition/encode(to:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "conformance": {
      "availabilityPrefix": [
        {
          "text": "Available when",
          "type": "text"
        }
      ],
      "conformancePrefix": [
        {
          "text": "Conforms when",
          "type": "text"
        }
      ],
      "constraints": [
        {
          "code": "Self",
          "type": "codeVoice"
        },
        {
          "text": " conforms to ",
          "type": "text"
        },
        {
          "code": "Encodable",
          "type": "codeVoice"
        },
        {
          "text": " and ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "String",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ]
    },
    "extendedModule": "Swift",
    "externalID": "s:SYsSERzSS8RawValueSYRtzrlE6encode2toys7Encoder_p_tKF::SYNTHESIZED::s:10WeatherKit0A9ConditionO",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "encode"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "to"
      },
      {
        "kind": "text",
        "text": ": any "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s7EncoderP",
        "text": "Encoder"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "throws"
      }
    ],
    "modules": [
      {
        "name": "WeatherKit",
        "relatedModules": [
          "Swift"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "encode(to:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "encode"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "to"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "encoder"
            },
            {
              "kind": "text",
              "text": ": any "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s7EncoderP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s7EncoderP",
              "text": "Encoder"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "throws"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The encoder to write data to.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "encoder"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This function throws an error if any values are invalid for the given",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "encoder’s format.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.WeatherKit/documentation/WeatherKit": {
      "abstract": [
        {
          "text": "Deliver weather conditions and alerts to your users.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit",
      "kind": "symbol",
      "role": "collection",
      "title": "WeatherKit",
      "type": "topic",
      "url": "/documentation/weatherkit"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/WeatherCondition": {
      "abstract": [
        {
          "text": "A description of the current weather condition.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "WeatherCondition"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/WeatherCondition",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "WeatherCondition"
        }
      ],
      "role": "symbol",
      "title": "WeatherCondition",
      "type": "topic",
      "url": "/documentation/weatherkit/weathercondition"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/WeatherCondition/encode(to:)": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the type’s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "String",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "String",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/WeatherCondition/encode(to:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/weatherkit/weathercondition/encode(to:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:s7EncoderP": {
      "abstract": [
        {
          "text": "A type that can encode values into a native format for external representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Encoder"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s7EncoderP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Encoder",
      "type": "topic",
      "url": "/documentation/Swift/Encoder"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/weatherkit/weathercondition/encode(to:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
