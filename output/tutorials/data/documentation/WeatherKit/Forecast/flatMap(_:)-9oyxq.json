{
  "abstract": [
    {
      "text": "Returns an array containing the concatenated results of calling the",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "given transformation with each element of this sequence.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.WeatherKit/documentation/WeatherKit",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/flatMap(_:)-9oyxq"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Swift",
    "externalID": "s:STsE7flatMapySay7ElementQyd__Gqd__ABQzKXEKSTRd__lF::SYNTHESIZED::s:10WeatherKit8ForecastV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "flatMap"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "SegmentOfResult"
      },
      {
        "kind": "text",
        "text": ">(("
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:ST7ElementQa",
        "text": "Element"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "SegmentOfResult"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "rethrows"
      },
      {
        "kind": "text",
        "text": " -> ["
      },
      {
        "kind": "typeIdentifier",
        "text": "SegmentOfResult"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:ST7ElementQa",
        "text": "Element"
      },
      {
        "kind": "text",
        "text": "]"
      }
    ],
    "modules": [
      {
        "name": "WeatherKit",
        "relatedModules": [
          "Swift"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "flatMap(_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "flatMap"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "SegmentOfResult"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "transform"
            },
            {
              "kind": "text",
              "text": ": ("
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:ST7ElementQa",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:ST7ElementQa",
              "text": "Element"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "SegmentOfResult"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "rethrows"
            },
            {
              "kind": "text",
              "text": " -> ["
            },
            {
              "kind": "typeIdentifier",
              "text": "SegmentOfResult"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:ST7ElementQa",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:ST7ElementQa",
              "text": "Element"
            },
            {
              "kind": "text",
              "text": "] "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "SegmentOfResult"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:ST",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:ST",
              "text": "Sequence"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A closure that accepts an element of this",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "sequence as its argument and returns a sequence or collection.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "transform"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The resulting flattened array.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use this method to receive a single-level collection when your",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "transformation produces a sequence or collection for each element.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In this example, note the difference in the result of using ",
              "type": "text"
            },
            {
              "code": "map",
              "type": "codeVoice"
            },
            {
              "text": " and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "flatMap",
              "type": "codeVoice"
            },
            {
              "text": " with a transformation that returns an array.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let numbers = [1, 2, 3, 4]",
            "",
            "let mapped = numbers.map { Array(repeating: $0, count: $0) }",
            "// [[1], [2, 2], [3, 3, 3], [4, 4, 4, 4]]",
            "",
            "let flatMapped = numbers.flatMap { Array(repeating: $0, count: $0) }",
            "// [1, 2, 2, 3, 3, 3, 4, 4, 4, 4]"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "In fact, ",
              "type": "text"
            },
            {
              "code": "s.flatMap(transform)",
              "type": "codeVoice"
            },
            {
              "text": "  is equivalent to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "Array(s.map(transform).joined())",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "O(",
                  "type": "text"
                },
                {
                  "inlineContent": [
                    {
                      "text": "m",
                      "type": "text"
                    }
                  ],
                  "type": "emphasis"
                },
                {
                  "text": " + ",
                  "type": "text"
                },
                {
                  "inlineContent": [
                    {
                      "text": "n",
                      "type": "text"
                    }
                  ],
                  "type": "emphasis"
                },
                {
                  "text": "), where ",
                  "type": "text"
                },
                {
                  "inlineContent": [
                    {
                      "text": "n",
                      "type": "text"
                    }
                  ],
                  "type": "emphasis"
                },
                {
                  "text": " is the length of this sequence",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "and ",
                  "type": "text"
                },
                {
                  "inlineContent": [
                    {
                      "text": "m",
                      "type": "text"
                    }
                  ],
                  "type": "emphasis"
                },
                {
                  "text": " is the length of the result.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Complexity",
          "style": "note",
          "type": "aside"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.WeatherKit/documentation/WeatherKit": {
      "abstract": [
        {
          "text": "Deliver weather conditions and alerts to your users.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit",
      "kind": "symbol",
      "role": "collection",
      "title": "WeatherKit",
      "type": "topic",
      "url": "/documentation/weatherkit"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast": {
      "abstract": [
        {
          "text": "A forecast collection for minute, hourly, and daily forecasts.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Forecast"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Forecast"
        }
      ],
      "role": "symbol",
      "title": "Forecast",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/flatMap(_:)-9oyxq": {
      "abstract": [
        {
          "text": "Returns an array containing the concatenated results of calling the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given transformation with each element of this sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "flatMap"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "SegmentOfResult"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "SegmentOfResult"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "SegmentOfResult"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/flatMap(_:)-9oyxq",
      "kind": "symbol",
      "role": "symbol",
      "title": "flatMap(_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/flatmap(_:)-9oyxq"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:ST": {
      "abstract": [
        {
          "text": "A type that provides sequential, iterated access to its elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:ST",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sequence",
      "type": "topic",
      "url": "/documentation/Swift/Sequence"
    },
    "doc://com.externally.resolved.symbol/s:ST7ElementQa": {
      "abstract": [
        {
          "text": "A type representing the sequence’s elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": " == "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST8IteratorQa",
          "text": "Iterator"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:St7ElementQa",
          "text": "Element"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:ST7ElementQa",
      "kind": "symbol",
      "role": "symbol",
      "title": "Element",
      "type": "topic",
      "url": "/documentation/Swift/Sequence/Element"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/weatherkit/forecast/flatmap(_:)-9oyxq"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
