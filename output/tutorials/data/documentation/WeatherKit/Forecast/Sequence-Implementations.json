{
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.WeatherKit/documentation/WeatherKit",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/Sequence-Implementations"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "WeatherKit"
      }
    ],
    "role": "collectionGroup",
    "roleHeading": "API Collection",
    "title": "Sequence Implementations"
  },
  "references": {
    "doc://com.apple.WeatherKit/documentation/WeatherKit": {
      "abstract": [
        {
          "text": "Deliver weather conditions and alerts to your users.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit",
      "kind": "symbol",
      "role": "collection",
      "title": "WeatherKit",
      "type": "topic",
      "url": "/documentation/weatherkit"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast": {
      "abstract": [
        {
          "text": "A forecast collection for minute, hourly, and daily forecasts.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Forecast"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Forecast"
        }
      ],
      "role": "symbol",
      "title": "Forecast",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/allSatisfy(_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether every element of a sequence",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "satisfies a given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "allSatisfy"
        },
        {
          "kind": "text",
          "text": "(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/allSatisfy(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "allSatisfy(_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/allsatisfy(_:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/compactMap(_:)": {
      "abstract": [
        {
          "text": "Returns an array containing the non-",
          "type": "text"
        },
        {
          "code": "nil",
          "type": "codeVoice"
        },
        {
          "text": " results of calling the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "transformation with each element of this sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "compactMap"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": "?) "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/compactMap(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "compactMap(_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/compactmap(_:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/compare(_:_:)": {
      "abstract": [
        {
          "text": "If ",
          "type": "text"
        },
        {
          "code": "lhs",
          "type": "codeVoice"
        },
        {
          "text": " is ordered before ",
          "type": "text"
        },
        {
          "code": "rhs",
          "type": "codeVoice"
        },
        {
          "text": " in the ordering described by the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence of ",
          "type": "text"
        },
        {
          "code": "SortComparator",
          "type": "codeVoice"
        },
        {
          "text": "s",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "compare"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Comparator"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "Comparator"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation14SortComparatorP8ComparedQa",
          "text": "Compared"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Comparator"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation14SortComparatorP8ComparedQa",
          "text": "Compared"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@NSComparisonResult",
          "text": "ComparisonResult"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/compare(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "compare(_:_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/compare(_:_:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/contains(_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the sequence contains the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given element.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Equatable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "contains"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/contains(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "contains(_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/contains(_:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/contains(where:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the sequence contains an",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "element that satisfies the given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "contains"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "where"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/contains(where:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "contains(where:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/contains(where:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/count(where:)": {
      "abstract": [
        {
          "text": "Returns the number of elements in the sequence that satisfy the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "count"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "where"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/count(where:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "count(where:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/count(where:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/elementsEqual(_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether this sequence and another",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence contain the same elements in the same order.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Equatable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "elementsEqual"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/elementsEqual(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "elementsEqual(_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/elementsequal(_:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/elementsEqual(_:by:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether this sequence and another",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence contain equivalent elements in the same order, using the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "predicate as the equivalence test.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "elementsEqual"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/elementsEqual(_:by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "elementsEqual(_:by:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/elementsequal(_:by:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/enumerated()": {
      "abstract": [
        {
          "text": "Returns a sequence of pairs (",
          "type": "text"
        },
        {
          "inlineContent": [
            {
              "text": "n",
              "type": "text"
            }
          ],
          "type": "emphasis"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "inlineContent": [
            {
              "text": "x",
              "type": "text"
            }
          ],
          "type": "emphasis"
        },
        {
          "text": "), where ",
          "type": "text"
        },
        {
          "inlineContent": [
            {
              "text": "n",
              "type": "text"
            }
          ],
          "type": "emphasis"
        },
        {
          "text": " represents a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "consecutive integer starting at zero and ",
          "type": "text"
        },
        {
          "inlineContent": [
            {
              "text": "x",
              "type": "text"
            }
          ],
          "type": "emphasis"
        },
        {
          "text": " represents an element of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "enumerated"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s18EnumeratedSequenceV",
          "text": "EnumeratedSequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/enumerated()",
      "kind": "symbol",
      "role": "symbol",
      "title": "enumerated()",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/enumerated()"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/filter(_:)": {
      "abstract": [
        {
          "text": "Returns an array containing, in order, the elements of the sequence",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "that satisfy the given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "filter"
        },
        {
          "kind": "text",
          "text": "(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/filter(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "filter(_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/filter(_:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/first(where:)": {
      "abstract": [
        {
          "text": "Returns the first element of the sequence that satisfies the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "first"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "where"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/first(where:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "first(where:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/first(where:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/flatMap(_:)-8di7o": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "flatMap"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": "?) "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/flatMap(_:)-8di7o",
      "kind": "symbol",
      "role": "symbol",
      "title": "flatMap(_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/flatmap(_:)-8di7o"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/flatMap(_:)-9oyxq": {
      "abstract": [
        {
          "text": "Returns an array containing the concatenated results of calling the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given transformation with each element of this sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "flatMap"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "SegmentOfResult"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "SegmentOfResult"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "SegmentOfResult"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/flatMap(_:)-9oyxq",
      "kind": "symbol",
      "role": "symbol",
      "title": "flatMap(_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/flatmap(_:)-9oyxq"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/forEach(_:)": {
      "abstract": [
        {
          "text": "Calls the given closure on each element in the sequence in the same order",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "as a ",
          "type": "text"
        },
        {
          "code": "for",
          "type": "codeVoice"
        },
        {
          "text": "-",
          "type": "text"
        },
        {
          "code": "in",
          "type": "codeVoice"
        },
        {
          "text": " loop.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "forEach"
        },
        {
          "kind": "text",
          "text": "(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/forEach(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "forEach(_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/foreach(_:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/formatted()": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "String",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "formatted"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/formatted()",
      "kind": "symbol",
      "role": "symbol",
      "title": "formatted()",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/formatted()"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/formatted(_:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "formatted"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation11FormatStyleP0B6OutputQa",
          "text": "FormatOutput"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/formatted(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "formatted(_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/formatted(_:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/joined()": {
      "abstract": [
        {
          "text": "Returns the elements of this sequence of sequences, concatenated.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Sequence",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "joined"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s15FlattenSequenceV",
          "text": "FlattenSequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/joined()",
      "kind": "symbol",
      "role": "symbol",
      "title": "joined()",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/joined()"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/joined(separator:)-3pmb0": {
      "abstract": [
        {
          "text": "Returns the concatenated elements of this sequence of sequences,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "inserting the given separator between each element.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Sequence",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "joined"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Separator"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "separator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Separator"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s14JoinedSequenceV",
          "text": "JoinedSequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/joined(separator:)-3pmb0",
      "kind": "symbol",
      "role": "symbol",
      "title": "joined(separator:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/joined(separator:)-3pmb0"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/joined(separator:)-59nrx": {
      "abstract": [
        {
          "text": "Returns a new string by concatenating the elements of the sequence,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "adding the given separator between each element.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "StringProtocol",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "joined"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "separator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/joined(separator:)-59nrx",
      "kind": "symbol",
      "role": "symbol",
      "title": "joined(separator:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/joined(separator:)-59nrx"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/lazy": {
      "abstract": [
        {
          "text": "A sequence containing the same elements as this sequence,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "but on which some operations, such as ",
          "type": "text"
        },
        {
          "code": "map",
          "type": "codeVoice"
        },
        {
          "text": " and ",
          "type": "text"
        },
        {
          "code": "filter",
          "type": "codeVoice"
        },
        {
          "text": ", are",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "implemented lazily.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "lazy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12LazySequenceV",
          "text": "LazySequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/lazy",
      "kind": "symbol",
      "role": "symbol",
      "title": "lazy",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/lazy"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/lexicographicallyPrecedes(_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the sequence precedes another",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence in a lexicographical (dictionary) ordering, using the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "less-than operator (",
          "type": "text"
        },
        {
          "code": "<",
          "type": "codeVoice"
        },
        {
          "text": ") to compare elements.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Comparable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "lexicographicallyPrecedes"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/lexicographicallyPrecedes(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "lexicographicallyPrecedes(_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/lexicographicallyprecedes(_:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/lexicographicallyPrecedes(_:by:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the sequence precedes another",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence in a lexicographical (dictionary) ordering, using the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "predicate to compare elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "lexicographicallyPrecedes"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/lexicographicallyPrecedes(_:by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "lexicographicallyPrecedes(_:by:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/lexicographicallyprecedes(_:by:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/map(_:)-8cehe": {
      "abstract": [
        {
          "text": "Returns an array containing the results of mapping the given closure",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "over the sequence’s elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "map"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/map(_:)-8cehe",
      "kind": "symbol",
      "role": "symbol",
      "title": "map(_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/map(_:)-8cehe"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/max()": {
      "abstract": [
        {
          "text": "Returns the maximum element in the sequence.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Comparable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "max"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/max()",
      "kind": "symbol",
      "role": "symbol",
      "title": "max()",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/max()"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/max(by:)": {
      "abstract": [
        {
          "text": "Returns the maximum element in the sequence, using the given predicate",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "as the comparison between elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "max"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/max(by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "max(by:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/max(by:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/min()": {
      "abstract": [
        {
          "text": "Returns the minimum element in the sequence.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Comparable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "min"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/min()",
      "kind": "symbol",
      "role": "symbol",
      "title": "min()",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/min()"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/min(by:)": {
      "abstract": [
        {
          "text": "Returns the minimum element in the sequence, using the given predicate as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the comparison between elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "min"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/min(by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "min(by:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/min(by:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/publisher": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "publisher"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO",
          "text": "Publishers"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO8SequenceV",
          "text": "Sequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5NeverO",
          "text": "Never"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/publisher",
      "kind": "symbol",
      "role": "symbol",
      "title": "publisher",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/publisher"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/reduce(_:_:)": {
      "abstract": [
        {
          "text": "Returns the result of combining the elements of the sequence using the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given closure.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "reduce"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/reduce(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "reduce(_:_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/reduce(_:_:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/reduce(into:_:)": {
      "abstract": [
        {
          "text": "Returns the result of combining the elements of the sequence using the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given closure.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "reduce"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "into"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> ()) "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/reduce(into:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "reduce(into:_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/reduce(into:_:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/shuffled()": {
      "abstract": [
        {
          "text": "Returns the elements of the sequence, shuffled.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "shuffled"
        },
        {
          "kind": "text",
          "text": "() -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/shuffled()",
      "kind": "symbol",
      "role": "symbol",
      "title": "shuffled()",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/shuffled()"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/shuffled(using:)": {
      "abstract": [
        {
          "text": "Returns the elements of the sequence, shuffled using the given generator",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "as a source for randomness.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "shuffled"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "using"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/shuffled(using:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "shuffled(using:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/shuffled(using:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/sorted()": {
      "abstract": [
        {
          "text": "Returns the elements of the sequence, sorted.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Comparable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sorted"
        },
        {
          "kind": "text",
          "text": "() -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/sorted()",
      "kind": "symbol",
      "role": "symbol",
      "title": "sorted()",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/sorted()"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/sorted(by:)": {
      "abstract": [
        {
          "text": "Returns the elements of the sequence, sorted using the given predicate as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the comparison between elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sorted"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/sorted(by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "sorted(by:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/sorted(by:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/sorted(using:)-286yx": {
      "abstract": [
        {
          "text": "Returns the elements of the sequence, sorted using the given array of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "SortComparator",
          "type": "codeVoice"
        },
        {
          "text": "s to compare elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sorted"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Comparator"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "using"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/sorted(using:)-286yx",
      "kind": "symbol",
      "role": "symbol",
      "title": "sorted(using:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/sorted(using:)-286yx"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/sorted(using:)-5aia3": {
      "abstract": [
        {
          "text": "Returns the elements of the sequence, sorted using the given comparator",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "to compare elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sorted"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Comparator"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "using"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Comparator"
        },
        {
          "kind": "text",
          "text": ") -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/sorted(using:)-5aia3",
      "kind": "symbol",
      "role": "symbol",
      "title": "sorted(using:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/sorted(using:)-5aia3"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/starts(with:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the initial elements of the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence are the same as the elements in another sequence.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Equatable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "starts"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "PossiblePrefix"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "PossiblePrefix"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/starts(with:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "starts(with:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/starts(with:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/starts(with:by:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the initial elements of the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence are equivalent to the elements in another sequence, using",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the given predicate as the equivalence test.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "starts"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "PossiblePrefix"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "PossiblePrefix"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "PossiblePrefix"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/starts(with:by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "starts(with:by:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/starts(with:by:)"
    },
    "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/withContiguousStorageIfAvailable(_:)": {
      "abstract": [
        {
          "text": "Executes a closure on the sequence’s contiguous storage.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withContiguousStorageIfAvailable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SR",
          "text": "UnsafeBufferPointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/withContiguousStorageIfAvailable(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withContiguousStorageIfAvailable(_:)",
      "type": "topic",
      "url": "/documentation/weatherkit/forecast/withcontiguousstorageifavailable(_:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "topicSections": [
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/lazy",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/publisher"
      ],
      "title": "Instance Properties"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/allSatisfy(_:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/compactMap(_:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/compare(_:_:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/contains(_:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/contains(where:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/count(where:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/elementsEqual(_:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/elementsEqual(_:by:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/enumerated()",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/filter(_:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/first(where:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/flatMap(_:)-8di7o",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/flatMap(_:)-9oyxq",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/forEach(_:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/formatted()",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/formatted(_:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/joined()",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/joined(separator:)-3pmb0",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/joined(separator:)-59nrx",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/lexicographicallyPrecedes(_:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/lexicographicallyPrecedes(_:by:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/map(_:)-8cehe",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/max()",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/max(by:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/min()",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/min(by:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/reduce(_:_:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/reduce(into:_:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/shuffled()",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/shuffled(using:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/sorted()",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/sorted(by:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/sorted(using:)-286yx",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/sorted(using:)-5aia3",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/starts(with:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/starts(with:by:)",
        "doc://com.apple.WeatherKit/documentation/WeatherKit/Forecast/withContiguousStorageIfAvailable(_:)"
      ],
      "title": "Instance Methods"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/weatherkit/forecast/sequence-implementations"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
