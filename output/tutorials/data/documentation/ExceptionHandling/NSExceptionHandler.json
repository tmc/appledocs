{
  "abstract": [
    {
      "text": "The ",
      "type": "text"
    },
    {
      "code": "NSExceptionHandler",
      "type": "codeVoice"
    },
    {
      "text": " class provides facilities for monitoring and debugging exceptional",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "conditions in Objective-C programs. It works by installing a special uncaught exception",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "handler via the  ",
      "type": "text"
    },
    {
      "identifier": "doc://com.apple.documentation/documentation/foundation/1409609-nssetuncaughtexceptionhandler",
      "isActive": true,
      "type": "reference"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "function. Consequently, to use the services of ",
      "type": "text"
    },
    {
      "code": "NSExceptionHandler",
      "type": "codeVoice"
    },
    {
      "text": ", you must not",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "install your own custom uncaught exception handler.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(cs)NSExceptionHandler",
    "fragments": [
      {
        "kind": "keyword",
        "text": "class"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "NSExceptionHandler"
      }
    ],
    "modules": [
      {
        "name": "Exception Handling"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "NSExceptionHandler"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "macOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Class",
    "symbolKind": "class",
    "title": "NSExceptionHandler"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "macOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "class"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSExceptionHandler"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To use these services, you set a bit mask in the singleton ",
              "type": "text"
            },
            {
              "code": "NSExceptionHandler",
              "type": "codeVoice"
            },
            {
              "text": " instance",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and, optionally, a delegate. The constants comprising the bit mask indicate the type",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of exception to be monitored and the behavior of the ",
              "type": "text"
            },
            {
              "code": "NSExceptionHandler",
              "type": "codeVoice"
            },
            {
              "text": " object",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "(or, simply, the exception handler). The delegate is asked to approve the logging",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and handling of each monitored ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/nsexception",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "object using the NSExceptionHandlerDelegate protocol.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The constants for configuring exception handler behavior can be categorized in several",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "ways:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Uncaught exceptions versus caught exceptionsâ€”or, more accurately, exceptions that",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "would be caught (for example, by the top-level handler)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Exception type or cause: system exceptions (such as invalid memory accesses), Objective-C",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "runtime errors (such as messages sent to freed objects), and other exceptions",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Exception handler behavior: logging the exception (including a stack trace) to",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "the console, handling the exception, and suspending program execution so the debugger",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "can be attached",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "The way the exception handler handles an exception depends on the type of exception;",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the exception handler converts system exceptions and runtime errors into ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/nsexception",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "objects with a stack trace embedded in their ",
              "type": "text"
            },
            {
              "code": "userInfo",
              "type": "codeVoice"
            },
            {
              "text": " dictionary; for all other",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "uncaught exceptions, it terminates the thread on which they occur . The constants",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "used to configure an ",
              "type": "text"
            },
            {
              "code": "NSExceptionHandler",
              "type": "codeVoice"
            },
            {
              "text": " object are described in ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/logging-and-handling-constants",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/system-hang-constants",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "defaults",
              "type": "codeVoice"
            },
            {
              "text": " command-line system also allows you to set values corresponding to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the ",
              "type": "text"
            },
            {
              "code": "enum",
              "type": "codeVoice"
            },
            {
              "text": " constants used to configure the exception handler; see ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/Exceptions/Tasks/ControllingAppResponse.html#//apple_ref/doc/uid/20000473",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "for details.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling": {
      "abstract": [
        {
          "text": "Monitor and debug exceptional conditions in code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling",
      "kind": "symbol",
      "role": "collection",
      "title": "Exception Handling",
      "type": "topic",
      "url": "/documentation/exceptionhandling"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler": {
      "abstract": [
        {
          "text": "The ",
          "type": "text"
        },
        {
          "code": "NSExceptionHandler",
          "type": "codeVoice"
        },
        {
          "text": " class provides facilities for monitoring and debugging exceptional",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "conditions in Objective-C programs. It works by installing a special uncaught exception",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "handler via the  ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.documentation/documentation/foundation/1409609-nssetuncaughtexceptionhandler",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "function. Consequently, to use the services of ",
          "type": "text"
        },
        {
          "code": "NSExceptionHandler",
          "type": "codeVoice"
        },
        {
          "text": ", you must not",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "install your own custom uncaught exception handler.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSExceptionHandler"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSExceptionHandler"
        }
      ],
      "role": "symbol",
      "title": "NSExceptionHandler",
      "type": "topic",
      "url": "/documentation/exceptionhandling/nsexceptionhandler"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/default()": {
      "abstract": [
        {
          "text": "Returns the singleton ",
          "type": "text"
        },
        {
          "code": "NSExceptionHandler",
          "type": "codeVoice"
        },
        {
          "text": " instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "`default`"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSExceptionHandler",
          "text": "NSExceptionHandler"
        },
        {
          "kind": "text",
          "text": "!"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/default()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "defaultExceptionHandler"
        }
      ],
      "role": "symbol",
      "title": "default()",
      "type": "topic",
      "url": "/documentation/exceptionhandling/nsexceptionhandler/default()"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/delegate()": {
      "abstract": [
        {
          "text": "Returns the delegate of the ",
          "type": "text"
        },
        {
          "code": "NSExceptionHandler",
          "type": "codeVoice"
        },
        {
          "text": " object.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "delegate"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "!"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/delegate()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "delegate"
        }
      ],
      "role": "symbol",
      "title": "delegate()",
      "type": "topic",
      "url": "/documentation/exceptionhandling/nsexceptionhandler/delegate()"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHandlingMask()": {
      "abstract": [
        {
          "text": "Returns a bit mask representing the types of exceptions monitored by the receiver",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and its handling and logging behavior.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "exceptionHandlingMask"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHandlingMask()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "exceptionHandlingMask"
        }
      ],
      "role": "symbol",
      "title": "exceptionHandlingMask()",
      "type": "topic",
      "url": "/documentation/exceptionhandling/nsexceptionhandler/exceptionhandlingmask()"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHangingMask()": {
      "abstract": [
        {
          "text": "Returns a bit mask representing the types of exceptions that will halt execution",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "for debugging.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "exceptionHangingMask"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHangingMask()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "exceptionHangingMask"
        }
      ],
      "role": "symbol",
      "title": "exceptionHangingMask()",
      "type": "topic",
      "url": "/documentation/exceptionhandling/nsexceptionhandler/exceptionhangingmask()"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setDelegate(_:)": {
      "abstract": [
        {
          "text": "Sets the delegate of the ",
          "type": "text"
        },
        {
          "code": "NSExceptionHandler",
          "type": "codeVoice"
        },
        {
          "text": " object.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setDelegate"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "!)"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setDelegate(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setDelegate:"
        }
      ],
      "role": "symbol",
      "title": "setDelegate(_:)",
      "type": "topic",
      "url": "/documentation/exceptionhandling/nsexceptionhandler/setdelegate(_:)"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHandlingMask(_:)": {
      "abstract": [
        {
          "text": "Sets the bit mask of constants specifying the types of exceptions monitored by the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "receiver and its handling and logging behavior.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setExceptionHandlingMask"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHandlingMask(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setExceptionHandlingMask:"
        }
      ],
      "role": "symbol",
      "title": "setExceptionHandlingMask(_:)",
      "type": "topic",
      "url": "/documentation/exceptionhandling/nsexceptionhandler/setexceptionhandlingmask(_:)"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHangingMask(_:)": {
      "abstract": [
        {
          "text": "Sets the bit mask of constants specifying the types of exceptions that will halt",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "execution for debugging.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setExceptionHangingMask"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHangingMask(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setExceptionHangingMask:"
        }
      ],
      "role": "symbol",
      "title": "setExceptionHangingMask(_:)",
      "type": "topic",
      "url": "/documentation/exceptionhandling/nsexceptionhandler/setexceptionhangingmask(_:)"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/struct_(unnamed)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": ""
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/struct_(unnamed)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "struct (unnamed)"
        }
      ],
      "role": "symbol",
      "title": "struct (unnamed)",
      "type": "topic",
      "url": "/documentation/exceptionhandling/nsexceptionhandler/struct_(unnamed)"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/exception-global-string-constants": {
      "abstract": [
        {
          "text": "Two of the following global string constants identify exceptions generated by the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "framework for Objective-C runtime errors and system exceptions such as invalid memory",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "accesses. The other constant is used as a key to access the stack trace in the ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.documentation/documentation/foundation/nsexception/1418149-userinfo",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "dictionary of an ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.documentation/documentation/foundation/nsexception",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "object, when requested.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/exception-global-string-constants",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Exception Global String Constants",
      "type": "topic",
      "url": "/documentation/exceptionhandling/exception-global-string-constants"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/logging-and-handling-constants": {
      "abstract": [
        {
          "text": "Use one or more of the following constants in the parameter of ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHandlingMask(_:)",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "to specify the types of exceptions that the exception handler should monitor and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "whether it should handle or log them.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/logging-and-handling-constants",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Logging and Handling Constants",
      "type": "topic",
      "url": "/documentation/exceptionhandling/logging-and-handling-constants"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/mask-definitions": {
      "abstract": [
        {
          "text": "The following ",
          "type": "text"
        },
        {
          "code": "#define",
          "type": "codeVoice"
        },
        {
          "text": " constants are conveniences for specifying complete sets of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "exception-handling ",
          "type": "text"
        },
        {
          "code": "enum",
          "type": "codeVoice"
        },
        {
          "text": " constants.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/mask-definitions",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Mask Definitions",
      "type": "topic",
      "url": "/documentation/exceptionhandling/mask-definitions"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/system-hang-constants": {
      "abstract": [
        {
          "text": "Use one or more of the following constants in the parameter of ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHangingMask(_:)",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "to specify the types of exceptions that cause the exception to halt execution so",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "a debugger can be attached.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/system-hang-constants",
      "kind": "article",
      "role": "collectionGroup",
      "title": "System Hang Constants",
      "type": "topic",
      "url": "/documentation/exceptionhandling/system-hang-constants"
    },
    "doc://com.apple.documentation/documentation/foundation/1409609-nssetuncaughtexceptionhandler": {
      "abstract": [
        {
          "text": "Changes the top-level error handler.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "NSSetUncaughtExceptionHandler"
        },
        {
          "kind": "text",
          "text": "(((NSException) -> Void)?)"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/1409609-nssetuncaughtexceptionhandler",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSSetUncaughtExceptionHandler(_:)",
      "type": "topic",
      "url": "/documentation/foundation/1409609-nssetuncaughtexceptionhandler"
    },
    "doc://com.apple.documentation/documentation/foundation/nsexception": {
      "abstract": [
        {
          "text": "An object that represents a special condition that interrupts the normal flow of program execution.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSException"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsexception",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSException",
      "type": "topic",
      "url": "/documentation/foundation/nsexception"
    },
    "doc://com.apple.documentation/documentation/foundation/nsexception/1418149-userinfo": {
      "abstract": [
        {
          "text": "A dictionary containing application-specific data pertaining to the receiver.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "var "
        },
        {
          "kind": "identifier",
          "text": "userInfo"
        },
        {
          "kind": "text",
          "text": ": [AnyHashable : Any]?"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsexception/1418149-userinfo",
      "kind": "symbol",
      "role": "symbol",
      "title": "userInfo",
      "type": "topic",
      "url": "/documentation/foundation/nsexception/1418149-userinfo"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/c:objc(cs)NSObject": {
      "abstract": [
        {
          "text": "The root class of most Objective-C class hierarchies, from which subclasses inherit a basic interface to the runtime system and the ability to behave as Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSObject"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObject",
      "type": "topic",
      "url": "/documentation/objectivec/nsobject"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSObject": {
      "abstract": [
        {
          "text": "The group of methods that are fundamental to all Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObjectProtocol",
      "type": "topic",
      "url": "/documentation/objectivec/nsobjectprotocol"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomDebugStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s7CVarArgP": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as elements of a C `va_list`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s7CVarArgP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/Swift/CVarArg"
    },
    "https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/Exceptions/Tasks/ControllingAppResponse.html#//apple_ref/doc/uid/20000473": {
      "identifier": "https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/Exceptions/Tasks/ControllingAppResponse.html#//apple_ref/doc/uid/20000473",
      "title": "Controlling a Programâ€™s Response to Exceptions",
      "titleInlineContent": [
        {
          "text": "Controlling a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "Programâ€™s Response to Exceptions",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/Exceptions/Tasks/ControllingAppResponse.html#//apple_ref/doc/uid/20000473"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    },
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s7CVarArgP",
        "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSObject"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "topicSections": [
    {
      "anchor": "Getting-the-default-exception-handler",
      "identifiers": [
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/default()"
      ],
      "title": "Getting the default exception handler"
    },
    {
      "anchor": "Getting-and-setting-exception-masks",
      "identifiers": [
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHandlingMask()",
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHangingMask()",
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHandlingMask(_:)",
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHangingMask(_:)"
      ],
      "title": "Getting and setting exception masks"
    },
    {
      "anchor": "Getting-and-setting-the-delegate",
      "identifiers": [
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/delegate()",
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setDelegate(_:)"
      ],
      "title": "Getting and setting the delegate"
    },
    {
      "anchor": "Constants",
      "identifiers": [
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/logging-and-handling-constants",
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/system-hang-constants",
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/mask-definitions",
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/exception-global-string-constants"
      ],
      "title": "Constants"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "13.0",
              "name": "Mac Catalyst",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.0",
              "name": "macOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Class"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "NSExceptionHandler"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "class"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSExceptionHandler"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSExceptionHandler"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling"
              ]
            ]
          }
        },
        {
          "op": "replace",
          "path": "/topicSections",
          "value": [
            {
              "anchor": "Getting-the-default-exception-handler",
              "identifiers": [
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/default()"
              ],
              "title": "Getting the default exception handler"
            },
            {
              "anchor": "Getting-and-setting-exception-masks",
              "identifiers": [
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHandlingMask()",
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHangingMask()",
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHandlingMask(_:)",
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHangingMask(_:)"
              ],
              "title": "Getting and setting exception masks"
            },
            {
              "anchor": "Getting-and-setting-the-delegate",
              "identifiers": [
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/delegate()",
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setDelegate(_:)"
              ],
              "title": "Getting and setting the delegate"
            },
            {
              "anchor": "Constants",
              "identifiers": [
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/logging-and-handling-constants",
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/system-hang-constants",
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/mask-definitions",
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/exception-global-string-constants"
              ],
              "title": "Constants"
            },
            {
              "anchor": "Structures",
              "generated": true,
              "identifiers": [
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/struct_(unnamed)"
              ],
              "title": "Structures"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/relationshipsSections",
          "value": [
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
              ],
              "kind": "relationships",
              "title": "Inherits From",
              "type": "inheritsFrom"
            }
          ]
        },
        {
          "op": "add",
          "path": "/seeAlsoSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "macOS"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "@interface"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "NSExceptionHandler"
                  },
                  {
                    "kind": "text",
                    "text": " : "
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(cs)NSObject",
                    "text": "NSObject"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler/title",
          "value": "NSExceptionHandler"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSExceptionHandler"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSExceptionHandler"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1exceptionHangingMask()/title",
          "value": "exceptionHangingMask"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1exceptionHangingMask()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "exceptionHangingMask"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1default()/title",
          "value": "defaultExceptionHandler"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1default()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "defaultExceptionHandler"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1exceptionHandlingMask()/title",
          "value": "exceptionHandlingMask"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1exceptionHandlingMask()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "exceptionHandlingMask"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1setExceptionHangingMask(_:)/title",
          "value": "setExceptionHangingMask:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1setExceptionHangingMask(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setExceptionHangingMask:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1delegate()/title",
          "value": "delegate"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1delegate()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "delegate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1setExceptionHandlingMask(_:)/title",
          "value": "setExceptionHandlingMask:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1setExceptionHandlingMask(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setExceptionHandlingMask:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1setDelegate(_:)/title",
          "value": "setDelegate:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1setDelegate(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setDelegate:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSObject/title",
          "value": "NSObject"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1foundation~11409609-nssetuncaughtexceptionhandler/title",
          "value": "NSSetUncaughtExceptionHandler"
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/exceptionhandling/nsexceptionhandler"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/exceptionhandling/nsexceptionhandler"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
