{
  "abstract": [
    {
      "text": "Sets the bit mask of constants specifying the types of exceptions monitored by the",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "receiver and its handling and logging behavior.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling",
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHandlingMask(_:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(cs)NSExceptionHandler(im)setExceptionHandlingMask:",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "setExceptionHandlingMask"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Si",
        "text": "Int"
      },
      {
        "kind": "text",
        "text": ")"
      }
    ],
    "modules": [
      {
        "name": "Exception Handling"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "setExceptionHandlingMask:"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "macOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "setExceptionHandlingMask(_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "macOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "setExceptionHandlingMask"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "aMask"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Si",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Si",
              "text": "Int"
            },
            {
              "kind": "text",
              "text": ")"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A bit mask composed of one or more constants specifying the types of exceptions monitored",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "and whether they are handled or logged (or both). You specify multiple constants",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "by performing a bitwise-OR operation. See ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/logging-and-handling-constants",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "for information about the constants.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "aMask"
        }
      ]
    }
  ],
  "references": {
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling": {
      "abstract": [
        {
          "text": "Monitor and debug exceptional conditions in code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling",
      "kind": "symbol",
      "role": "collection",
      "title": "Exception Handling",
      "type": "topic",
      "url": "/documentation/exceptionhandling"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler": {
      "abstract": [
        {
          "text": "The ",
          "type": "text"
        },
        {
          "code": "NSExceptionHandler",
          "type": "codeVoice"
        },
        {
          "text": " class provides facilities for monitoring and debugging exceptional",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "conditions in Objective-C programs. It works by installing a special uncaught exception",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "handler via the  ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.documentation/documentation/foundation/1409609-nssetuncaughtexceptionhandler",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "function. Consequently, to use the services of ",
          "type": "text"
        },
        {
          "code": "NSExceptionHandler",
          "type": "codeVoice"
        },
        {
          "text": ", you must not",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "install your own custom uncaught exception handler.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSExceptionHandler"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSExceptionHandler"
        }
      ],
      "role": "symbol",
      "title": "NSExceptionHandler",
      "type": "topic",
      "url": "/documentation/exceptionhandling/nsexceptionhandler"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHandlingMask()": {
      "abstract": [
        {
          "text": "Returns a bit mask representing the types of exceptions monitored by the receiver",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and its handling and logging behavior.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "exceptionHandlingMask"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHandlingMask()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "exceptionHandlingMask"
        }
      ],
      "role": "symbol",
      "title": "exceptionHandlingMask()",
      "type": "topic",
      "url": "/documentation/exceptionhandling/nsexceptionhandler/exceptionhandlingmask()"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHangingMask()": {
      "abstract": [
        {
          "text": "Returns a bit mask representing the types of exceptions that will halt execution",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "for debugging.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "exceptionHangingMask"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHangingMask()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "exceptionHangingMask"
        }
      ],
      "role": "symbol",
      "title": "exceptionHangingMask()",
      "type": "topic",
      "url": "/documentation/exceptionhandling/nsexceptionhandler/exceptionhangingmask()"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHandlingMask(_:)": {
      "abstract": [
        {
          "text": "Sets the bit mask of constants specifying the types of exceptions monitored by the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "receiver and its handling and logging behavior.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setExceptionHandlingMask"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHandlingMask(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setExceptionHandlingMask:"
        }
      ],
      "role": "symbol",
      "title": "setExceptionHandlingMask(_:)",
      "type": "topic",
      "url": "/documentation/exceptionhandling/nsexceptionhandler/setexceptionhandlingmask(_:)"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHangingMask(_:)": {
      "abstract": [
        {
          "text": "Sets the bit mask of constants specifying the types of exceptions that will halt",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "execution for debugging.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setExceptionHangingMask"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHangingMask(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setExceptionHangingMask:"
        }
      ],
      "role": "symbol",
      "title": "setExceptionHangingMask(_:)",
      "type": "topic",
      "url": "/documentation/exceptionhandling/nsexceptionhandler/setexceptionhangingmask(_:)"
    },
    "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/logging-and-handling-constants": {
      "abstract": [
        {
          "text": "Use one or more of the following constants in the parameter of ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHandlingMask(_:)",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "to specify the types of exceptions that the exception handler should monitor and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "whether it should handle or log them.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/logging-and-handling-constants",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Logging and Handling Constants",
      "type": "topic",
      "url": "/documentation/exceptionhandling/logging-and-handling-constants"
    },
    "doc://com.apple.documentation/documentation/foundation/1409609-nssetuncaughtexceptionhandler": {
      "abstract": [
        {
          "text": "Changes the top-level error handler.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "NSSetUncaughtExceptionHandler"
        },
        {
          "kind": "text",
          "text": "(((NSException) -> Void)?)"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/1409609-nssetuncaughtexceptionhandler",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSSetUncaughtExceptionHandler(_:)",
      "type": "topic",
      "url": "/documentation/foundation/1409609-nssetuncaughtexceptionhandler"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:Si": {
      "abstract": [
        {
          "text": "A signed integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Si",
      "kind": "symbol",
      "role": "symbol",
      "title": "Int",
      "type": "topic",
      "url": "/documentation/Swift/Int"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Getting-and-setting-exception-masks",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHandlingMask()",
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHangingMask()",
        "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHangingMask(_:)"
      ],
      "title": "Getting and setting exception masks"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "13.0",
              "name": "Mac Catalyst",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.0",
              "name": "macOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Instance Method"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "setExceptionHandlingMask:"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "method"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setExceptionHandlingMask:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling",
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler"
              ]
            ]
          }
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "add",
          "path": "/relationshipsSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Getting-and-setting-exception-masks",
              "generated": true,
              "identifiers": [
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHandlingMask()",
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/exceptionHangingMask()",
                "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/NSExceptionHandler/setExceptionHangingMask(_:)"
              ],
              "title": "Getting and setting exception masks"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "macOS"
                ],
                "tokens": [
                  {
                    "kind": "text",
                    "text": "- ("
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:v",
                    "text": "void"
                  },
                  {
                    "kind": "text",
                    "text": ") "
                  },
                  {
                    "kind": "identifier",
                    "text": "setExceptionHandlingMask:"
                  },
                  {
                    "kind": "text",
                    "text": "("
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:@T@NSUInteger",
                    "text": "NSUInteger"
                  },
                  {
                    "kind": "text",
                    "text": ") "
                  },
                  {
                    "kind": "internalParam",
                    "text": "aMask"
                  },
                  {
                    "kind": "text",
                    "text": ";"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/1",
          "value": {
            "kind": "parameters",
            "parameters": [
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "A bit mask composed of one or more constants specifying the types of exceptions monitored",
                        "type": "text"
                      },
                      {
                        "text": " ",
                        "type": "text"
                      },
                      {
                        "text": "and whether they are handled or logged (or both). You specify multiple constants",
                        "type": "text"
                      },
                      {
                        "text": " ",
                        "type": "text"
                      },
                      {
                        "text": "by performing a bitwise-OR operation. See ",
                        "type": "text"
                      },
                      {
                        "identifier": "doc://com.apple.Exception-Handling/documentation/ExceptionHandling/logging-and-handling-constants",
                        "isActive": true,
                        "type": "reference"
                      },
                      {
                        "text": " ",
                        "type": "text"
                      },
                      {
                        "text": "for information about the constants.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "aMask"
              }
            ]
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1exceptionHangingMask()/title",
          "value": "exceptionHangingMask"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1exceptionHangingMask()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "exceptionHangingMask"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1setExceptionHangingMask(_:)/title",
          "value": "setExceptionHangingMask:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1setExceptionHangingMask(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setExceptionHangingMask:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler/title",
          "value": "NSExceptionHandler"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSExceptionHandler"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSExceptionHandler"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1setExceptionHandlingMask(_:)/title",
          "value": "setExceptionHandlingMask:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1setExceptionHandlingMask(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setExceptionHandlingMask:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1foundation~11409609-nssetuncaughtexceptionhandler/title",
          "value": "NSSetUncaughtExceptionHandler"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1exceptionHandlingMask()/title",
          "value": "exceptionHandlingMask"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.Exception-Handling~1documentation~1ExceptionHandling~1NSExceptionHandler~1exceptionHandlingMask()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "exceptionHandlingMask"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/exceptionhandling/nsexceptionhandler/setexceptionhandlingmask(_:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/exceptionhandling/nsexceptionhandler/setexceptionhandlingmask(_:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
