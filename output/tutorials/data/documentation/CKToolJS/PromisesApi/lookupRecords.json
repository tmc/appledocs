{
  "abstract": [
    {
      "text": "Fetches multiple records by record name.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.cktooljs/documentation/CKToolJS",
        "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "data",
    "url": "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/lookupRecords"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "instm/PromisesApi/lookupRecords",
    "modules": [
      {
        "name": "CKTool JS"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "introducedAt": "1.2.15",
        "name": "CKTool JS"
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "lookupRecords"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "data"
          ],
          "platforms": [
            "Unsupported OS: CKTool JS"
          ],
          "tokens": [
            {
              "identifier": "doc://com.apple.cktooljs/documentation/CKToolJS/CancellablePromise",
              "kind": "typeIdentifier",
              "preciseIdentifier": "cl/CancellablePromise",
              "text": "CancellablePromise"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "text",
              "text": "lookupRecords"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "text",
              "text": "\n"
            },
            {
              "kind": "text",
              "text": "\t"
            },
            {
              "kind": "typeIdentifier",
              "text": "LookupRecordsParams"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "text",
              "text": "params"
            },
            {
              "kind": "text",
              "text": "\n"
            },
            {
              "kind": "text",
              "text": ")"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A dictionary as described in the Discussion section.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "params"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A ",
              "type": "text"
            },
            {
              "code": "CancellablePromise",
              "type": "codeVoice"
            },
            {
              "text": " with the following resolutions.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If the promise is successful, it will resolve with one of the following dictionaries:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "{ statusCode: 200; result: CKDBLookupRecordsResponse }",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "The promise may reject and throw the following:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "DocumentedResponseError",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", if the HTTP status code is 421. The result member will be a dictionary conforming to AuthenticationRequiredError.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "DocumentedResponseError",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", if the HTTP status code is none of the above and in the range 400 to 599. The result member will be a dictionary conforming to RequestError.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "ValidationError",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", if the parameters to the method are incorrect.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "A ",
                      "type": "text"
                    },
                    {
                      "code": "FetchError",
                      "type": "codeVoice"
                    },
                    {
                      "text": " descendant, if there is a problem with the network request. A reference to the request object can be used to examine the underlying cause.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "params",
              "type": "codeVoice"
            },
            {
              "text": " dictionary has the following properties:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "dictionary LookupRecordsParams {",
            "  CKDBLookupRecordsRequestBody body;",
            "  string containerId;",
            "  CKEnvironment environment;",
            "  string databaseType;",
            "  string zoneName;",
            "}"
          ],
          "syntax": "javascript",
          "type": "codeListing"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "body",
                      "type": "codeVoice"
                    },
                    {
                      "text": ": The array of record names to look up.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "containerId",
                      "type": "codeVoice"
                    },
                    {
                      "text": ": The container identifier. See ",
                      "type": "text"
                    },
                    {
                      "code": "Container",
                      "type": "codeVoice"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "environment",
                      "type": "codeVoice"
                    },
                    {
                      "text": ": The container environment. For valid values, see ",
                      "type": "text"
                    },
                    {
                      "code": "CKEnvironment",
                      "type": "codeVoice"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "databaseType",
                      "type": "codeVoice"
                    },
                    {
                      "text": ": The database type. For valid values, see ",
                      "type": "text"
                    },
                    {
                      "code": "CKDatabaseType",
                      "type": "codeVoice"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "zoneName",
                      "type": "codeVoice"
                    },
                    {
                      "text": ": The zone name. See ",
                      "type": "text"
                    },
                    {
                      "code": "CKDBZone",
                      "type": "codeVoice"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "If successful, the server returns a ",
              "type": "text"
            },
            {
              "code": "CKDBLookupRecordsResponse",
              "type": "codeVoice"
            },
            {
              "text": " object, which contains an array of ",
              "type": "text"
            },
            {
              "code": "CKDBRecordResult",
              "type": "codeVoice"
            },
            {
              "text": " objects. ",
              "type": "text"
            },
            {
              "code": "CKDBRecordResult",
              "type": "codeVoice"
            },
            {
              "text": " can represent three types of records: existing, deleted, and error. You can verify that a returned record isn’t missing or deleted by checking that the type is set to ",
              "type": "text"
            },
            {
              "code": "existing",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.cktooljs/documentation/CKToolJS": {
      "abstract": [
        {
          "text": "Manage your CloudKit containers and databases from JavaScript.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.cktooljs/documentation/CKToolJS",
      "kind": "symbol",
      "role": "collection",
      "title": "CKTool JS",
      "type": "topic",
      "url": "/documentation/cktooljs"
    },
    "doc://com.apple.cktooljs/documentation/CKToolJS/CancellablePromise": {
      "abstract": [
        {
          "text": "A promise that has a function to cancel its operation.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.cktooljs/documentation/CKToolJS/CancellablePromise",
      "kind": "symbol",
      "role": "symbol",
      "title": "CancellablePromise",
      "type": "topic",
      "url": "/documentation/cktooljs/cancellablepromise"
    },
    "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi": {
      "abstract": [
        {
          "text": "A class that exposes promise-based functions for interacting with the API.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi",
      "kind": "symbol",
      "role": "symbol",
      "title": "PromisesApi",
      "type": "topic",
      "url": "/documentation/cktooljs/promisesapi"
    },
    "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/acceptRecord": {
      "abstract": [
        {
          "text": "Accepts a share on behalf of the current user.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/acceptRecord",
      "kind": "symbol",
      "role": "symbol",
      "title": "acceptRecord",
      "type": "topic",
      "url": "/documentation/cktooljs/promisesapi/acceptrecord"
    },
    "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/createRecord": {
      "abstract": [
        {
          "text": "Creates a new record.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/createRecord",
      "kind": "symbol",
      "role": "symbol",
      "title": "createRecord",
      "type": "topic",
      "url": "/documentation/cktooljs/promisesapi/createrecord"
    },
    "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/deleteRecord": {
      "abstract": [
        {
          "text": "Deletes a single record.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/deleteRecord",
      "kind": "symbol",
      "role": "symbol",
      "title": "deleteRecord",
      "type": "topic",
      "url": "/documentation/cktooljs/promisesapi/deleterecord"
    },
    "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/deleteRecordsByQuery": {
      "abstract": [
        {
          "text": "Deletes records matching the provided query.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/deleteRecordsByQuery",
      "kind": "symbol",
      "role": "symbol",
      "title": "deleteRecordsByQuery",
      "type": "topic",
      "url": "/documentation/cktooljs/promisesapi/deleterecordsbyquery"
    },
    "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/getRecord": {
      "abstract": [
        {
          "text": "Returns a record’s details.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/getRecord",
      "kind": "symbol",
      "role": "symbol",
      "title": "getRecord",
      "type": "topic",
      "url": "/documentation/cktooljs/promisesapi/getrecord"
    },
    "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/lookupRecords": {
      "abstract": [
        {
          "text": "Fetches multiple records by record name.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/lookupRecords",
      "kind": "symbol",
      "role": "symbol",
      "title": "lookupRecords",
      "type": "topic",
      "url": "/documentation/cktooljs/promisesapi/lookuprecords"
    },
    "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/queryRecordChanges": {
      "abstract": [
        {
          "text": "Returns records that changed since a specified sync token or since a zone was created.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/queryRecordChanges",
      "kind": "symbol",
      "role": "symbol",
      "title": "queryRecordChanges",
      "type": "topic",
      "url": "/documentation/cktooljs/promisesapi/queryrecordchanges"
    },
    "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/queryRecords": {
      "abstract": [
        {
          "text": "Returns a collection of records matching the provided query.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/queryRecords",
      "kind": "symbol",
      "role": "symbol",
      "title": "queryRecords",
      "type": "topic",
      "url": "/documentation/cktooljs/promisesapi/queryrecords"
    },
    "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/resolveRecord": {
      "abstract": [
        {
          "text": "Fetches information about records given their shortGuid properties.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/resolveRecord",
      "kind": "symbol",
      "role": "symbol",
      "title": "resolveRecord",
      "type": "topic",
      "url": "/documentation/cktooljs/promisesapi/resolverecord"
    },
    "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/updateRecord": {
      "abstract": [
        {
          "text": "Updates an existing record.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/updateRecord",
      "kind": "symbol",
      "role": "symbol",
      "title": "updateRecord",
      "type": "topic",
      "url": "/documentation/cktooljs/promisesapi/updaterecord"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Record-Management",
      "generated": true,
      "identifiers": [
        "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/acceptRecord",
        "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/createRecord",
        "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/deleteRecord",
        "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/deleteRecordsByQuery",
        "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/getRecord",
        "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/queryRecordChanges",
        "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/queryRecords",
        "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/resolveRecord",
        "doc://com.apple.cktooljs/documentation/CKToolJS/PromisesApi/updateRecord"
      ],
      "title": "Record Management"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/cktooljs/promisesapi/lookuprecords"
      ],
      "traits": [
        {
          "interfaceLanguage": "data"
        }
      ]
    }
  ]
}
