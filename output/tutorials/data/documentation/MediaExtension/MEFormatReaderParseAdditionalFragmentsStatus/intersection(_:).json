{
  "abstract": [
    {
      "text": "Returns a new option set with only the elements contained in both this",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "set and the given set.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.mediaextension/documentation/MediaExtension",
        "doc://com.apple.mediaextension/documentation/MediaExtension/MEFormatReaderParseAdditionalFragmentsStatus"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.mediaextension/documentation/MediaExtension/MEFormatReaderParseAdditionalFragmentsStatus/intersection(_:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Swift",
    "externalID": "s:s9OptionSetPsE12intersectionyxxF::SYNTHESIZED::c:@E@MEFormatReaderParseAdditionalFragmentsStatus",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "intersection"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      }
    ],
    "modules": [
      {
        "name": "MediaExtension",
        "relatedModules": [
          "Swift"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "macOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "intersection(_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "macOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "intersection"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "other"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "An option set.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "other"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A new option set with only the elements contained in both this",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "set and ",
              "type": "text"
            },
            {
              "code": "other",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This example uses the ",
              "type": "text"
            },
            {
              "code": "intersection(_:)",
              "type": "codeVoice"
            },
            {
              "text": " method to limit the available",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "shipping options to what can be used with a PO Box destination.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// Can only ship standard or priority to PO Boxes",
            "let poboxShipping: ShippingOptions = [.standard, .priority]",
            "let memberShipping: ShippingOptions =",
            "        [.standard, .priority, .secondDay]",
            "",
            "let availableOptions = memberShipping.intersection(poboxShipping)",
            "print(availableOptions.contains(.priority))",
            "// Prints \"true\"",
            "print(availableOptions.contains(.secondDay))",
            "// Prints \"false\""
          ],
          "syntax": null,
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.mediaextension/documentation/MediaExtension": {
      "abstract": [
        {
          "text": "This framework provides a means for developers to create format readers, video decoders, and RAW processors for media that the system doesnâ€™t natively support.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.mediaextension/documentation/MediaExtension",
      "kind": "symbol",
      "role": "collection",
      "title": "MediaExtension",
      "type": "topic",
      "url": "/documentation/mediaextension"
    },
    "doc://com.apple.mediaextension/documentation/MediaExtension/MEFormatReaderParseAdditionalFragmentsStatus": {
      "abstract": [
        {
          "text": "Informational status flags that the format reader returns after parsing additional fragments.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MEFormatReaderParseAdditionalFragmentsStatus"
        }
      ],
      "identifier": "doc://com.apple.mediaextension/documentation/MediaExtension/MEFormatReaderParseAdditionalFragmentsStatus",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MEFormatReaderParseAdditionalFragmentsStatus"
        }
      ],
      "role": "symbol",
      "title": "MEFormatReaderParseAdditionalFragmentsStatus",
      "type": "topic",
      "url": "/documentation/mediaextension/meformatreaderparseadditionalfragmentsstatus"
    },
    "doc://com.apple.mediaextension/documentation/MediaExtension/MEFormatReaderParseAdditionalFragmentsStatus/intersection(_:)": {
      "abstract": [
        {
          "text": "Returns a new option set with only the elements contained in both this",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "set and the given set.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "intersection"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.mediaextension/documentation/MediaExtension/MEFormatReaderParseAdditionalFragmentsStatus/intersection(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "intersection(_:)",
      "type": "topic",
      "url": "/documentation/mediaextension/meformatreaderparseadditionalfragmentsstatus/intersection(_:)"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mediaextension~1documentation~1MediaExtension~1MEFormatReaderParseAdditionalFragmentsStatus/title",
          "value": "MEFormatReaderParseAdditionalFragmentsStatus"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mediaextension~1documentation~1MediaExtension~1MEFormatReaderParseAdditionalFragmentsStatus/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MEFormatReaderParseAdditionalFragmentsStatus"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mediaextension~1documentation~1MediaExtension~1MEFormatReaderParseAdditionalFragmentsStatus/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MEFormatReaderParseAdditionalFragmentsStatus"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/mediaextension/meformatreaderparseadditionalfragmentsstatus/intersection(_:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
