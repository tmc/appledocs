{
  "abstract": [
    {
      "text": "Indicates that the view’s frame and cohort of focusable descendants",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "should be used to guide focus movement.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.AppIntents/documentation/AppIntents",
        "doc://com.apple.AppIntents/documentation/AppIntents/SiriTipView"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.AppIntents/documentation/AppIntents/SiriTipView/focusSection()"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI4ViewPAAE12focusSectionQryF::SYNTHESIZED::s:19_AppIntents_SwiftUI11SiriTipViewV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "focusSection"
      },
      {
        "kind": "text",
        "text": "() -> "
      },
      {
        "kind": "keyword",
        "text": "some"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4ViewP",
        "text": "View"
      }
    ],
    "modules": [
      {
        "name": "AppIntents",
        "relatedModules": [
          "SwiftUI"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "tvOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "focusSection()"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "tvOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "nonisolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "focusSection"
            },
            {
              "kind": "text",
              "text": "() -> "
            },
            {
              "kind": "keyword",
              "text": "some"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": "\n"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A view that can guide focus to its focusable descendents.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use focus sections to customize SwiftUI’s behavior when the user moves",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "focus between views.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The following tvOS example places three buttons (“1”, “2”, and “3”) at",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the upper left of the screen and three buttons (“A”, “B”, and “C”) at",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the bottom right. By default, swiping right on the Siri Remote on any",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of the buttons in the “1” - “3” group would do nothing, since the focus",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "system finds no focusable views directly to their right. But by declaring the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "VStack",
              "type": "codeVoice"
            },
            {
              "text": " that encloses buttons “A” - “C” as a focus section, the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "VStack",
              "type": "codeVoice"
            },
            {
              "text": " can receive focus, and deliver that focus to its first focusable",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "child (button “A”). The example puts a border on the ",
              "type": "text"
            },
            {
              "code": "VStack",
              "type": "codeVoice"
            },
            {
              "text": " to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "illustrate this spatial arrangement.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var body: some View {",
            "    HStack {",
            "        VStack {",
            "            Button (\"1\") {}",
            "            Button (\"2\") {}",
            "            Button (\"3\") {}",
            "            Spacer()",
            "        }",
            "        .border(Color.white, width: 2)",
            "",
            "        Spacer()",
            "        VStack {",
            "            Spacer()",
            "            Button (\"A\") {}",
            "            Button (\"B\") {}",
            "            Button (\"C\") {}",
            "        }",
            "        .border(Color.white, width: 2)",
            "        .focusSection()",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Note that because the ",
              "type": "text"
            },
            {
              "code": "VStack",
              "type": "codeVoice"
            },
            {
              "text": " containing buttons “1” - “3” does not",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "declare itself as a focus section, it is impossible to direct focus",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "back to the left from buttons “A” - “C”. None of those buttons has",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a focusable view — in this case either a button or a ",
              "type": "text"
            },
            {
              "code": "VStack",
              "type": "codeVoice"
            },
            {
              "text": " with",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the ",
              "type": "text"
            },
            {
              "code": "focusSection()",
              "type": "codeVoice"
            },
            {
              "text": " modifier — directly to its left.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Applying this modifier to a view affects focus behavior based on the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "style of movement:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Directional movement",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": ": Navigating with Siri Remote gestures,",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "arrow keys on a keyboard, or any other type of input that works in",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "terms of cardinal directions (up, down, left, right) produces",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "directional movement. When modified with ",
                      "type": "text"
                    },
                    {
                      "code": "focusSection()",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", the",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "view’s frame becomes capable of accepting focus in order to direct it",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "at its nearest focusable descendant in the direction of travel. In",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "the earlier example, declaring the right-side ",
                      "type": "text"
                    },
                    {
                      "code": "VStack",
                      "type": "codeVoice"
                    },
                    {
                      "text": " as a focus",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "section allowed it to receive right-directed focus from the buttons",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "on the left.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Sequential movement",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": ": Navigating with a Digital",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "Crown, the Tab key on a keyboard, or any other type of input that",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "works in terms of the next or previous item in a sequence, produces",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "sequential movement. When you use the ",
                      "type": "text"
                    },
                    {
                      "code": "focusSection()",
                      "type": "codeVoice"
                    },
                    {
                      "text": " modifier,",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "SwiftUI deviates from its default layout-based sequence to visit",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "each of the modified view’s focusable descendants before resuming",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "the default sequence. Within the set of focusable descendants, SwiftUI",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "continues to visit views in layout order (leading-to-trailing,",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "top-to-bottom).",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "code": "focusSection()",
              "type": "codeVoice"
            },
            {
              "text": " does not affect the focusability of the modified view.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If the modified view has no focusable descendants, then the modifier",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "does nothing.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.AppIntents/documentation/AppIntents": {
      "abstract": [
        {
          "text": "Make your app’s content and actions discoverable with system experiences like Spotlight, widgets, and enhanced action capabilities of Siri, powered by Apple Intelligence.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.AppIntents/documentation/AppIntents",
      "kind": "symbol",
      "role": "collection",
      "title": "App Intents",
      "type": "topic",
      "url": "/documentation/appintents"
    },
    "doc://com.apple.AppIntents/documentation/AppIntents/SiriTipView": {
      "abstract": [
        {
          "text": "A SwiftUI view that displays the phrase someone uses to invoke an App Shortcut.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SiriTipView"
        }
      ],
      "identifier": "doc://com.apple.AppIntents/documentation/AppIntents/SiriTipView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SiriTipView"
        }
      ],
      "role": "symbol",
      "title": "SiriTipView",
      "type": "topic",
      "url": "/documentation/appintents/siritipview"
    },
    "doc://com.apple.AppIntents/documentation/AppIntents/SiriTipView/focusSection()": {
      "abstract": [
        {
          "text": "Indicates that the view’s frame and cohort of focusable descendants",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "should be used to guide focus movement.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focusSection"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.AppIntents/documentation/AppIntents/SiriTipView/focusSection()",
      "kind": "symbol",
      "role": "symbol",
      "title": "focusSection()",
      "type": "topic",
      "url": "/documentation/appintents/siritipview/focussection()"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
      "kind": "symbol",
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/SwiftUI/View"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/appintents/siritipview/focussection()"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
