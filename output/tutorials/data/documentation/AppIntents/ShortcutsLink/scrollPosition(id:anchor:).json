{
  "abstract": [
    {
      "text": "Associates a binding to be updated when a scroll view within this",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "view scrolls.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.AppIntents/documentation/AppIntents",
        "doc://com.apple.AppIntents/documentation/AppIntents/ShortcutsLink"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.AppIntents/documentation/AppIntents/ShortcutsLink/scrollPosition(id:anchor:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI4ViewPAAE14scrollPosition2id6anchorQrAA7BindingVyqd__SgG_AA9UnitPointVSgtSHRd__lF::SYNTHESIZED::s:19_AppIntents_SwiftUI13ShortcutsLinkV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "scrollPosition"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "id"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI7BindingV",
        "text": "Binding"
      },
      {
        "kind": "text",
        "text": "<("
      },
      {
        "kind": "keyword",
        "text": "some"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:SH",
        "text": "Hashable"
      },
      {
        "kind": "text",
        "text": ")?>, "
      },
      {
        "kind": "externalParam",
        "text": "anchor"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI9UnitPointV",
        "text": "UnitPoint"
      },
      {
        "kind": "text",
        "text": "?) -> "
      },
      {
        "kind": "keyword",
        "text": "some"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4ViewP",
        "text": "View"
      }
    ],
    "modules": [
      {
        "name": "AppIntents",
        "relatedModules": [
          "SwiftUI"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "scrollPosition(id:anchor:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "nonisolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "scrollPosition"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "id"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI7BindingV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI7BindingV",
              "text": "Binding"
            },
            {
              "kind": "text",
              "text": "<("
            },
            {
              "kind": "keyword",
              "text": "some"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:SH",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SH",
              "text": "Hashable"
            },
            {
              "kind": "text",
              "text": ")?>, "
            },
            {
              "kind": "externalParam",
              "text": "anchor"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI9UnitPointV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI9UnitPointV",
              "text": "UnitPoint"
            },
            {
              "kind": "text",
              "text": "? = nil) -> "
            },
            {
              "kind": "keyword",
              "text": "some"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": "\n"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use this modifier along with the ",
              "type": "text"
            },
            {
              "code": "View/scrollTargetLayout()",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "modifier to know the identity of the view that is actively scrolled.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "As the scroll view scrolls, the binding will be updated with the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "identity of the leading-most / top-most view.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "code": "View/scrollTargetLayout()",
              "type": "codeVoice"
            },
            {
              "text": " modifier to configure",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "which the layout that contains your scroll targets. In the following",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "example, the top-most ItemView will update with the scrolledID",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "binding as the scroll view scrolls.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Binding var items: [Item]",
            "@Binding var scrolledID: Item.ID?",
            "",
            "ScrollView {",
            "    LazyVStack {",
            "        ForEach(items) { item in",
            "            ItemView(item)",
            "        }",
            "    }",
            "    .scrollTargetLayout()",
            "}",
            ".scrollPosition(id: $scrolledID)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "You can write to the binding to scroll to the view with",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the provided identity.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Binding var items: [Item]",
            "@Binding var scrolledID: Item.ID?",
            "",
            "ScrollView {",
            "    // ...",
            "}",
            ".scrollPosition(id: $scrolledID)",
            ".toolbar {",
            "    Button(\"Scroll to Top\") {",
            "        scrolledID = items.first",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "SwiftUI will attempt to keep the view with the identity specified",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in the provided binding visible when events occur that might cause it",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to be scrolled out of view by the system. Some examples of these",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "include:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The data backing the content of a scroll view is re-ordered.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The size of the scroll view changes, like when a window is resized",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "on macOS or during a rotation on iOS.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The scroll view initially lays out it content defaulting to",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "the top most view, but the binding has a different view’s identity.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "You can provide an anchor to this modifier to both:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Influence which view the system chooses as the view whose",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "identity value will update the providing binding as the scroll",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "view scrolls.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Control the alignment of the view when scrolling to a view",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "when writing a new binding value.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "For example, providing a value of ",
              "type": "text"
            },
            {
              "code": "UnitPoint/bottom",
              "type": "codeVoice"
            },
            {
              "text": " will prefer",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to have the bottom-most view chosen and prefer to scroll to views",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "aligned to the bottom.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If no anchor has been provided, SwiftUI will scroll the minimal amount",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "when using the scroll position to programmatically scroll to a view.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.AppIntents/documentation/AppIntents": {
      "abstract": [
        {
          "text": "Make your app’s content and actions discoverable with system experiences like Spotlight, widgets, and enhanced action capabilities of Siri, powered by Apple Intelligence.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.AppIntents/documentation/AppIntents",
      "kind": "symbol",
      "role": "collection",
      "title": "App Intents",
      "type": "topic",
      "url": "/documentation/appintents"
    },
    "doc://com.apple.AppIntents/documentation/AppIntents/ShortcutsLink": {
      "abstract": [
        {
          "text": "A button that brings users to the current app’s App Shortcuts page in the Shortcuts app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ShortcutsLink"
        }
      ],
      "identifier": "doc://com.apple.AppIntents/documentation/AppIntents/ShortcutsLink",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ShortcutsLink"
        }
      ],
      "role": "symbol",
      "title": "ShortcutsLink",
      "type": "topic",
      "url": "/documentation/appintents/shortcutslink"
    },
    "doc://com.apple.AppIntents/documentation/AppIntents/ShortcutsLink/scrollPosition(id:anchor:)": {
      "abstract": [
        {
          "text": "Associates a binding to be updated when a scroll view within this",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "view scrolls.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "scrollPosition"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<("
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SH",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": ")?>, "
        },
        {
          "kind": "externalParam",
          "text": "anchor"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI9UnitPointV",
          "text": "UnitPoint"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.AppIntents/documentation/AppIntents/ShortcutsLink/scrollPosition(id:anchor:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "scrollPosition(id:anchor:)",
      "type": "topic",
      "url": "/documentation/appintents/shortcutslink/scrollposition(id:anchor:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
      "kind": "symbol",
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/SwiftUI/View"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI7BindingV": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value owned by a source of truth.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@propertyWrapper"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@dynamicMemberLookup"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI7BindingV",
      "kind": "symbol",
      "role": "symbol",
      "title": "Binding",
      "type": "topic",
      "url": "/documentation/SwiftUI/Binding"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI9UnitPointV": {
      "abstract": [
        {
          "text": "A normalized 2D point in a view’s coordinate space.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnitPoint"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI9UnitPointV",
      "kind": "symbol",
      "role": "symbol",
      "title": "UnitPoint",
      "type": "topic",
      "url": "/documentation/SwiftUI/UnitPoint"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/appintents/shortcutslink/scrollposition(id:anchor:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
