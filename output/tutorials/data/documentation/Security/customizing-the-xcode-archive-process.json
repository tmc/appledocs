{
  "abstract": [
    {
      "text": "Archive, export, and notarize your app in one step using Xcode post-action build scripts.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.security/documentation/Security",
        "doc://com.apple.security/documentation/Security/notarizing-macos-software-before-distribution",
        "doc://com.apple.security/documentation/Security/customizing-the-notarization-workflow"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.security/documentation/Security/customizing-the-xcode-archive-process"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Security"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Customizing the Xcode archive process"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Before distributing your software, you must create an archive containing your executables. From that archive, you must perform additional steps to create a distributable version of your software and to notarize your executables. To simplify the workflow, you can incorporate the distribution and notarization steps into the archive process using post-action scripts.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "A post-action script adds custom script commands to the end of standard Xcode commands. To add a script to the Archive command, open the ",
              "type": "text"
            },
            {
              "identifier": "https://help.apple.com/xcode/mac/11.4/#/dev0bee46f46",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " for your project and expand the Archive scheme. Select the post-actions option and enter the details of your script in the space provided.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "media-3859177",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The following sample script exports your archive to a format that can be sent to the Apple notary service. The script includes several calls to the ",
              "type": "text"
            },
            {
              "code": "osascript",
              "type": "codeVoice"
            },
            {
              "text": " command to display progress messages. Replace the value of the ",
              "type": "text"
            },
            {
              "code": "AC_PASSWORD",
              "type": "codeVoice"
            },
            {
              "text": " variable with an appropriate value for your App Store Connect account.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "# notarytool credentials.",
            "# AC_PASSWORD is the name of the keychain item created with `notarytool store-credentials`.",
            "# Grant keychain access to Xcode if prompted by Xcode.",
            "AC_PASSWORD=\"App Store Connect Profile\"",
            "",
            "# Do all of the work in a subdirectory of /tmp, and use a",
            "# unique ID so that there's no collision with previous builds.",
            "EXPORT_UUID=`uuidgen`",
            "EXPORT_PATH=\"/tmp/$PRODUCT_NAME-$EXPORT_UUID/\"",
            "APP_PATH=\"$EXPORT_PATH/$PRODUCT_NAME.app\"",
            "DMG_PATH=\"$EXPORT_PATH/$PRODUCT_NAME.dmg\"",
            "",
            "mkdir -p \"$EXPORT_PATH\"",
            "",
            "# Xcode doesn't show run script errors in build log.",
            "exec > \"$EXPORT_PATH/Xcode run script.log\" 2>&1",
            "",
            "# Use osascript(1) to present notification banners; otherwise",
            "# there's no progress indication until the script finishes.",
            "/usr/bin/osascript -e 'display notification \"Exporting application archive…\" with title \"Submitting app for notarization\"'",
            "",
            "# Ask xcodebuild(1) to export the app. Use the export options",
            "# from a previous manual export that used a Developer ID.",
            "/usr/bin/xcodebuild -exportArchive -archivePath \"$ARCHIVE_PATH\" -exportOptionsPlist \"$SRCROOT/ExportOptions.plist\" -exportPath \"$EXPORT_PATH\"",
            "",
            "osascript -e 'display notification \"Creating UDIF Disk Image…\" with title \"Submitting app for notarization\"'",
            "",
            "# Create a UDIF bzip2-compressed disk image.",
            "cd \"$EXPORT_PATH/\"",
            "mkdir \"$PRODUCT_NAME\"",
            "mv -v \"$APP_PATH\" \"$PRODUCT_NAME\"",
            "",
            "/usr/bin/hdiutil create -srcfolder \"$PRODUCT_NAME\" -format UDBZ \"$DMG_PATH\"",
            "",
            "osascript -e 'display notification \"Submitting UDIF Disk Image for notarization…\" with title \"Submitting app for notarization\"'",
            "",
            "# Submit the finished deliverables for notarization.",
            "# Wait up to 2 hours for a response.",
            "# Use verbose logging in order to file feedback if an error occurs.",
            "\"$DEVELOPER_BIN_DIR/notarytool\" submit -p \"$AC_PASSWORD\" --verbose \"$DMG_PATH\" --wait --timeout 2h --output-format plist > \"NotarizationResponse.plist\"",
            "",
            "return_code=$?",
            "",
            "if [ $return_code -eq 0 ]; then",
            "message=`/usr/libexec/PlistBuddy -c \"Print :message\" \"NotarizationResponse.plist\"`",
            "status=`/usr/libexec/PlistBuddy -c \"Print :status\" \"NotarizationResponse.plist\"`",
            "else",
            "message=\"An Error Occurred.\"",
            "status=\"Check Xcode log.\"",
            "open \"$EXPORT_PATH/Xcode run script.log\"",
            "fi",
            "",
            "# Show and speak the final status.",
            "osascript -e \"on run(argv)\" \\",
            "-e 'display notification item 1 of argv & \" : \" & item 2 of argv with title \"Submitting app for notarization\" sound name \"Crystal\"' \\",
            "-e 'set text item delimiters to \", \"' \\",
            "-e \"set args to argv as text\" \\",
            "-e \"say args\" \\",
            "-e \"delay 5\" \\",
            "-e \"end\" \\",
            "-- \"$message\" \"$status\"",
            "",
            "# Open the folder that was created, which also signals completion.",
            "open \"$EXPORT_PATH\""
          ],
          "syntax": "sh",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.security/documentation/Security": {
      "abstract": [
        {
          "text": "Secure the data your app manages, and control access to your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.security/documentation/Security",
      "kind": "symbol",
      "role": "collection",
      "title": "Security",
      "type": "topic",
      "url": "/documentation/security"
    },
    "doc://com.apple.security/documentation/Security/customizing-the-notarization-workflow": {
      "abstract": [
        {
          "text": "Notarize your app from the command line to handle special distribution cases.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.security/documentation/Security/customizing-the-notarization-workflow",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Customizing the notarization workflow",
      "type": "topic",
      "url": "/documentation/security/customizing-the-notarization-workflow"
    },
    "doc://com.apple.security/documentation/Security/notarizing-macos-software-before-distribution": {
      "abstract": [
        {
          "text": "Give users even more confidence in your macOS software by submitting it to Apple for notarization.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.security/documentation/Security/notarizing-macos-software-before-distribution",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Notarizing macOS software before distribution",
      "type": "topic",
      "url": "/documentation/security/notarizing-macos-software-before-distribution"
    },
    "https://help.apple.com/xcode/mac/11.4/#/dev0bee46f46": {
      "identifier": "https://help.apple.com/xcode/mac/11.4/#/dev0bee46f46",
      "title": "scheme editor",
      "titleInlineContent": [
        {
          "text": "scheme editor",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://help.apple.com/xcode/mac/11.4/#/dev0bee46f46"
    },
    "media-3859177": {
      "alt": "Screenshot of Xcode’s scheme editor showing an example of a post-actions script for the Archive action.",
      "identifier": "media-3859177",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/9c6ef48980307ad1db9ae2afe4f64fbf/media-3859177@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/89b62f2559988078000db4dcc3dab76b/media-3859177~dark@2x.png"
        }
      ]
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "add",
          "path": "/seeAlsoSections",
          "value": null
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/security/customizing-the-xcode-archive-process"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/security/customizing-the-xcode-archive-process"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
