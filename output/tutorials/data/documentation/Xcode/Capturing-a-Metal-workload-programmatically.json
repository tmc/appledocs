{
  "abstract": [
    {
      "text": "Analyze your app’s performance by invoking Metal’s frame capture.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Xcode/documentation/Xcode",
        "doc://com.apple.Xcode/documentation/Xcode/debugging",
        "doc://com.apple.Xcode/documentation/Xcode/Metal-debugger"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Xcode/documentation/Xcode/Capturing-a-Metal-workload-programmatically"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "role": "article",
    "roleHeading": "Article",
    "title": "Capturing a Metal workload programmatically"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureManager",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to programmatically capture information about commands you send to a specific device object.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For example, you can capture a specific frame or part of a frame, depending on your needs, by implementing a custom UI that triggers a capture, or by programmatically triggering a capture at runtime from within your app.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Enable-capturing-programmatically",
          "level": 3,
          "text": "Enable capturing programmatically",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To enable Metal capture in your app, add the ",
              "type": "text"
            },
            {
              "code": "MetalCaptureEnabled",
              "type": "codeVoice"
            },
            {
              "text": " key to your ",
              "type": "text"
            },
            {
              "code": "Info.plist",
              "type": "codeVoice"
            },
            {
              "text": " file with a value of ",
              "type": "text"
            },
            {
              "code": "YES",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "In Xcode’s property list editor, this key appears as ",
              "type": "text"
            },
            {
              "code": "Metal Capture Enabled",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Alternatively, in macOS 14 and later, you can set the environment variable on your Metal app: ",
              "type": "text"
            },
            {
              "code": "MTL_CAPTURE_ENABLED=1",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Enabling Metal capture has a tiny, but measurable, effect on your app’s CPU processing time.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "You may want to set the value of this key using a build setting in your project so that you can enable it for some builds, but not for your final release build.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Tip",
          "style": "tip",
          "type": "aside"
        },
        {
          "anchor": "Capture-a-device-or-command-queue",
          "level": 3,
          "text": "Capture a device or command queue",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Create an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureDescriptor",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object that defines which commands you want to record and what needs to happen after the capture is complete. To capture commands for a specific ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Metal/MTLDevice",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCommandQueue",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", set the capture descriptor’s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureDescriptor/captureObject",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property to point at the specific object to track, and call the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureManager/startCapture(with:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "To stop capturing commands, call the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureManager/stopCapture()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func triggerProgrammaticCapture(device: MTLDevice) {",
            "    let captureManager = MTLCaptureManager.shared()",
            "    let captureDescriptor = MTLCaptureDescriptor()",
            "    captureDescriptor.captureObject = self.device",
            "    do {",
            "        try captureManager.startCapture(with: captureDescriptor)",
            "    } catch {",
            "        fatalError(\"error when trying to capture: \\(error)\")",
            "    }",
            "}",
            "",
            "func runMetalCommands(commandQueue: MTLCommandQueue) {",
            "    let commandBuffer = commandQueue.makeCommandBuffer()!",
            "    // Do Metal work.",
            "    commandBuffer.commit()",
            "    let captureManager = MTLCaptureManager.shared()",
            "    captureManager.stopCapture()",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The capture manager captures commands only within ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCommandBuffer",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " objects that you create after the capture starts and commit before the capture stops.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "When you capture a frame programmatically, you can capture Metal commands that span multiple frames. For example, by calling ",
                  "type": "text"
                },
                {
                  "code": "startCapture",
                  "type": "codeVoice"
                },
                {
                  "text": " at the start of frame 1 and ",
                  "type": "text"
                },
                {
                  "code": "stopCapture",
                  "type": "codeVoice"
                },
                {
                  "text": " after frame 3, the traces contain command data from all the buffers that the system commits in the three frames.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Tip",
          "style": "tip",
          "type": "aside"
        },
        {
          "anchor": "Capture-specific-commands-with-a-capture-scope",
          "level": 3,
          "text": "Capture specific commands with a capture scope",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To learn how to add custom scopes to your app, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Xcode/documentation/Xcode/Creating-and-using-custom-capture-scopes",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". To capture commands using a custom scope, create an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureScope",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object and set the capture descriptor’s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureDescriptor/captureObject",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property to point to it.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Set the file extension of the ",
                  "type": "text"
                },
                {
                  "code": "outputURL",
                  "type": "codeVoice"
                },
                {
                  "text": " to ",
                  "type": "text"
                },
                {
                  "code": ".gputrace",
                  "type": "codeVoice"
                },
                {
                  "text": " to ensure that you can replay it later in the Metal debugger. For more information on replaying GPU trace files, see ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.Xcode/documentation/Xcode/Replaying-a-GPU-trace-file",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "code": [
            "func setupProgrammaticCaptureScope(device: MTLDevice) {",
            "    myCaptureScope = MTLCaptureManager.shared().makeCaptureScope(device: device)",
            "    myCaptureScope?.label = \"My Capture Scope\"",
            "}",
            "",
            "func triggerProgrammaticCaptureScope() {",
            "    guard let captureScope = myCaptureScope else { return }",
            "    let captureManager = MTLCaptureManager.shared()",
            "    let captureDescriptor = MTLCaptureDescriptor()",
            "    captureDescriptor.captureObject = captureScope",
            "    do {",
            "        try captureManager.startCapture(with: captureDescriptor)",
            "    } catch {",
            "        fatalError(\"error when trying to capture: \\(error)\")",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "To define boundaries for the scoped capture, call the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureScope",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object’s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureScope/begin()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureScope/end()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " methods just before and after the commands that you want to capture.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Xcode automatically stops capturing when your app reaches the corresponding ",
              "type": "text"
            },
            {
              "code": "end()",
              "type": "codeVoice"
            },
            {
              "text": " method of the capture scope.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func runMetalCommands(commandQueue: MTLCommandQueue) {",
            "    myCaptureScope?.begin()",
            "    let commandBuffer = commandQueue.makeCommandBuffer()!",
            "    // Do Metal work.",
            "    commandBuffer.commit()",
            "    myCaptureScope?.end()",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The capture scope captures commands only within ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCommandBuffer",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " objects that you create after the scope begins and commit before the scope ends.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "anchor": "Save-the-capture-to-your-computer",
          "level": 3,
          "text": "Save the capture to your computer",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If you want to analyze the capture later, you can skip launching the Metal debugger and save the GPU command information to a GPU trace file.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Call ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureManager/supportsDestination(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " on the capture manager to make sure the feature is available before attempting to record a trace file.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let captureManager = MTLCaptureManager.shared()",
            "",
            "guard captureManager.supportsDestination(.gpuTraceDocument) else {",
            "    print(\"Capturing to a GPU trace file isn't supported.\")",
            "    return",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Then, set the capture descriptor’s destination property to ",
              "type": "text"
            },
            {
              "code": "MTLCaptureDestination.gpuTraceDocument",
              "type": "codeVoice"
            },
            {
              "text": " and specify the file’s destination.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let captureDescriptor = MTLCaptureDescriptor()",
            "captureDescriptor.captureObject = self.device",
            "captureDescriptor.destination = .gpuTraceDocument",
            "captureDescriptor.outputURL = self.traceURL",
            "..."
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "For more information on replaying GPU trace files, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Xcode/documentation/Xcode/Replaying-a-GPU-trace-file",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Xcode-PageImage-card.png": {
      "alt": "The Xcode logo on a blue gradient background.",
      "identifier": "Xcode-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/cc63eacd8f7f660388b46204d1d9bbcb/Xcode-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/62dba87d5f60ec96eb48882c9dff86d8/Xcode-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Xcode/documentation/Xcode": {
      "abstract": [
        {
          "text": "Build, test, and submit your app with Apple’s integrated development environment.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode",
      "images": [
        {
          "identifier": "Xcode-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "collection",
      "title": "Xcode",
      "type": "topic",
      "url": "/documentation/xcode"
    },
    "doc://com.apple.Xcode/documentation/Xcode/Capturing-a-Metal-workload-in-Xcode": {
      "abstract": [
        {
          "text": "Analyze your app’s performance by configuring your project to use the Metal debugger.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/Capturing-a-Metal-workload-in-Xcode",
      "kind": "article",
      "role": "article",
      "title": "Capturing a Metal workload in Xcode",
      "type": "topic",
      "url": "/documentation/xcode/capturing-a-metal-workload-in-xcode"
    },
    "doc://com.apple.Xcode/documentation/Xcode/Creating-and-using-custom-capture-scopes": {
      "abstract": [
        {
          "text": "Capture specific GPU commands by using custom capture scopes.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/Creating-and-using-custom-capture-scopes",
      "kind": "article",
      "role": "article",
      "title": "Creating and using custom capture scopes",
      "type": "topic",
      "url": "/documentation/xcode/creating-and-using-custom-capture-scopes"
    },
    "doc://com.apple.Xcode/documentation/Xcode/Investigating-visual-artifacts": {
      "abstract": [
        {
          "text": "Discover, diagnose, and fix visual artifacts in your app with the Metal debugger.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/Investigating-visual-artifacts",
      "kind": "article",
      "role": "article",
      "title": "Investigating visual artifacts",
      "type": "topic",
      "url": "/documentation/xcode/investigating-visual-artifacts"
    },
    "doc://com.apple.Xcode/documentation/Xcode/Metal-debugger": {
      "abstract": [
        {
          "text": "Debug and profile your Metal workload with a GPU trace.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/Metal-debugger",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Metal debugger",
      "type": "topic",
      "url": "/documentation/xcode/metal-debugger"
    },
    "doc://com.apple.Xcode/documentation/Xcode/Optimizing-GPU-performance": {
      "abstract": [
        {
          "text": "Find and address performance bottlenecks using the Metal debugger.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/Optimizing-GPU-performance",
      "kind": "article",
      "role": "article",
      "title": "Optimizing GPU performance",
      "type": "topic",
      "url": "/documentation/xcode/optimizing-gpu-performance"
    },
    "doc://com.apple.Xcode/documentation/Xcode/Replaying-a-GPU-trace-file": {
      "abstract": [
        {
          "text": "Debug and profile your app’s performance using a GPU trace file in the Metal debugger.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/Replaying-a-GPU-trace-file",
      "kind": "article",
      "role": "article",
      "title": "Replaying a GPU trace file",
      "type": "topic",
      "url": "/documentation/xcode/replaying-a-gpu-trace-file"
    },
    "doc://com.apple.Xcode/documentation/Xcode/debugging": {
      "abstract": [
        {
          "text": "Identify and address issues in your app using the Xcode debugger, Xcode Organizer, Metal debugger, and Instruments.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/debugging",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Debugging",
      "type": "topic",
      "url": "/documentation/xcode/debugging"
    },
    "doc://com.apple.documentation/documentation/Metal/MTLCaptureDescriptor": {
      "abstract": [
        {
          "text": "A configuration for a Metal capture session.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLCaptureDescriptor"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureDescriptor",
      "kind": "symbol",
      "role": "symbol",
      "title": "MTLCaptureDescriptor",
      "type": "topic",
      "url": "/documentation/Metal/MTLCaptureDescriptor"
    },
    "doc://com.apple.documentation/documentation/Metal/MTLCaptureDescriptor/captureObject": {
      "abstract": [
        {
          "text": "The object whose contents should be captured.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "captureObject"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "? { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "set"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureDescriptor/captureObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "captureObject",
      "type": "topic",
      "url": "/documentation/Metal/MTLCaptureDescriptor/captureObject"
    },
    "doc://com.apple.documentation/documentation/Metal/MTLCaptureManager": {
      "abstract": [
        {
          "text": "An instance you use to capture Metal command data in your app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLCaptureManager"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureManager",
      "kind": "symbol",
      "role": "symbol",
      "title": "MTLCaptureManager",
      "type": "topic",
      "url": "/documentation/Metal/MTLCaptureManager"
    },
    "doc://com.apple.documentation/documentation/Metal/MTLCaptureManager/startCapture(with:)": {
      "abstract": [
        {
          "text": "Starts capturing any of your app’s Metal commands, with the capture session defined by a descriptor object.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "startCapture"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "descriptor"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MTLCaptureDescriptor",
          "text": "MTLCaptureDescriptor"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureManager/startCapture(with:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "startCapture(with:)",
      "type": "topic",
      "url": "/documentation/Metal/MTLCaptureManager/startCapture(with:)"
    },
    "doc://com.apple.documentation/documentation/Metal/MTLCaptureManager/stopCapture()": {
      "abstract": [
        {
          "text": "Stops capturing Metal commands.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "stopCapture"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureManager/stopCapture()",
      "kind": "symbol",
      "role": "symbol",
      "title": "stopCapture()",
      "type": "topic",
      "url": "/documentation/Metal/MTLCaptureManager/stopCapture()"
    },
    "doc://com.apple.documentation/documentation/Metal/MTLCaptureManager/supportsDestination(_:)": {
      "abstract": [
        {
          "text": "Checks to see whether a particular capture destination is supported.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "supportsDestination"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "destination"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLCaptureDestination",
          "text": "MTLCaptureDestination"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureManager/supportsDestination(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "supportsDestination(_:)",
      "type": "topic",
      "url": "/documentation/Metal/MTLCaptureManager/supportsDestination(_:)"
    },
    "doc://com.apple.documentation/documentation/Metal/MTLCaptureScope": {
      "abstract": [
        {
          "text": "A protocol that defines custom boundaries for a GPU frame capture.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLCaptureScope"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureScope",
      "kind": "symbol",
      "role": "symbol",
      "title": "MTLCaptureScope",
      "type": "topic",
      "url": "/documentation/Metal/MTLCaptureScope"
    },
    "doc://com.apple.documentation/documentation/Metal/MTLCaptureScope/begin()": {
      "abstract": [
        {
          "text": "Tells Metal to begin recording command information.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "begin"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureScope/begin()",
      "kind": "symbol",
      "role": "symbol",
      "title": "begin()",
      "type": "topic",
      "url": "/documentation/Metal/MTLCaptureScope/begin()"
    },
    "doc://com.apple.documentation/documentation/Metal/MTLCaptureScope/end()": {
      "abstract": [
        {
          "text": "Tells Metal to stop recording command information.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "end"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCaptureScope/end()",
      "kind": "symbol",
      "role": "symbol",
      "title": "end()",
      "type": "topic",
      "url": "/documentation/Metal/MTLCaptureScope/end()"
    },
    "doc://com.apple.documentation/documentation/Metal/MTLCommandBuffer": {
      "abstract": [
        {
          "text": "A container that stores a sequence of GPU commands that you encode into it.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLCommandBuffer"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCommandBuffer",
      "kind": "symbol",
      "role": "symbol",
      "title": "MTLCommandBuffer",
      "type": "topic",
      "url": "/documentation/Metal/MTLCommandBuffer"
    },
    "doc://com.apple.documentation/documentation/Metal/MTLCommandQueue": {
      "abstract": [
        {
          "text": "An instance you use to create, submit, and schedule command buffers to a specific GPU device to run the commands within those buffers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLCommandQueue"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Metal/MTLCommandQueue",
      "kind": "symbol",
      "role": "symbol",
      "title": "MTLCommandQueue",
      "type": "topic",
      "url": "/documentation/Metal/MTLCommandQueue"
    },
    "doc://com.apple.documentation/documentation/Metal/MTLDevice": {
      "abstract": [
        {
          "text": "The main Metal interface to a GPU that apps use to draw graphics and run computations in parallel.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLDevice"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Metal/MTLDevice",
      "kind": "symbol",
      "role": "symbol",
      "title": "MTLDevice",
      "type": "topic",
      "url": "/documentation/Metal/MTLDevice"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Essentials",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Xcode/documentation/Xcode/Capturing-a-Metal-workload-in-Xcode",
        "doc://com.apple.Xcode/documentation/Xcode/Replaying-a-GPU-trace-file",
        "doc://com.apple.Xcode/documentation/Xcode/Investigating-visual-artifacts",
        "doc://com.apple.Xcode/documentation/Xcode/Optimizing-GPU-performance"
      ],
      "title": "Essentials"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCaptureDescriptor~1captureObject/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@property"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "kind": "keyword",
              "text": "nonatomic"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "keyword",
              "text": "strong"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "id"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "captureObject"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCommandQueue/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MTLCommandQueue"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCaptureManager~1stopCapture()/title",
          "value": "stopCapture"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCaptureManager~1stopCapture()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "stopCapture"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCaptureDescriptor/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MTLCaptureDescriptor"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCaptureManager~1supportsDestination(_:)/title",
          "value": "supportsDestination:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCaptureManager~1supportsDestination(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "supportsDestination:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@E@MTLCaptureDestination",
              "text": "MTLCaptureDestination"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "internalParam",
              "text": "destination"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCaptureScope/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MTLCaptureScope"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCaptureScope~1begin()/title",
          "value": "beginScope"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCaptureScope~1begin()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "beginScope"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCommandBuffer/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MTLCommandBuffer"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCaptureScope~1end()/title",
          "value": "endScope"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCaptureScope~1end()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "endScope"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCaptureManager~1startCapture(with:)/title",
          "value": "startCaptureWithDescriptor:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCaptureManager~1startCapture(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "startCaptureWithDescriptor:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)MTLCaptureDescriptor",
              "text": "MTLCaptureDescriptor"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "descriptor"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "error:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSError",
              "text": "NSError"
            },
            {
              "kind": "text",
              "text": " * *) "
            },
            {
              "kind": "internalParam",
              "text": "error"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLCaptureManager/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MTLCaptureManager"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1Metal~1MTLDevice/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MTLDevice"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
