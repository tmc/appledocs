{
  "abstract": [
    {
      "text": "Gain insights to SIMD group performance by inspecting source code execution.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Xcode/documentation/Xcode",
        "doc://com.apple.Xcode/documentation/Xcode/debugging",
        "doc://com.apple.Xcode/documentation/Xcode/Metal-debugger"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Xcode/documentation/Xcode/Analyzing-Apple-GPU-performance-using-performance-heatmaps-a17-m3"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "role": "article",
    "roleHeading": "Article",
    "title": "Analyzing Apple GPU performance with performance heat maps"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Metal organizes the threads of your shader into single-instruction, multiple-data (SIMD) groups. The performance heat maps feature provides a way to quickly find SIMD groups that are expensive or divergent. You can graphically inspect how Apple GPUs execute the shader source code in those groups, and gain insights of potential performance bottlenecks.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The performance heat maps feature is available for iOS devices with A17 Pro or later, and Mac computers with M3 or later.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "anchor": "View-the-performance-heat-maps",
          "level": 3,
          "text": "View the performance heat maps",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To open the performance heat maps, click the Performance button in the Metal debugger’s Debug navigator, and then click the Heat Map tab above the Performance timeline.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "gputools-metal-debugger-essentials-heatmap.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When you select an encoder, pipeline state, or GPU command in the Timeline navigator, the heat maps for the corresponding work appear on the right.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Performance heat maps are available for render command encoders, render pipeline states, and compute dispatches. However, they don’t support compute command encoders or compute pipeline states.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "In addition, performance heat maps are available for the following shader types:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "header": "row",
          "rows": [
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Shader type",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Heatmap pixel location",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Fragment shader",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Fragment position",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Object shader",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Thread location",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Mesh shader",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Thread location",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Compute shader",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Thread location",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ]
          ],
          "type": "table"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "For compute, object, and mesh shaders, when the maximum compute thread location in the x-axis or y-axis exceeds 8192, each pixel in the heat map represents a SIMD group instead of a thread.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "anchor": "Switch-between-shader-types",
          "level": 3,
          "text": "Switch between shader types",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "By default, selecting a render command encoder, a render pipeline state, or a draw command shows the fragment shader heat maps.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Selecting a compute dispatch command shows the compute shader heat maps.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You can switch between different shader types using the Vertex and Fragment tabs above the heat maps.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Display-more-types-of-performance-heat-maps",
          "level": 3,
          "text": "Display more types of performance heat maps",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "By default, the Shader Execution Cost heat map and the Attachments display for render command encoders, pipeline states, and draws.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Click the Add button (+) in the heat map control bar to open a popover of all available performance heat maps. You can customize which heat maps to display by selecting the checkboxes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "gputools-metal-debugger-essentials-heatmap-add-heatmap.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Available performance heat map options include the following:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "header": "row",
          "rows": [
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Type",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Description",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Shader Execution Cost",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Visualizes the shader execution cost by combining shader execution time and latency hiding.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "ALU Cost",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Visualizes the ALU portion of the shader execution cost.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Non-ALU Cost",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Visualizes the non-ALU portion of the shader execution cost.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Thread Divergence",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Visualizes the amount of GPU thread divergence in the SIMD groups.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Control Flow Divergence",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Visualizes the GPU thread divergence that controls flow differences, like ",
                      "type": "text"
                    },
                    {
                      "code": "IF",
                      "type": "codeVoice"
                    },
                    {
                      "text": " conditions, cause.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Inactive Threads",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Visualizes the GPU thread divergence that inactive threads cause due to the shape of the geometry or the compute dispatch grid dimensions.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Overdraw",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Visualizes the number of SIMD groups that write the pixel.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Instruction Count",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Visualizes the number of instructions per pixel or per SIMD group.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Raytracing Latency",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Visualizes the latency of ray-tracing instructions, which go through the ray-tracing unit.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Draw ID",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Color codes different draws within a render pass.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ]
          ],
          "type": "table"
        },
        {
          "inlineContent": [
            {
              "text": "The color intensity in the heat maps represents the significance of the values. For example, red means ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "more expensive",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " in the Shader Execution Cost heat map, and ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "more divergent",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " in the Thread Divergence heat map.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "View-and-adjust-the-value-range-of-performance-heat-maps",
          "level": 3,
          "text": "View and adjust the value range of performance heat maps",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can filter and tone-map a performance heat map by clicking the Histogram button in the title bar.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "gputools-metal-debugger-essentials-heatmap-histogram.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The histogram popover shows the value range of the heat map. You can drag the handles to adjust the range to filter smaller and larger values. This can be useful in situations when you want a certain value range, such as showing pixels in a render pass that executes more than 100 instructions.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Inspect-the-execution-history-for-a-SIMD-group",
          "level": 3,
          "text": "Inspect the execution history for a SIMD group",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Selecting a pixel in the heat map allows you to inspect the underlying SIMD group.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If more than one SIMD group touches the pixel in a render pass, a list of SIMD groups in order of cost percentile appears so you can select the one to inspect. When you select a SIMD group in the list, its execution history appears below the heat maps.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "gputools-metal-debugger-heatmap-execution-history.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The Execution History timeline shows the progress of the selected SIMD group from left to right, and lists the full shader call stack at each point of execution from top to bottom.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The Metal debugger also helps you better understand shader execution by detecting and visualizing loops in the shader instruction stream. You can select a node in the timeline, and the source editor jumps to the file and the line that contain the executed instructions of that node.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Understand-the-number-of-instructions-per-line",
          "level": 3,
          "text": "Understand the number of instructions per line",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The number of executed instructions appears next to the lines of code, in the gutter of the shader source code. This number is the total assembly code executions over the lifetime of the entire SIMD group for that line of code.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example, if there’s a loop with 10 iterations, the number of instructions for the source lines within the loop is 10 times more than the source lines outside the loop, given the same amount of assembly code.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Switch-between-per-line-statistics-modes",
          "level": 3,
          "text": "Switch between per-line statistics modes",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "In the shader source code control bar, you can choose different modes for the per-line shader profiling statistics in the gutter. Options include the following:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "header": "row",
          "rows": [
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Mode",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Description",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Number of Instructions",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "The total number of assembly instructions that active threads execute.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Thread Divergence",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "1 - the total number of instructions from active threads divided by the number of theoretical maximum instructions that the system can execute.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ]
          ],
          "type": "table"
        },
        {
          "inlineContent": [
            {
              "text": "You may find thread divergence to be 50% if there’s a conditional branch that only half of the threads enter within the selected SIMD group.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For more information about the Metal profiling tools for M3 and A17 Pro, see ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/videos/play/tech-talks/111374/",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Xcode-PageImage-card.png": {
      "alt": "The Xcode logo on a blue gradient background.",
      "identifier": "Xcode-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/cc63eacd8f7f660388b46204d1d9bbcb/Xcode-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/62dba87d5f60ec96eb48882c9dff86d8/Xcode-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Xcode/documentation/Xcode": {
      "abstract": [
        {
          "text": "Build, test, and submit your app with Apple’s integrated development environment.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode",
      "images": [
        {
          "identifier": "Xcode-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "collection",
      "title": "Xcode",
      "type": "topic",
      "url": "/documentation/xcode"
    },
    "doc://com.apple.Xcode/documentation/Xcode/Analyzing-Apple-GPU-performance-using-a-visual-timeline": {
      "abstract": [
        {
          "text": "Locate performance issues using the Performance timeline.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/Analyzing-Apple-GPU-performance-using-a-visual-timeline",
      "kind": "article",
      "role": "article",
      "title": "Analyzing Apple GPU performance using a visual timeline",
      "type": "topic",
      "url": "/documentation/xcode/analyzing-apple-gpu-performance-using-a-visual-timeline"
    },
    "doc://com.apple.Xcode/documentation/Xcode/Analyzing-Apple-GPU-performance-using-counter-statistics": {
      "abstract": [
        {
          "text": "Optimize performance by examining counters for individual passes and commands.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/Analyzing-Apple-GPU-performance-using-counter-statistics",
      "kind": "article",
      "role": "article",
      "title": "Analyzing Apple GPU performance using counter statistics",
      "type": "topic",
      "url": "/documentation/xcode/analyzing-apple-gpu-performance-using-counter-statistics"
    },
    "doc://com.apple.Xcode/documentation/Xcode/Analyzing-Apple-GPU-performance-using-shader-cost-graph-a17-m3": {
      "abstract": [
        {
          "text": "Discover potential shader performance issues by examining pipeline states.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/Analyzing-Apple-GPU-performance-using-shader-cost-graph-a17-m3",
      "kind": "article",
      "role": "article",
      "title": "Analyzing Apple GPU performance using the shader cost graph",
      "type": "topic",
      "url": "/documentation/xcode/analyzing-apple-gpu-performance-using-shader-cost-graph-a17-m3"
    },
    "doc://com.apple.Xcode/documentation/Xcode/Analyzing-memory-usage": {
      "abstract": [
        {
          "text": "Manage your Metal app’s memory usage by inspecting its resources.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/Analyzing-memory-usage",
      "kind": "article",
      "role": "article",
      "title": "Analyzing memory usage",
      "type": "topic",
      "url": "/documentation/xcode/analyzing-memory-usage"
    },
    "doc://com.apple.Xcode/documentation/Xcode/Analyzing-non-Apple-GPU-performance-using-counter-statistics": {
      "abstract": [
        {
          "text": "Optimize performance by examining counters for individual passes and commands.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/Analyzing-non-Apple-GPU-performance-using-counter-statistics",
      "kind": "article",
      "role": "article",
      "title": "Analyzing non-Apple GPU performance using counter statistics",
      "type": "topic",
      "url": "/documentation/xcode/analyzing-non-apple-gpu-performance-using-counter-statistics"
    },
    "doc://com.apple.Xcode/documentation/Xcode/Analyzing-resource-dependencies": {
      "abstract": [
        {
          "text": "Avoid unnecessary work in your Metal app by understanding the relationships between resources.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/Analyzing-resource-dependencies",
      "kind": "article",
      "role": "article",
      "title": "Analyzing resource dependencies",
      "type": "topic",
      "url": "/documentation/xcode/analyzing-resource-dependencies"
    },
    "doc://com.apple.Xcode/documentation/Xcode/Analyzing-your-Metal-workload": {
      "abstract": [
        {
          "text": "Investigate your app’s workload, dependencies, performance, and memory impact using the Metal debugger.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/Analyzing-your-Metal-workload",
      "kind": "article",
      "role": "article",
      "title": "Analyzing your Metal workload",
      "type": "topic",
      "url": "/documentation/xcode/analyzing-your-metal-workload"
    },
    "doc://com.apple.Xcode/documentation/Xcode/Metal-debugger": {
      "abstract": [
        {
          "text": "Debug and profile your Metal workload with a GPU trace.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/Metal-debugger",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Metal debugger",
      "type": "topic",
      "url": "/documentation/xcode/metal-debugger"
    },
    "doc://com.apple.Xcode/documentation/Xcode/debugging": {
      "abstract": [
        {
          "text": "Identify and address issues in your app using the Xcode debugger, Xcode Organizer, Metal debugger, and Instruments.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/debugging",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Debugging",
      "type": "topic",
      "url": "/documentation/xcode/debugging"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "gputools-metal-debugger-essentials-heatmap-add-heatmap.png": {
      "alt": "A screenshot of the popover menu that displays heat map options after clicking the Add button on the heat map control bar. The Shader Execution Cost and Overdraw options are selected.",
      "identifier": "gputools-metal-debugger-essentials-heatmap-add-heatmap.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/f89ea8e08723633dca1e656e61f082cd/gputools-metal-debugger-essentials-heatmap-add-heatmap.png"
        },
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/bf08be664a7c9b886069c501f5f28870/gputools-metal-debugger-essentials-heatmap-add-heatmap@2x.png"
        },
        {
          "traits": [
            "1x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/2ea38fc6db4b833fa7b0428e9661df82/gputools-metal-debugger-essentials-heatmap-add-heatmap~dark.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/cd652204704ba03b3d332626998134c3/gputools-metal-debugger-essentials-heatmap-add-heatmap~dark@2x.png"
        }
      ]
    },
    "gputools-metal-debugger-essentials-heatmap-histogram.png": {
      "alt": "A screenshot showing the Histogram popover that appears after clicking the Histogram button on the heat map’s title bar.",
      "identifier": "gputools-metal-debugger-essentials-heatmap-histogram.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/3a77f5e45af2445c56a661b8d76f9802/gputools-metal-debugger-essentials-heatmap-histogram.png"
        },
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/fbd69ba9509b8adecbc8c5db10cd35fc/gputools-metal-debugger-essentials-heatmap-histogram@2x.png"
        },
        {
          "traits": [
            "1x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/2e69fb1f2b6f539f215a6cf21b38351e/gputools-metal-debugger-essentials-heatmap-histogram~dark.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/7fa93be97d936de8734cc994a2002f77/gputools-metal-debugger-essentials-heatmap-histogram~dark@2x.png"
        }
      ]
    },
    "gputools-metal-debugger-essentials-heatmap.png": {
      "alt": "A screenshot of the Metal debugger’s performance heat maps.",
      "identifier": "gputools-metal-debugger-essentials-heatmap.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/e747614d29e21553aae074d0217e583a/gputools-metal-debugger-essentials-heatmap.png"
        },
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/2e1d1326eafb74c9f6d1ca557da8d202/gputools-metal-debugger-essentials-heatmap@2x.png"
        },
        {
          "traits": [
            "1x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/9e4dd87fee52e18508266a929ec48f36/gputools-metal-debugger-essentials-heatmap~dark.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b76b22a23cea8a8015a5061ad1e0dab5/gputools-metal-debugger-essentials-heatmap~dark@2x.png"
        }
      ]
    },
    "gputools-metal-debugger-heatmap-execution-history.png": {
      "alt": "A screenshot showing the SIMD group execution history below the performance heat maps.",
      "identifier": "gputools-metal-debugger-heatmap-execution-history.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/d2aa56295d6c5a5312754fe260c2988f/gputools-metal-debugger-heatmap-execution-history.png"
        },
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/d0db3fb4a02748b6612403ab73b40a08/gputools-metal-debugger-heatmap-execution-history@2x.png"
        },
        {
          "traits": [
            "1x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/32b4987c4ce3890b23520043e6e29b1b/gputools-metal-debugger-heatmap-execution-history~dark.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/9de49f174773ef836eeb60f115555641/gputools-metal-debugger-heatmap-execution-history~dark@2x.png"
        }
      ]
    },
    "https://developer.apple.com/videos/play/tech-talks/111374/": {
      "identifier": "https://developer.apple.com/videos/play/tech-talks/111374/",
      "title": "Discover new Metal profiling tools for M3 and A17 Pro",
      "titleInlineContent": [
        {
          "text": "Discover new Metal profiling tools for M3 and A17 Pro",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/videos/play/tech-talks/111374/"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Metal-workload-analysis",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Xcode/documentation/Xcode/Analyzing-your-Metal-workload",
        "doc://com.apple.Xcode/documentation/Xcode/Analyzing-resource-dependencies",
        "doc://com.apple.Xcode/documentation/Xcode/Analyzing-memory-usage",
        "doc://com.apple.Xcode/documentation/Xcode/Analyzing-Apple-GPU-performance-using-a-visual-timeline",
        "doc://com.apple.Xcode/documentation/Xcode/Analyzing-Apple-GPU-performance-using-counter-statistics",
        "doc://com.apple.Xcode/documentation/Xcode/Analyzing-Apple-GPU-performance-using-shader-cost-graph-a17-m3",
        "doc://com.apple.Xcode/documentation/Xcode/Analyzing-non-Apple-GPU-performance-using-counter-statistics"
      ],
      "title": "Metal workload analysis"
    }
  ]
}
