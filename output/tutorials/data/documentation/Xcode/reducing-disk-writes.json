{
  "abstract": [
    {
      "text": "Improve your app’s responsiveness by optimizing how it writes data to permanent storage.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Xcode/documentation/Xcode",
        "doc://com.apple.Xcode/documentation/Xcode/performance-and-metrics"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Xcode/documentation/Xcode/reducing-disk-writes"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "role": "article",
    "roleHeading": "Article",
    "title": "Reducing disk writes"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "All iOS devices and some macOS devices use a solid-state drive (SSD) for",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "permanent storage. Accessing your data on SSD, or any long-term storage media, is slow",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "compared to RAM. In addition, the system can only write to the same region of SSD a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "limited number of times before that region wears out.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Use Xcode and Instruments to understand your app’s disk-writing performance, including the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "total amount of data written, the size of writes, excessive storage write exceptions, and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "other possible optimizations.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Optimize-SSD-access",
          "level": 3,
          "text": "Optimize SSD access",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When the system writes to a block on the SSD, new read requests for that block are queued",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "until the write operation completes. Writing to an SSD is a slower operation than reading.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Interleaving read and write requests can slow your app’s performance.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Optimize your app’s performance by reducing the number of write operations to an SSD. For",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "example, create temporary files in a cache in the RAM whenever possible.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Eliminate-excessive-write-operations",
          "level": 3,
          "text": "Eliminate excessive write operations",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The system throws an exception and generates a report when the disk writes from",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "your app exceed a certain threshold in a 24-hour period. View the aggregated",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "exception logs for a version of your app in the Disk Writes pane in Xcode Organizer",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or capture them with",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/MetricKit",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "reducing-disk-writes-1",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Each report in the Report List shows the function call that generated the exception",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and the percentage of total disk writes it accounted for. Clicking on a report shows",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a sample stack trace, as well as additional details in the Inspector, including:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "iOS software version",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Device model",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Total writes",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Number of logs received",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "14-day reporting trend",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "Prioritize fixing exceptions by using the total percentage of disk writes, as well as",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "information on the operating system and the impacted device types. Identify the code that’s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "causing the increase in writes by using the function signature for a specific report in",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the Report List and the corresponding stack trace. After updating the code and verifying",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the fix, mark the report as resolved.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Gather-metrics-about-your-apps-disk-usage",
          "level": 3,
          "text": "Gather metrics about your app’s disk usage",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "View the daily amount of data your app writes to the disk in the Disk Writes metrics",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "pane of the Xcode Organizer window or by using",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/MetricKit",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The pane displays the logical disk writes in megabytes per day for the shipping versions",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of your app. Compare versions to find unexpected increases. Filter to find",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "differences between devices and to view the typical amount of data written (50th",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "percentile) or the largest amount (90th percentile). MetricKit reports the same data.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The screenshot below shows that the largest amount of data written by the latest",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "version of the MealPlanner app is 24.4 MB more per day than an earlier version.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "reducing-disk-writes-2",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Assess whether the amount of data recorded seems reasonable for your app. If the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "numbers are greater than what you expect, you may be writing data too frequently.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For example, if your app’s files total 100 KB and your app writes 500 MB",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of data to disk every day, you might want to investigate how many times you’re writing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the same data to disk each day.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Use the graph of disk-write frequency by versions to identify trends in disk usage.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "An app whose writes increase daily might either be legitimately handling more data or",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "inefficiently handling existing data. Spikes might indicate either the user created or",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "downloaded new content for your app, or your app modified the same content even more",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "than usual. Dips might help you identify the smallest subset of data required by your app.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Identify-the-code-causing-significant-disk-writes",
          "level": 3,
          "text": "Identify the code causing significant disk writes",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Profile your app in Instruments, using the File Activity template. Instruments tracks",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the logical and physical use of storage by your app.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "reducing-disk-writes-3",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The Filesystem Activity instrument records logical filesystem use in the form of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "system calls to read or write data, or to map filesystem data into memory. Instruments",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "associates each event with its size, duration, and a backtrace you can use to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "identify the code that’s using the filesystem. The Disk Usage and Disk I/O",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Latency instruments report the physical use of the storage medium resulting from the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "filesystem events by showing the size and latency of reads and writes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The Filesystem Suggestions instrument and the Disk Writes Reports pane in the Xcode",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Organizer also offer suggestions for addressing common filesystem use issues.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The size of physical reads and writes on the disk doesn’t correlate with",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "the size of logical filesystem activity. The disk controller works with regions called",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "blocks, frequently 4 KB in size. Writes to the disk occur in units of blocks, so saving",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "a file with only a single-byte change writes 4 KB to the disk.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "anchor": "Batch-multiple-write-operations",
          "level": 3,
          "text": "Batch multiple write operations",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Repeatedly opening, saving, and then closing the same file can increase the frequency",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of disk writes. Collecting small changes and performing them as a single write reduces",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the frequency, though it can also result in an increase in your app’s memory use.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Design your app’s persistence model to effectively balance its use of these two resources.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "See ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Xcode/documentation/Xcode/reducing-your-app-s-memory-use",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Minimize-writing-to-serialized-files",
          "level": 3,
          "text": "Minimize writing to serialized files",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Many apps use property list, JSON, XML, or other serialized formats for writing user",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "documents. These formats are good for read-only content, such as bundle metadata, or to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "transfer data over the network. The formats aren’t optimal to store user documents that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "frequently change. Changing a serialized document requires rewriting the entire file,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "which increases the latency of the operation and the wear on the device.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When possible, use Core Data or SQLite for storing frequently edited documents. If that isn’t",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "possible, use different serialized files for data that changes frequently and data",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that’s mostly static. This can reduce the amount of disk writes and improve latency.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The Disk Writes Report pane offers suggestions for optimizing the use of serialized files.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Avoid-rapid-file-creation-and-deletion",
          "level": 3,
          "text": "Avoid rapid file creation and deletion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When you create or delete a file on iOS, the system updates the directory reference by",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "writing 8 KB of metadata. Rapidly creating or deleting lots of files results in many small",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "writes to the filesystem, degrading performance and increasing wear on the device. Renaming",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or moving a file on iOS adds up to 16 KB in filesystem metadata writes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Creating a file atomically adds additional writes because the system must create a temporary",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "file, write the content, unlink an existing destination file, then rename the temporary",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "file to the final destination. Common use cases include the atomic write calls for",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Foundation objects, such as",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/nsstring",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/nsarray",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/nsdictionary",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/nsdata",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Use atomic writes only when needed.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Minimize-explicit-storage-synchronization",
          "level": 3,
          "text": "Minimize explicit storage synchronization",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Writing data on iOS adds the data to a unified buffer cache that the system then writes",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to file storage. Forcing iOS to flush pending filesystem changes from the unified buffer",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "can result in unnecessary writes to the disk, degrading performance and increasing wear",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "on the device. When possible, avoid calling ",
              "type": "text"
            },
            {
              "code": "fsync(_:)",
              "type": "codeVoice"
            },
            {
              "text": ", or using the ",
              "type": "text"
            },
            {
              "code": "fcntl(_:_:)",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "F_FULLFSYNC",
              "type": "codeVoice"
            },
            {
              "text": " operation to force a flush.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Some apps require a ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "write barrier",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " to ensure data persistence before subsequent",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "operations can proceed. Most apps can use the ",
              "type": "text"
            },
            {
              "code": "fcntl(_:_:)",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "F_BARRIERFSYNC",
              "type": "codeVoice"
            },
            {
              "text": " for this.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Only use ",
              "type": "text"
            },
            {
              "code": "F_FULLFSYNC",
              "type": "codeVoice"
            },
            {
              "text": " when your app requires a strong expectation of data persistence.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Note that ",
              "type": "text"
            },
            {
              "code": "F_FULLFSYNC",
              "type": "codeVoice"
            },
            {
              "text": " represents a best-effort guarantee that iOS writes data to the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "disk, but data can still be lost in the case of sudden power loss.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Prevent-regressions-in-disk-write-frequency",
          "level": 3,
          "text": "Prevent regressions in disk-write frequency",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Measure the disk usage of your app by writing an XCTest performance test.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Create a test that passes an instance of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/XCTest/XCTStorageMetric",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/XCTest/XCTestCase/measure(metrics:block:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "function. Call your code inside the block argument of ",
              "type": "text"
            },
            {
              "code": "measure(metrics:block:)",
              "type": "codeVoice"
            },
            {
              "text": ", the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method that writes data to disk.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The test measures the number of blocks written to the filesystem to save your data.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Set a baseline expectation for the amount of disk use. The test fails if the amount of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "data written significantly exceeds the baseline.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func testDiskUse() {",
            "  self.measure(metrics: [XCTStorageMetric()]) {",
            "     // This is a disk-intensive operation.",
            "  }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Use-Core-Data-or-SQLite-databases-for-frequently-changing-documents",
          "level": 3,
          "text": "Use Core Data or SQLite databases for frequently changing documents",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "SQLite is highly optimized for efficient access to storage. It uses in-memory caches",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and batched disk-writes to ensure high performance and minimal wear on storage. The",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "data structures are designed to allow efficient updates when inserting new content or",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "updating existing content.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Core Data takes advantage of SQLite’s efficient disk usage for storing your data. Core",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Data also uses the SQLite best practices described below.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Avoid-unnecessarily-closing-SQLite-connections",
          "level": 4,
          "text": "Avoid unnecessarily closing SQLite connections",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Opening and closing SQLite connections are expensive operations that require SQLite",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to write out all pending changes, along with additional metadata including",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "consistency checks and journaling logs. Take better advantage of SQLite’s efficiency",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "by closing a connection only when there’s a clear need.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Use-transactions",
          "level": 4,
          "text": "Use transactions",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use transactions to perform a consolidated write operation for related changes, such as",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "editing multiple fields in a single document. Each transaction can contain multiple",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "INSERT",
              "type": "codeVoice"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "code": "UPDATE",
              "type": "codeVoice"
            },
            {
              "text": ", and ",
              "type": "text"
            },
            {
              "code": "DELETE",
              "type": "codeVoice"
            },
            {
              "text": " statements.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Transactions are also atomic. Either all of the changes are saved to the database, or",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the database is restored to the state prior to the transaction. This prevents the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "database from being left in an inconsistent state.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Use-appropriate-indices",
          "level": 4,
          "text": "Use appropriate indices",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Decrease search time and avoid unnecessary writes to the disk by using appropriate",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "indices on your database tables. For example, an email app that uses SQLite may show all",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "inbox messages in chronological order using the following SQL statement:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "SELECT * FROM messages WHERE folder LIKE ‘Inbox’ ORDER BY sent_time"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Without an index on the ",
              "type": "text"
            },
            {
              "code": "sent_time",
              "type": "codeVoice"
            },
            {
              "text": " column, SQLite constructs a temporary B-tree in",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "memory, reads the whole table, and performs the sort using the B-tree. If the data in the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "B-tree is too large for the in-memory cache, SQLite writes it to the disk, further",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "slowing the query. With an index on ",
              "type": "text"
            },
            {
              "code": "sent_time",
              "type": "codeVoice"
            },
            {
              "text": ", SQLite reads the messages in order",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and returns matching rows.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Use a partial index for columns representing information that doesn’t require searching",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "each of the rows, such as rows that can contain ",
              "type": "text"
            },
            {
              "code": "NULL",
              "type": "codeVoice"
            },
            {
              "text": ". A partial index — one with",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a ",
              "type": "text"
            },
            {
              "code": "WHERE",
              "type": "codeVoice"
            },
            {
              "text": " clause — provides a performance advantage while taking up less",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "disk space than a full index.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Use ",
              "type": "text"
            },
            {
              "code": "EXPLAIN QUERY PLAN",
              "type": "codeVoice"
            },
            {
              "text": " to determine if a query can benefit from optimization.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The following code shows the explanation of a query on an unindexed ",
              "type": "text"
            },
            {
              "code": "sent_time",
              "type": "codeVoice"
            },
            {
              "text": " column.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "> EXPLAIN QUERY PLAN SELECT * FROM messages WHERE folder",
            "  LIKE ‘Inbox’ ORDER BY sent_time",
            "",
            "QUERY PLAN",
            "|--SEARCH TABLE <>",
            "|--SEARCH TABLE <>",
            "--*USE TEMP B-TREE FOR ORDER BY*"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The presence of ",
              "type": "text"
            },
            {
              "code": "USE TEMP B-TREE FOR ORDER BY",
              "type": "codeVoice"
            },
            {
              "text": " in the output indicates that the query",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "requires a temporary B-tree to sort the results.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The Disk Writes Report pane suggestions identify queries that may benefit from an index.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Use-write-ahead-logging-journaling-mode",
          "level": 4,
          "text": "Use write-ahead logging journaling mode",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Enable more efficient reads and writes in SQLite by using write-ahead logging (WAL)",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "journaling mode. This mode enables coalescing multiple writes to the same page, reducing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "SQLite’s use of write barriers, and supporting multiple database read threads in parallel",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "with a writer.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Use ",
              "type": "text"
            },
            {
              "code": "PRAGMA journal_mode",
              "type": "codeVoice"
            },
            {
              "text": " to determine your SQLite database’s journaling mode.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Use ",
              "type": "text"
            },
            {
              "code": "PRAGMA journal_mode=WAL",
              "type": "codeVoice"
            },
            {
              "text": " to change to write-ahead logging mode.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The Disk Writes Report pane suggests using write-ahead logging when a stack trace",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "indicates a different journaling mode.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Avoid-using-the-explicit-VACUUM-command",
          "level": 4,
          "text": "Avoid using the explicit VACUUM command",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Using the SQLite ",
              "type": "text"
            },
            {
              "code": "VACUUM",
              "type": "codeVoice"
            },
            {
              "text": " command saves space by rebuilding the database. The operation",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "copies the existing database to a temporary file, then moves information back into the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "database, which may result in excessive disk writes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When possible, rebuild the database incrementally by setting the ",
              "type": "text"
            },
            {
              "code": "auto_vacuum()",
              "type": "codeVoice"
            },
            {
              "text": " pragma",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to ",
              "type": "text"
            },
            {
              "code": "2",
              "type": "codeVoice"
            },
            {
              "text": ". Then use the ",
              "type": "text"
            },
            {
              "code": "incremental_vacuum()",
              "type": "codeVoice"
            },
            {
              "text": " pragma to remove any existing empty pages",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "from the free pages list.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The Disk Writes Report pane suggests using incremental vacuuming when a stack trace",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "indicates the database is in full auto-vacuum mode.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Xcode-PageImage-card.png": {
      "alt": "The Xcode logo on a blue gradient background.",
      "identifier": "Xcode-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/cc63eacd8f7f660388b46204d1d9bbcb/Xcode-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/62dba87d5f60ec96eb48882c9dff86d8/Xcode-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Xcode/documentation/Xcode": {
      "abstract": [
        {
          "text": "Build, test, and submit your app with Apple’s integrated development environment.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode",
      "images": [
        {
          "identifier": "Xcode-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "collection",
      "title": "Xcode",
      "type": "topic",
      "url": "/documentation/xcode"
    },
    "doc://com.apple.Xcode/documentation/Xcode/analyzing-responsiveness-issues-in-your-shipping-app": {
      "abstract": [
        {
          "text": "Identify responsiveness issues your users encounter, and use the hang and hitch data in Xcode Organizer to determine which issues are most important to fix.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/analyzing-responsiveness-issues-in-your-shipping-app",
      "kind": "article",
      "role": "article",
      "title": "Analyzing responsiveness issues in your shipping app",
      "type": "topic",
      "url": "/documentation/xcode/analyzing-responsiveness-issues-in-your-shipping-app"
    },
    "doc://com.apple.Xcode/documentation/Xcode/diagnosing-performance-issues-early": {
      "abstract": [
        {
          "text": "Diagnose potential performance issues in your app during testing with the Thread Performance Checker tool in Xcode.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/diagnosing-performance-issues-early",
      "kind": "article",
      "role": "article",
      "title": "Diagnosing performance issues early",
      "type": "topic",
      "url": "/documentation/xcode/diagnosing-performance-issues-early"
    },
    "doc://com.apple.Xcode/documentation/Xcode/improving-app-responsiveness": {
      "abstract": [
        {
          "text": "Create a user experience that feels responsive by removing hangs and hitches from your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/improving-app-responsiveness",
      "kind": "article",
      "role": "article",
      "title": "Improving app responsiveness",
      "type": "topic",
      "url": "/documentation/xcode/improving-app-responsiveness"
    },
    "doc://com.apple.Xcode/documentation/Xcode/performance-and-metrics": {
      "abstract": [
        {
          "text": "Measure, investigate, and address the use of system resources and issues impacting performance using Instruments and Xcode Organizer.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/performance-and-metrics",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Performance and metrics",
      "type": "topic",
      "url": "/documentation/xcode/performance-and-metrics"
    },
    "doc://com.apple.Xcode/documentation/Xcode/reduce-terminations-in-your-app": {
      "abstract": [
        {
          "text": "Minimize how frequently the system stops your app by addressing common termination reasons.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/reduce-terminations-in-your-app",
      "kind": "article",
      "role": "article",
      "title": "Reducing terminations in your app",
      "type": "topic",
      "url": "/documentation/xcode/reduce-terminations-in-your-app"
    },
    "doc://com.apple.Xcode/documentation/Xcode/reducing-your-app-s-launch-time": {
      "abstract": [
        {
          "text": "Create a more responsive experience with your app by minimizing time spent in startup.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/reducing-your-app-s-launch-time",
      "kind": "article",
      "role": "article",
      "title": "Reducing your app’s launch time",
      "type": "topic",
      "url": "/documentation/xcode/reducing-your-app-s-launch-time"
    },
    "doc://com.apple.Xcode/documentation/Xcode/reducing-your-app-s-memory-use": {
      "abstract": [
        {
          "text": "Improve your app’s performance by analyzing memory-use metrics and making changes",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "to maximize memory efficiency.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/reducing-your-app-s-memory-use",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Reducing your app’s memory use",
      "type": "topic",
      "url": "/documentation/xcode/reducing-your-app-s-memory-use"
    },
    "doc://com.apple.Xcode/documentation/Xcode/understanding-hangs-in-your-app": {
      "abstract": [
        {
          "text": "Determine the cause for delays in user interactions by examining the main thread and the main run loop.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/understanding-hangs-in-your-app",
      "kind": "article",
      "role": "article",
      "title": "Understanding hangs in your app",
      "type": "topic",
      "url": "/documentation/xcode/understanding-hangs-in-your-app"
    },
    "doc://com.apple.Xcode/documentation/Xcode/understanding-hitches-in-your-app": {
      "abstract": [
        {
          "text": "Determine the cause of interruptions in motion by examining the render loop.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/understanding-hitches-in-your-app",
      "kind": "article",
      "role": "article",
      "title": "Understanding hitches in your app",
      "type": "topic",
      "url": "/documentation/xcode/understanding-hitches-in-your-app"
    },
    "doc://com.apple.Xcode/documentation/Xcode/understanding-user-interface-responsiveness": {
      "abstract": [
        {
          "text": "Make your app more responsive by examining the event-handling and rendering loop.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Xcode/documentation/Xcode/understanding-user-interface-responsiveness",
      "kind": "article",
      "role": "article",
      "title": "Understanding user interface responsiveness",
      "type": "topic",
      "url": "/documentation/xcode/understanding-user-interface-responsiveness"
    },
    "doc://com.apple.documentation/documentation/MetricKit": {
      "abstract": [
        {
          "text": "Aggregate and analyze per-device reports on exception and crash diagnostics and on power and performance metrics.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/MetricKit",
      "kind": "symbol",
      "role": "collection",
      "title": "MetricKit",
      "type": "topic",
      "url": "/documentation/MetricKit"
    },
    "doc://com.apple.documentation/documentation/XCTest/XCTStorageMetric": {
      "abstract": [
        {
          "text": "A metric to record the amount of data that a performance test logically writes to storage.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "XCTStorageMetric"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/XCTest/XCTStorageMetric",
      "kind": "symbol",
      "role": "symbol",
      "title": "XCTStorageMetric",
      "type": "topic",
      "url": "/documentation/XCTest/XCTStorageMetric"
    },
    "doc://com.apple.documentation/documentation/XCTest/XCTestCase/measure(metrics:block:)": {
      "abstract": [
        {
          "text": "Records the selected metrics for a block of code.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "measure"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "metrics"
        },
        {
          "kind": "text",
          "text": ": [any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)XCTMetric",
          "text": "XCTMetric"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "block"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/XCTest/XCTestCase/measure(metrics:block:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "measure(metrics:block:)",
      "type": "topic",
      "url": "/documentation/XCTest/XCTestCase/measure(metrics:block:)"
    },
    "doc://com.apple.documentation/documentation/foundation/nsarray": {
      "abstract": [
        {
          "text": "An object representing a static ordered collection, for use instead of an  constant in cases that require reference semantics.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSArray"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsarray",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSArray",
      "type": "topic",
      "url": "/documentation/foundation/nsarray"
    },
    "doc://com.apple.documentation/documentation/foundation/nsdata": {
      "abstract": [
        {
          "text": "A static byte buffer that bridges to ; use  when you need reference semantics or other Foundation-specific behavior.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSData"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsdata",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSData",
      "type": "topic",
      "url": "/documentation/foundation/nsdata"
    },
    "doc://com.apple.documentation/documentation/foundation/nsdictionary": {
      "abstract": [
        {
          "text": "An object representing a static collection of key-value pairs, for use instead of a  constant in cases that require reference semantics.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSDictionary"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsdictionary",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSDictionary",
      "type": "topic",
      "url": "/documentation/foundation/nsdictionary"
    },
    "doc://com.apple.documentation/documentation/foundation/nsstring": {
      "abstract": [
        {
          "text": "A static, plain-text Unicode string object which you use when you need reference semantics or other Foundation-specific behavior. ",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSString"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsstring",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSString",
      "type": "topic",
      "url": "/documentation/foundation/nsstring"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "reducing-disk-writes-1": {
      "alt": "Labeled screenshot of the Disk Write reports pane in the Xcode Organizer. From left to",
      "identifier": "reducing-disk-writes-1",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/eea210b4300d4494095db4fbcac971ce/reducing-disk-writes-1@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/01c8a3ba9b8e11d2c5a7f93a60bea6cc/reducing-disk-writes-1~dark@2x.png"
        }
      ]
    },
    "reducing-disk-writes-2": {
      "alt": "Screenshot of the Disk Writes metric pane in the Xcode Organizer. From left to right is",
      "identifier": "reducing-disk-writes-2",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/64118eb84a67b2c2f5daa1b5c4b5dcfa/reducing-disk-writes-2@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/6089e8d58c2c98c1b224de3347a05c94/reducing-disk-writes-2~dark@2x.png"
        }
      ]
    },
    "reducing-disk-writes-3": {
      "alt": "Illustration showing the logical and physical disk usage timelines in",
      "identifier": "reducing-disk-writes-3",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b819a954ec07ed55ea5d4440b31f1ed2/reducing-disk-writes-3.png"
        }
      ]
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Responsiveness",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Xcode/documentation/Xcode/analyzing-responsiveness-issues-in-your-shipping-app",
        "doc://com.apple.Xcode/documentation/Xcode/improving-app-responsiveness",
        "doc://com.apple.Xcode/documentation/Xcode/understanding-user-interface-responsiveness",
        "doc://com.apple.Xcode/documentation/Xcode/understanding-hangs-in-your-app",
        "doc://com.apple.Xcode/documentation/Xcode/understanding-hitches-in-your-app",
        "doc://com.apple.Xcode/documentation/Xcode/diagnosing-performance-issues-early",
        "doc://com.apple.Xcode/documentation/Xcode/reducing-your-app-s-launch-time",
        "doc://com.apple.Xcode/documentation/Xcode/reduce-terminations-in-your-app"
      ],
      "title": "Responsiveness"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1XCTest~1XCTStorageMetric/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "XCTStorageMetric"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1XCTest~1XCTestCase~1measure(metrics:block:)/title",
          "value": "measureWithMetrics:block:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1XCTest~1XCTestCase~1measure(metrics:block:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "measureWithMetrics:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:Q$objc(cs)NSArray",
              "text": "NSArray<id<XCTMetric>>"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "metrics"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "block:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": " (^)()) "
            },
            {
              "kind": "internalParam",
              "text": "block"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1foundation~1nsdata/abstract",
          "value": [
            {
              "text": "A static byte buffer in memory.",
              "type": "text"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1foundation~1nsstring/abstract",
          "value": [
            {
              "text": "A static, plain-text Unicode string object.",
              "type": "text"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1foundation~1nsdictionary/abstract",
          "value": [
            {
              "text": "A static collection of objects associated with unique keys.",
              "type": "text"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1foundation~1nsarray/abstract",
          "value": [
            {
              "text": "A static ordered collection of objects.",
              "type": "text"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
