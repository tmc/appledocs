{
  "abstract": [
    {
      "text": "Open and close the scenes that make up your app’s interface.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.visionOS/documentation/visionOS"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.visionOS/documentation/visionOS/presenting-windows-and-spaces"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "role": "article",
    "roleHeading": "Article",
    "title": "Presenting windows and spaces"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "An app’s scenes, which contain views that people interact with, can take",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "different forms. For example, a scene can fill a window, a tab in a window,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or an entire screen. Some scenes can even place views throughout a person’s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "surroundings. How a scene appears depends on its type, the platform, and the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "context.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When someone launches your app, SwiftUI looks for the first",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/WindowGroup",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Window",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", or",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/DocumentGroup",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in your app declaration and opens a scene of that type, typically filling",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a new window or the entire screen, depending on the platform.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For example, the following app running in macOS presents a window",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that contains a ",
              "type": "text"
            },
            {
              "code": "MailViewer",
              "type": "codeVoice"
            },
            {
              "text": " view:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@main",
            "struct MailReader: App {",
            "    var body: some Scene {",
            "        WindowGroup(id: \"mail-viewer\") {",
            "            MailViewer()",
            "        }",
            "",
            "        Window(\"Connection Status\", id: \"connection\") {",
            "            ConnectionStatus()",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "In visionOS, you can alternatively configure your app to open the first",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/ImmersiveSpace",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " that the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "app declares. In any case, specific platforms and configurations enable you",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to open more than one scene at a time. Under those conditions, you can use",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "actions that appear in the environment to programmatically open and close",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the scenes in your app.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Check-for-multiple-scene-support",
          "level": 3,
          "text": "Check for multiple-scene support",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If you share code among different platforms and need to find out at runtime",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "whether the current system supports displaying multiple scenes, read the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/supportsMultipleWindows",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " environment value.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The following code creates a button that’s hidden unless the app supports",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "multiple windows:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct NewWindowButton: View {",
            "    @Environment(\\.supportsMultipleWindows) private var supportsMultipleWindows",
            "    @Environment(\\.openWindow) private var openWindow",
            "",
            "    var body: some View {",
            "        Button(\"Open New Window\") {",
            "            openWindow(id: \"mail-viewer\")",
            "        }",
            "        .opacity(supportsMultipleWindows ? 1 : 0)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The value that you read depends on both the platform and how you configure",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "your app:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "In macOS, this property returns ",
                      "type": "text"
                    },
                    {
                      "code": "true",
                      "type": "codeVoice"
                    },
                    {
                      "text": " for any app that uses the SwiftUI app",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "lifecycle.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "In iPadOS and visionOS, this property returns ",
                      "type": "text"
                    },
                    {
                      "code": "true",
                      "type": "codeVoice"
                    },
                    {
                      "text": " for any app that uses the",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "SwiftUI app lifecycle and has the Information Property List key",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest/UIApplicationSupportsMultipleScenes",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "set to ",
                      "type": "text"
                    },
                    {
                      "code": "true",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", and ",
                      "type": "text"
                    },
                    {
                      "code": "false",
                      "type": "codeVoice"
                    },
                    {
                      "text": " otherwise.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "For all other platforms and configurations, the value returns ",
                      "type": "text"
                    },
                    {
                      "code": "false",
                      "type": "codeVoice"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "If your app only ever runs in one of these situations, you can assume the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "associated behavior and don’t need to check the value.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Enable-multiple-simultaneous-scenes",
          "level": 3,
          "text": "Enable multiple simultaneous scenes",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can always present multiple scenes in macOS.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "To enable an iPadOS or visionOS app to simultaneously display multiple scenes",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "— including ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/ImmersiveSpace",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scenes in visionOS — add the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest/UIApplicationSupportsMultipleScenes",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "key with a value of ",
              "type": "text"
            },
            {
              "code": "true",
              "type": "codeVoice"
            },
            {
              "text": " in the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "dictionary of your app’s Information Property List.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Use the Info tab in Xcode for your app’s target to add this key:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "presenting-windows-and-stages-1",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Apps on other platforms can display only one scene during their lifetime.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Open-windows-programmatically",
          "level": 3,
          "text": "Open windows programmatically",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Some platforms provide built-in controls that enable people to open instances of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the window-style scenes that your app defines. For example, in macOS people can",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "choose File > New Window from the menu bar to open a new window. SwiftUI also",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "provides ways for you to open new windows programmatically.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To do this, get the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/openWindow",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "action from the environment and call it with an identifier, a value, or both",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to indicate what kind of window to open and optionally what data to open it",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "with. The following view opens a new instance of the previously defined mail",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "viewer window when someone clicks or taps the button:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct NewViewerButton: View {",
            "    @Environment(\\.openWindow) private var openWindow",
            "",
            "    var body: some View {",
            "        Button(\"New Mail Viewer\") {",
            "            openWindow(id: \"mail-viewer\")",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When the action runs on a system that supports multiple scenes, SwiftUI looks",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "for a window in the app declaration that has a matching identifier and creates",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a new scene of that type.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "If",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/supportsMultipleWindows",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "is ",
                  "type": "text"
                },
                {
                  "code": "false",
                  "type": "codeVoice"
                },
                {
                  "text": " and you try to open a new window,",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "SwiftUI ignores the action and logs a runtime error.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "In addition to opening more instances of an app’s main window, as in the above",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "example, you can also open other window types that your app’s body declares.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For example, you can open an instance of the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Window",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " that displays",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "connectivity information:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "Button(\"Connection Status\") {",
            "    openWindow(id: \"connection\")",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Open-a-space-programmatically",
          "level": 3,
          "text": "Open a space programmatically",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "In visionOS, you open an immersive space — a scene that you can use to present",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "unbounded content in a person’s surroundings — in much the same way that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you open a window, except that you use the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/openImmersiveSpace",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "action. The action runs asynchronously, so you use the ",
              "type": "text"
            },
            {
              "code": "await",
              "type": "codeVoice"
            },
            {
              "text": " keyword when",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you call it, and typically do so from inside a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/Task",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct NewSpaceButton: View {",
            "    @Environment(\\.openImmersiveSpace) private var openImmersiveSpace",
            "",
            "    var body: some View {",
            "        Button(\"View Orbits\") {",
            "            Task {",
            "                await openImmersiveSpace(id: \"orbits\")",
            "            }",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Because your app operates in a Full Space when you open an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/ImmersiveSpace",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scene, you can only open one scene of this type at a time.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If you try to open a space when one is already open, the system",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "logs a runtime error.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Your app can display any number of windows together with an immersive space.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "However, when you open a space from your app, the system hides all windows",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that belong to other apps. After you dismiss your space, the other apps’",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "windows reappear. Similarly, the system hides your app’s windows if another",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "app opens an immersive space.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Designate-a-space-as-your-apps-main-interface",
          "level": 3,
          "text": "Designate a space as your app’s main interface",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When visionOS launches an app, it opens the first window group, window,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or document scene that the app’s body declares, just like on other platforms.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "This is true even if you first declare a space. However, if you want to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "open your app into an immersive space directly, specify a space as the default",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scene for your app by adding the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationPreferredDefaultSceneSessionRole",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "key to your app’s information property list and setting its value to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "UISceneSessionRoleImmersiveSpaceApplication",
              "type": "codeVoice"
            },
            {
              "text": ". In that case, visionOS opens",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the first space that it finds in your app declaration.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Be careful not to overwhelm people when starting your app with",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "an immersive space. For design guidance, see",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/design/Human-Interface-Guidelines/immersive-experiences",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "anchor": "Close-windows-programmatically",
          "level": 3,
          "text": "Close windows programmatically",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "People can close windows using system controls, like the close button built",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "into the frame around a macOS window. You can also close windows",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "programmatically. Get the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/dismissWindow",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "action from the environment, and call it using the identifier of the window",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that you want to dismiss:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "private struct ContentView: View {",
            "    @Environment(\\.dismissWindow) private var dismissWindow",
            "",
            "    var body: some View {",
            "        Button(\"Done\") {",
            "            dismissWindow(id: \"connection\")",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "In iPadOS and visionOS, the system ignores the dismiss action",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "if you use it to close a window that’s your app’s only open scene.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Close-spaces-programmatically",
          "level": 3,
          "text": "Close spaces programmatically",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To close a space, call the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/dismissImmersiveSpace",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "action. Like the corresponding open space action, the close action operates",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "asynchronously and requires the ",
              "type": "text"
            },
            {
              "code": "await",
              "type": "codeVoice"
            },
            {
              "text": " keyword:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "private struct ContentView: View {",
            "    @Environment(\\.dismissImmersiveSpace) private var dismissImmersiveSpace",
            "",
            "    var body: some View {",
            "        Button(\"Done\") {",
            "            Task {",
            "                await dismissImmersiveSpace()",
            "            }",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "You don’t need to specify an identifier for this action, because there can",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "only ever be one space open at a time. Like with windows,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you can’t dismiss a space that’s your app’s only open scene.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Transition-between-a-window-and-a-space",
          "level": 3,
          "text": "Transition between a window and a space",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Because you can’t programmatically close the last open window",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or immersive space in a visionOS app, be sure to open a new",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scene before closing the old one. Pay particular attention to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the sequencing when moving between a window and an immersive",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "space, because the space’s open and dismiss actions run",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "asynchronously.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example, consider a chess game that begins by displaying",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a start button in a window. When someone taps the button,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the app dismisses the window and opens an immersive space that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "presents a chess board. The following button demonstrates proper",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "sequencing by opening the space and then closing the window:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "Button(\"Start\") {",
            "    Task {",
            "        await openImmersiveSpace(id: \"chessboard\")",
            "        dismissWindow(id: \"start\") // Runs after the space opens.",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "In the above code, it’s important to include the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/dismissWindow",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "action inside the task, so that it waits until the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/openImmersiveSpace",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "action completes. If you put the action outside the task —",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "either before or after — it might execute before the asynchronous",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "open action completes, when the window is still the only open scene.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "In that case, the system opens the space but doesn’t",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "close the window.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Hello-World-intro.png": {
      "alt": "",
      "identifier": "Hello-World-intro.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/770e1d0451ba3b86de3b05eb0ce728b7/Hello-World-intro@2x.png"
        }
      ]
    },
    "doc://com.apple.documentation/design/Human-Interface-Guidelines/immersive-experiences": {
      "abstract": [
        {
          "text": "In visionOS, you can design apps and games that extend beyond windows and volumes, immersing people in your content.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/design/Human-Interface-Guidelines/immersive-experiences",
      "images": [
        {
          "identifier": "immersive-experiences.svg",
          "type": "icon"
        },
        {
          "identifier": "foundations-immersive-experiences-thumbnail.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "article",
      "title": "Immersive experiences",
      "type": "topic",
      "url": "/design/Human-Interface-Guidelines/immersive-experiences"
    },
    "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationPreferredDefaultSceneSessionRole": {
      "abstract": [
        {
          "text": "The preferred initial scene session role for your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationPreferredDefaultSceneSessionRole",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIApplicationPreferredDefaultSceneSessionRole",
      "type": "topic",
      "url": "/documentation/BundleResources/Information-Property-List/UIApplicationPreferredDefaultSceneSessionRole"
    },
    "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest": {
      "abstract": [
        {
          "text": "The information about the app’s scene-based life-cycle support.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIApplicationSceneManifest",
      "type": "topic",
      "url": "/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest"
    },
    "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest/UIApplicationSupportsMultipleScenes": {
      "abstract": [
        {
          "text": "A Boolean value indicating whether the app supports two or more scenes simultaneously.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest/UIApplicationSupportsMultipleScenes",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIApplicationSupportsMultipleScenes",
      "type": "topic",
      "url": "/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest/UIApplicationSupportsMultipleScenes"
    },
    "doc://com.apple.documentation/documentation/Swift/Task": {
      "abstract": [
        {
          "text": "A unit of asynchronous work.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Task"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Success"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Failure"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Success"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s8SendableP",
          "text": "Sendable"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Failure"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/Task",
      "kind": "symbol",
      "role": "symbol",
      "title": "Task",
      "type": "topic",
      "url": "/documentation/Swift/Task"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/DocumentGroup": {
      "abstract": [
        {
          "text": "A scene that enables support for opening, creating, and saving documents.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DocumentGroup"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Document"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/DocumentGroup",
      "kind": "symbol",
      "role": "symbol",
      "title": "DocumentGroup",
      "type": "topic",
      "url": "/documentation/SwiftUI/DocumentGroup"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/dismissImmersiveSpace": {
      "abstract": [
        {
          "text": "An immersive space dismissal action stored in a view’s environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dismissImmersiveSpace"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI27DismissImmersiveSpaceActionV",
          "text": "DismissImmersiveSpaceAction"
        },
        {
          "kind": "text",
          "text": " { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/dismissImmersiveSpace",
      "kind": "symbol",
      "role": "symbol",
      "title": "dismissImmersiveSpace",
      "type": "topic",
      "url": "/documentation/SwiftUI/EnvironmentValues/dismissImmersiveSpace"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/dismissWindow": {
      "abstract": [
        {
          "text": "A window dismissal action stored in a view’s environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dismissWindow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI19DismissWindowActionV",
          "text": "DismissWindowAction"
        },
        {
          "kind": "text",
          "text": " { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/dismissWindow",
      "kind": "symbol",
      "role": "symbol",
      "title": "dismissWindow",
      "type": "topic",
      "url": "/documentation/SwiftUI/EnvironmentValues/dismissWindow"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/openImmersiveSpace": {
      "abstract": [
        {
          "text": "An action that presents an immersive space.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "openImmersiveSpace"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI24OpenImmersiveSpaceActionV",
          "text": "OpenImmersiveSpaceAction"
        },
        {
          "kind": "text",
          "text": " { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/openImmersiveSpace",
      "kind": "symbol",
      "role": "symbol",
      "title": "openImmersiveSpace",
      "type": "topic",
      "url": "/documentation/SwiftUI/EnvironmentValues/openImmersiveSpace"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/openWindow": {
      "abstract": [
        {
          "text": "A window presentation action stored in a view’s environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "openWindow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI16OpenWindowActionV",
          "text": "OpenWindowAction"
        },
        {
          "kind": "text",
          "text": " { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/openWindow",
      "kind": "symbol",
      "role": "symbol",
      "title": "openWindow",
      "type": "topic",
      "url": "/documentation/SwiftUI/EnvironmentValues/openWindow"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/supportsMultipleWindows": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether the current platform supports opening multiple windows.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "supportsMultipleWindows"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": " { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/supportsMultipleWindows",
      "kind": "symbol",
      "role": "symbol",
      "title": "supportsMultipleWindows",
      "type": "topic",
      "url": "/documentation/SwiftUI/EnvironmentValues/supportsMultipleWindows"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/ImmersiveSpace": {
      "abstract": [
        {
          "text": "A scene that presents its content in an unbounded space.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ImmersiveSpace"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI21ImmersiveSpaceContentP",
          "text": "ImmersiveSpaceContent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Se",
          "text": "Decodable"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SE",
          "text": "Encodable"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SH",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/ImmersiveSpace",
      "kind": "symbol",
      "role": "symbol",
      "title": "ImmersiveSpace",
      "type": "topic",
      "url": "/documentation/SwiftUI/ImmersiveSpace"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/Window": {
      "abstract": [
        {
          "text": "A scene that presents its content in a single, unique window.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Window"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Window",
      "kind": "symbol",
      "role": "symbol",
      "title": "Window",
      "type": "topic",
      "url": "/documentation/SwiftUI/Window"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/WindowGroup": {
      "abstract": [
        {
          "text": "A scene that presents a group of identically structured windows.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "WindowGroup"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/WindowGroup",
      "kind": "symbol",
      "role": "symbol",
      "title": "WindowGroup",
      "type": "topic",
      "url": "/documentation/SwiftUI/WindowGroup"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.visionOS/documentation/visionOS": {
      "abstract": [
        {
          "text": "Create a new universe of apps and games for Apple Vision Pro.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.visionOS/documentation/visionOS",
      "images": [
        {
          "identifier": "headset-orange.svg",
          "type": "icon"
        },
        {
          "identifier": "visionOS-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "collection",
      "title": "visionOS",
      "type": "topic",
      "url": "/documentation/visionos"
    },
    "doc://com.apple.visionOS/documentation/visionOS/World": {
      "abstract": [
        {
          "text": "Use windows, volumes, and immersive spaces to teach people about the Earth.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.visionOS/documentation/visionOS/World",
      "images": [
        {
          "identifier": "Hello-World-intro.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "sampleCode",
      "title": "Hello World",
      "type": "topic",
      "url": "/documentation/visionos/world"
    },
    "doc://com.apple.visionOS/documentation/visionOS/positioning-and-sizing-windows": {
      "abstract": [
        {
          "text": "Influence the initial geometry of windows that your app presents.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.visionOS/documentation/visionOS/positioning-and-sizing-windows",
      "kind": "article",
      "role": "article",
      "title": "Positioning and sizing windows",
      "type": "topic",
      "url": "/documentation/visionos/positioning-and-sizing-windows"
    },
    "foundations-immersive-experiences-thumbnail.png": {
      "alt": null,
      "identifier": "foundations-immersive-experiences-thumbnail.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1d64b4686079c21900a504192dc8f899/foundations-immersive-experiences-thumbnail@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/e468c8a703935126acb931fe8fda3d99/foundations-immersive-experiences-thumbnail~dark@2x.png"
        }
      ]
    },
    "headset-orange.svg": {
      "alt": "An icon representing visionOS.",
      "identifier": "headset-orange.svg",
      "type": "image",
      "variants": [
        {
          "svgID": "a",
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/77dc6a0821bfb2da8db4a3b2033e6f6b/headset-orange.svg"
        }
      ]
    },
    "immersive-experiences.svg": {
      "alt": null,
      "identifier": "immersive-experiences.svg",
      "type": "image",
      "variants": [
        {
          "svgID": "Design-Spec",
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/d5b7d90ff2c45d295ab24816bf9b7488/immersive-experiences.svg"
        }
      ]
    },
    "presenting-windows-and-stages-1": {
      "alt": "A screenshot of the Xcode info tab showing the values that a typical app’s information property list contains. The Enable Multiple Windows key, which has a type of Boolean and a value of yes, and is a subkey of the Application Scene Manifest dictionary, is highlighted.",
      "identifier": "presenting-windows-and-stages-1",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/49e271de9067f7efbf2c339c127bee5c/presenting-windows-and-stages-1@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/2f3b9f249fac0c2b9c0c720f4e49e253/presenting-windows-and-stages-1~dark@2x.png"
        }
      ]
    },
    "visionOS-PageImage-card.png": {
      "alt": "A stylized illustration of an Apple Vision Pro with the word 'hello' written across the front in cursive.",
      "identifier": "visionOS-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/90294957b44e5508a55fe39373eea478/visionOS-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/90fe463571fd45badfabacbb07f30591/visionOS-PageImage-card~dark@2x.png"
        }
      ]
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "SwiftUI",
      "generated": true,
      "identifiers": [
        "doc://com.apple.visionOS/documentation/visionOS/World",
        "doc://com.apple.visionOS/documentation/visionOS/positioning-and-sizing-windows"
      ],
      "title": "SwiftUI"
    }
  ]
}
