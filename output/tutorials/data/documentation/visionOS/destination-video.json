{
  "abstract": [
    {
      "text": "Leverage SwiftUI to build an immersive media experience in a multiplatform app.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.visionOS/documentation/visionOS"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.visionOS/documentation/visionOS/destination-video"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "images": [
      {
        "identifier": "Destination-Video-intro.png",
        "type": "card"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "introducedAt": "18.0",
        "name": "iOS"
      },
      {
        "beta": false,
        "introducedAt": "18.0",
        "name": "iPadOS"
      },
      {
        "beta": false,
        "introducedAt": "15.0",
        "name": "macOS"
      },
      {
        "beta": false,
        "introducedAt": "18.0",
        "name": "tvOS"
      },
      {
        "beta": false,
        "introducedAt": "2.0",
        "name": "visionOS"
      },
      {
        "beta": false,
        "introducedAt": "16.0",
        "name": "Xcode"
      }
    ],
    "role": "sampleCode",
    "roleHeading": "Sample Code",
    "title": "Destination Video"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Destination Video is a multiplatform video-playback ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " app for iOS, iPadOS, macOS, tvOS, and visionOS. People get a familiar media-browsing experience navigating the library ºs content and playing videos they find interesting.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The sample uses the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/TabView",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " structure in SwiftUI to create an immersive, full-screen browsing experience with rich navigation hierarchy. While the app shares many of its views across platforms, it leverages platform-specific features to create a playback experience native to each platform. For example, it uses the SwiftUI window and scene customization APIs to create a more engaging and natural experience in macOS. This sample also demonstrates how to use ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftData",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to persist app data in a SwiftUI app.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In visionOS, the sample demonstrates how to play video within an immersive environment configured with ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/documentation/visionos#realitykit-and-reality-composer-pro",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". It also uses the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GroupActivities",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " framework to enable shared viewing experiences.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "identifier": "Destination-video-hero.mp4",
          "type": "video"
        },
        {
          "anchor": "Implement-tab-navigation",
          "level": 3,
          "text": "Implement tab navigation",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Destination Video uses tab navigation with the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/TabViewStyle/sidebarAdaptable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " style, which optimizes the content browsing experience for each platform. In iPadOS, the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/TabView",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " with ",
              "type": "text"
            },
            {
              "code": "sidebarAdaptable",
              "type": "codeVoice"
            },
            {
              "text": " style allows people to toggle between the sidebar and tab bar. The full-screen browsing experience of a tab bar brings content to the forefront while the sidebar allows for easy access to deeper navigation hierarchy.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "identifier": "Destination-video-tab-navigation-video.mp4",
                  "metadata": {
                    "deviceFrame": "iPadPro12-9"
                  },
                  "type": "video"
                }
              ],
              "title": "iPadOS"
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "Destination-video-iOS",
                      "metadata": {
                        "deviceFrame": "iPhone14Pro"
                      },
                      "type": "image"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "title": "iOS"
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "Destination-video-macOS",
                      "metadata": {
                        "deviceFrame": "MacBookPro16"
                      },
                      "type": "image"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "title": "macOS"
            },
            {
              "content": [
                {
                  "identifier": "Destination-video-tab-tvOS-video.mp4",
                  "metadata": {
                    "deviceFrame": "tv"
                  },
                  "type": "video"
                }
              ],
              "title": "tvOS"
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "Destination-video-visionOS",
                      "type": "image"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "title": "visionOS"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "To implement tab navigation, first declare a ",
              "type": "text"
            },
            {
              "code": "TabView",
              "type": "codeVoice"
            },
            {
              "text": " with an explicit selection value using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/TabView/init(selection:content:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " initializer. Add tabs within a ",
              "type": "text"
            },
            {
              "code": "TabView",
              "type": "codeVoice"
            },
            {
              "text": " by initializing ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Tab",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " structures. Destination Video uses the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Tab/init(_:systemImage:value:content:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " initializer to create each tab, then groups tabs within a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/TabSection",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to declare a secondary tab hierarchy in the ",
              "type": "text"
            },
            {
              "code": "TabView",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "TabView(selection: $selectedTab) {",
            "    Tab(\"Watch Now\", systemImage: \"play\", value: .watchnow) {",
            "        WatchNowView()",
            "    }",
            "",
            "    // More tabs...",
            "    ",
            "    TabSection {",
            "        ForEach(Category.collectionsList) { collection in",
            "            Tab(collection.name, systemImage: collection.icon, value: Tabs.collections(collection)) {",
            "                // More tabs...",
            "            }",
            "        }",
            "    } header: {",
            "        Label(\"Collections\", systemImage: \"folder\")",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "You can also enable customization by adding the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/tabViewCustomization(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " modifier to the ",
              "type": "text"
            },
            {
              "code": "TabView",
              "type": "codeVoice"
            },
            {
              "text": " and the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/TabContent/customizationID(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " modifier to each tab. Customization in Destination Video allows people to drag tabs from the sidebar to the tab bar, hide nonessential tabs, and rearrange tabs in the sidebar.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For more information, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Enhancing-your-app-content-with-tab-navigation",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Customize-windows-in-macOS",
          "level": 3,
          "text": "Customize windows in macOS",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "In macOS, the app supports multiple windows including a main window that shows the video collections and a separate video player window. You can customize the appearance and function of each window to create a more engaging experience.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "Destination-video-mac-windows",
              "metadata": {
                "deviceFrame": "MacBookPro16"
              },
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The main window displays the app content ‚Äî collections of videos ‚Äî in a ",
              "type": "text"
            },
            {
              "code": "TabView",
              "type": "codeVoice"
            },
            {
              "text": " navigation presented as a sidebar. Because the app doesn‚Äôt contain any additional toolbar items and the sidebar provides a visual indication of where a person is in the navigation hierarchy, the toolbar isn‚Äôt needed and unnecessarily takes up space. This sample removes the toolbar title and background using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/toolbar(removing:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/toolbarBackgroundVisibility(_:for:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " modifiers. This creates a full-window browsing experience for Destination Video running in macOS.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "ContentView()",
            "    // ...",
            "    #if os(macOS)",
            "    .toolbarBackgroundVisibility(.hidden, for: .windowToolbar)",
            "    .toolbar(removing: .title)",
            "    #endif"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Other window customizations in Destination Video include extending a window‚Äôs drag region, participating in a window‚Äôs zoom action, and modifying a window‚Äôs state restoration behavior. For more information, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Customizing-window-styles-and-state-restoration-behavior-in-macOS",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Display-horizontally-scrollable-cards-in-tvOS",
          "level": 3,
          "text": "Display horizontally scrollable cards in tvOS",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Destination Video presents video cards in a horizontally scrollable list in the Watch Now tab. When a person taps on a video card, the app navigates to a view that shows detailed information about the video. In tvOS, each card implements the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/PrimitiveButtonStyle/card",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " button style. When a person hovers on a card, it fully scales and lifts up.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "identifier": "Destination-video-tvOS-video.mp4",
          "metadata": {
            "deviceFrame": "tv"
          },
          "type": "video"
        },
        {
          "inlineContent": [
            {
              "text": "This sample prevents the scroll view from clipping its content when the card expands using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/scrollClipDisabled(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " modifier. Additionally, this sample provides a title for the list by placing the ",
              "type": "text"
            },
            {
              "code": "ScrollView",
              "type": "codeVoice"
            },
            {
              "text": " within a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Section",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " container and passing the title into the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Section/init(content:header:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " initializer. This allows the title to also lift and move as the card expands and lifts upon when a person hovers on it.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "Section {",
            "    ScrollView(.horizontal, showsIndicators: false) {",
            "        HStack(spacing: Constants.cardSpacing) {",
            "            ForEach(videos) { video in",
            "                // The video card view.",
            "            }",
            "        }",
            "        .buttonStyle(buttonStyle)",
            "        .padding(.leading, Constants.outerPadding)",
            "    }",
            "    .scrollClipDisabled()",
            "} header: {",
            "    // The list title",
            "}",
            "",
            "var buttonStyle: some PrimitiveButtonStyle {",
            "    #if os(tvOS)",
            "    .card",
            "    #else",
            "    .plain",
            "    #endif",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "For more information about displaying content in tvOS, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Creating-a-tvOS-media-catalog-app-in-SwiftUI",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Present-an-immersive-space",
          "level": 3,
          "text": "Present an immersive space",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Building video playback apps for visionOS provides new opportunities to enhance the viewing experience beyond the bounds of the player window. To add a greater level of immersion, this sample presents an immersive space that displays a scene around a person as they watch the video.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "Destination-video-immersive-space",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "It defines the immersive space in the ",
              "type": "text"
            },
            {
              "code": "DestinationVideo",
              "type": "codeVoice"
            },
            {
              "text": " app structure.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// Defines an immersive space to present a environment in which to watch the video.",
            "ImmersiveSpace(id: ImmersiveEnvironmentView.id) {",
            "    ImmersiveEnvironmentView()",
            "        .environment(immersiveEnvironment)",
            "        .onAppear {",
            "            contentBrightness = immersiveEnvironment.contentBrightness",
            "            surroundingsEffect = immersiveEnvironment.surroundingsEffect",
            "        }",
            "        .onDisappear {",
            "            contentBrightness = .automatic",
            "            surroundingsEffect = nil",
            "        }",
            "        // Applies a custom tint color for the video passthrough of a person's hands and surroundings.",
            "        .preferredSurroundingsEffect(surroundingsEffect)",
            "}",
            "// Set the content brightness for the immersive space.",
            ".immersiveContentBrightness(contentBrightness)",
            "// Set the immersion style to progressive, so a person can use the Digital Crown to dial in their experience.",
            ".immersionStyle(selection: .constant(.progressive), in: .progressive)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/ImmersiveSpace",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " presents an instance of ",
              "type": "text"
            },
            {
              "code": "ImmersiveEnvironmentView",
              "type": "codeVoice"
            },
            {
              "text": ", which maps a texture to the inside of a sphere that it displays around a person. The app presents it using the ",
              "type": "text"
            },
            {
              "code": ".progressive",
              "type": "codeVoice"
            },
            {
              "text": " immersion style, which lets people change the amount of immersion they experience by turning the Digital Crown on the device.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Play-video-in-a-full-window-player",
          "level": 3,
          "text": "Play video in a full-window player",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "One of the most exciting features of visionOS is its ability to play 3D video along with Spatial Audio, which adds a deeper level of immersion to the viewing experience. Playing 3D content in your app requires that you display ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVKit/AVPlayerViewController",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " full window. When you present the player this way, the system automatically docks it into the ideal viewing position, and presents streamlined playback controls that keep the person‚Äôs focus on the content.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "Destination-video-video-player",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "In iOS or tvOS, you typically present video in a full-screen presentation using the ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/fullScreenCover(isPresented:onDismiss:content:)",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " modifier. This API is available in visionOS; however, the recommended way to present the player for full-window playback is to set it as the root view of your app‚Äôs window group.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "Destination Video‚Äôs ",
              "type": "text"
            },
            {
              "code": "ContentView",
              "type": "codeVoice"
            },
            {
              "text": " displays the app‚Äôs library by default. It observes changes to the player model‚Äôs ",
              "type": "text"
            },
            {
              "code": "presentation",
              "type": "codeVoice"
            },
            {
              "text": " property, which indicates whether the app requests inline or full-window playback. When the presentation state changes to ",
              "type": "text"
            },
            {
              "code": "fullWindow",
              "type": "codeVoice"
            },
            {
              "text": ", the view redraws the UI to display the player view in place of the library.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ContentView: View {",
            "    @Environment(PlayerModel.self) private var player",
            "    #if os(visionOS)",
            "    @Environment(ImmersiveEnvironment.self) private var immersiveEnvironment",
            "    #endif",
            "",
            "    var body: some View {",
            "        #if os(visionOS)",
            "        Group {",
            "            switch player.presentation {",
            "            case .fullWindow:",
            "                // Presents the player in a full window and begins playback.",
            "                PlayerView()",
            "                    .immersiveEnvironmentPicker {",
            "                        ImmersiveEnvironmentPickerView()",
            "                    }",
            "                    .onAppear {",
            "                        player.play()",
            "                    }",
            "            default:",
            "                // Shows the app's content library by default.",
            "                DestinationTabs()",
            "            }",
            "        }",
            "        // A custom modifier that manages the presentation and dismissal of the app's immersive space.",
            "        .immersionManager()",
            "        #else",
            "        DestinationTabs()",
            "            // A custom modifier that presents the video player appropriately for the current platform.",
            "            .presentVideoPlayer()",
            "        #endif",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When someone selects the Play Video button on the detail view, the app calls the player model‚Äôs ",
              "type": "text"
            },
            {
              "code": "loadVideo(_: presentation:)",
              "type": "codeVoice"
            },
            {
              "text": " method requesting the ",
              "type": "text"
            },
            {
              "code": "fullWindow",
              "type": "codeVoice"
            },
            {
              "text": " presentation option.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "Button {",
            "    /// Load the media item for full-window presentation.",
            "    player.loadVideo(video, presentation: .fullWindow)",
            "} label: {",
            "    Label(\"Play Video\", systemImage: \"play.fill\")",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "After the player model successfully loads the video content for playback, it updates its ",
              "type": "text"
            },
            {
              "code": "presentation",
              "type": "codeVoice"
            },
            {
              "text": " value to ",
              "type": "text"
            },
            {
              "code": "fullWindow",
              "type": "codeVoice"
            },
            {
              "text": ", which causes the app to replace ",
              "type": "text"
            },
            {
              "code": "DestinationTabs",
              "type": "codeVoice"
            },
            {
              "text": " with ",
              "type": "text"
            },
            {
              "code": "PlayerView",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To dismiss the full-window player in visionOS, people tap the Back button in the player UI. To handle this action, the app‚Äôs ",
              "type": "text"
            },
            {
              "code": "PlayerViewControllerDelegate",
              "type": "codeVoice"
            },
            {
              "text": " type defines an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVKit/AVPlayerViewControllerDelegate",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object that handles the dismissal.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When the delegate receives this call, it clears the media from the player model and resets the presentation state back to its default value, which results in the Destination Video app redisplaying the ",
              "type": "text"
            },
            {
              "code": "DestinationTabs",
              "type": "codeVoice"
            },
            {
              "text": " view.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Configure-the-Spatial-Audio-experience",
          "level": 3,
          "text": "Configure the Spatial Audio experience",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Media playback apps require common configuration of their capabilities and audio session. In addition to performing the steps outlined in ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFoundation/configuring-your-app-for-media-playback",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", Destination Video also adopts new ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioSession",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " API to customize a person‚Äôs Spatial Audio experience.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "After the app successfully loads a video for playback, it configures the Spatial Audio experience for the current presentation. For the inline player view, it sets the experience to a small, focused sound stage where the audio originates from the location of the view. When displaying a video full window, it sets the experience to a large, fully immersive sound stage.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "private func configureAudioExperience(for presentation: Presentation) {",
            "    #if os(visionOS)",
            "    do {",
            "        let experience: AVAudioSessionSpatialExperience",
            "        switch presentation {",
            "        case .inline:",
            "            // Set a small, focused sound stage when watching trailers.",
            "            experience = .headTracked(soundStageSize: .small, anchoringStrategy: .automatic)",
            "        case .fullWindow:",
            "            // Set a large sound stage size when viewing full window.",
            "            experience = .headTracked(soundStageSize: .large, anchoringStrategy: .automatic)",
            "        }",
            "        try AVAudioSession.sharedInstance().setIntendedSpatialExperience(experience)",
            "    } catch {",
            "        logger.error(\"Unable to set the intended spatial experience. \\(error.localizedDescription)\")",
            "    }",
            "    #endif",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Customize-an-environment-using-RealityKit-and-Reality-Composer-Pro",
          "level": 3,
          "text": "Customize an environment using RealityKit and Reality Composer Pro",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "In visionOS, Destination Video provides a custom environment, called Studio.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "identifier": "Destination-video-customize-an-environment.mp4",
          "type": "video"
        },
        {
          "inlineContent": [
            {
              "text": "To optimize the viewing experience in the Studio environment, this sample implements the following:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "definition": {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "Customizes the docking location for the video player in a custom environment.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ]
              },
              "term": {
                "inlineContent": [
                  {
                    "identifier": "doc://com.apple.documentation/documentation/RealityKit/DockingRegionComponent",
                    "isActive": true,
                    "type": "reference"
                  }
                ]
              }
            },
            {
              "definition": {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "Enhances the reflections of the video content on glossy surfaces in the surrounding environment.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ]
              },
              "term": {
                "inlineContent": [
                  {
                    "identifier": "doc://com.apple.documentation/documentation/ShaderGraph/Other/Reflection-Specular-(RealityKit)",
                    "isActive": true,
                    "type": "reference"
                  }
                ]
              }
            },
            {
              "definition": {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "Enhances the reflections of the video content on organic surfaces in the surrounding environment.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ]
              },
              "term": {
                "inlineContent": [
                  {
                    "identifier": "doc://com.apple.documentation/documentation/ShaderGraph/Other/Reflection-Diffuse-(RealityKit)",
                    "isActive": true,
                    "type": "reference"
                  }
                ]
              }
            },
            {
              "definition": {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "Configures the virtual scene lighting.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ]
              },
              "term": {
                "inlineContent": [
                  {
                    "identifier": "doc://com.apple.documentation/documentation/RealityKit/VirtualEnvironmentProbeComponent",
                    "isActive": true,
                    "type": "reference"
                  }
                ]
              }
            },
            {
              "definition": {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "Applies reverb for enhanced audio immersion.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ]
              },
              "term": {
                "inlineContent": [
                  {
                    "identifier": "doc://com.apple.documentation/documentation/RealityKit/ReverbComponent",
                    "isActive": true,
                    "type": "reference"
                  }
                ]
              }
            }
          ],
          "type": "termList"
        },
        {
          "inlineContent": [
            {
              "text": "In visionOS, a person can select the environment in which they watch a video by tapping on the environment picker menu presented by ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVKit/AVPlayerViewController",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". The Studio environment has light and dark variants. This sample adds them to the list of environments that appear in the environment picker menu using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/immersiveEnvironmentPicker(content:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " modifier.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "PlayerView()",
            "    .immersiveEnvironmentPicker {",
            "        ImmersiveEnvironmentPickerView()",
            "    }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "For more information, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.visionOS/documentation/visionOS/building-an-immersive-media-viewing-experience",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.visionOS/documentation/visionOS/enabling-video-reflections-in-an-immersive-environment",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Provide-a-shared-viewing-experience",
          "level": 3,
          "text": "Provide a shared viewing experience",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "One of the best ways to enhance your app‚Äôs playback experience is to make that experience shareable with others. You can use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFoundation",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GroupActivities",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " frameworks to build ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/shareplay/",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " experiences that bring people together even when they can‚Äôt be in the same location.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The Destination Video app creates an experience where people can watch videos with others across devices and platforms. It defines a group activity called ",
              "type": "text"
            },
            {
              "code": "WatchingActivity",
              "type": "codeVoice"
            },
            {
              "text": " that adopts the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GroupActivities/GroupActivity",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol.  When people have a FaceTime call active and they play a video in the full-window player, it becomes eligible for playback for everyone on the call.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The app‚Äôs ",
              "type": "text"
            },
            {
              "code": "WatchingCoordinator",
              "type": "codeVoice"
            },
            {
              "text": " actor manages Destination Video‚Äôs SharePlay functionality. It observes the activation of new ",
              "type": "text"
            },
            {
              "code": "WatchingActivity",
              "type": "codeVoice"
            },
            {
              "text": " sessions. After a ",
              "type": "text"
            },
            {
              "code": "WatchingActivity",
              "type": "codeVoice"
            },
            {
              "text": " session starts, the ",
              "type": "text"
            },
            {
              "code": "WatchingCoordinator",
              "type": "codeVoice"
            },
            {
              "text": " sets the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GroupActivities/GroupSession",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " instance on the player object‚Äôs ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFoundation/AVPlaybackCoordinator",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "private typealias WatchingSession = GroupSession<WatchingActivity>",
            "private weak var coordinator: AVPlayerPlaybackCoordinator?",
            "",
            "private var liveSession: WatchingSession? {",
            "    didSet {",
            "        guard let liveSession else { return }",
            "        // Set the group session on the AVPlayer object's playback coordinator",
            "        // so it can synchronize playback with other devices.",
            "        coordinator?.coordinateWithSession(liveSession)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "With the player configured to use the group session, when the app loads new videos, they become eligible to share with people in the FaceTime call.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "columns": [
            {
              "content": [
                {
                  "anchor": "See-Also",
                  "level": 2,
                  "text": "See Also",
                  "type": "heading"
                }
              ],
              "size": 1
            }
          ],
          "numberOfColumns": 1,
          "type": "row"
        },
        {
          "anchor": "Related-samples",
          "level": 4,
          "text": "Related samples",
          "type": "heading"
        },
        {
          "items": [
            "doc://com.apple.visionOS/documentation/visionOS/BOT-anist",
            "doc://com.apple.visionOS/documentation/visionOS/World",
            "doc://com.apple.visionOS/documentation/visionOS/happybeam",
            "doc://com.apple.visionOS/documentation/visionOS/diorama"
          ],
          "style": "list",
          "type": "links"
        },
        {
          "anchor": "Related-articles",
          "level": 4,
          "text": "Related articles",
          "type": "heading"
        },
        {
          "items": [
            "doc://com.apple.documentation/documentation/SwiftUI/Customizing-window-styles-and-state-restoration-behavior-in-macOS",
            "doc://com.apple.documentation/documentation/SwiftUI/Enhancing-your-app-content-with-tab-navigation",
            "doc://com.apple.visionOS/documentation/visionOS/building-an-immersive-media-viewing-experience",
            "doc://com.apple.visionOS/documentation/visionOS/enabling-video-reflections-in-an-immersive-environment"
          ],
          "style": "compactGrid",
          "type": "links"
        },
        {
          "items": [
            "doc://com.apple.documentation/documentation/AVFoundation/configuring-your-app-for-media-playback",
            "doc://com.apple.documentation/documentation/AVKit/adopting-the-system-player-interface-in-visionos",
            "doc://com.apple.documentation/documentation/AVFoundation/controlling-the-transport-behavior-of-a-player",
            "doc://com.apple.documentation/documentation/AVFoundation/monitoring-playback-progress-in-your-app",
            "doc://com.apple.documentation/documentation/AVKit/trimming-and-exporting-media-in-visionos"
          ],
          "style": "list",
          "type": "links"
        },
        {
          "anchor": "Related-videos",
          "level": 4,
          "text": "Related videos",
          "type": "heading"
        },
        {
          "items": [
            "doc://com.apple.documentation/videos/play/wwdc2024/10147",
            "doc://com.apple.documentation/videos/play/wwdc2024/10148",
            "doc://com.apple.documentation/videos/play/wwdc2024/10115",
            "doc://com.apple.documentation/videos/play/wwdc2024/10152",
            "doc://com.apple.documentation/videos/play/wwdc2023/10070",
            "doc://com.apple.documentation/videos/play/wwdc2023/10071"
          ],
          "style": "compactGrid",
          "type": "links"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "090F792B-C546-4145-8B87-40B8B5A52A9B": {
      "alt": null,
      "identifier": "090F792B-C546-4145-8B87-40B8B5A52A9B",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/C03E6E6D-A32A-41D0-9E50-C3C6059820AA/090F792B-C546-4145-8B87-40B8B5A52A9B/9276_wide_250x141_1x.jpg"
        },
        {
          "traits": [
            "2x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/C03E6E6D-A32A-41D0-9E50-C3C6059820AA/090F792B-C546-4145-8B87-40B8B5A52A9B/9276_wide_250x141_2x.jpg"
        },
        {
          "traits": [
            "3x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/C03E6E6D-A32A-41D0-9E50-C3C6059820AA/090F792B-C546-4145-8B87-40B8B5A52A9B/9276_wide_250x141_3x.jpg"
        }
      ]
    },
    "1CE8E467-3C93-4C01-BF6A-83820CD82D3C": {
      "alt": null,
      "identifier": "1CE8E467-3C93-4C01-BF6A-83820CD82D3C",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/C03E6E6D-A32A-41D0-9E50-C3C6059820AA/1CE8E467-3C93-4C01-BF6A-83820CD82D3C/9275_wide_250x141_1x.jpg"
        },
        {
          "traits": [
            "2x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/C03E6E6D-A32A-41D0-9E50-C3C6059820AA/1CE8E467-3C93-4C01-BF6A-83820CD82D3C/9275_wide_250x141_2x.jpg"
        },
        {
          "traits": [
            "3x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/C03E6E6D-A32A-41D0-9E50-C3C6059820AA/1CE8E467-3C93-4C01-BF6A-83820CD82D3C/9275_wide_250x141_3x.jpg"
        }
      ]
    },
    "2f35504f2d6c/DestinationVideo.zip": {
      "checksum": "2f35504f2d6c1460a683c1116bdfcbd028748a229e301b7719159f19f908ea249559ee9484c739941634a9dfd83f740cd310cce50128e20e5ae8579829d754ac",
      "identifier": "2f35504f2d6c/DestinationVideo.zip",
      "type": "download",
      "url": "https://docs-assets.developer.apple.com/published/2f35504f2d6c/DestinationVideo.zip"
    },
    "696C6201-585A-45A1-80D1-F95F3794E7BD": {
      "alt": null,
      "identifier": "696C6201-585A-45A1-80D1-F95F3794E7BD",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/D35E0E85-CCB6-41A1-B227-7995ECD83ED5/696C6201-585A-45A1-80D1-F95F3794E7BD/8121_wide_250x141_1x.jpg"
        },
        {
          "traits": [
            "2x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/D35E0E85-CCB6-41A1-B227-7995ECD83ED5/696C6201-585A-45A1-80D1-F95F3794E7BD/8121_wide_250x141_2x.jpg"
        },
        {
          "traits": [
            "3x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/D35E0E85-CCB6-41A1-B227-7995ECD83ED5/696C6201-585A-45A1-80D1-F95F3794E7BD/8121_wide_250x141_3x.jpg"
        }
      ]
    },
    "9BCB9FE7-7686-4615-BC26-C122A1C0DCE7": {
      "alt": null,
      "identifier": "9BCB9FE7-7686-4615-BC26-C122A1C0DCE7",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/C03E6E6D-A32A-41D0-9E50-C3C6059820AA/9BCB9FE7-7686-4615-BC26-C122A1C0DCE7/9280_wide_250x141_1x.jpg"
        },
        {
          "traits": [
            "2x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/C03E6E6D-A32A-41D0-9E50-C3C6059820AA/9BCB9FE7-7686-4615-BC26-C122A1C0DCE7/9280_wide_250x141_2x.jpg"
        },
        {
          "traits": [
            "3x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/C03E6E6D-A32A-41D0-9E50-C3C6059820AA/9BCB9FE7-7686-4615-BC26-C122A1C0DCE7/9280_wide_250x141_3x.jpg"
        }
      ]
    },
    "BE45225C-F8DE-4EAD-9C54-37FAB539DF94": {
      "alt": null,
      "identifier": "BE45225C-F8DE-4EAD-9C54-37FAB539DF94",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/C03E6E6D-A32A-41D0-9E50-C3C6059820AA/BE45225C-F8DE-4EAD-9C54-37FAB539DF94/9242_wide_250x141_1x.jpg"
        },
        {
          "traits": [
            "2x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/C03E6E6D-A32A-41D0-9E50-C3C6059820AA/BE45225C-F8DE-4EAD-9C54-37FAB539DF94/9242_wide_250x141_2x.jpg"
        },
        {
          "traits": [
            "3x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/C03E6E6D-A32A-41D0-9E50-C3C6059820AA/BE45225C-F8DE-4EAD-9C54-37FAB539DF94/9242_wide_250x141_3x.jpg"
        }
      ]
    },
    "BOT-anist-PageImage-card.png": {
      "alt": "A screenshot from the Apple Vision Pro simulator with a single floating window. The window contains a robot on the right side, and controls to customize the robots appearance on the left.",
      "identifier": "BOT-anist-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/d9f7d85cd82f76e6fd53df7302f0424a/BOT-anist-PageImage-card@2x.png"
        }
      ]
    },
    "Creating-a-tvOS-media-catalog-app-in-SwiftUI-PageImage-card.png": {
      "alt": null,
      "identifier": "Creating-a-tvOS-media-catalog-app-in-SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/146ac72c6b4ce7d798f5817eba25d7f6/Creating-a-tvOS-media-catalog-app-in-SwiftUI-PageImage-card~dark@2x.png"
        },
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/f8f5afc34a7f95c0fa6bd64a4a4ca9b3/Creating-a-tvOS-media-catalog-app-in-SwiftUI-PageImage-card@2x.png"
        }
      ]
    },
    "Destination-Video-intro.png": {
      "alt": null,
      "identifier": "Destination-Video-intro.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/648c665254129674ce04bbc64dbeeb2d/Destination-Video-intro@2x.png"
        }
      ]
    },
    "Destination-video-customize-an-environment.mp4": {
      "alt": "A video that shows shows the Studio environment in visionOS. The video shows the app selecting the Studio environment from the environment picker menu. The video then shows the video player docking in an immersive space.",
      "identifier": "Destination-video-customize-an-environment.mp4",
      "poster": "Destination-video-customize-an-environment.png",
      "type": "video",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/fdf2f24116b417c6817578407a4ae780/Destination-video-customize-an-environment.mp4"
        }
      ]
    },
    "Destination-video-customize-an-environment.png": {
      "alt": null,
      "identifier": "Destination-video-customize-an-environment.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/55e898348d33e996ac98bb90ab8eb1e4/Destination-video-customize-an-environment@2x.png"
        }
      ]
    },
    "Destination-video-hero.mp4": {
      "alt": "A video of the Destination Video player in an immersive space in visionOS.",
      "identifier": "Destination-video-hero.mp4",
      "poster": "Destination-video-hero.png",
      "type": "video",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/ee9b11e4797974549098219580a8b287/Destination-video-hero.mp4"
        }
      ]
    },
    "Destination-video-hero.png": {
      "alt": null,
      "identifier": "Destination-video-hero.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4f026dd58e982b178422be3c694ff296/Destination-video-hero@2x.png"
        }
      ]
    },
    "Destination-video-iOS": {
      "alt": "A screenshot of tab view on iOS.",
      "identifier": "Destination-video-iOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/3b94e40a70cf512f26ed1900ff2e5e71/Destination-video-iOS@2x.png"
        }
      ]
    },
    "Destination-video-immersive-space": {
      "alt": "A screenshot that shows the Studio environment in visionOS.",
      "identifier": "Destination-video-immersive-space",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/130c209e25f4dbb4ab333f9cc9f91a68/Destination-video-immersive-space@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/662c3cb1a2bded88de735a203ff1906b/Destination-video-immersive-space~dark@2x.png"
        }
      ]
    },
    "Destination-video-mac-windows": {
      "alt": "A screenshot that shows the tab view in Destination Video for Mac.",
      "identifier": "Destination-video-mac-windows",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/311d2092a64eba16fb8e25f0170328fc/Destination-video-mac-windows@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/0477dedbb69a6fe14f0a4a9d4d0634eb/Destination-video-mac-windows~dark@2x.png"
        }
      ]
    },
    "Destination-video-macOS": {
      "alt": "A screenshot of tab view on macOS",
      "identifier": "Destination-video-macOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/d86d64648482d8e9501242564d8d27ba/Destination-video-macOS@2x.png"
        }
      ]
    },
    "Destination-video-tab-navigation-video.mp4": {
      "alt": "A video of Destination Video app on iPad. The video shows the app opening the sidebar from the tab bar. The video then shows the customization options in the sidebar.",
      "identifier": "Destination-video-tab-navigation-video.mp4",
      "poster": "Destination-video-tab-navigation.png",
      "type": "video",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/5874b00c5c2b7ad74c1d96d5e24a0585/Destination-video-tab-navigation-video.mp4"
        }
      ]
    },
    "Destination-video-tab-navigation.png": {
      "alt": null,
      "identifier": "Destination-video-tab-navigation.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/669841631e7dc8762269e8ef432911b0/Destination-video-tab-navigation@2x.png"
        }
      ]
    },
    "Destination-video-tab-tvOS-video.mp4": {
      "alt": "A video that shows tab view on tvOS.",
      "identifier": "Destination-video-tab-tvOS-video.mp4",
      "poster": "Destination-video-tab-tvOS.png",
      "type": "video",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/9c378579774fcddd0ccc8677f34e90e6/Destination-video-tab-tvOS-video.mp4"
        }
      ]
    },
    "Destination-video-tab-tvOS.png": {
      "alt": null,
      "identifier": "Destination-video-tab-tvOS.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/605674d4b3f4c3632229dfdd60d3371b/Destination-video-tab-tvOS.png"
        }
      ]
    },
    "Destination-video-tvOS-video.mp4": {
      "alt": "A video that shows Destination Video app in tvOS.",
      "identifier": "Destination-video-tvOS-video.mp4",
      "poster": "Destination-video-tvOS.png",
      "type": "video",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/8abc482032660ba8cd72229f32774850/Destination-video-tvOS-video.mp4"
        }
      ]
    },
    "Destination-video-tvOS.png": {
      "alt": null,
      "identifier": "Destination-video-tvOS.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/ce17ccef0b8341e94a5eee7ba2d129ee/Destination-video-tvOS.png"
        }
      ]
    },
    "Destination-video-video-player": {
      "alt": "A screenshot that shows a video player in the Studio environment in visionOS.",
      "identifier": "Destination-video-video-player",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/55a04fef3a7071933a6aecf0bfc0f73f/Destination-video-video-player@2x.png"
        }
      ]
    },
    "Destination-video-visionOS": {
      "alt": "An image that shows tab view on visionOS.",
      "identifier": "Destination-video-visionOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/0c8e9497ef4f8b04e1a24a43058e293b/Destination-video-visionOS.png"
        }
      ]
    },
    "Diorama-intro.png": {
      "alt": "A screenshot showing a virtual trail map diorama in a living room setting.",
      "identifier": "Diorama-intro.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/80d69390976dca0e5d70a493312d475a/Diorama-intro@2x.png"
        }
      ]
    },
    "E9EE7D0D-C77D-44E2-8417-41C3AF3011E4": {
      "alt": null,
      "identifier": "E9EE7D0D-C77D-44E2-8417-41C3AF3011E4",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/D35E0E85-CCB6-41A1-B227-7995ECD83ED5/E9EE7D0D-C77D-44E2-8417-41C3AF3011E4/8120_wide_250x141_1x.jpg"
        },
        {
          "traits": [
            "2x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/D35E0E85-CCB6-41A1-B227-7995ECD83ED5/E9EE7D0D-C77D-44E2-8417-41C3AF3011E4/8120_wide_250x141_2x.jpg"
        },
        {
          "traits": [
            "3x"
          ],
          "url": "https://devimages-cdn.apple.com/wwdc-services/images/D35E0E85-CCB6-41A1-B227-7995ECD83ED5/E9EE7D0D-C77D-44E2-8417-41C3AF3011E4/8120_wide_250x141_3x.jpg"
        }
      ]
    },
    "Enhancing-your-app-content-with-tab-navigation-PageImage-card.png": {
      "alt": null,
      "identifier": "Enhancing-your-app-content-with-tab-navigation-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/2b5b06d3a9b048573a534e28a585160e/Enhancing-your-app-content-with-tab-navigation-PageImage-card~dark@2x.png"
        },
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/ae58e7f18887cfb2b1f8384de4a18017/Enhancing-your-app-content-with-tab-navigation-PageImage-card@2x.png"
        }
      ]
    },
    "Happy-Beam-intro.png": {
      "alt": "A screenshot showing the Happy Beam game. A player makes a heart gesture with their hands, a beam projects from it aimed at nearby clouds, and a scoreboard window shows seven points.",
      "identifier": "Happy-Beam-intro.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/52b497b6d705af322726d7371dee6ddd/Happy-Beam-intro@2x.png"
        }
      ]
    },
    "Hello-World-intro.png": {
      "alt": "",
      "identifier": "Hello-World-intro.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/770e1d0451ba3b86de3b05eb0ce728b7/Hello-World-intro@2x.png"
        }
      ]
    },
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        },
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        }
      ]
    },
    "building-an-immersive-media-viewing-experience-PageImage-card.png": {
      "alt": "A screenshot of destination video's custom studio environment.",
      "identifier": "building-an-immersive-media-viewing-experience-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/bbc286b58cd06b23756a1cb51a493360/building-an-immersive-media-viewing-experience-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b110534afd700b8b77992bd7f4184ae6/building-an-immersive-media-viewing-experience-PageImage-card~dark@2x.png"
        }
      ]
    },
    "customizing-window-styles-PageImage-card.png": {
      "alt": null,
      "identifier": "customizing-window-styles-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/2ad38e0c3283b1ac07867f22266e037f/customizing-window-styles-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/33d64ed1d006ace96b27aa334aa05a93/customizing-window-styles-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/AVFAudio/AVAudioSession": {
      "abstract": [
        {
          "text": "An object that communicates to the system how you intend to use audio in your app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVAudioSession"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioSession",
      "kind": "symbol",
      "role": "symbol",
      "title": "AVAudioSession",
      "type": "topic",
      "url": "/documentation/AVFAudio/AVAudioSession"
    },
    "doc://com.apple.documentation/documentation/AVFoundation": {
      "abstract": [
        {
          "text": "Work with audiovisual assets, control device cameras, process audio, and configure system audio interactions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFoundation",
      "kind": "symbol",
      "role": "collection",
      "title": "AVFoundation",
      "type": "topic",
      "url": "/documentation/AVFoundation"
    },
    "doc://com.apple.documentation/documentation/AVFoundation/AVPlaybackCoordinator": {
      "abstract": [
        {
          "text": "An object that coordinates the playback of players in a connected group.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPlaybackCoordinator"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFoundation/AVPlaybackCoordinator",
      "kind": "symbol",
      "role": "symbol",
      "title": "AVPlaybackCoordinator",
      "type": "topic",
      "url": "/documentation/AVFoundation/AVPlaybackCoordinator"
    },
    "doc://com.apple.documentation/documentation/AVFoundation/configuring-your-app-for-media-playback": {
      "abstract": [
        {
          "text": "Configure apps to enable standard media playback behavior.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFoundation/configuring-your-app-for-media-playback",
      "kind": "article",
      "role": "article",
      "title": "Configuring your app for media playback",
      "type": "topic",
      "url": "/documentation/AVFoundation/configuring-your-app-for-media-playback"
    },
    "doc://com.apple.documentation/documentation/AVFoundation/controlling-the-transport-behavior-of-a-player": {
      "abstract": [
        {
          "text": "Play, pause, and seek through a media presentation.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFoundation/controlling-the-transport-behavior-of-a-player",
      "kind": "article",
      "role": "article",
      "title": "Controlling the transport behavior of a player",
      "type": "topic",
      "url": "/documentation/AVFoundation/controlling-the-transport-behavior-of-a-player"
    },
    "doc://com.apple.documentation/documentation/AVFoundation/monitoring-playback-progress-in-your-app": {
      "abstract": [
        {
          "text": "Observe the playback of a media asset to update your app‚Äôs user-interface state.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFoundation/monitoring-playback-progress-in-your-app",
      "kind": "article",
      "role": "article",
      "title": "Monitoring playback progress in your app",
      "type": "topic",
      "url": "/documentation/AVFoundation/monitoring-playback-progress-in-your-app"
    },
    "doc://com.apple.documentation/documentation/AVKit/AVPlayerViewController": {
      "abstract": [
        {
          "text": "A view controller that displays content from a player and presents a native user interface to control playback.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPlayerViewController"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVKit/AVPlayerViewController",
      "kind": "symbol",
      "role": "symbol",
      "title": "AVPlayerViewController",
      "type": "topic",
      "url": "/documentation/AVKit/AVPlayerViewController"
    },
    "doc://com.apple.documentation/documentation/AVKit/AVPlayerViewControllerDelegate": {
      "abstract": [
        {
          "text": "A protocol that defines the methods to implement to respond to player view controller events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPlayerViewControllerDelegate"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVKit/AVPlayerViewControllerDelegate",
      "kind": "symbol",
      "role": "symbol",
      "title": "AVPlayerViewControllerDelegate",
      "type": "topic",
      "url": "/documentation/AVKit/AVPlayerViewControllerDelegate"
    },
    "doc://com.apple.documentation/documentation/AVKit/adopting-the-system-player-interface-in-visionos": {
      "abstract": [
        {
          "text": "Provide an optimized viewing experience for watching 3D video content.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVKit/adopting-the-system-player-interface-in-visionos",
      "kind": "article",
      "role": "article",
      "title": "Adopting the system player interface in visionOS",
      "type": "topic",
      "url": "/documentation/AVKit/adopting-the-system-player-interface-in-visionos"
    },
    "doc://com.apple.documentation/documentation/AVKit/trimming-and-exporting-media-in-visionos": {
      "abstract": [
        {
          "text": "Display standard controls in your app to edit the timeline of the currently playing media.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVKit/trimming-and-exporting-media-in-visionos",
      "kind": "article",
      "role": "article",
      "title": "Trimming and exporting media in visionOS",
      "type": "topic",
      "url": "/documentation/AVKit/trimming-and-exporting-media-in-visionos"
    },
    "doc://com.apple.documentation/documentation/GroupActivities": {
      "abstract": [
        {
          "text": "Create app-specific activities your users can share and experience together.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GroupActivities",
      "kind": "symbol",
      "role": "collection",
      "title": "Group Activities",
      "type": "topic",
      "url": "/documentation/GroupActivities"
    },
    "doc://com.apple.documentation/documentation/GroupActivities/GroupActivity": {
      "abstract": [
        {
          "text": "A type that can advertise your app‚Äôs activities to other participants.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GroupActivity"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Se",
          "text": "Decodable"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SE",
          "text": "Encodable"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GroupActivities/GroupActivity",
      "kind": "symbol",
      "role": "symbol",
      "title": "GroupActivity",
      "type": "topic",
      "url": "/documentation/GroupActivities/GroupActivity"
    },
    "doc://com.apple.documentation/documentation/GroupActivities/GroupSession": {
      "abstract": [
        {
          "text": "A session for an in-progress activity that synchronizes content among participant devices.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "final"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GroupSession"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "ActivityType"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "ActivityType"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:15GroupActivities0A8ActivityP",
          "text": "GroupActivity"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GroupActivities/GroupSession",
      "kind": "symbol",
      "role": "symbol",
      "title": "GroupSession",
      "type": "topic",
      "url": "/documentation/GroupActivities/GroupSession"
    },
    "doc://com.apple.documentation/documentation/RealityKit/DockingRegionComponent": {
      "abstract": [
        {
          "text": "A component that docks a scene within a region of an immersive space.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DockingRegionComponent"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/RealityKit/DockingRegionComponent",
      "kind": "symbol",
      "role": "symbol",
      "title": "DockingRegionComponent",
      "type": "topic",
      "url": "/documentation/RealityKit/DockingRegionComponent"
    },
    "doc://com.apple.documentation/documentation/RealityKit/ReverbComponent": {
      "abstract": [
        {
          "text": "A component that defines the reverberation of spatial audio sources.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ReverbComponent"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/RealityKit/ReverbComponent",
      "kind": "symbol",
      "role": "symbol",
      "title": "ReverbComponent",
      "type": "topic",
      "url": "/documentation/RealityKit/ReverbComponent"
    },
    "doc://com.apple.documentation/documentation/RealityKit/VirtualEnvironmentProbeComponent": {
      "abstract": [
        {
          "text": "A component that provides environment lighting for entities you place within the same virtual world.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "VirtualEnvironmentProbeComponent"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/RealityKit/VirtualEnvironmentProbeComponent",
      "kind": "symbol",
      "role": "symbol",
      "title": "VirtualEnvironmentProbeComponent",
      "type": "topic",
      "url": "/documentation/RealityKit/VirtualEnvironmentProbeComponent"
    },
    "doc://com.apple.documentation/documentation/ShaderGraph/Other/Reflection-Diffuse-(RealityKit)": {
      "abstract": [
        {
          "text": "Diffuse component of reflection.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/ShaderGraph/Other/Reflection-Diffuse-(RealityKit)",
      "images": [
        {
          "identifier": "purple.tv.png",
          "type": "icon"
        }
      ],
      "kind": "symbol",
      "role": "symbol",
      "title": "Reflection Diffuse (RealityKit)",
      "type": "topic",
      "url": "/documentation/ShaderGraph/Other/Reflection-Diffuse-(RealityKit)"
    },
    "doc://com.apple.documentation/documentation/ShaderGraph/Other/Reflection-Specular-(RealityKit)": {
      "abstract": [
        {
          "text": "Specular component of reflection.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/ShaderGraph/Other/Reflection-Specular-(RealityKit)",
      "images": [
        {
          "identifier": "purple.tv.png",
          "type": "icon"
        }
      ],
      "kind": "symbol",
      "role": "symbol",
      "title": "Reflection Specular (RealityKit)",
      "type": "topic",
      "url": "/documentation/ShaderGraph/Other/Reflection-Specular-(RealityKit)"
    },
    "doc://com.apple.documentation/documentation/SwiftData": {
      "abstract": [
        {
          "text": "Write your model code declaratively to add managed persistence and efficient model fetching.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftData",
      "images": [
        {
          "identifier": "swiftData-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftData",
      "type": "topic",
      "url": "/documentation/SwiftData"
    },
    "doc://com.apple.documentation/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/SwiftUI"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/Creating-a-tvOS-media-catalog-app-in-SwiftUI": {
      "abstract": [
        {
          "text": "Build standard content lockups and rows of content shelves for your tvOS app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Creating-a-tvOS-media-catalog-app-in-SwiftUI",
      "images": [
        {
          "identifier": "Creating-a-tvOS-media-catalog-app-in-SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "sampleCode",
      "title": "Creating a tvOS media catalog app in SwiftUI",
      "type": "topic",
      "url": "/documentation/SwiftUI/Creating-a-tvOS-media-catalog-app-in-SwiftUI"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/Customizing-window-styles-and-state-restoration-behavior-in-macOS": {
      "abstract": [
        {
          "text": "Configure how your app‚Äôs windows look and function in macOS to provide an engaging and more coherent experience.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Customizing-window-styles-and-state-restoration-behavior-in-macOS",
      "images": [
        {
          "identifier": "customizing-window-styles-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "sampleCode",
      "title": "Customizing window styles and state-restoration behavior in macOS",
      "type": "topic",
      "url": "/documentation/SwiftUI/Customizing-window-styles-and-state-restoration-behavior-in-macOS"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/Enhancing-your-app-content-with-tab-navigation": {
      "abstract": [
        {
          "text": "Keep your app content front and center while providing quick access to navigation using the tab bar.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Enhancing-your-app-content-with-tab-navigation",
      "images": [
        {
          "identifier": "Enhancing-your-app-content-with-tab-navigation-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "sampleCode",
      "title": "Enhancing your app‚Äôs content with tab navigation",
      "type": "topic",
      "url": "/documentation/SwiftUI/Enhancing-your-app-content-with-tab-navigation"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/ImmersiveSpace": {
      "abstract": [
        {
          "text": "A scene that presents its content in an unbounded space.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ImmersiveSpace"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI21ImmersiveSpaceContentP",
          "text": "ImmersiveSpaceContent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Se",
          "text": "Decodable"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SE",
          "text": "Encodable"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SH",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/ImmersiveSpace",
      "kind": "symbol",
      "role": "symbol",
      "title": "ImmersiveSpace",
      "type": "topic",
      "url": "/documentation/SwiftUI/ImmersiveSpace"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/PrimitiveButtonStyle/card": {
      "abstract": [
        {
          "text": "A button style that doesn‚Äôt pad the content, and applies a motion effect when a button has focus.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "card"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI15CardButtonStyleV",
          "text": "CardButtonStyle"
        },
        {
          "kind": "text",
          "text": " { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/PrimitiveButtonStyle/card",
      "kind": "symbol",
      "role": "symbol",
      "title": "card",
      "type": "topic",
      "url": "/documentation/SwiftUI/PrimitiveButtonStyle/card"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/Section": {
      "abstract": [
        {
          "text": "A container view that you can use to add hierarchy within certain views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Section"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Parent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Footer"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Section",
      "kind": "symbol",
      "role": "symbol",
      "title": "Section",
      "type": "topic",
      "url": "/documentation/SwiftUI/Section"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/Section/init(content:header:)": {
      "abstract": [
        {
          "text": "Creates a section with a header and the provided section content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:7SwiftUI11ViewBuilderV",
          "text": "ViewBuilder"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:7SwiftUI11ViewBuilderV",
          "text": "ViewBuilder"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "externalParam",
          "text": "header"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Parent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Section/init(content:header:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(content:header:)",
      "type": "topic",
      "url": "/documentation/SwiftUI/Section/init(content:header:)"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/Tab": {
      "abstract": [
        {
          "text": "The content for a tab and the tab‚Äôs associated tab item in a tab view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Tab"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Tab",
      "kind": "symbol",
      "role": "symbol",
      "title": "Tab",
      "type": "topic",
      "url": "/documentation/SwiftUI/Tab"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/Tab/init(_:systemImage:value:content:)": {
      "abstract": [
        {
          "text": "Creates a tab that the tab view presents when the tab view‚Äôs selection matches the tab‚Äôs value using a system image for the tab‚Äôs tab item image, with a localized string key label.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "nonisolated"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "titleKey"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI18LocalizedStringKeyV",
          "text": "LocalizedStringKey"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "systemImage"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:7SwiftUI11ViewBuilderV",
          "text": "ViewBuilder"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": " == "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI15DefaultTabLabelV",
          "text": "DefaultTabLabel"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Tab/init(_:systemImage:value:content:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:systemImage:value:content:)",
      "type": "topic",
      "url": "/documentation/SwiftUI/Tab/init(_:systemImage:value:content:)"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/TabContent/customizationID(_:)": {
      "abstract": [
        {
          "text": "Sets the identifier for a tab to persist its state.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "nonisolated"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "customizationID"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10TabContentP",
          "text": "TabContent"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10TabContentP0C5ValueQa",
          "text": "TabValue"
        },
        {
          "kind": "text",
          "text": ">\n"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/TabContent/customizationID(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "customizationID(_:)",
      "type": "topic",
      "url": "/documentation/SwiftUI/TabContent/customizationID(_:)"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/TabSection": {
      "abstract": [
        {
          "text": "A container that you can use to add hierarchy within a tab view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TabSection"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Header"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Footer"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "SelectionValue"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/TabSection",
      "kind": "symbol",
      "role": "symbol",
      "title": "TabSection",
      "type": "topic",
      "url": "/documentation/SwiftUI/TabSection"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/TabView": {
      "abstract": [
        {
          "text": "A view that switches between multiple child views using interactive user interface elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TabView"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "SelectionValue"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "SelectionValue"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SH",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/TabView",
      "kind": "symbol",
      "role": "symbol",
      "title": "TabView",
      "type": "topic",
      "url": "/documentation/SwiftUI/TabView"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/TabView/init(selection:content:)": {
      "abstract": [
        {
          "text": "Creates a tab view that uses a builder to create and specify selection values for its tabs.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "SelectionValue"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:7SwiftUI17TabContentBuilderV",
          "text": "TabContentBuilder"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "SelectionValue"
        },
        {
          "kind": "text",
          "text": ">"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": " == "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI17TabContentBuilderV",
          "text": "TabContentBuilder"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "SelectionValue"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI17TabContentBuilderV0D0V",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10TabContentP",
          "text": "TabContent"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/TabView/init(selection:content:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(selection:content:)",
      "type": "topic",
      "url": "/documentation/SwiftUI/TabView/init(selection:content:)"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/TabViewStyle/sidebarAdaptable": {
      "abstract": [
        {
          "text": "A tab bar style that adapts to each platform.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sidebarAdaptable"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI28SidebarAdaptableTabViewStyleV",
          "text": "SidebarAdaptableTabViewStyle"
        },
        {
          "kind": "text",
          "text": " { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/TabViewStyle/sidebarAdaptable",
      "kind": "symbol",
      "role": "symbol",
      "title": "sidebarAdaptable",
      "type": "topic",
      "url": "/documentation/SwiftUI/TabViewStyle/sidebarAdaptable"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/View/fullScreenCover(isPresented:onDismiss:content:)": {
      "abstract": [
        {
          "text": "Presents a modal view that covers as much of the screen as possible when binding to a Boolean value you provide is true.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "nonisolated"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "fullScreenCover"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "isPresented"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "onDismiss"
        },
        {
          "kind": "text",
          "text": ": (() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")? = nil, "
        },
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:7SwiftUI11ViewBuilderV",
          "text": "ViewBuilder"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "@escaping"
        },
        {
          "kind": "text",
          "text": " () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        },
        {
          "kind": "text",
          "text": "\n"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/fullScreenCover(isPresented:onDismiss:content:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "fullScreenCover(isPresented:onDismiss:content:)",
      "type": "topic",
      "url": "/documentation/SwiftUI/View/fullScreenCover(isPresented:onDismiss:content:)"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/View/immersiveEnvironmentPicker(content:)": {
      "abstract": [
        {
          "text": "Add menu items to open immersive spaces from a media player‚Äôs environment picker.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "nonisolated"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "immersiveEnvironmentPicker"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:7SwiftUI11ViewBuilderV",
          "text": "ViewBuilder"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        },
        {
          "kind": "text",
          "text": "\n"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/immersiveEnvironmentPicker(content:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "immersiveEnvironmentPicker(content:)",
      "type": "topic",
      "url": "/documentation/SwiftUI/View/immersiveEnvironmentPicker(content:)"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/View/scrollClipDisabled(_:)": {
      "abstract": [
        {
          "text": "Sets whether a scroll view clips its content to its bounds.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "nonisolated"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "scrollClipDisabled"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "disabled"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": " = true) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        },
        {
          "kind": "text",
          "text": "\n"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/scrollClipDisabled(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "scrollClipDisabled(_:)",
      "type": "topic",
      "url": "/documentation/SwiftUI/View/scrollClipDisabled(_:)"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/View/tabViewCustomization(_:)": {
      "abstract": [
        {
          "text": "Specifies the customizations to apply to the sidebar representation of the tab view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "nonisolated"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "tabViewCustomization"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "customization"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI20TabViewCustomizationV",
          "text": "TabViewCustomization"
        },
        {
          "kind": "text",
          "text": ">?) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        },
        {
          "kind": "text",
          "text": "\n"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/tabViewCustomization(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "tabViewCustomization(_:)",
      "type": "topic",
      "url": "/documentation/SwiftUI/View/tabViewCustomization(_:)"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/View/toolbar(removing:)": {
      "abstract": [
        {
          "text": "Remove a toolbar item present by default",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "nonisolated"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "toolbar"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "removing"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "defaultItemKind"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI22ToolbarDefaultItemKindV",
          "text": "ToolbarDefaultItemKind"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        },
        {
          "kind": "text",
          "text": "\n"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/toolbar(removing:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "toolbar(removing:)",
      "type": "topic",
      "url": "/documentation/SwiftUI/View/toolbar(removing:)"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/View/toolbarBackgroundVisibility(_:for:)": {
      "abstract": [
        {
          "text": "Specifies the preferred visibility of backgrounds on a bar managed by SwiftUI.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "nonisolated"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "toolbarBackgroundVisibility"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "visibility"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10VisibilityO",
          "text": "Visibility"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "bars"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI16ToolbarPlacementV",
          "text": "ToolbarPlacement"
        },
        {
          "kind": "text",
          "text": "...) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        },
        {
          "kind": "text",
          "text": "\n"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/toolbarBackgroundVisibility(_:for:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "toolbarBackgroundVisibility(_:for:)",
      "type": "topic",
      "url": "/documentation/SwiftUI/View/toolbarBackgroundVisibility(_:for:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.documentation/videos/play/wwdc2023/10070": {
      "abstract": [
        {
          "text": "Get ready to support video in your visionOS app! Take a tour of the frameworks and APIs that power video playback and learn how you can update your app to play 3D content. We‚Äôll also share tips for customizing playback to create a more immersive watching experience.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/videos/play/wwdc2023/10070",
      "images": [
        {
          "identifier": "E9EE7D0D-C77D-44E2-8417-41C3AF3011E4",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "article",
      "title": "Create a great spatial playback experience",
      "type": "topic",
      "url": "https://developer.apple.com/videos/play/wwdc2023/10070"
    },
    "doc://com.apple.documentation/videos/play/wwdc2023/10071": {
      "abstract": [
        {
          "text": "Learn how to prepare and deliver video content for visionOS using HTTP Live Streaming (HLS). Discover the current HLS delivery process for media and explore how you can expand your delivery pipeline to support 3D content. Get up to speed with tips and techniques for spatial media streaming and adapting your existing caption production workflows for 3D. And find out how to share audio tracks across video variants and add spatial audio to make your video content more immersive.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/videos/play/wwdc2023/10071",
      "images": [
        {
          "identifier": "696C6201-585A-45A1-80D1-F95F3794E7BD",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "article",
      "title": "Deliver video content for spatial experiences",
      "type": "topic",
      "url": "https://developer.apple.com/videos/play/wwdc2023/10071"
    },
    "doc://com.apple.documentation/videos/play/wwdc2024/10115": {
      "abstract": [
        {
          "text": "Extend your media viewing experience using Reality Composer Pro components like Docking Region, Reverb, and Virtual Environment Probe. Find out how to further enhance immersion using Reflections, Tint Surroundings Effect, SharePlay, and the Immersive Environment Picker.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/videos/play/wwdc2024/10115",
      "images": [
        {
          "identifier": "BE45225C-F8DE-4EAD-9C54-37FAB539DF94",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "article",
      "title": "Enhance the immersion of media viewing in custom environments",
      "type": "topic",
      "url": "https://developer.apple.com/videos/play/wwdc2024/10115"
    },
    "doc://com.apple.documentation/videos/play/wwdc2024/10147": {
      "abstract": [
        {
          "text": "iPadOS 18 introduces a new navigation system that gives people the flexibility to choose between using a tab bar or sidebar. The newly redesigned tab bar provides more space for content and other functionality. Learn how to use SwiftUI and UIKit to enable customization features ‚Äì like adding, removing and reordering tabs ‚Äì to enable a more personal touch in your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/videos/play/wwdc2024/10147",
      "images": [
        {
          "identifier": "1CE8E467-3C93-4C01-BF6A-83820CD82D3C",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "article",
      "title": "Elevate your tab and sidebar experience in iPadOS",
      "type": "topic",
      "url": "https://developer.apple.com/videos/play/wwdc2024/10147"
    },
    "doc://com.apple.documentation/videos/play/wwdc2024/10148": {
      "abstract": [
        {
          "text": "Make your windows feel tailor-made for macOS. Fine-tune your app‚Äôs windows for focused purposes, ease of use, and to express functionality. Use SwiftUI to style window toolbars and backgrounds. Arrange your windows with precision, and make smart decisions about restoration and minimization.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/videos/play/wwdc2024/10148",
      "images": [
        {
          "identifier": "090F792B-C546-4145-8B87-40B8B5A52A9B",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "article",
      "title": "Tailor macOS windows with SwiftUI",
      "type": "topic",
      "url": "https://developer.apple.com/videos/play/wwdc2024/10148"
    },
    "doc://com.apple.documentation/videos/play/wwdc2024/10152": {
      "abstract": [
        {
          "text": "Learn how to develop custom hover effects that update views when people look at them. Find out how to build an expanding button effect that combines opacity, scale, and clip effects. Discover best practices for creating effects that are comfortable and respect people‚Äôs accessibility needs.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/videos/play/wwdc2024/10152",
      "images": [
        {
          "identifier": "9BCB9FE7-7686-4615-BC26-C122A1C0DCE7",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "article",
      "title": "Create custom hover effects in visionOS",
      "type": "topic",
      "url": "https://developer.apple.com/videos/play/wwdc2024/10152"
    },
    "doc://com.apple.visionOS/documentation/visionOS": {
      "abstract": [
        {
          "text": "Create a new universe of apps and games for Apple Vision Pro.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.visionOS/documentation/visionOS",
      "images": [
        {
          "identifier": "headset-orange.svg",
          "type": "icon"
        },
        {
          "identifier": "visionOS-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "collection",
      "title": "visionOS",
      "type": "topic",
      "url": "/documentation/visionos"
    },
    "doc://com.apple.visionOS/documentation/visionOS/BOT-anist": {
      "abstract": [
        {
          "text": "Build a multiplatform app that uses windows, volumes, and animations to create a robot botanist‚Äôs greenhouse.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.visionOS/documentation/visionOS/BOT-anist",
      "images": [
        {
          "identifier": "BOT-anist-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "sampleCode",
      "title": "BOT-anist",
      "type": "topic",
      "url": "/documentation/visionos/bot-anist"
    },
    "doc://com.apple.visionOS/documentation/visionOS/World": {
      "abstract": [
        {
          "text": "Use windows, volumes, and immersive spaces to teach people about the Earth.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.visionOS/documentation/visionOS/World",
      "images": [
        {
          "identifier": "Hello-World-intro.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "sampleCode",
      "title": "Hello World",
      "type": "topic",
      "url": "/documentation/visionos/world"
    },
    "doc://com.apple.visionOS/documentation/visionOS/building-an-immersive-media-viewing-experience": {
      "abstract": [
        {
          "text": "Add a deeper level of immersion to media playback in your app with RealityKit and Reality Composer Pro.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.visionOS/documentation/visionOS/building-an-immersive-media-viewing-experience",
      "images": [
        {
          "identifier": "building-an-immersive-media-viewing-experience-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "sampleCode",
      "title": "Building an immersive media viewing experience",
      "type": "topic",
      "url": "/documentation/visionos/building-an-immersive-media-viewing-experience"
    },
    "doc://com.apple.visionOS/documentation/visionOS/diorama": {
      "abstract": [
        {
          "text": "Design scenes for your visionOS app using Reality Composer Pro.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.visionOS/documentation/visionOS/diorama",
      "images": [
        {
          "identifier": "Diorama-intro.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "sampleCode",
      "title": "Diorama",
      "type": "topic",
      "url": "/documentation/visionos/diorama"
    },
    "doc://com.apple.visionOS/documentation/visionOS/enabling-video-reflections-in-an-immersive-environment": {
      "abstract": [
        {
          "text": "Create a more immersive experience by adding video reflections in a custom environment.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.visionOS/documentation/visionOS/enabling-video-reflections-in-an-immersive-environment",
      "images": [
        {
          "identifier": "lightspill-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "sampleCode",
      "title": "Enabling video reflections in an immersive environment",
      "type": "topic",
      "url": "/documentation/visionos/enabling-video-reflections-in-an-immersive-environment"
    },
    "doc://com.apple.visionOS/documentation/visionOS/happybeam": {
      "abstract": [
        {
          "text": "Leverage a Full Space to create a fun game using ARKit.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.visionOS/documentation/visionOS/happybeam",
      "images": [
        {
          "identifier": "Happy-Beam-intro.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "sampleCode",
      "title": "Happy Beam",
      "type": "topic",
      "url": "/documentation/visionos/happybeam"
    },
    "headset-orange.svg": {
      "alt": "An icon representing visionOS.",
      "identifier": "headset-orange.svg",
      "type": "image",
      "variants": [
        {
          "svgID": "a",
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/77dc6a0821bfb2da8db4a3b2033e6f6b/headset-orange.svg"
        }
      ]
    },
    "https://developer.apple.com/documentation/visionos#realitykit-and-reality-composer-pro": {
      "identifier": "https://developer.apple.com/documentation/visionos#realitykit-and-reality-composer-pro",
      "title": "Reality Composer Pro",
      "titleInlineContent": [
        {
          "text": "Reality Composer Pro",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/documentation/visionos#realitykit-and-reality-composer-pro"
    },
    "https://developer.apple.com/shareplay/": {
      "identifier": "https://developer.apple.com/shareplay/",
      "title": "SharePlay",
      "titleInlineContent": [
        {
          "text": "SharePlay",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/shareplay/"
    },
    "lightspill-PageImage-card.png": {
      "alt": "A screenshot that shows the app's video player in the Studio environment in visionOS. The screenshot shows the contents of the video player reflecting onto the surrounding environment.",
      "identifier": "lightspill-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/87e397de07459c756d21eb0c441569f7/lightspill-PageImage-card@2x.png"
        }
      ]
    },
    "purple.tv.png": {
      "alt": "nil",
      "identifier": "purple.tv.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/a44c214f53001d9a2dcba6c3236f7d9b/purple.tv.png"
        }
      ]
    },
    "swiftData-PageImage-card.png": {
      "alt": "A gray and white Swift logo on a swirly blue background.",
      "identifier": "swiftData-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/8f347b5f4b93bb57bf95423987e9a6c9/swiftData-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/f0a5e8a43bc94c93e07c48dc59f884ed/swiftData-PageImage-card~dark@2x.png"
        }
      ]
    },
    "visionOS-PageImage-card.png": {
      "alt": "A stylized illustration of an Apple Vision Pro with the word 'hello' written across the front in cursive.",
      "identifier": "visionOS-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/90294957b44e5508a55fe39373eea478/visionOS-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/90fe463571fd45badfabacbb07f30591/visionOS-PageImage-card~dark@2x.png"
        }
      ]
    }
  },
  "sampleCodeDownload": {
    "action": {
      "identifier": "2f35504f2d6c/DestinationVideo.zip",
      "isActive": true,
      "overridingTitle": "Download (1.2 GB)",
      "type": "reference"
    },
    "kind": "sampleDownload"
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVKit~1AVPlayerViewControllerDelegate/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AVPlayerViewControllerDelegate"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVKit~1AVPlayerViewController/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AVPlayerViewController"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)UIViewController",
              "text": "UIViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFoundation~1AVPlaybackCoordinator/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AVPlaybackCoordinator"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFAudio~1AVAudioSession/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AVAudioSession"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
