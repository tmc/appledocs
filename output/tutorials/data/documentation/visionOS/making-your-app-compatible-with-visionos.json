{
  "abstract": [
    {
      "text": "Modify your iPadOS or iOS app to run successfully in visionOS as a compatible app.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.visionOS/documentation/visionOS"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.visionOS/documentation/visionOS/making-your-app-compatible-with-visionos"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "role": "article",
    "roleHeading": "Article",
    "title": "Making your existing app compatible with visionOS"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A compatible iPadOS or iOS app links against the iOS SDK and runs in",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "visionOS without needing to add a visionOS destination.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Although visionOS provides a complete set of iOS frameworks for linking, some features of those frameworks might be unavailable due to hardware or usage differences. Read ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.visionOS/documentation/visionOS/determining-whether-to-bring-your-app-to-visionos",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " for details on behavior changes, API availability checks, and deprecated frameworks.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "To ensure your app runs correctly in visionOS, handle any unavailable features gracefully and provide workarounds",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "wherever possible.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Run-as-a-compatible-app-in-visionOS",
          "level": 3,
          "text": "Run as a compatible app in visionOS",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The App Store makes compatible iPad and iPhone apps available in visionOS automatically after you sign the updated Apple Developer Program License Agreement.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If you have an app in the iOS App Store, try downloading it on Apple Vision Pro and run it.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If you built your app using the iOS SDK, Xcode 15 and later automatically adds a Designed for iPad runtime destination to your project.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "making-your-app-compatible.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Use this destination to run your app and test its compatibility in visionOS.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Depending on your app, you might need to make additional changes to account for features that are only found in the iOS SDK.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "You can test most of your app’s core functionality in Simulator, but some features are available only on a device.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Handle-SDK-differences-gracefully",
          "level": 3,
          "text": "Handle SDK differences gracefully",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "visionOS contains most of the same technologies as iPadOS and iOS, but there",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "are differences. In some cases, a feature you use in your app might not",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "be available because of hardware differences or because of differences in how",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "people use a visionOS device. As part of your testing, consider the impact of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "any unavailable features on your app’s overall experience. Whenever possible, work",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "around unavailable features by disabling them or providing alternate ways to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "access the same content.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The following features aren’t available in compatible iPad and iPhone apps",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in visionOS. Use framework APIs listed in ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.visionOS/documentation/visionOS/determining-whether-to-bring-your-app-to-visionos",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to determine when the features are available.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Core Motion services",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Barometer and magnetometer data",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "All location services except the standard service",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "HealthKit data",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Video or still-photo capture",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Camera features like Auto Focus or flash",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Rear-facing (selfie) cameras",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Although device cameras are unavailable on Apple Vision Pro, compatible apps can capture photos of personas using",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/AVFoundation/AVCaptureDevice",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " with the position of ",
                  "type": "text"
                },
                {
                  "code": ".front",
                  "type": "codeVoice"
                },
                {
                  "text": " or use continuity camera to capture photo and video from iPhone and iPad.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "If your app uses an unsupported feature but can function without it,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you can still bring your app to visionOS. Remove features that aren’t",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "available and focus on bringing the rest of your content to the platform.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For example, if you have an app that lets people write down notes and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "take pictures to include with those notes, disable the picture-taking",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "ability in visionOS but let people add text and incorporate images from their library.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If your app relies on frameworks that behave differently in visionOS, update your code to handle those differences.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Throughout your code, make sure you respond to unusual situations:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Use availability checks.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " Availability checks give you a clear indication when you can’t use a feature, but some frameworks might have more subtle behavior. Read ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.visionOS/documentation/visionOS/determining-whether-to-bring-your-app-to-visionos",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " for a list of frameworks and features with availability checks.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Remove deprecated code.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " If your app currently uses deprecated APIs or frameworks, update your code",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "to use appropriate replacements. Read ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.visionOS/documentation/visionOS/determining-whether-to-bring-your-app-to-visionos",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " for a list of deprecated frameworks.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Handle error conditions.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " If a function throws an exception or returns an error, handle the error. Use error information to adjust your app’s behavior or provide an explanation of why it can’t perform certain operations.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Handle ",
                          "type": "text"
                        },
                        {
                          "code": "nil",
                          "type": "codeVoice"
                        },
                        {
                          "text": " or empty values gracefully.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " Validate objects and return values before you try to use them.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Update your user interface.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " Provide appropriate messaging in your interface when a feature is unavailable, or remove feature-specific views entirely if you can do so cleanly. Don’t leave empty views where the feature was.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Adapt-to-device-differences",
          "level": 2,
          "text": "Adapt to device differences",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Apple frameworks take a device-agnostic approach whenever possible",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to minimize issues when you use them on different device types. Apple",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "devices come in a variety of shapes and sizes, with different",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "sets of features. Rather than build your app for a specific device,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "make sure it adapts to any device and can gracefully handle differences.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Build robustness into your app during the design process. Avoid",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "assumptions that might cause your app to break when it runs on a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "new device, and make sure your app adapts dynamically to different",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "conditions. For example:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Don’t assume the device type or idiom is always iPhone, iPad, or iPod Touch.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " Avoid decisions based on the current idiom. If you do rely on the current idiom, provide reasonable defaults for unknown idioms.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Design your app to handle unavailable hardware or features.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " Specific hardware and features might be unavailable for many different reasons. For example, a feature might be unavailable when your app runs in Simulator. Perform availability checks whenever possible, and handle unavailable features gracefully.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Design your windows and views to adapt dynamically.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " Build your interface to adapt dynamically to any size using SwiftUI or Auto Layout. Assume the size of your app can change dynamically.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Don’t assume the device has a specific number of displays.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " People can connect iPad and iPhone to an external display, and visionOS devices use two displays to create a stereoscopic version of your app’s content.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Don’t make assumptions based on the available frameworks or symbols.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " The presence or absence of frameworks or code symbols is an unreliable way to identify a device type and can change in later software updates. See ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.visionOS/documentation/visionOS/determining-whether-to-bring-your-app-to-visionos",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " for information on using availability checks to identify which features are available for a given framework.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Don’t assume your app runs in the background.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " visionOS doesn’t support location, external accessory, or Bluetooth-peripheral background execution modes.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Don’t assume that background apps are hidden.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " In visionOS, the windows of background apps remain visible, but are dimmed when no one looks at them. The only time app windows disappear is when one app presents an immersive space.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Audit-your-interface-code",
          "level": 3,
          "text": "Audit your interface code",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To minimize disruptions, visionOS runs your compatible iPad or iPhone app in an environment that matches an iPad as much as possible.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Windows and views retain the same appearance that they have in iPadOS or iOS, and the system sizes your app’s window to fit an iPad whenever possible.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When building your app’s interface, make choices that ensure your app runs well in visionOS too.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Adopt the following best practices for your interface-related code:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Support iPad and iPhone in the same app.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " Create one app that supports both device types, rather than separate apps for each device. SwiftUI and UIKit support adaptable interfaces, and Xcode provides tools to help you visualize your interface at different supported sizes.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Organize your interface using scenes.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " Scenes are a fundamental tool for managing your app’s interface. Use the scene types in SwiftUI and UIKit to assemble and manage the views you display in windows.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Adapt your interface to any size.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " Design your interface to adapt naturally to different sizes. For an introduction to SwiftUI views and layout, see ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Declaring-a-Custom-View",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ". For information about laying out views in UIKit, see ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/UIKit/view-layout",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Don’t access screen details.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " visionOS provides reasonable values for ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/UIKit/UIScreen",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " objects, but don’t use those values to make decisions. Instead, create an adaptive layout or use ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/index.html",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " to make your app look good on all platforms.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Don’t rely on the status bar for layouts.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/UIKit/UIStatusBarManager/statusBarFrame",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " returns ",
                      "type": "text"
                    },
                    {
                      "code": "CGRectZero",
                      "type": "codeVoice"
                    },
                    {
                      "text": " on visionOS. Use ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/design/human-interface-guidelines/layout#Guides-and-safe-areas",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " to calculate layout instead.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Specify the supported interface orientations.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " Add the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UISupportedInterfaceOrientations",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " key to your app’s ",
                      "type": "text"
                    },
                    {
                      "code": "Info.plist",
                      "type": "codeVoice"
                    },
                    {
                      "text": " file to specify the interface orientations it supports. Support all interface orientations whenever possible. visionOS adds an interface rotation for your app button only when this key is present. To display your app’s interface in a particular orientation at launch, add the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIPreferredDefaultInterfaceOrientation",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " key to your app’s ",
                      "type": "text"
                    },
                    {
                      "code": "Info.plist",
                      "type": "codeVoice"
                    },
                    {
                      "text": " file. Set the value of the key to one of the values in your app’s ",
                      "type": "text"
                    },
                    {
                      "code": "UISupportedInterfaceOrientations",
                      "type": "codeVoice"
                    },
                    {
                      "text": " key. Add ",
                      "type": "text"
                    },
                    {
                      "code": "~ipad",
                      "type": "codeVoice"
                    },
                    {
                      "text": " or ",
                      "type": "text"
                    },
                    {
                      "code": "~iphone",
                      "type": "codeVoice"
                    },
                    {
                      "text": " to the key name, for example, ",
                      "type": "text"
                    },
                    {
                      "code": "UIInterfaceOrientationPortrait~ipad",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", to specify device-specific orientation preferences.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Adopt vector-based images when possible.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " Vector-based images scale well to different sizes while retaining a crisp appearance. If you use bitmap-based assets, make them the exact size you need. Don’t use oversized assets, which require extra work to display at the correct size.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Update hover effects in custom views.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " Hover effects convey the focused view or control in your interface. Standard system views apply hover effects as needed. For custom views and controls, verify that the hover effects look appropriate in visionOS. Add or update the content shape for your hover effects if needed. The following example uses SwiftUI to add a rectangle-shaped hover effect to a rectangle in a view:",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "code": [
            "Rectangle()",
            "  .contentShape(.hoverEffect, .rectangle)",
            "  .hoverEffect()"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Create-adaptive-layouts-in-UIKit",
          "level": 3,
          "text": "Create adaptive layouts in UIKit",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If your UIKit app uses hardcoded values or relies on ",
              "type": "text"
            },
            {
              "code": "UIScreen",
              "type": "codeVoice"
            },
            {
              "text": " for layout, the first step to migrating your app to visionOS is to use an adaptable layout.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "When you make decisions using device details, your app might produce",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "inconsistent or erroneous results on an unknown device type, or it",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "might fail altogether. Find solutions that rely on environmental",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "information, rather than the device type. For example, SwiftUI and UIKit",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "start layout using the app’s window size, which isn’t necessarily the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "same size as the device’s display.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Device-specific information is available when you absolutely need it,",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "but validate the information you receive and provide reasonable default",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "behavior for unexpected values.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "Think about ways to create adaptive layouts using the following techniques:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Use stack views.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/UIKit/UIStackView",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " objects adjust the position of their contained views automatically when interface dimensions change. Alternatively, ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/index.html",
                      "isActive": true,
                      "overridingTitle": "Auto Layout",
                      "overridingTitleInlineContent": [
                        {
                          "text": "Auto Layout",
                          "type": "text"
                        }
                      ],
                      "type": "reference"
                    },
                    {
                      "text": " constraints let you specify the rules that determine the size and position of the views in your interface.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Stay within layout margins.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " Read ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/UIKit/positioning-content-within-layout-margins",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " to set up constraints that respect layout margins and don’t crowd other content.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Respect the safe area.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " Place views so they’re not obstructed by other content. Each view has a ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/UIKit/UILayoutGuide",
                      "isActive": true,
                      "overridingTitle": "layout guide",
                      "overridingTitleInlineContent": [
                        {
                          "text": "layout guide",
                          "type": "text"
                        }
                      ],
                      "type": "reference"
                    },
                    {
                      "text": " that helps you create constraints to position your views within the safe area, which adapt to the current device automatically. Read ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/UIKit/positioning-content-relative-to-the-safe-area",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " for guidance.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Adapt based on changes in UITraitCollection.",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " Write code to adjust your app’s layout according to changes in elements of the iOS user interface, such as size class, display scale, and layout direction. Read ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/UIKit/UITraitCollection",
                      "isActive": true,
                      "overridingTitle": "UITraitCollection",
                      "overridingTitleInlineContent": [
                        {
                          "text": "UITraitCollection",
                          "type": "text"
                        }
                      ],
                      "type": "reference"
                    },
                    {
                      "text": " for more information.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Test-specific-scenarios-before-uploading-your-app",
          "level": 3,
          "text": "Test specific scenarios before uploading your app",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The following App Store features for iOS continue to work when",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "your app runs in visionOS:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "In-app purchases and subscriptions",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "App capabilities and entitlements",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "On-demand resources",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "App thinning",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "When you use app thinning to optimize your app for different devices",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and operating systems, the App Store selects the resources and content",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that offer the best fit for visionOS devices. It then removes any other resources",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to create a streamlined installation of your app. When you export your",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "app from Xcode 15 or later, you can test the thinning support using",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the visionOS virtual thinning target.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/AVFoundation/AVCaptureDevice": {
      "abstract": [
        {
          "text": "An object that represents a hardware or virtual capture device like a camera or microphone.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVCaptureDevice"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFoundation/AVCaptureDevice",
      "kind": "symbol",
      "role": "symbol",
      "title": "AVCaptureDevice",
      "type": "topic",
      "url": "/documentation/AVFoundation/AVCaptureDevice"
    },
    "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIPreferredDefaultInterfaceOrientation": {
      "abstract": [
        {
          "text": "A string that indicates the preferred initial interface orientation for iPad and iPhone apps running on visionOS.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIPreferredDefaultInterfaceOrientation",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIPreferredDefaultInterfaceOrientation",
      "type": "topic",
      "url": "/documentation/BundleResources/Information-Property-List/UIPreferredDefaultInterfaceOrientation"
    },
    "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UISupportedInterfaceOrientations": {
      "abstract": [
        {
          "text": "The interface orientations supported by your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UISupportedInterfaceOrientations",
      "kind": "symbol",
      "role": "symbol",
      "title": "UISupportedInterfaceOrientations",
      "type": "topic",
      "url": "/documentation/BundleResources/Information-Property-List/UISupportedInterfaceOrientations"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/Declaring-a-Custom-View": {
      "abstract": [
        {
          "text": "Define views and assemble them into a view hierarchy.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/Declaring-a-Custom-View",
      "kind": "article",
      "role": "article",
      "title": "Declaring a custom view",
      "type": "topic",
      "url": "/documentation/SwiftUI/Declaring-a-Custom-View"
    },
    "doc://com.apple.documentation/documentation/UIKit/UILayoutGuide": {
      "abstract": [
        {
          "text": "A rectangular area that can interact with Auto Layout.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UILayoutGuide"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/UIKit/UILayoutGuide",
      "kind": "symbol",
      "role": "symbol",
      "title": "UILayoutGuide",
      "type": "topic",
      "url": "/documentation/UIKit/UILayoutGuide"
    },
    "doc://com.apple.documentation/documentation/UIKit/UIScreen": {
      "abstract": [
        {
          "text": "An object that defines the properties associated with a hardware-based display.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIScreen"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/UIKit/UIScreen",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIScreen",
      "type": "topic",
      "url": "/documentation/UIKit/UIScreen"
    },
    "doc://com.apple.documentation/documentation/UIKit/UIStackView": {
      "abstract": [
        {
          "text": "A streamlined interface for laying out a collection of views in either a column or a row.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIStackView"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/UIKit/UIStackView",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIStackView",
      "type": "topic",
      "url": "/documentation/UIKit/UIStackView"
    },
    "doc://com.apple.documentation/documentation/UIKit/UIStatusBarManager/statusBarFrame": {
      "abstract": [
        {
          "text": "The frame rectangle of the status bar.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "statusBarFrame"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@CGRect",
          "text": "CGRect"
        },
        {
          "kind": "text",
          "text": " { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/UIKit/UIStatusBarManager/statusBarFrame",
      "kind": "symbol",
      "role": "symbol",
      "title": "statusBarFrame",
      "type": "topic",
      "url": "/documentation/UIKit/UIStatusBarManager/statusBarFrame"
    },
    "doc://com.apple.documentation/documentation/UIKit/UITraitCollection": {
      "abstract": [
        {
          "text": "A collection of data that represents the environment for an individual element in your app’s user interface.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UITraitCollection"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/UIKit/UITraitCollection",
      "kind": "symbol",
      "role": "symbol",
      "title": "UITraitCollection",
      "type": "topic",
      "url": "/documentation/UIKit/UITraitCollection"
    },
    "doc://com.apple.documentation/documentation/UIKit/positioning-content-relative-to-the-safe-area": {
      "abstract": [
        {
          "text": "Position views so that they aren’t obstructed by other content.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/UIKit/positioning-content-relative-to-the-safe-area",
      "kind": "article",
      "role": "article",
      "title": "Positioning content relative to the safe area",
      "type": "topic",
      "url": "/documentation/UIKit/positioning-content-relative-to-the-safe-area"
    },
    "doc://com.apple.documentation/documentation/UIKit/positioning-content-within-layout-margins": {
      "abstract": [
        {
          "text": "Position views so that they aren’t crowded by other content.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/UIKit/positioning-content-within-layout-margins",
      "kind": "article",
      "role": "article",
      "title": "Positioning content within layout margins",
      "type": "topic",
      "url": "/documentation/UIKit/positioning-content-within-layout-margins"
    },
    "doc://com.apple.documentation/documentation/UIKit/view-layout": {
      "abstract": [
        {
          "text": "Use stack views to lay out the views of your interface automatically. Use Auto Layout when you require precise placement of your views.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/UIKit/view-layout",
      "kind": "article",
      "role": "article",
      "title": "View layout",
      "type": "topic",
      "url": "/documentation/UIKit/view-layout"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.visionOS/documentation/visionOS": {
      "abstract": [
        {
          "text": "Create a new universe of apps and games for Apple Vision Pro.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.visionOS/documentation/visionOS",
      "images": [
        {
          "identifier": "headset-orange.svg",
          "type": "icon"
        },
        {
          "identifier": "visionOS-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "collection",
      "title": "visionOS",
      "type": "topic",
      "url": "/documentation/visionos"
    },
    "doc://com.apple.visionOS/documentation/visionOS/bringing-your-app-to-visionos": {
      "abstract": [
        {
          "text": "Build a version of your iPadOS or iOS app using the visionOS SDK,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and update your code for platform differences.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.visionOS/documentation/visionOS/bringing-your-app-to-visionos",
      "kind": "article",
      "role": "article",
      "title": "Bringing your existing apps to visionOS",
      "type": "topic",
      "url": "/documentation/visionos/bringing-your-app-to-visionos"
    },
    "doc://com.apple.visionOS/documentation/visionOS/bringing-your-arkit-app-to-visionos": {
      "abstract": [
        {
          "text": "Update an iPadOS or iOS app that uses ARKit, and provide an equivalent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "experience in visionOS.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.visionOS/documentation/visionOS/bringing-your-arkit-app-to-visionos",
      "kind": "article",
      "role": "article",
      "title": "Bringing your ARKit app to visionOS",
      "type": "topic",
      "url": "/documentation/visionos/bringing-your-arkit-app-to-visionos"
    },
    "doc://com.apple.visionOS/documentation/visionOS/determining-whether-to-bring-your-app-to-visionos": {
      "abstract": [
        {
          "text": "Decide whether to bring your existing iPadOS or iOS app to visionOS.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.visionOS/documentation/visionOS/determining-whether-to-bring-your-app-to-visionos",
      "kind": "article",
      "role": "article",
      "title": "Determining whether to bring your app to visionOS",
      "type": "topic",
      "url": "/documentation/visionos/determining-whether-to-bring-your-app-to-visionos"
    },
    "headset-orange.svg": {
      "alt": "An icon representing visionOS.",
      "identifier": "headset-orange.svg",
      "type": "image",
      "variants": [
        {
          "svgID": "a",
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/77dc6a0821bfb2da8db4a3b2033e6f6b/headset-orange.svg"
        }
      ]
    },
    "https://developer.apple.com/design/human-interface-guidelines/layout#Guides-and-safe-areas": {
      "identifier": "https://developer.apple.com/design/human-interface-guidelines/layout#Guides-and-safe-areas",
      "title": "safe areas",
      "titleInlineContent": [
        {
          "text": "safe areas",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/design/human-interface-guidelines/layout#Guides-and-safe-areas"
    },
    "https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/index.html": {
      "identifier": "https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/index.html",
      "title": "Auto Layout",
      "titleInlineContent": [
        {
          "text": "Auto Layout",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/index.html"
    },
    "making-your-app-compatible.png": {
      "alt": "The supported destinations section of an Xcode project that lists compatible iPhone, iPad, Mac, and Apple Vision simulator as destinations.",
      "identifier": "making-your-app-compatible.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/3d56600f6b91ea8b79a095b7a91a274f/making-your-app-compatible@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1386112352f798b41bf4453213303341/making-your-app-compatible~dark@2x.png"
        }
      ]
    },
    "visionOS-PageImage-card.png": {
      "alt": "A stylized illustration of an Apple Vision Pro with the word 'hello' written across the front in cursive.",
      "identifier": "visionOS-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/90294957b44e5508a55fe39373eea478/visionOS-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/90fe463571fd45badfabacbb07f30591/visionOS-PageImage-card~dark@2x.png"
        }
      ]
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "iOS-migration-and-compatibility",
      "generated": true,
      "identifiers": [
        "doc://com.apple.visionOS/documentation/visionOS/determining-whether-to-bring-your-app-to-visionos",
        "doc://com.apple.visionOS/documentation/visionOS/bringing-your-app-to-visionos",
        "doc://com.apple.visionOS/documentation/visionOS/bringing-your-arkit-app-to-visionos"
      ],
      "title": "iOS migration and compatibility"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1UIKit~1UIScreen/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIScreen"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1UIKit~1UITraitCollection/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UITraitCollection"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1UIKit~1UIStatusBarManager~1statusBarFrame/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@property"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "kind": "keyword",
              "text": "nonatomic"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "keyword",
              "text": "readonly"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@S@CGRect",
              "text": "CGRect"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "statusBarFrame"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFoundation~1AVCaptureDevice/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AVCaptureDevice"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1UIKit~1UILayoutGuide/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UILayoutGuide"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1UIKit~1UIStackView/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIStackView"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)UIView",
              "text": "UIView"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
