{
  "abstract": [
    {
      "text": "Assume that the current task is executing on this actorâ€™s serial executor,",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "or stop program execution otherwise.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.CoreHID/documentation/CoreHID",
        "doc://com.apple.CoreHID/documentation/CoreHID/HIDDeviceClient"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.CoreHID/documentation/CoreHID/HIDDeviceClient/assumeIsolated(_:file:line:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Swift",
    "externalID": "s:ScA12_ConcurrencyE14assumeIsolated_4file4lineqd__qd__xYiKXE_s12StaticStringVSutKs8SendableRd__lF::SYNTHESIZED::s:7CoreHID15HIDDeviceClientC",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "assumeIsolated"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "T"
      },
      {
        "kind": "text",
        "text": ">(("
      },
      {
        "kind": "keyword",
        "text": "isolated"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "T"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "file"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s12StaticStringV",
        "text": "StaticString"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "line"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Su",
        "text": "UInt"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "rethrows"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "T"
      }
    ],
    "modules": [
      {
        "name": "Core HID",
        "relatedModules": [
          "Swift"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "assumeIsolated(_:file:line:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "macOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "nonisolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "assumeIsolated"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "T"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "operation"
            },
            {
              "kind": "text",
              "text": ": ("
            },
            {
              "kind": "keyword",
              "text": "isolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "T"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "file"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s12StaticStringV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s12StaticStringV",
              "text": "StaticString"
            },
            {
              "kind": "text",
              "text": " = "
            },
            {
              "kind": "keyword",
              "text": "#fileID"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "line"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Su",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Su",
              "text": "UInt"
            },
            {
              "kind": "text",
              "text": " = "
            },
            {
              "kind": "keyword",
              "text": "#line"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "rethrows"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "T"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "T"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s8SendableP",
              "text": "Sendable"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The operation that will be executed if the current context",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "is executing on the actors serial executor.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "operation"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The file name to print if the assertion fails. The default is",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "where this method was called.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "file"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The line number to print if the assertion fails The default is",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "where this method was called.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "line"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The return value of the ",
              "type": "text"
            },
            {
              "code": "operation",
              "type": "codeVoice"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You call this method to ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "assume and verify",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " that the currently",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "executing synchronous function is actually executing on the serial",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "executor of this actor.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If that is the case, the operation is invoked with an ",
              "type": "text"
            },
            {
              "code": "isolated",
              "type": "codeVoice"
            },
            {
              "text": " version",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of the actor, allowing synchronous access to actor local state without",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "hopping through asynchronous boundaries.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If the current context is not running on the actorâ€™s serial executor, or",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "if the actor is a reference to a remote actor, this method will crash",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "with a fatal error (similar to ",
              "type": "text"
            },
            {
              "code": "preconditionIsolated()",
              "type": "codeVoice"
            },
            {
              "text": ").",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Note that this check is performed against the passed in actorâ€™s serial",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "executor, meaning that if another actor uses the same serial executorâ€“by",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "using that actorâ€™s ",
              "type": "text"
            },
            {
              "code": "Actor/unownedExecutor",
              "type": "codeVoice"
            },
            {
              "text": " as its own",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "Actor/unownedExecutor",
              "type": "codeVoice"
            },
            {
              "text": "â€“this check will succeed, as from a concurrency",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "safety perspective, the serial executor guarantees mutual exclusion of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "those two actors.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "This method can only be used from synchronous functions, as asynchronous",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "functions should instead perform a normal method call to the actor, which",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "will hop task execution to the target actor if necessary.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "This check is performed against the actorâ€™s serial executor,",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "meaning that / if another actor uses the same serial executorâ€“by using",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "another actorâ€™s executor as its own ",
                  "type": "text"
                },
                {
                  "code": "Actor/unownedExecutor",
                  "type": "codeVoice"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "â€“this check will succeed , as from a concurrency safety perspective,",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "the serial executor guarantees mutual exclusion of those two actors.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Rethrows the ",
                  "type": "text"
                },
                {
                  "code": "Error",
                  "type": "codeVoice"
                },
                {
                  "text": " thrown by the operation if it threw",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Throws",
          "style": "note",
          "type": "aside"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.CoreHID/documentation/CoreHID": {
      "abstract": [
        {
          "text": "Interact with keyboards, mice, and other human interface devices.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.CoreHID/documentation/CoreHID",
      "kind": "symbol",
      "role": "collection",
      "title": "Core HID",
      "type": "topic",
      "url": "/documentation/corehid"
    },
    "doc://com.apple.CoreHID/documentation/CoreHID/HIDDeviceClient": {
      "abstract": [
        {
          "text": "A client of a physical or virtual HID compatible peripheral.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "actor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "HIDDeviceClient"
        }
      ],
      "identifier": "doc://com.apple.CoreHID/documentation/CoreHID/HIDDeviceClient",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "HIDDeviceClient"
        }
      ],
      "role": "symbol",
      "title": "HIDDeviceClient",
      "type": "topic",
      "url": "/documentation/corehid/hiddeviceclient"
    },
    "doc://com.apple.CoreHID/documentation/CoreHID/HIDDeviceClient/assumeIsolated(_:file:line:)": {
      "abstract": [
        {
          "text": "Assume that the current task is executing on this actorâ€™s serial executor,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "or stop program execution otherwise.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "assumeIsolated"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "file"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12StaticStringV",
          "text": "StaticString"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "line"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Su",
          "text": "UInt"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.CoreHID/documentation/CoreHID/HIDDeviceClient/assumeIsolated(_:file:line:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "assumeIsolated(_:file:line:)",
      "type": "topic",
      "url": "/documentation/corehid/hiddeviceclient/assumeisolated(_:file:line:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:Su": {
      "abstract": [
        {
          "text": "An unsigned integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Su",
      "kind": "symbol",
      "role": "symbol",
      "title": "UInt",
      "type": "topic",
      "url": "/documentation/Swift/UInt"
    },
    "doc://com.externally.resolved.symbol/s:s12StaticStringV": {
      "abstract": [
        {
          "text": "A string type designed to represent text that is known at compile time.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "StaticString"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s12StaticStringV",
      "kind": "symbol",
      "role": "symbol",
      "title": "StaticString",
      "type": "topic",
      "url": "/documentation/Swift/StaticString"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/corehid/hiddeviceclient/assumeisolated(_:file:line:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
