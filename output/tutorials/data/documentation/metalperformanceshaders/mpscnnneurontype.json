{
  "abstract": [
    {
      "text": "The types of neuron filter to append to a convolution.",
      "type": "text"
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/metalperformanceshaders",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/convolutional_neural_network_kernels",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnconvolution"
      ],
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/metalperformanceshaders",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/recurrent_neural_networks",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpslstmdescriptor"
      ],
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/metalperformanceshaders",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/objects_that_simplify_the_creation_of_neural_networks",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneuronnode"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype"
  },
  "kind": "symbol",
  "legacy_identifier": 2866297,
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:@E@MPSCNNNeuronType",
    "fragments": [
      {
        "kind": "text",
        "text": "enum "
      },
      {
        "kind": "identifier",
        "text": "MPSCNNNeuronType"
      }
    ],
    "modules": [
      {
        "name": "Metal Performance Shaders"
      }
    ],
    "platforms": [
      {
        "current": "18.4",
        "introducedAt": "11.0",
        "name": "iOS"
      },
      {
        "current": "18.4",
        "introducedAt": "11.0",
        "name": "iPadOS"
      },
      {
        "current": "18.4",
        "introducedAt": "13.0",
        "name": "Mac Catalyst"
      },
      {
        "current": "15.4",
        "introducedAt": "10.13",
        "name": "macOS"
      },
      {
        "current": "18.4",
        "introducedAt": "11.0",
        "name": "tvOS"
      },
      {
        "current": "2.4",
        "introducedAt": "1.0",
        "name": "visionOS"
      }
    ],
    "role": "symbol",
    "roleHeading": "Enumeration",
    "symbolKind": "enum",
    "title": "MPSCNNNeuronType"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "enum"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MPSCNNNeuronType"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Int32",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s5Int32V",
              "text": "Int32"
            },
            {
              "kind": "text",
              "text": ", @unchecked "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s8SendableP",
              "text": "Sendable"
            }
          ]
        }
      ],
      "kind": "declarations"
    }
  ],
  "references": {
    "doc://com.apple.Swift/documentation/Swift/Int32": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int32",
      "kind": "symbol",
      "role": "symbol",
      "title": "Int32",
      "type": "topic",
      "url": "/documentation/swift/int32"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders": {
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders",
      "kind": "symbol",
      "role": "collection",
      "title": "Metal Performance Shaders",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/convolutional_neural_network_kernels": {
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/convolutional_neural_network_kernels",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Convolutional Neural Network Kernels",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/convolutional_neural_network_kernels"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnconvolution": {
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnconvolution",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNConvolution",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnconvolution"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneuronnode": {
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneuronnode",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronNode",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneuronnode"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype": {
      "abstract": [
        {
          "text": "The types of neuron filter to append to a convolution.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "enum "
        },
        {
          "kind": "identifier",
          "text": "MPSCNNNeuronType"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/absolute": {
      "abstract": [
        {
          "text": "A neuron type indicating an absolute neuron filter.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "absolute"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/absolute",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.absolute",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/absolute"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/count": {
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "count"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/count",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.count",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/count"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/elu": {
      "abstract": [
        {
          "text": "A neuron type indicating a parametric exponential linear unit neuron filter.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "ELU"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/elu",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.ELU",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/elu"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/exponential": {
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "exponential"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/exponential",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.exponential",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/exponential"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/gelu": {
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "geLU"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/gelu",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.geLU",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/gelu"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/hardsigmoid": {
      "abstract": [
        {
          "text": "A neuron type indicating a hard sigmoid neuron filter.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "hardSigmoid"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/hardsigmoid",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.hardSigmoid",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/hardsigmoid"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/linear": {
      "abstract": [
        {
          "text": "A neuron type indicating a linear neuron filter.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "linear"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/linear",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.linear",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/linear"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/logarithm": {
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "logarithm"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/logarithm",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.logarithm",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/logarithm"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/none": {
      "abstract": [
        {
          "text": "A neuron type indicating no neuron filter.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "none"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/none",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.none",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/none"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/power": {
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "power"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/power",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.power",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/power"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/prelu": {
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "pReLU"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/prelu",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.pReLU",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/prelu"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/relu": {
      "abstract": [
        {
          "text": "A neuron type indicating a rectified linear unit neuron filter.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "reLU"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/relu",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.reLU",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/relu"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/relun": {
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "reLUN"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/relun",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.reLUN",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/relun"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/sigmoid": {
      "abstract": [
        {
          "text": "A neuron type indicating a sigmoid neuron filter.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "sigmoid"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/sigmoid",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.sigmoid",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/sigmoid"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/softplus": {
      "abstract": [
        {
          "text": "A neuron type indicating a parametric softplus neuron filter.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "softPlus"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/softplus",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.softPlus",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/softplus"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/softsign": {
      "abstract": [
        {
          "text": "A neuron type indicating a softsign neuron filter.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "softSign"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/softsign",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.softSign",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/softsign"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/tanh": {
      "abstract": [
        {
          "text": "A neuron type indicating a hyperbolic tangent neuron filter.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "tanH"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/tanh",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCNNNeuronType.tanH",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscnnneurontype/tanh"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpslstmdescriptor": {
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpslstmdescriptor",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSLSTMDescriptor",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpslstmdescriptor"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/objects_that_simplify_the_creation_of_neural_networks": {
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/objects_that_simplify_the_creation_of_neural_networks",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Objects that Simplify the Creation of Neural Networks",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/objects_that_simplify_the_creation_of_neural_networks"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/recurrent_neural_networks": {
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/recurrent_neural_networks",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Recurrent Neural Networks",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/recurrent_neural_networks"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Sendable"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "topicSections": [
    {
      "anchor": "2868800",
      "identifiers": [
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/none",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/relu",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/linear",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/sigmoid",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/hardsigmoid",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/tanh",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/absolute",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/softplus",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/softsign",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/elu",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/count",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/exponential",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/gelu",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/logarithm",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/prelu",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/power",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscnnneurontype/relun"
      ],
      "kind": "taskGroup",
      "title": "Enumeration Cases"
    }
  ],
  "variants": [
    {
      "paths": [
        "documentation/metalperformanceshaders/mpscnnneurontype"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    },
    {
      "paths": [
        "documentation/metalperformanceshaders/mpscnnneurontype"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
