{
  "abstract": [
    {
      "text": "This method attempts to apply a kernel in place on a texture.",
      "type": "text"
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/metalperformanceshaders",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/image_filters",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel/1618873-encode"
  },
  "kind": "symbol",
  "legacy_identifier": 1618873,
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(cs)MPSUnaryImageKernel(im)encodeToCommandBuffer:inPlaceTexture:fallbackCopyAllocator:",
    "fragments": [
      {
        "kind": "text",
        "text": "func "
      },
      {
        "kind": "identifier",
        "text": "encode"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "identifier",
        "text": "commandBuffer"
      },
      {
        "kind": "text",
        "text": ": any MTLCommandBuffer, "
      },
      {
        "kind": "identifier",
        "text": "inPlaceTexture"
      },
      {
        "kind": "text",
        "text": ": UnsafeMutablePointer<any MTLTexture>, "
      },
      {
        "kind": "identifier",
        "text": "fallbackCopyAllocator"
      },
      {
        "kind": "text",
        "text": ": MPSCopyAllocator?) -> Bool"
      }
    ],
    "modules": [
      {
        "name": "Metal Performance Shaders"
      }
    ],
    "parent": {
      "title": "MPSUnaryImageKernel"
    },
    "platforms": [
      {
        "current": "18.4",
        "introducedAt": "9.0",
        "name": "iOS"
      },
      {
        "current": "18.4",
        "introducedAt": "9.0",
        "name": "iPadOS"
      },
      {
        "current": "18.4",
        "introducedAt": "13.0",
        "name": "Mac Catalyst"
      },
      {
        "current": "15.4",
        "introducedAt": "10.13",
        "name": "macOS"
      },
      {
        "current": "18.4",
        "introducedAt": "9.0",
        "name": "tvOS"
      },
      {
        "current": "2.4",
        "introducedAt": "1.0",
        "name": "visionOS"
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "instm",
    "title": "encode(commandBuffer:inPlaceTexture:fallbackCopyAllocator:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "encode"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "commandBuffer"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "text",
              "text": "any "
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)MTLCommandBuffer",
              "text": "MTLCommandBuffer"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "inPlaceTexture"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "texture"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeMutablePointer",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sp",
              "text": "UnsafeMutablePointer"
            },
            {
              "kind": "text",
              "text": "<any "
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLTexture",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)MTLTexture",
              "text": "MTLTexture"
            },
            {
              "kind": "text",
              "text": ">"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "fallbackCopyAllocator"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "copyAllocator"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscopyallocator",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@MPSCopyAllocator",
              "text": "MPSCopyAllocator"
            },
            {
              "kind": "text",
              "text": "?"
            },
            {
              "kind": "text",
              "text": " = nil"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "languages": [
        "swift"
      ],
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A valid command buffer to receive the encoded kernel.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "commandBuffer"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A pointer to a valid texture containing the source image. On success, the image contents and possibly the texture itself will be replaced with the result image.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "texture"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "An optional block to allocate a new texture to hold the operation results, in case in-place operation is not possible. The allocator may use a different pixel format or size than the original texture. You may enqueue operations on the provided command buffer using the provided compute command encoder to initialize the texture contents.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "copyAllocator"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return_value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.documentation/documentation/swift/true",
                      "isActive": false,
                      "type": "reference"
                    },
                    {
                      "text": " if the operation succeeded (the texture may have been replaced with a new texture if a copy allocator was provided).",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.documentation/documentation/swift/false",
                      "isActive": false,
                      "type": "reference"
                    },
                    {
                      "text": " if the operation failed (the texture is unmodified).",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This method attempts to apply the kernel in place on a texture. In-place operation means that the same texture is used both to hold the input image and the results. Operating in-place can be an excellent way to reduce resource utilization, and save time and energy. While simple Metal kernels can not operate in place because textures can not be readable and writable at the same time, some Metal Performance Shaders kernels can operate in place because they use multi-pass algorithms. Whether a kernel can operate in-place can depend on current hardware, OS version, and the parameters and properties passed to it. You should never assume that a kernel will continue to work in place, even if you have observed it doing so before.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If the in-place operation succeeds, this method returns ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/swift/true",
              "isActive": false,
              "type": "reference"
            },
            {
              "text": ".  If the in-place operation fails and no copy allocator is provided, then this method returns ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/swift/false",
              "isActive": false,
              "type": "reference"
            },
            {
              "text": ". Without a fallback copy allocator, in neither case is the pointer held at ",
              "type": "text"
            },
            {
              "code": "texture",
              "type": "codeVoice"
            },
            {
              "text": " modified.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Failure during in-place operation is very common and will occur inconsistently across different hardware platforms and OS versions. Without a fallback copy allocator, operating in place may require significant error handling code to accompany each call to this method, further complicating your code.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": " You may find it simplifies your code to provide a fallback copy allocator so that the operation can proceed reliably even when it can not complete in-place. When an in-place filter fails, the copy allocator will be invoked to create a new texture in which to write the results, allowing the filter to proceed reliably out-of-place. The original texture will be released, replaced with a pointer to the new texture and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/swift/true",
              "isActive": false,
              "type": "reference"
            },
            {
              "text": " will be returned. If the copy allocator returns an invalid texture, it is released, ",
              "type": "text"
            },
            {
              "code": "texture",
              "type": "codeVoice"
            },
            {
              "text": " remains unmodified, and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/swift/false",
              "isActive": false,
              "type": "reference"
            },
            {
              "text": " is returned.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "id <MTLTexture> inPlaceTex = ...;",
            "MPSImageSobel *sobelFiler = [[MPSImageSobel alloc] initWithDevice: my_device];",
            " ",
            "// With a fallback MPSCopyAllocator, failure should only occur in exceptional conditions such as MTLTexture allocation failure or programmer error.",
            "// That is, the operation is roughly as robust as the MPSCopyAllocator.",
            "// Depending on the quality of that, we might decide we are justified here in not checking the return value.",
            "[sobelFilter encodeToCommandBuffer: my_command_buffer inPlaceTexture: &inPlaceTex fallbackCopyAllocator: myAllocator];",
            "// inPlaceTex may be replaced!",
            " ",
            "// If myAllocator was not called:",
            "//      inPlaceTex holds the original texture with the result pixels in it.",
            "// Else:",
            "//      1) myAllocator creates a new texture.",
            "//      2) The new texture pixel data is overwritten by MPSUnaryImageKernel.",
            "//      3) The old texture passed in *inPlaceTex is released once.",
            "//      4) *inPlaceTex = the new texture",
            "//",
            "// In either case, the caller should now hold one reference to the texture now held in inPlaceTex, whether it was replaced or not. Most of the time that means that nothing further needs to be done here, and you can proceed to the next image encoding operation. However, if other agents held references to the original texture, they still hold them and may need to be alerted that the texture has been replaced so that they can retain the new texture and release the old one.",
            " ",
            "[sobelFilter release];  // if not ARC, clean up the MPSImageSobel object"
          ],
          "metadata": {
            "abstract": [
              {
                "text": "In-Place Operation Example",
                "type": "text"
              }
            ],
            "anchor": "2556921",
            "title": "Listing 1"
          },
          "syntax": "occ",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.Swift/documentation/Swift/Bool": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
      "kind": "symbol",
      "role": "symbol",
      "title": "Bool",
      "type": "topic",
      "url": "/documentation/swift/bool"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeMutablePointer": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeMutablePointer",
      "kind": "symbol",
      "role": "symbol",
      "title": "UnsafeMutablePointer",
      "type": "topic",
      "url": "/documentation/swift/unsafemutablepointer"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders": {
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders",
      "kind": "symbol",
      "role": "collection",
      "title": "Metal Performance Shaders",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/image_filters": {
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/image_filters",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Image Filters",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/image_filters"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscopyallocator": {
      "abstract": [
        {
          "text": "A block to make a copy of a source texture for filters that can only execute out of place.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "typealias "
        },
        {
          "kind": "identifier",
          "text": "MPSCopyAllocator"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscopyallocator",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSCopyAllocator",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpscopyallocator"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel": {
      "abstract": [
        {
          "text": "A kernel that consumes one texture and produces one texture.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPSUnaryImageKernel",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpsunaryimagekernel"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel/1618741-encode": {
      "abstract": [
        {
          "text": "Encodes a kernel into a command buffer, out of place.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "identifier",
          "text": "commandBuffer"
        },
        {
          "kind": "text",
          "text": ": any MTLCommandBuffer, "
        },
        {
          "kind": "identifier",
          "text": "sourceTexture"
        },
        {
          "kind": "text",
          "text": ": any MTLTexture, "
        },
        {
          "kind": "identifier",
          "text": "destinationTexture"
        },
        {
          "kind": "text",
          "text": ": any MTLTexture)"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel/1618741-encode",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(commandBuffer:sourceTexture:destinationTexture:)",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpsunaryimagekernel/1618741-encode"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel/1618754-sourceregion": {
      "abstract": [
        {
          "text": "Determines the region of the source texture that will be read for an encode operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "sourceRegion"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "identifier",
          "text": "destinationSize"
        },
        {
          "kind": "text",
          "text": ": MTLSize) -> MPSRegion"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel/1618754-sourceregion",
      "kind": "symbol",
      "role": "symbol",
      "title": "sourceRegion(destinationSize:)",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpsunaryimagekernel/1618754-sourceregion"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel/1618873-encode": {
      "abstract": [
        {
          "text": "This method attempts to apply a kernel in place on a texture.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "identifier",
          "text": "commandBuffer"
        },
        {
          "kind": "text",
          "text": ": any MTLCommandBuffer, "
        },
        {
          "kind": "identifier",
          "text": "inPlaceTexture"
        },
        {
          "kind": "text",
          "text": ": UnsafeMutablePointer<any MTLTexture>, "
        },
        {
          "kind": "identifier",
          "text": "fallbackCopyAllocator"
        },
        {
          "kind": "text",
          "text": ": MPSCopyAllocator?) -> Bool"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel/1618873-encode",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(commandBuffer:inPlaceTexture:fallbackCopyAllocator:)",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpsunaryimagekernel/1618873-encode"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel/1618873-encode#2556921": {
      "abstract": [
        {
          "text": "In-Place Operation Example",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel/1618873-encode#2556921",
      "kind": "article",
      "role": "codeListing",
      "title": "Listing 1",
      "type": "section",
      "url": "/documentation/metalperformanceshaders/mpsunaryimagekernel/1618873-encode#2556921"
    },
    "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel/2866328-encode": {
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "identifier",
          "text": "commandBuffer"
        },
        {
          "kind": "text",
          "text": ": any MTLCommandBuffer, "
        },
        {
          "kind": "identifier",
          "text": "sourceImage"
        },
        {
          "kind": "text",
          "text": ": MPSImage, "
        },
        {
          "kind": "identifier",
          "text": "destinationImage"
        },
        {
          "kind": "text",
          "text": ": MPSImage)"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel/2866328-encode",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(commandBuffer:sourceImage:destinationImage:)",
      "type": "topic",
      "url": "/documentation/metalperformanceshaders/mpsunaryimagekernel/2866328-encode"
    },
    "doc://com.apple.documentation/documentation/swift/false": {
      "identifier": "doc://com.apple.documentation/documentation/swift/false",
      "kind": "symbol",
      "role": "symbol",
      "title": "false",
      "type": "topic",
      "url": "/documentation/swift/false"
    },
    "doc://com.apple.documentation/documentation/swift/true": {
      "identifier": "doc://com.apple.documentation/documentation/swift/true",
      "kind": "symbol",
      "role": "symbol",
      "title": "true",
      "type": "topic",
      "url": "/documentation/swift/true"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer": {
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer",
      "kind": "symbol",
      "role": "symbol",
      "title": "MTLCommandBuffer",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer"
    },
    "doc://com.apple.metal/documentation/Metal/MTLTexture": {
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLTexture",
      "kind": "symbol",
      "role": "symbol",
      "title": "MTLTexture",
      "type": "topic",
      "url": "/documentation/metal/mtltexture"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "generated": true,
      "identifiers": [
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpscopyallocator",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel/2866328-encode",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel/1618741-encode",
        "doc://com.apple.documentation/documentation/metalperformanceshaders/mpsunaryimagekernel/1618754-sourceregion"
      ],
      "title": "Methods"
    }
  ],
  "variants": [
    {
      "paths": [
        "documentation/metalperformanceshaders/mpsunaryimagekernel/1618873-encodetocommandbuffer"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    },
    {
      "paths": [
        "documentation/metalperformanceshaders/mpsunaryimagekernel/1618873-encode"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
