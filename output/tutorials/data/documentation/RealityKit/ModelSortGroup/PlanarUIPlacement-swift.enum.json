{
  "abstract": [
    {
      "text": "A set of predefined groups that indicate how the renderer draws a model",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "relative to a planar mesh or a SwiftUI view thatâ€™s coplanar and overlapping.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.RealityKit/documentation/RealityKit",
        "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:17RealityFoundation14ModelSortGroupV17PlanarUIPlacementO",
    "fragments": [
      {
        "kind": "keyword",
        "text": "enum"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "PlanarUIPlacement"
      }
    ],
    "modules": [
      {
        "name": "RealityKit"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "PlanarUIPlacement"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Enumeration",
    "symbolKind": "enum",
    "title": "ModelSortGroup.PlanarUIPlacement"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "enum"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "PlanarUIPlacement"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 3,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use one of the predefined groups ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/planarUIInline",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/planarUIAlwaysInFront",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/planarUIAlwaysBehind",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to order virtual content relative to coincidental (coplanar and overlapping) app UI to avoid rendering artifacts.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Placing-virtual-content-relative-to-app-UI",
          "level": 3,
          "text": "Placing virtual content relative to app UI",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The scenario below shows a museum scene that has a green planar mesh entity, stacked between two",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "SwiftUI ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " instances",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/ZStack",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "alignments": [
            "center",
            "center"
          ],
          "header": "row",
          "rows": [
            [
              [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Actual View",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Layout Illustration",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "identifier": "modelsortgroupcomponent-planarui-green-inline-dark",
                      "type": "image"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "identifier": "modelsortgroupcomponent-planarui-layer-breakdown",
                      "type": "image"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ]
          ],
          "type": "table"
        },
        {
          "code": [
            "ZStack {",
            "   // A red UI layer.",
            "   Color(.red).opacity(0.5)",
            "       .frame(width: 700, height: 520, alignment: .center)",
            "       .clipShape(RoundedRectangle(cornerRadius: 40))",
            "",
            "   // A green plane with 0.9 opacity.",
            "   RealityView { content in",
            "       let greenPlane = Entity()",
            "       let planeModel = ModelComponent(",
            "           mesh: .generatePlane(width: 0.3, height: 0.2, cornerRadius: 0.01),",
            "           materials: [UnlitMaterial(color: .green)]",
            "       )",
            "       greenPlane.components.set(planeModel)",
            "       greenPlane.components.set(OpacityComponent(opacity: 0.9))",
            "",
            "       // Set the model sort group to planarUIInline.",
            "       let group = ModelSortGroup.planarUIInline",
            "       greenPlane.components.set(ModelSortGroupComponent(group: group, order: 0))",
            "       content.add(greenPlane)",
            "   }",
            "   .frame(depth: 0.0)",
            "",
            "   // A UI with text and SF symbol.",
            "   VStack {",
            "       Text(\"Hello World\").font(.system(size: 50))",
            "       Image(systemName: \"visionpro\")",
            "           .resizable()",
            "           .foregroundColor(.yellow)",
            "           .aspectRatio(contentMode: .fit)",
            "           .frame(width: 80.0, height: 80.0)",
            "   }",
            "   .frame(width: 460, height: 240, alignment: .center)",
            "   .offset(z: .ulpOfOne)",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/planarUIInline",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " group to draw the ",
              "type": "text"
            },
            {
              "code": "greenPlane",
              "type": "codeVoice"
            },
            {
              "text": " entity according to its placement within the ",
              "type": "text"
            },
            {
              "code": "ZStack",
              "type": "codeVoice"
            },
            {
              "text": ". The ",
              "type": "text"
            },
            {
              "code": "greenPlane",
              "type": "codeVoice"
            },
            {
              "text": " draws over the red layer, and the text/symbol draws over the ",
              "type": "text"
            },
            {
              "code": "greenPlane",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let group = ModelSortGroup.planarUIAlwaysInline",
            "greenPlane.components.set(ModelSortGroupComponent(group: group, order: 0))"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "columns": [
            {
              "content": [],
              "size": 1
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "modelsortgroupcomponent-planarui-green-inline-dark",
                      "type": "image"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "size": 5
            },
            {
              "content": [],
              "size": 1
            }
          ],
          "numberOfColumns": 7,
          "type": "row"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/planarUIAlwaysInFront",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " group to order the ",
              "type": "text"
            },
            {
              "code": "greenPlane",
              "type": "codeVoice"
            },
            {
              "text": " after both UI layers. The ",
              "type": "text"
            },
            {
              "code": "greenPlane",
              "type": "codeVoice"
            },
            {
              "text": " draws over both the text/symbol layer and the red layer.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let group = ModelSortGroup.planarUIAlwaysInFront",
            "greenPlane.components.set(ModelSortGroupComponent(group: group, order: 0))"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "columns": [
            {
              "content": [],
              "size": 1
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "modelsortgroupcomponent-planarui-green-alwaysinfront-dark",
                      "type": "image"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "size": 5
            },
            {
              "content": [],
              "size": 1
            }
          ],
          "numberOfColumns": 7,
          "type": "row"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/planarUIAlwaysBehind",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " group to order the ",
              "type": "text"
            },
            {
              "code": "greenPlane",
              "type": "codeVoice"
            },
            {
              "text": " before both UI layers. The red layer and the text/symbol layer both draw over the ",
              "type": "text"
            },
            {
              "code": "greenPlane",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let group = ModelSortGroup.planarUIAlwaysBehind",
            "greenPlane.components.set(ModelSortGroupComponent(group: group, order: 0))"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "columns": [
            {
              "content": [],
              "size": 1
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "modelsortgroupcomponent-planarui-green-alwaysbehind-dark",
                      "type": "image"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "size": 5
            },
            {
              "content": [],
              "size": 1
            }
          ],
          "numberOfColumns": 7,
          "type": "row"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.RealityKit/documentation/RealityKit": {
      "abstract": [
        {
          "text": "Simulate and render 3D content for use in your augmented reality apps.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit",
      "kind": "symbol",
      "role": "collection",
      "title": "RealityKit",
      "type": "topic",
      "url": "/documentation/realitykit"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup": {
      "abstract": [
        {
          "text": "A group that you assign to multiple entities to tell the renderer what",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "order and how to render the entities in the group.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ModelSortGroup"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ModelSortGroup"
        }
      ],
      "role": "symbol",
      "title": "ModelSortGroup",
      "type": "topic",
      "url": "/documentation/realitykit/modelsortgroup"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum": {
      "abstract": [
        {
          "text": "A set of predefined groups that indicate how the renderer draws a model",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "relative to a planar mesh or a SwiftUI view thatâ€™s coplanar and overlapping.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PlanarUIPlacement"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PlanarUIPlacement"
        }
      ],
      "role": "symbol",
      "title": "ModelSortGroup.PlanarUIPlacement",
      "type": "topic",
      "url": "/documentation/realitykit/modelsortgroup/planaruiplacement-swift.enum"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/==(_:_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether two values are equal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "=="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14ModelSortGroupV",
          "text": "ModelSortGroup"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14ModelSortGroupV17PlanarUIPlacementO",
          "text": "PlanarUIPlacement"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14ModelSortGroupV",
          "text": "ModelSortGroup"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14ModelSortGroupV17PlanarUIPlacementO",
          "text": "PlanarUIPlacement"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/==(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "==(_:_:)",
      "type": "topic",
      "url": "/documentation/realitykit/modelsortgroup/planaruiplacement-swift.enum/==(_:_:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/Equatable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/Equatable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Equatable Implementations",
      "type": "topic",
      "url": "/documentation/realitykit/modelsortgroup/planaruiplacement-swift.enum/equatable-implementations"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/alwaysBehind": {
      "abstract": [
        {
          "text": "Instructs the renderer to draw a modelâ€™s mesh behind a SwiftUI",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "layer thatâ€™s coincident with the mesh.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "alwaysBehind"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/alwaysBehind",
      "kind": "symbol",
      "role": "symbol",
      "title": "ModelSortGroup.PlanarUIPlacement.alwaysBehind",
      "type": "topic",
      "url": "/documentation/realitykit/modelsortgroup/planaruiplacement-swift.enum/alwaysbehind"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/alwaysInFront": {
      "abstract": [
        {
          "text": "Instructs the renderer to draw a modelâ€™s mesh in front of a SwiftUI",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "layer thatâ€™s coincident with the mesh.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "alwaysInFront"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/alwaysInFront",
      "kind": "symbol",
      "role": "symbol",
      "title": "ModelSortGroup.PlanarUIPlacement.alwaysInFront",
      "type": "topic",
      "url": "/documentation/realitykit/modelsortgroup/planaruiplacement-swift.enum/alwaysinfront"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/hash(into:)": {
      "abstract": [
        {
          "text": "Hashes the essential components of this value by feeding them into the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given hasher.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hash"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "into"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6HasherV",
          "text": "Hasher"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/hash(into:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "hash(into:)",
      "type": "topic",
      "url": "/documentation/realitykit/modelsortgroup/planaruiplacement-swift.enum/hash(into:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/hashValue": {
      "abstract": [
        {
          "text": "The hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hashValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/hashValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "hashValue",
      "type": "topic",
      "url": "/documentation/realitykit/modelsortgroup/planaruiplacement-swift.enum/hashvalue"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/inlineUI": {
      "abstract": [
        {
          "text": "Instructs the renderer to draw a modelâ€™s mesh along with a SwiftUI",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "layer thatâ€™s coincident with the mesh.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "inlineUI"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/inlineUI",
      "kind": "symbol",
      "role": "symbol",
      "title": "ModelSortGroup.PlanarUIPlacement.inlineUI",
      "type": "topic",
      "url": "/documentation/realitykit/modelsortgroup/planaruiplacement-swift.enum/inlineui"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/planarUIAlwaysBehind": {
      "abstract": [
        {
          "text": "A model sort group that instructs the renderer to draw a modelâ€™s mesh",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "behind a SwiftUI layer thatâ€™s coincident with the mesh. See ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " for usage.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "planarUIAlwaysBehind"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14ModelSortGroupV",
          "text": "ModelSortGroup"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/planarUIAlwaysBehind",
      "kind": "symbol",
      "role": "symbol",
      "title": "planarUIAlwaysBehind",
      "type": "topic",
      "url": "/documentation/realitykit/modelsortgroup/planaruialwaysbehind"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/planarUIAlwaysInFront": {
      "abstract": [
        {
          "text": "A model sort group that instructs the renderer to draw a modelâ€™s mesh",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "in front of a SwiftUI layer thatâ€™s coincident with the mesh. See ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " for usage.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "planarUIAlwaysInFront"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14ModelSortGroupV",
          "text": "ModelSortGroup"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/planarUIAlwaysInFront",
      "kind": "symbol",
      "role": "symbol",
      "title": "planarUIAlwaysInFront",
      "type": "topic",
      "url": "/documentation/realitykit/modelsortgroup/planaruialwaysinfront"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/planarUIInline": {
      "abstract": [
        {
          "text": "A model sort group that instructs the renderer to draw a modelâ€™s mesh",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "along with a SwiftUI layer thatâ€™s coincident with the mesh. See ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " for usage.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "planarUIInline"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14ModelSortGroupV",
          "text": "ModelSortGroup"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/planarUIInline",
      "kind": "symbol",
      "role": "symbol",
      "title": "planarUIInline",
      "type": "topic",
      "url": "/documentation/realitykit/modelsortgroup/planaruiinline"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/View": {
      "abstract": [
        {
          "text": "A type that represents part of your appâ€™s user interface and provides modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View",
      "kind": "symbol",
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/SwiftUI/View"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/ZStack": {
      "abstract": [
        {
          "text": "A view that overlays its subviews, aligning them in both axes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ZStack"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/ZStack",
      "kind": "symbol",
      "role": "symbol",
      "title": "ZStack",
      "type": "topic",
      "url": "/documentation/SwiftUI/ZStack"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:s8CopyableP": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8CopyableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/Swift/Copyable"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    },
    "modelsortgroupcomponent-planarui-green-alwaysbehind-dark": {
      "alt": "A screenshot of a living room scene with the greenPlane entity drawing before both UI layers. All 3 are coplanar and overlapping with one another.",
      "identifier": "modelsortgroupcomponent-planarui-green-alwaysbehind-dark",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/a2699cd94867c5eab13a9be51651d3b9/modelsortgroupcomponent-planarui-green-alwaysbehind-dark.jpg"
        }
      ]
    },
    "modelsortgroupcomponent-planarui-green-alwaysinfront-dark": {
      "alt": "A screenshot of a museum scene with the greenPlane entity drawing after both UI layers. All 3 are coplanar and overlapping with one another.",
      "identifier": "modelsortgroupcomponent-planarui-green-alwaysinfront-dark",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/e910f2198f27d85d8ac418bce616f378/modelsortgroupcomponent-planarui-green-alwaysinfront-dark.jpg"
        }
      ]
    },
    "modelsortgroupcomponent-planarui-green-inline-dark": {
      "alt": "A screenshot of a museum scene with the red UI layer drawing first, followed by the greenPlane entity drawing second, and the layer with text and symbol drawing third. All 3 are coplanar and overlapping with one another.",
      "identifier": "modelsortgroupcomponent-planarui-green-inline-dark",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4edf2a53d85de8fb8bed0e9a9794b2e6/modelsortgroupcomponent-planarui-green-inline-dark.jpg"
        }
      ]
    },
    "modelsortgroupcomponent-planarui-layer-breakdown": {
      "alt": "A screenshot illustrating the relative layout of the 3 layers in this scenario with the red UI layer at the back, greenPlane entity in the middle, and the UI with text and SF Symbol in front.",
      "identifier": "modelsortgroupcomponent-planarui-layer-breakdown",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/983f602fa7218629e360047efa5e2010/modelsortgroupcomponent-planarui-layer-breakdown.jpg"
        }
      ]
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s8CopyableP",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/s:s8SendableP"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "topicSections": [
    {
      "anchor": "Operators",
      "generated": true,
      "identifiers": [
        "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/==(_:_:)"
      ],
      "title": "Operators"
    },
    {
      "anchor": "Enumeration-Cases",
      "generated": true,
      "identifiers": [
        "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/alwaysBehind",
        "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/alwaysInFront",
        "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/inlineUI"
      ],
      "title": "Enumeration Cases"
    },
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/hashValue"
      ],
      "title": "Instance Properties"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/hash(into:)"
      ],
      "title": "Instance Methods"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.RealityKit/documentation/RealityKit/ModelSortGroup/PlanarUIPlacement-swift.enum/Equatable-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/realitykit/modelsortgroup/planaruiplacement-swift.enum"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
