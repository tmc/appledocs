{
  "abstract": [
    {
      "text": "The base protocol for action handlers.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.RealityKit/documentation/RealityKit"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:17RealityFoundation21ActionHandlerProtocolP",
    "fragments": [
      {
        "kind": "keyword",
        "text": "protocol"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "ActionHandlerProtocol"
      }
    ],
    "modules": [
      {
        "name": "RealityKit"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "ActionHandlerProtocol"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Protocol",
    "symbolKind": "protocol",
    "title": "ActionHandlerProtocol"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "ActionHandlerProtocol"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "One of two approaches can be taken when subscribing to, and responding to action events. Which approach is taken",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is dictated by complexity of the action, and user preference.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The simplest approach is to process action events using an external closure. This saves having to define",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a formal handler for the action. For example:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct MyAction: EntityAction {",
            "    ...",
            "}",
            "MyAction.subscribe(to: .started) { event in",
            "    let action = event.action",
            "    // Do something with the action.",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The other approach is to use a formal handler. This requires defining a structure for the handler",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that conforms to the ",
              "type": "text"
            },
            {
              "code": "ActionHandlerProtocol",
              "type": "codeVoice"
            },
            {
              "text": " and registering the handler so it can be instantiated",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "when the action animation is played. It is only necessary to define the event functions for the event types",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that one wishes to respond to.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct MyAction: EntityAction { }",
            "",
            "struct MyActionHandler: ActionHandlerProtocol {",
            "",
            "   typealias ActionType = MyAction",
            "",
            "   // Application data can be stored within the handler.",
            "   var applicationData: ApplicationData",
            "",
            "   // Customizable init",
            "   init(action: MyAction, player: Entity, currentLevel: Int) { ... }",
            "",
            "   // Process start events",
            "   mutating func actionStarted(event: EventType) { }",
            "}",
            "",
            "MyActionHandler.register { event in",
            "    // Create the handler.",
            "    return MyActionHandler(applicationData: appData)",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.RealityKit/documentation/RealityKit": {
      "abstract": [
        {
          "text": "Simulate and render 3D content for use in your augmented reality apps.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit",
      "kind": "symbol",
      "role": "collection",
      "title": "RealityKit",
      "type": "topic",
      "url": "/documentation/realitykit"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ActionAnimation": {
      "abstract": [
        {
          "text": "Defines an an action animation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ActionAnimation"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ActionAnimation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ActionAnimation"
        }
      ],
      "role": "symbol",
      "title": "ActionAnimation",
      "type": "topic",
      "url": "/documentation/realitykit/actionanimation"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ActionEntityResolution": {
      "abstract": [
        {
          "text": "Options available to determine the resolution method for a target entity in an action.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ActionEntityResolution"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ActionEntityResolution",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ActionEntityResolution"
        }
      ],
      "role": "symbol",
      "title": "ActionEntityResolution",
      "type": "topic",
      "url": "/documentation/realitykit/actionentityresolution"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol": {
      "abstract": [
        {
          "text": "The base protocol for action handlers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ActionHandlerProtocol"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ActionHandlerProtocol"
        }
      ],
      "role": "symbol",
      "title": "ActionHandlerProtocol",
      "type": "topic",
      "url": "/documentation/realitykit/actionhandlerprotocol"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/ActionType": {
      "abstract": [
        {
          "text": "The action type associated that is associated with the handler.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ActionType"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation12EntityActionP",
          "text": "EntityAction"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/ActionType",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "ActionType",
      "type": "topic",
      "url": "/documentation/realitykit/actionhandlerprotocol/actiontype"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/EventType": {
      "abstract": [
        {
          "text": "The event type returned to each event function in the handler.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EventType"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/EventType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EventType"
        }
      ],
      "role": "symbol",
      "title": "ActionHandlerProtocol.EventType",
      "type": "topic",
      "url": "/documentation/realitykit/actionhandlerprotocol/eventtype"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionEnded(event:)": {
      "abstract": [
        {
          "text": "The function used to respond to action ended events.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "actionEnded"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "event"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation21ActionHandlerProtocolP9EventTypea",
          "text": "EventType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionEnded(event:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "actionEnded(event:)",
      "type": "topic",
      "url": "/documentation/realitykit/actionhandlerprotocol/actionended(event:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionPaused(event:)": {
      "abstract": [
        {
          "text": "The function used to respond to action paused events.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "actionPaused"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "event"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation21ActionHandlerProtocolP9EventTypea",
          "text": "EventType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionPaused(event:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "actionPaused(event:)",
      "type": "topic",
      "url": "/documentation/realitykit/actionhandlerprotocol/actionpaused(event:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionResumed(event:)": {
      "abstract": [
        {
          "text": "The function used to respond to action resumed events.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "actionResumed"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "event"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation21ActionHandlerProtocolP9EventTypea",
          "text": "EventType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionResumed(event:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "actionResumed(event:)",
      "type": "topic",
      "url": "/documentation/realitykit/actionhandlerprotocol/actionresumed(event:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionSkipped(event:)": {
      "abstract": [
        {
          "text": "The function used to respond to action skipped events.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "actionSkipped"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "event"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation21ActionHandlerProtocolP9EventTypea",
          "text": "EventType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionSkipped(event:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "actionSkipped(event:)",
      "type": "topic",
      "url": "/documentation/realitykit/actionhandlerprotocol/actionskipped(event:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionStarted(event:)": {
      "abstract": [
        {
          "text": "The function used to respond to action started events.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "actionStarted"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "event"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation21ActionHandlerProtocolP9EventTypea",
          "text": "EventType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionStarted(event:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "actionStarted(event:)",
      "type": "topic",
      "url": "/documentation/realitykit/actionhandlerprotocol/actionstarted(event:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionTerminated(event:)": {
      "abstract": [
        {
          "text": "The function used to respond to action terminated events.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "actionTerminated"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "event"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation21ActionHandlerProtocolP9EventTypea",
          "text": "EventType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionTerminated(event:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "actionTerminated(event:)",
      "type": "topic",
      "url": "/documentation/realitykit/actionhandlerprotocol/actionterminated(event:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionUpdated(event:)": {
      "abstract": [
        {
          "text": "The function used to respond to action updated events.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "actionUpdated"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "event"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation21ActionHandlerProtocolP9EventTypea",
          "text": "EventType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionUpdated(event:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "actionUpdated(event:)",
      "type": "topic",
      "url": "/documentation/realitykit/actionhandlerprotocol/actionupdated(event:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/register(_:)": {
      "abstract": [
        {
          "text": "Registers a handler that responds to raised action events for a particular action type.",
          "type": "text"
        }
      ],
      "defaultImplementations": 2,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "register"
        },
        {
          "kind": "text",
          "text": "(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation21ActionHandlerProtocolP9EventTypea",
          "text": "EventType"
        },
        {
          "kind": "text",
          "text": ") -> (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation21ActionHandlerProtocolP",
          "text": "ActionHandlerProtocol"
        },
        {
          "kind": "text",
          "text": ")?)"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/register(_:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "register(_:)",
      "type": "topic",
      "url": "/documentation/realitykit/actionhandlerprotocol/register(_:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/EntityAction": {
      "abstract": [
        {
          "text": "A protocol that defines an action for an entity.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EntityAction"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/EntityAction",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EntityAction"
        }
      ],
      "role": "symbol",
      "title": "EntityAction",
      "type": "topic",
      "url": "/documentation/realitykit/entityaction"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Action-management",
      "generated": true,
      "identifiers": [
        "doc://com.apple.RealityKit/documentation/RealityKit/EntityAction",
        "doc://com.apple.RealityKit/documentation/RealityKit/ActionAnimation",
        "doc://com.apple.RealityKit/documentation/RealityKit/ActionEntityResolution"
      ],
      "title": "Action management"
    }
  ],
  "topicSections": [
    {
      "anchor": "Associated-Types",
      "generated": true,
      "identifiers": [
        "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/ActionType"
      ],
      "title": "Associated Types"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionEnded(event:)",
        "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionPaused(event:)",
        "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionResumed(event:)",
        "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionSkipped(event:)",
        "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionStarted(event:)",
        "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionTerminated(event:)",
        "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/actionUpdated(event:)"
      ],
      "title": "Instance Methods"
    },
    {
      "anchor": "Type-Aliases",
      "generated": true,
      "identifiers": [
        "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/EventType"
      ],
      "title": "Type Aliases"
    },
    {
      "anchor": "Type-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.RealityKit/documentation/RealityKit/ActionHandlerProtocol/register(_:)"
      ],
      "title": "Type Methods"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/realitykit/actionhandlerprotocol"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
