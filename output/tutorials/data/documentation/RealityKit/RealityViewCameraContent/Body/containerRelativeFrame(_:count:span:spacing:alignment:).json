{
  "abstract": [
    {
      "text": "Positions this view within an invisible frame with a size relative",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "to the nearest container.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.RealityKit/documentation/RealityKit",
        "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewCameraContent",
        "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewCameraContent/Body"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewCameraContent/Body/containerRelativeFrame(_:count:span:spacing:alignment:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI4ViewPAAE22containerRelativeFrame_5count4span7spacing9alignmentQrAA4AxisO3SetV_S2i14CoreFoundation7CGFloatVAA9AlignmentVtF::SYNTHESIZED::s:19_RealityKit_SwiftUI0A17ViewCameraContentV4BodyV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "containerRelativeFrame"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4AxisO",
        "text": "Axis"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4AxisO3SetV",
        "text": "Set"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "count"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Si",
        "text": "Int"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "span"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Si",
        "text": "Int"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "spacing"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:14CoreFoundation7CGFloatV",
        "text": "CGFloat"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "alignment"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI9AlignmentV",
        "text": "Alignment"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "keyword",
        "text": "some"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4ViewP",
        "text": "View"
      }
    ],
    "modules": [
      {
        "name": "RealityKit",
        "relatedModules": [
          "SwiftUI"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "containerRelativeFrame(_:count:span:spacing:alignment:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "nonisolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "containerRelativeFrame"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "axes"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4AxisO",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4AxisO",
              "text": "Axis"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4AxisO3SetV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4AxisO3SetV",
              "text": "Set"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "count"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Si",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Si",
              "text": "Int"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "span"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Si",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Si",
              "text": "Int"
            },
            {
              "kind": "text",
              "text": " = 1, "
            },
            {
              "kind": "externalParam",
              "text": "spacing"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:14CoreFoundation7CGFloatV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:14CoreFoundation7CGFloatV",
              "text": "CGFloat"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "alignment"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI9AlignmentV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI9AlignmentV",
              "text": "Alignment"
            },
            {
              "kind": "text",
              "text": " = .center) -> "
            },
            {
              "kind": "keyword",
              "text": "some"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": "\n"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "code": "View/containerRelativeFrame(_:alignment:)",
              "type": "codeVoice"
            },
            {
              "text": " modifier",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to specify a size for a view’s width, height, or both that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is dependent on the size of the nearest container. Different",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "things can represent a “container” including:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The window presenting a view on iPadOS or macOS, or the",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "screen of a device on iOS.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "A column of a NavigationSplitView",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "A NavigationStack",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "A tab of a TabView",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "A scrollable view like ScrollView or List",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "The size provided to this modifier is the size of a container like",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the ones listed above subtracting any safe area insets that might",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "be applied to that container.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The following example will have each purple rectangle occupy the full",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "size of the screen on iOS:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "ScrollView(.horizontal) {",
            "    LazyHStack(spacing: 0.0) {",
            "        ForEach(items) { item in",
            "            Rectangle()",
            "                .fill(.purple)",
            "                .containerRelativeFrame([.horizontal, .vertical])",
            "        }",
            "    }",
            "}"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Use this modifier to size a view such that multiple views will be",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "visible in the container. When using this modifier, the count refers",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to the total number of rows or columns that the length of the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "container size in a particular axis should be divided into. The span",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "refers to the number of rows or columns that the modified view",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "should actually occupy. Thus the size of the element can be",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "described like so:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let availableWidth = (containerWidth - (spacing * (count - 1)))",
            "let columnWidth = (availableWidth / count)",
            "let itemWidth = (columnWidth * span) + ((span - 1) * spacing)"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The following example only uses the nearest container size in the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "horizontal axis, allowing the vertical axis to be determined using",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the ",
              "type": "text"
            },
            {
              "code": "View/aspectRatio(_:contentMode:)",
              "type": "codeVoice"
            },
            {
              "text": " modifier.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "ScrollView(.horizontal) {",
            "    LazyHStack(spacing: 10.0) {",
            "        ForEach(items) { item in",
            "            Rectangle()",
            "                .fill(.purple)",
            "                .aspectRatio(3.0 / 2.0, contentMode: .fit)",
            "                .containerRelativeFrame(",
            "                    .horizontal, count: 4, span: 3, spacing: 10.0)",
            "        }",
            "    }",
            "}",
            ".safeAreaPadding(.horizontal, 20.0)"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "code": "View/containerRelativeFrame(_:alignment:_:)",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "modifier to apply your own custom logic to adjust the size",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of the nearest container for your view. The following example will",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "result in the container frame’s width being divided by 3 and using",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that value as the width of the purple rectangle.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "Rectangle()",
            "    .fill(.purple)",
            "    .aspectRatio(1.0, contentMode: .fill)",
            "    .containerRelativeFrame(",
            "        .horizontal, alignment: .topLeading",
            "    ) { length, axis in",
            "        if axis == .vertical {",
            "            return length / 3.0",
            "        } else {",
            "            return length / 5.0",
            "        }",
            "    }"
          ],
          "syntax": null,
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.RealityKit/documentation/RealityKit": {
      "abstract": [
        {
          "text": "Simulate and render 3D content for use in your augmented reality apps.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit",
      "kind": "symbol",
      "role": "collection",
      "title": "RealityKit",
      "type": "topic",
      "url": "/documentation/realitykit"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/RealityView": {
      "abstract": [
        {
          "text": "A view that contains RealityKit content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RealityView"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/RealityView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RealityView"
        }
      ],
      "role": "symbol",
      "title": "RealityView",
      "type": "topic",
      "url": "/documentation/realitykit/realityview"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewCameraContent": {
      "abstract": [
        {
          "text": "The content of a reality view that is displayed through a camera.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RealityViewCameraContent"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewCameraContent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RealityViewCameraContent"
        }
      ],
      "role": "symbol",
      "title": "RealityViewCameraContent",
      "type": "topic",
      "url": "/documentation/realitykit/realityviewcameracontent"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewCameraContent/Body": {
      "abstract": [
        {
          "text": "The default view contents of a ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/RealityView",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " using ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewCameraContent",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Body"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewCameraContent/Body",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Body"
        }
      ],
      "role": "symbol",
      "title": "RealityViewCameraContent.Body",
      "type": "topic",
      "url": "/documentation/realitykit/realityviewcameracontent/body"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewCameraContent/Body/containerRelativeFrame(_:count:span:spacing:alignment:)": {
      "abstract": [
        {
          "text": "Positions this view within an invisible frame with a size relative",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "to the nearest container.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "containerRelativeFrame"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4AxisO",
          "text": "Axis"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4AxisO3SetV",
          "text": "Set"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "count"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "span"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "spacing"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14CoreFoundation7CGFloatV",
          "text": "CGFloat"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "alignment"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI9AlignmentV",
          "text": "Alignment"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewCameraContent/Body/containerRelativeFrame(_:count:span:spacing:alignment:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "containerRelativeFrame(_:count:span:spacing:alignment:)",
      "type": "topic",
      "url": "/documentation/realitykit/realityviewcameracontent/body/containerrelativeframe(_:count:span:spacing:alignment:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:14CoreFoundation7CGFloatV": {
      "abstract": [
        {
          "text": "The basic type for floating-point scalar values in Core Graphics and related frameworks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "CGFloat"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:14CoreFoundation7CGFloatV",
      "kind": "symbol",
      "role": "symbol",
      "title": "CGFloat",
      "type": "topic",
      "url": "/documentation/corefoundation/cgfloat"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI4AxisO": {
      "abstract": [
        {
          "text": "The horizontal or vertical dimension in a 2D coordinate system.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Axis"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4AxisO",
      "kind": "symbol",
      "role": "symbol",
      "title": "Axis",
      "type": "topic",
      "url": "/documentation/SwiftUI/Axis"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI4AxisO3SetV": {
      "abstract": [
        {
          "text": "An efficient set of axes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Set"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4AxisO3SetV",
      "kind": "symbol",
      "role": "symbol",
      "title": "Axis.Set",
      "type": "topic",
      "url": "/documentation/SwiftUI/Axis/Set"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
      "kind": "symbol",
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/SwiftUI/View"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI9AlignmentV": {
      "abstract": [
        {
          "text": "An alignment in both axes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Alignment"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI9AlignmentV",
      "kind": "symbol",
      "role": "symbol",
      "title": "Alignment",
      "type": "topic",
      "url": "/documentation/SwiftUI/Alignment"
    },
    "doc://com.externally.resolved.symbol/s:Si": {
      "abstract": [
        {
          "text": "A signed integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Si",
      "kind": "symbol",
      "role": "symbol",
      "title": "Int",
      "type": "topic",
      "url": "/documentation/Swift/Int"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/realitykit/realityviewcameracontent/body/containerrelativeframe(_:count:span:spacing:alignment:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
