{
  "abstract": [
    {
      "text": "Adds an action to perform when the viewpoint of the volume changes.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.RealityKit/documentation/RealityKit",
        "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewContent",
        "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewContent/Body"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewContent/Body/onVolumeViewpointChange(updateStrategy:initial:_:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI4ViewPAAE23onVolumeViewpointChange14updateStrategy7initial_QrAA0ef6UpdateI0V_SbyAA11Viewpoint3DV_AJtctF::SYNTHESIZED::s:19_RealityKit_SwiftUI0A11ViewContentV4BodyV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "onVolumeViewpointChange"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "updateStrategy"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI29VolumeViewpointUpdateStrategyV",
        "text": "VolumeViewpointUpdateStrategy"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "initial"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sb",
        "text": "Bool"
      },
      {
        "kind": "text",
        "text": ", ("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI11Viewpoint3DV",
        "text": "Viewpoint3D"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI11Viewpoint3DV",
        "text": "Viewpoint3D"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s4Voida",
        "text": "Void"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "keyword",
        "text": "some"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4ViewP",
        "text": "View"
      }
    ],
    "modules": [
      {
        "name": "RealityKit",
        "relatedModules": [
          "SwiftUI"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "onVolumeViewpointChange(updateStrategy:initial:_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:ScM",
              "kind": "attribute",
              "preciseIdentifier": "s:ScM",
              "text": "MainActor"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "attribute",
              "text": "@preconcurrency"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "onVolumeViewpointChange"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "updateStrategy"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI29VolumeViewpointUpdateStrategyV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI29VolumeViewpointUpdateStrategyV",
              "text": "VolumeViewpointUpdateStrategy"
            },
            {
              "kind": "text",
              "text": " = .supported, "
            },
            {
              "kind": "externalParam",
              "text": "initial"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sb",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": " = true, "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "action"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "@escaping"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI11Viewpoint3DV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI11Viewpoint3DV",
              "text": "Viewpoint3D"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI11Viewpoint3DV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI11Viewpoint3DV",
              "text": "Viewpoint3D"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s4Voida",
              "text": "Void"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "keyword",
              "text": "some"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": "\n"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Whether the action should be run for all viewpoint",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "changes or only for supported viewpoint changes.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "updateStrategy"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Whether the action should be run when this view initially",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "appears.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "initial"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A closure to run when the viewpoint changes. The closure is",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "also run when the volume is first opened.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "action"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use the provided ",
              "type": "text"
            },
            {
              "code": "Viewpoint3D",
              "type": "codeVoice"
            },
            {
              "text": " to update the content",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of the volume:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct RobotContentView: View {",
            "    @State var robotRotation: Rotation3D = .identity",
            "",
            "    var body: some View {",
            "        Model3D(named: \"robot\")",
            "            .onVolumeViewpointChange { _, newValue in",
            "                robotRotation = Rotation3D.slerp(",
            "                    from: robotRotation,",
            "                    to: newValue.squareAzimuth.orientation,",
            "                    t: 1.0,",
            "                    along: .shortest",
            "                )",
            "            }",
            "            .rotation3DEffect(robotRotation)",
            "            .animation(.easeInOut, value: robotRotation)",
            "    }",
            "}"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "By default, the action will only be run when the new viewpoint is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "equivalent to one of the values provided through",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "View/supportedVolumeViewpoints(_:)",
              "type": "codeVoice"
            },
            {
              "text": ". The viewpoint will be",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "equivalent to where the window bar and ornaments are presented for a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "volume.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Providing ",
              "type": "text"
            },
            {
              "code": ".all",
              "type": "codeVoice"
            },
            {
              "text": " for the ",
              "type": "text"
            },
            {
              "code": "updateStrategy",
              "type": "codeVoice"
            },
            {
              "text": " argument will result in the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "action being called without regard to the supported viewpoints.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To determine if the volume is being viewed from an unsupported",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "viewpoint, provide ",
              "type": "text"
            },
            {
              "code": ".all",
              "type": "codeVoice"
            },
            {
              "text": " for the ",
              "type": "text"
            },
            {
              "code": "updateStrategy",
              "type": "codeVoice"
            },
            {
              "text": " argument and check",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "if the viewpoint is not within the supported viewpoints:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ContentView: View {",
            "    @State var showingMoveToFrontSign = false",
            "    @State var moveToFrontSignViewpoint: Viewpoint3D = .standard",
            "",
            "    let supportedViewpoints = [SquareAzimuth.front]",
            "",
            "    var body: some View {",
            "        MoveToFrontSignView(viewpoint: moveToFrontSignViewpoint)",
            "            .opacity(showingMoveToFrontSign ? 1.0 : 0.0)",
            "            .animation(.easeInOut, value: showingMoveToFrontSign)",
            "            .onVolumeViewpointChange(updateStrategy: .all)",
            "                { _, newValue in",
            "",
            "                moveToFrontSignViewpoint = newViewpoint",
            "",
            "                let isSupported = supportedViewpoints.contains(",
            "                    newViewpoint.squareAzimuth)",
            "                showingMoveToFrontSign = !isSupported",
            "            }",
            "            .supportedVolumeViewpoints(supportedViewpoints)",
            "    }",
            "}"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The old and new ",
              "type": "text"
            },
            {
              "code": "Viewpoint3D",
              "type": "codeVoice"
            },
            {
              "text": " provided to the action are relative to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the center of the volume.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Reading this value is only valid inside a ",
              "type": "text"
            },
            {
              "code": "View",
              "type": "codeVoice"
            },
            {
              "text": " that inherits the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "environment of a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Scene",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " created with a ",
              "type": "text"
            },
            {
              "code": "VolumetricWindowStyle",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "This value will be equivalent to ",
              "type": "text"
            },
            {
              "code": "Viewpoint3D/standard",
              "type": "codeVoice"
            },
            {
              "text": " when read",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "within a standard window.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.RealityKit/documentation/RealityKit": {
      "abstract": [
        {
          "text": "Simulate and render 3D content for use in your augmented reality apps.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit",
      "kind": "symbol",
      "role": "collection",
      "title": "RealityKit",
      "type": "topic",
      "url": "/documentation/realitykit"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewContent": {
      "abstract": [
        {
          "text": "The content of a visionOS reality view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RealityViewContent"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewContent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RealityViewContent"
        }
      ],
      "role": "symbol",
      "title": "RealityViewContent",
      "type": "topic",
      "url": "/documentation/realitykit/realityviewcontent"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewContent/Body": {
      "abstract": [
        {
          "text": "The default view contents of a reality view, using reality view content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Body"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewContent/Body",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Body"
        }
      ],
      "role": "symbol",
      "title": "RealityViewContent.Body",
      "type": "topic",
      "url": "/documentation/realitykit/realityviewcontent/body"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewContent/Body/onVolumeViewpointChange(updateStrategy:initial:_:)": {
      "abstract": [
        {
          "text": "Adds an action to perform when the viewpoint of the volume changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "onVolumeViewpointChange"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "updateStrategy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI29VolumeViewpointUpdateStrategyV",
          "text": "VolumeViewpointUpdateStrategy"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "initial"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI11Viewpoint3DV",
          "text": "Viewpoint3D"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI11Viewpoint3DV",
          "text": "Viewpoint3D"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/RealityViewContent/Body/onVolumeViewpointChange(updateStrategy:initial:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "onVolumeViewpointChange(updateStrategy:initial:_:)",
      "type": "topic",
      "url": "/documentation/realitykit/realityviewcontent/body/onvolumeviewpointchange(updatestrategy:initial:_:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/Scene": {
      "abstract": [
        {
          "text": "A container that holds the collection of entities that an AR view renders.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Scene"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Scene",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Scene"
        }
      ],
      "role": "symbol",
      "title": "Scene",
      "type": "topic",
      "url": "/documentation/realitykit/scene"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI11Viewpoint3DV": {
      "abstract": [
        {
          "text": "A type describing what direction something is being viewed from.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Viewpoint3D"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI11Viewpoint3DV",
      "kind": "symbol",
      "role": "symbol",
      "title": "Viewpoint3D",
      "type": "topic",
      "url": "/documentation/SwiftUI/Viewpoint3D"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI29VolumeViewpointUpdateStrategyV": {
      "abstract": [
        {
          "text": "A type describing when the action provided to [`onVolumeViewpointChange(updateStrategy:initial:_:)`](doc://com.apple.SwiftUI/documentation/SwiftUI/View/onVolumeViewpointChange(updateStrategy:initial:_:)) should be called.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "VolumeViewpointUpdateStrategy"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI29VolumeViewpointUpdateStrategyV",
      "kind": "symbol",
      "role": "symbol",
      "title": "VolumeViewpointUpdateStrategy",
      "type": "topic",
      "url": "/documentation/SwiftUI/VolumeViewpointUpdateStrategy"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
      "kind": "symbol",
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/SwiftUI/View"
    },
    "doc://com.externally.resolved.symbol/s:Sb": {
      "abstract": [
        {
          "text": "A value type whose instances are either `true` or `false`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Sb",
      "kind": "symbol",
      "role": "symbol",
      "title": "Bool",
      "type": "topic",
      "url": "/documentation/Swift/Bool"
    },
    "doc://com.externally.resolved.symbol/s:ScM": {
      "abstract": [
        {
          "text": "A singleton actor whose executor is equivalent to the main dispatch queue.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@globalActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "final"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "actor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MainActor"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:ScM",
      "kind": "symbol",
      "role": "symbol",
      "title": "MainActor",
      "type": "topic",
      "url": "/documentation/Swift/MainActor"
    },
    "doc://com.externally.resolved.symbol/s:s4Voida": {
      "abstract": [
        {
          "text": "The return type of functions that don’t explicitly specify a return type, that is, an empty tuple `()`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": " = ()"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
      "kind": "symbol",
      "role": "symbol",
      "title": "Void",
      "type": "topic",
      "url": "/documentation/Swift/Void"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/realitykit/realityviewcontent/body/onvolumeviewpointchange(updatestrategy:initial:_:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
