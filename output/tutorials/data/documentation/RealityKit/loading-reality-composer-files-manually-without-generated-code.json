{
  "abstract": [
    {
      "text": "Load Reality Composer files that aren’t part of your Xcode project.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.RealityKit/documentation/RealityKit",
        "doc://com.apple.RealityKit/documentation/RealityKit/realitykit-reality-composer"
      ],
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.RealityKit/documentation/RealityKit",
        "doc://com.apple.RealityKit/documentation/RealityKit/realitykit-reality-composer",
        "doc://com.apple.RealityKit/documentation/RealityKit/creating-3d-content-with-reality-composer"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.RealityKit/documentation/RealityKit/loading-reality-composer-files-manually-without-generated-code"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "RealityKit"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Loading Reality Composer files manually without generated code"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Although Xcode generates loading methods for all Reality Composer files in your Xcode",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "project, there are times when you need to load them without the benefit of those",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "generated loader methods. This scenario can happen, for example, when loading content",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "downloaded as part of an in-app purchase bundle from the App Store.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You can manually load scenes synchronously or asynchronously. Unless your Reality",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Composer scene is very small, use the asynchronous method, which loads scenes in",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the background. Synchronous loading occurs on the main thread, so your app may become",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "unresponsive if you use that method to load even moderately complex scenes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Create-a-scene-URL",
          "level": 3,
          "text": "Create a scene URL",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Regardless of whether you plan to load the scene synchronously or asynchronously,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the first step is to create a URL that points to the Reality file that contains the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scene you want to load. Then append the name of the scene to the URL.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Here’s an example of building a URL to load a scene from a Reality file inside your",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "app’s bundle:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func createRealityURL(filename: String, ",
            "                      fileExtension: String, ",
            "                      sceneName:String) -> URL? {",
            "    // Create a URL that points to the specified Reality file. ",
            "    guard let realityFileURL = Bundle.main.url(forResource: filename, ",
            "                                               withExtension: fileExtension) else {",
            "        print(\"Error finding Reality file \\(filename).\\(fileExtension)\")",
            "        return nil",
            "    }",
            "",
            "    // Append the scene name to the URL to point to ",
            "    // a single scene within the file.",
            "    let realityFileSceneURL = realityFileURL.appendingPathComponent(sceneName, ",
            "                                                                    isDirectory: false)",
            "    return realityFileSceneURL",
            "} "
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Load-the-scene-asynchronously-from-the-URL",
          "level": 3,
          "text": "Load the scene asynchronously from the URL",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Entity",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " provides the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Entity/loadAnchorAsync(contentsOf:withName:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method for loading scenes asynchronously from a URL. Loading in this manner uses",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the Combine framework and returns an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Combine/AnyCancellable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that you use to cancel scene loading.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You must maintain a strong reference to the returned ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Combine/AnyCancellable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "until loading has completed. Otherwise, the load process cancels as soon as the returned ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Combine/AnyCancellable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is deallocated. To keep a strong reference to the returned ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Combine/AnyCancellable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "store it in an array.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "This example shows how to declare an array variable in your view controller or coordinator",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "class to hold instances of ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Combine/AnyCancellable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var streams = [Combine.AnyCancellable]()"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Load your scene asynchronously, storing the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Combine/AnyCancellable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in that array using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Combine/AnyCancellable/store(in:)-6cr9i",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instead of the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/Array/append(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method. In this way, you ensure that the system won’t cancel your load operation.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "This example shows how to asynchronously load a scene from a ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/library/archive/documentation/Carbon/Conceptual/LaunchServicesConcepts/LSCGlossary/LSCGlossary.html#//apple_ref/doc/uid/TP30000999-CH205-CBABFJEB",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func loadRealityComposerSceneAsync (filename: String,",
            "                                    fileExtension: String,",
            "                                    sceneName: String,",
            "                                    completion: @escaping (Swift.Result<(Entity & HasAnchoring)?, Swift.Error>) -> Void) {",
            "",
            "    guard let realityFileSceneURL = createRealityURL(filename: filename, fileExtension: fileExtension, sceneName: sceneName) else {",
            "        print(\"Error: Unable to find specified file in application bundle\")",
            "        return",
            "    }",
            "",
            "    let loadRequest = Entity.loadAnchorAsync(contentsOf: realityFileSceneURL)",
            "    let cancellable = loadRequest.sink(receiveCompletion: { (loadCompletion) in",
            "        if case let .failure(error) = loadCompletion {",
            "            completion(.failure(error))",
            "        }",
            "    }, receiveValue: { (entity) in",
            "        completion(.success(entity))",
            "    })",
            "    cancellable.store(in: &streams)",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "If you use the ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/Combine/AnyCancellable/store(in:)-6cr9i",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " method",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "instead of ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/Swift/Array/append(_:)",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ",",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "you don’t have to remove the ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/Combine/AnyCancellable",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " object",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "from the array after loading has finished. When using that method, the ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/Combine/AnyCancellable",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " object",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "removes itself automatically from the array once it has finished loading.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "anchor": "Load-the-scene-synchronously-from-the-URL",
          "level": 3,
          "text": "Load the scene synchronously from the URL",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Call the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Entity/loadAnchor(contentsOf:withName:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method on ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Entity",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "pass in a scene URL.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func loadRealityComposerScene (filename: String,",
            "                                fileExtension: String,",
            "                                sceneName: String) -> (Entity & HasAnchoring)? {",
            "    guard let realitySceneURL = createRealityURL(filename: filename,",
            "                                                 fileExtension: fileExtension,",
            "                                                 sceneName: sceneName) else {",
            "        return nil",
            "    }",
            "    let loadedAnchor = try? Entity.loadAnchor(contentsOf: realitySceneURL)",
            "",
            "    return loadedAnchor",
            "}",
            ""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Load-a-USDZ-file-asynchronously",
          "level": 3,
          "text": "Load a USDZ file asynchronously",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can load USDZ files asynchronously in the background using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Entity/loadModelAsync(contentsOf:withName:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method on ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Entity",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". Asynchronous loading of USDZ files also requires",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Combine",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " framework. To receive the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scene once it’s loaded, the receiving class must conform to the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Combine/Subscriber",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "This example shows you how to conform a view controller to the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Combine/Subscriber",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "protocol so it can receive the asynchronously loaded scene:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "extension ViewController : Subscriber {",
            "",
            "    // loadModelAsync loads a ModelEntity, so declare ",
            "    // that as the Input type.",
            "    typealias Input = ModelEntity",
            "",
            "    // If loadModelAsync fails, it returns an Error instance, ",
            "    // so declare Error as the Failure associated-object type.",
            "    typealias Failure = Error",
            "",
            "    // The publisher has finished, so ask it for the result ",
            "    // as a single item.",
            "    func receive(subscription: Subscription) {",
            "        subscription.request(.max(1))",
            "    }",
            "",
            "    // You receive the model here and assign it to a property",
            "    // so you can use it outside of this method. ",
            "    func receive(_ input: ModelEntity) -> Subscribers.Demand {",
            "        // Assign to robot, a property declared in your ",
            "        // main view-controller class",
            "        robot = input",
            "        return .none",
            "    }",
            "",
            "    // When the publisher is done - either it has sent the ",
            "    // model or it has errored - this method is called.",
            "    func receive(completion: Subscribers.Completion<Error>) {",
            "        switch (completion) {",
            "            case .failure(let error):",
            "                print(\"Error loading model: \\(error)\")",
            "            case .finished:",
            "                print(\"Model loaded successfully\")",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Once you set up your view controller as a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Combine/Subscriber",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you can start loading a USDZ file as in this example:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let request = Entity.loadModelAsync(contentsOf: robotURL)",
            "request.receive(subscriber: self)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "For more information on using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Combine",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Framework, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Combine/receiving-and-handling-events-with-combine",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Load-a-USDZ-file-synchronously",
          "level": 3,
          "text": "Load a USDZ file synchronously",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can also load individual 3D models from USDZ files for use in your Reality Composer",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scenes. This is especially useful, for example, for loading objects that you might",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "spawn multiple times in response to user input. In that case, you don’t want the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "asset loaded as part of your Reality Composer scene. Instead, you want to load it",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "separately and add it to your scene when needed.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You can load a model synchronously using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Entity/loadModel(contentsOf:withName:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "on ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Entity",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", as in this example:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var loadedModel: Entity?",
            "if let theURL = Bundle.main.url(forResource: \"myModel\", withExtension: \"usdz\") {",
            "    let loadedModel = try? Entity.loadModel(contentsOf: theURL)",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Combine-PageImage-card.png": {
      "alt": "The Swift language logo, overlaid by a graph of interconnected lines and points.",
      "identifier": "Combine-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/8df9b2bdcd94118827dd29f28f3915d7/Combine-PageImage-card~dark@2x.png"
        },
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/ba2aa5f2e9d9ae5b196c642a6cf121dd/Combine-PageImage-card@2x.png"
        }
      ]
    },
    "doc://com.apple.RealityKit/documentation/RealityKit": {
      "abstract": [
        {
          "text": "Simulate and render 3D content for use in your augmented reality apps.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit",
      "kind": "symbol",
      "role": "collection",
      "title": "RealityKit",
      "type": "topic",
      "url": "/documentation/realitykit"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/Entity": {
      "abstract": [
        {
          "text": "An element of a RealityKit scene to which you attach components that provide",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "appearance and behavior characteristics for the entity.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Entity"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Entity",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Entity"
        }
      ],
      "role": "symbol",
      "title": "Entity",
      "type": "topic",
      "url": "/documentation/realitykit/entity"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/Entity/loadAnchor(contentsOf:withName:)": {
      "abstract": [
        {
          "text": "Synchronously loads an anchor entity from a file URL.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "loadAnchor"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "contentsOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "withName"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation12AnchorEntityC",
          "text": "AnchorEntity"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Entity/loadAnchor(contentsOf:withName:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "loadAnchor(contentsOf:withName:)",
      "type": "topic",
      "url": "/documentation/realitykit/entity/loadanchor(contentsof:withname:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/Entity/loadAnchorAsync(contentsOf:withName:)": {
      "abstract": [
        {
          "text": "Asynchronously loads an anchor entity from a file URL.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "loadAnchorAsync"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "contentsOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "withName"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation11LoadRequestC",
          "text": "LoadRequest"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation12AnchorEntityC",
          "text": "AnchorEntity"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Entity/loadAnchorAsync(contentsOf:withName:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "loadAnchorAsync(contentsOf:withName:)",
      "type": "topic",
      "url": "/documentation/realitykit/entity/loadanchorasync(contentsof:withname:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/Entity/loadModel(contentsOf:withName:)": {
      "abstract": [
        {
          "text": "Synchronously loads a model entity from a file URL.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "loadModel"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "contentsOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "withName"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation11ModelEntityC",
          "text": "ModelEntity"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Entity/loadModel(contentsOf:withName:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "loadModel(contentsOf:withName:)",
      "type": "topic",
      "url": "/documentation/realitykit/entity/loadmodel(contentsof:withname:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/Entity/loadModelAsync(contentsOf:withName:)": {
      "abstract": [
        {
          "text": "Returns a load request that creates a model entity by asynchronously loading",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "it from a file URL and flattening the model entity’s hierarchy.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "loadModelAsync"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "contentsOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "withName"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation11LoadRequestC",
          "text": "LoadRequest"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation11ModelEntityC",
          "text": "ModelEntity"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Entity/loadModelAsync(contentsOf:withName:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "loadModelAsync(contentsOf:withName:)",
      "type": "topic",
      "url": "/documentation/realitykit/entity/loadmodelasync(contentsof:withname:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/adding-elements-to-a-3d-scene": {
      "abstract": [
        {
          "text": "Add assets to your scene from Reality Composer’s library, or import custom assets.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/adding-elements-to-a-3d-scene",
      "kind": "article",
      "role": "article",
      "title": "Adding elements to a 3D scene",
      "type": "topic",
      "url": "/documentation/realitykit/adding-elements-to-a-3d-scene"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/adding-procedural-assets-to-a-scene": {
      "abstract": [
        {
          "text": "Create procedurally generated shape primitives to your Reality Composer scene.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/adding-procedural-assets-to-a-scene",
      "kind": "article",
      "role": "article",
      "title": "Adding procedural assets to a scene",
      "type": "topic",
      "url": "/documentation/realitykit/adding-procedural-assets-to-a-scene"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/arranging-elements-in-a-scene": {
      "abstract": [
        {
          "text": "Manipulate objects to complete your Reality Composer scene.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/arranging-elements-in-a-scene",
      "kind": "article",
      "role": "article",
      "title": "Arranging elements in a scene",
      "type": "topic",
      "url": "/documentation/realitykit/arranging-elements-in-a-scene"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/configuring-elements-in-a-scene": {
      "abstract": [
        {
          "text": "Define the appearance and behavior of objects in a scene.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/configuring-elements-in-a-scene",
      "kind": "article",
      "role": "article",
      "title": "Configuring elements in a scene",
      "type": "topic",
      "url": "/documentation/realitykit/configuring-elements-in-a-scene"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/creating-3d-content-with-reality-composer": {
      "abstract": [
        {
          "text": "Assemble assets into a dynamic 3D composition that you can add to a scene in your",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "app, or share with AR Quick Look.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/creating-3d-content-with-reality-composer",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Creating 3D Content with Reality Composer",
      "type": "topic",
      "url": "/documentation/realitykit/creating-3d-content-with-reality-composer"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/improving-the-accessibility-of-realitykit-apps": {
      "abstract": [
        {
          "text": "Incorporate assistive technologies in your augmented reality app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/improving-the-accessibility-of-realitykit-apps",
      "kind": "article",
      "role": "article",
      "title": "Improving the Accessibility of RealityKit Apps",
      "type": "topic",
      "url": "/documentation/realitykit/improving-the-accessibility-of-realitykit-apps"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/loading-reality-composer-files-using-generated-code": {
      "abstract": [
        {
          "text": "Leverage automatically generated code to load scenes from Xcode.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/loading-reality-composer-files-using-generated-code",
      "kind": "article",
      "role": "article",
      "title": "Loading Reality Composer files using generated code",
      "type": "topic",
      "url": "/documentation/realitykit/loading-reality-composer-files-using-generated-code"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/manipulating-reality-composer-scenes-from-code": {
      "abstract": [
        {
          "text": "Make programmatic changes to your scenes at runtime.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/manipulating-reality-composer-scenes-from-code",
      "kind": "article",
      "role": "article",
      "title": "Manipulating Reality Composer scenes from code",
      "type": "topic",
      "url": "/documentation/realitykit/manipulating-reality-composer-scenes-from-code"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/realitykit-reality-composer": {
      "abstract": [
        {
          "text": "A visual editor for RealityKit AR scenes.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/realitykit-reality-composer",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Reality Composer",
      "type": "topic",
      "url": "/documentation/realitykit/realitykit-reality-composer"
    },
    "doc://com.apple.documentation/documentation/Combine": {
      "abstract": [
        {
          "text": "Customize handling of asynchronous events by combining event-processing operators.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Combine",
      "images": [
        {
          "identifier": "Combine-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Combine",
      "type": "topic",
      "url": "/documentation/Combine"
    },
    "doc://com.apple.documentation/documentation/Combine/AnyCancellable": {
      "abstract": [
        {
          "text": "A type-erasing cancellable object that executes a provided closure when canceled.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "final"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AnyCancellable"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Combine/AnyCancellable",
      "kind": "symbol",
      "role": "symbol",
      "title": "AnyCancellable",
      "type": "topic",
      "url": "/documentation/Combine/AnyCancellable"
    },
    "doc://com.apple.documentation/documentation/Combine/AnyCancellable/store(in:)-6cr9i": {
      "abstract": [
        {
          "text": "Stores this type-erasing cancellable instance in the specified collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "final"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "store"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "in"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "collection"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sm",
          "text": "RangeReplaceableCollection"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": " == "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine14AnyCancellableC",
          "text": "AnyCancellable"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Combine/AnyCancellable/store(in:)-6cr9i",
      "kind": "symbol",
      "role": "symbol",
      "title": "store(in:)",
      "type": "topic",
      "url": "/documentation/Combine/AnyCancellable/store(in:)-6cr9i"
    },
    "doc://com.apple.documentation/documentation/Combine/Subscriber": {
      "abstract": [
        {
          "text": "A protocol that declares a type that can receive input from a publisher.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Subscriber"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10SubscriberP5InputQa",
          "text": "Input"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10SubscriberP7FailureQa",
          "text": "Failure"
        },
        {
          "kind": "text",
          "text": "> : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine06CustomA21IdentifierConvertibleP",
          "text": "CustomCombineIdentifierConvertible"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Combine/Subscriber",
      "kind": "symbol",
      "role": "symbol",
      "title": "Subscriber",
      "type": "topic",
      "url": "/documentation/Combine/Subscriber"
    },
    "doc://com.apple.documentation/documentation/Combine/receiving-and-handling-events-with-combine": {
      "abstract": [
        {
          "text": "Customize and receive events from asynchronous sources.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Combine/receiving-and-handling-events-with-combine",
      "kind": "article",
      "role": "article",
      "title": "Receiving and Handling Events with Combine",
      "type": "topic",
      "url": "/documentation/Combine/receiving-and-handling-events-with-combine"
    },
    "doc://com.apple.documentation/documentation/Swift/Array/append(_:)": {
      "abstract": [
        {
          "text": "Adds a new element at the end of the array.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "mutating"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "append"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "newElement"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/Array/append(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "append(_:)",
      "type": "topic",
      "url": "/documentation/Swift/Array/append(_:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "https://developer.apple.com/library/archive/documentation/Carbon/Conceptual/LaunchServicesConcepts/LSCGlossary/LSCGlossary.html#//apple_ref/doc/uid/TP30000999-CH205-CBABFJEB": {
      "identifier": "https://developer.apple.com/library/archive/documentation/Carbon/Conceptual/LaunchServicesConcepts/LSCGlossary/LSCGlossary.html#//apple_ref/doc/uid/TP30000999-CH205-CBABFJEB",
      "title": "URL",
      "titleInlineContent": [
        {
          "text": "URL",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/library/archive/documentation/Carbon/Conceptual/LaunchServicesConcepts/LSCGlossary/LSCGlossary.html#//apple_ref/doc/uid/TP30000999-CH205-CBABFJEB"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Scene-creation",
      "generated": true,
      "identifiers": [
        "doc://com.apple.RealityKit/documentation/RealityKit/creating-3d-content-with-reality-composer",
        "doc://com.apple.RealityKit/documentation/RealityKit/loading-reality-composer-files-using-generated-code",
        "doc://com.apple.RealityKit/documentation/RealityKit/adding-elements-to-a-3d-scene",
        "doc://com.apple.RealityKit/documentation/RealityKit/configuring-elements-in-a-scene",
        "doc://com.apple.RealityKit/documentation/RealityKit/arranging-elements-in-a-scene",
        "doc://com.apple.RealityKit/documentation/RealityKit/manipulating-reality-composer-scenes-from-code",
        "doc://com.apple.RealityKit/documentation/RealityKit/adding-procedural-assets-to-a-scene",
        "doc://com.apple.RealityKit/documentation/RealityKit/improving-the-accessibility-of-realitykit-apps"
      ],
      "title": "Scene creation"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/realitykit/loading-reality-composer-files-manually-without-generated-code"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
