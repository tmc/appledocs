{
  "abstract": [
    {
      "text": "An object that defines the criteria for an entity query.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.RealityKit/documentation/RealityKit"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.RealityKit/documentation/RealityKit/QueryPredicate"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:17RealityFoundation14QueryPredicateV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "QueryPredicate"
      }
    ],
    "modules": [
      {
        "name": "RealityKit"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "QueryPredicate"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "12.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "QueryPredicate"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "QueryPredicate"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Value"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.RealityKit/documentation/RealityKit/implementing-systems-for-entities-in-a-scene"
      ]
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Query predicates specify the entities an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/EntityQuery",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " returns from a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scene. Predicates describe entities based on which components they contain,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or on the entity’s relationship to other entities in the scene. For example,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you can build a predicate to retrieve the model entities from a scene.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let modelPredicate = QueryPredicate.has(ModelComponent.self)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Create-compound-predicates",
          "level": 3,
          "text": "Create compound predicates",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can combine predicates using Swift’s logical operators to create",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "compound predicates. ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/QueryPredicate",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " supports Swift’s logical ",
              "type": "text"
            },
            {
              "code": "AND",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "(",
              "type": "text"
            },
            {
              "code": "&&",
              "type": "codeVoice"
            },
            {
              "text": "), logical ",
              "type": "text"
            },
            {
              "code": "OR",
              "type": "codeVoice"
            },
            {
              "text": " (",
              "type": "text"
            },
            {
              "code": "||",
              "type": "codeVoice"
            },
            {
              "text": "), and logical ",
              "type": "text"
            },
            {
              "code": "NOT",
              "type": "codeVoice"
            },
            {
              "text": " (",
              "type": "text"
            },
            {
              "code": "!",
              "type": "codeVoice"
            },
            {
              "text": ") operators. The",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "following code shows how to build a compound predicate that returns all",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "entities that are either model entities or anchor entities:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let orPredicate: QueryPredicate<Entity> =",
            "    .has(ModelComponent.self) || .has(AnchorComponent.self)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Use parentheses to control the order of operations when combining",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "predicates. For example, you can create a query that returns any entity that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "has both a model component and a physics body component, or any entity that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "has only an anchor component.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let multiPredicate: QueryPredicate<Entity> =",
            "    .has(ModelComponent.self) && .has(PhysicsBodyComponent.self) ||",
            "    .has(AnchorComponent.self)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.RealityKit/documentation/RealityKit": {
      "abstract": [
        {
          "text": "Simulate and render 3D content for use in your augmented reality apps.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit",
      "kind": "symbol",
      "role": "collection",
      "title": "RealityKit",
      "type": "topic",
      "url": "/documentation/realitykit"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/!(_:)": {
      "abstract": [
        {
          "text": "Returns a predicate which evaluates to ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": " if ",
          "type": "text"
        },
        {
          "code": "operand",
          "type": "codeVoice"
        },
        {
          "text": " evaluates to ",
          "type": "text"
        },
        {
          "code": "false",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "!"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14QueryPredicateV",
          "text": "QueryPredicate"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14QueryPredicateV",
          "text": "QueryPredicate"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/!(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "!(_:)",
      "type": "topic",
      "url": "/documentation/realitykit/!(_:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/&&(_:_:)": {
      "abstract": [
        {
          "text": "Returns a predicate which evaluates to ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": " if ",
          "type": "text"
        },
        {
          "code": "left",
          "type": "codeVoice"
        },
        {
          "text": " AND ",
          "type": "text"
        },
        {
          "code": "right",
          "type": "codeVoice"
        },
        {
          "text": " evaluate to ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "&&"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14QueryPredicateV",
          "text": "QueryPredicate"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14QueryPredicateV",
          "text": "QueryPredicate"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14QueryPredicateV",
          "text": "QueryPredicate"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/&&(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "&&(_:_:)",
      "type": "topic",
      "url": "/documentation/realitykit/&&(_:_:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/EntityQuery": {
      "abstract": [
        {
          "text": "An object that retrieves entities from a scene.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EntityQuery"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/EntityQuery",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EntityQuery"
        }
      ],
      "role": "symbol",
      "title": "EntityQuery",
      "type": "topic",
      "url": "/documentation/realitykit/entityquery"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/PixelCastHit": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PixelCastHit"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/PixelCastHit",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PixelCastHit"
        }
      ],
      "role": "symbol",
      "title": "PixelCastHit",
      "type": "topic",
      "url": "/documentation/realitykit/pixelcasthit"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/QueryPredicate": {
      "abstract": [
        {
          "text": "An object that defines the criteria for an entity query.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "QueryPredicate"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/QueryPredicate",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "QueryPredicate"
        }
      ],
      "role": "symbol",
      "title": "QueryPredicate",
      "type": "topic",
      "url": "/documentation/realitykit/querypredicate"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/QueryPredicate/has(_:)": {
      "abstract": [
        {
          "text": "Creates a new predicate that describes entities that have a specific",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "component.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "has"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ".Type) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14QueryPredicateV",
          "text": "QueryPredicate"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation6EntityC",
          "text": "Entity"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/QueryPredicate/has(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "has(_:)",
      "type": "topic",
      "url": "/documentation/realitykit/querypredicate/has(_:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/__(_:_:)": {
      "abstract": [
        {
          "text": "Returns a predicate which evaluates to ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": " if ",
          "type": "text"
        },
        {
          "code": "left",
          "type": "codeVoice"
        },
        {
          "text": " OR ",
          "type": "text"
        },
        {
          "code": "right",
          "type": "codeVoice"
        },
        {
          "text": " evaluates to ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "||"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14QueryPredicateV",
          "text": "QueryPredicate"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14QueryPredicateV",
          "text": "QueryPredicate"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17RealityFoundation14QueryPredicateV",
          "text": "QueryPredicate"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/__(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "||(_:_:)",
      "type": "topic",
      "url": "/documentation/realitykit/__(_:_:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/implementing-systems-for-entities-in-a-scene": {
      "abstract": [
        {
          "text": "Apply behaviors and physical effects to the objects and characters in a RealityKit",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "scene with the Entity Component System (ECS).",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/implementing-systems-for-entities-in-a-scene",
      "kind": "article",
      "role": "article",
      "title": "Implementing systems for entities in a scene",
      "type": "topic",
      "url": "/documentation/realitykit/implementing-systems-for-entities-in-a-scene"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Entity-searches",
      "generated": true,
      "identifiers": [
        "doc://com.apple.RealityKit/documentation/RealityKit/PixelCastHit"
      ],
      "title": "Entity searches"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-predicates",
      "identifiers": [
        "doc://com.apple.RealityKit/documentation/RealityKit/QueryPredicate/has(_:)"
      ],
      "title": "Creating predicates"
    },
    {
      "anchor": "Comparing-predicates",
      "identifiers": [
        "doc://com.apple.RealityKit/documentation/RealityKit/!(_:)",
        "doc://com.apple.RealityKit/documentation/RealityKit/&&(_:_:)",
        "doc://com.apple.RealityKit/documentation/RealityKit/__(_:_:)"
      ],
      "title": "Comparing predicates"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/realitykit/querypredicate"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
