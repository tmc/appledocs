{
  "abstract": [
    {
      "text": "Modifies the view to use a given transition as its method of animating",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "changes to the contents of its views.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.RealityKit/documentation/RealityKit",
        "doc://com.apple.RealityKit/documentation/RealityKit/ResolvedModel3D"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.RealityKit/documentation/RealityKit/ResolvedModel3D/contentTransition(_:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI4ViewPAAE17contentTransitionyQrAA07ContentE0VF::SYNTHESIZED::s:19_RealityKit_SwiftUI15ResolvedModel3DV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "contentTransition"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI17ContentTransitionV",
        "text": "ContentTransition"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "keyword",
        "text": "some"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4ViewP",
        "text": "View"
      }
    ],
    "modules": [
      {
        "name": "RealityKit",
        "relatedModules": [
          "SwiftUI"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "contentTransition(_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "nonisolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "contentTransition"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "transition"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI17ContentTransitionV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI17ContentTransitionV",
              "text": "ContentTransition"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "keyword",
              "text": "some"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": "\n"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The transition to apply when animating the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "content change.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "transition"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This modifier allows you to perform a transition that animates a change",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "within a single view. The provided ",
              "type": "text"
            },
            {
              "code": "ContentTransition",
              "type": "codeVoice"
            },
            {
              "text": " can present an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "opacity animation for content changes, an interpolated animation of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the contentâ€™s paths as they change, or perform no animation at all.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The ",
                  "type": "text"
                },
                {
                  "code": "contentTransition(_:)",
                  "type": "codeVoice"
                },
                {
                  "text": " modifier only has an effect within",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "the context of an ",
                  "type": "text"
                },
                {
                  "code": "Animation",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Tip",
          "style": "tip",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "In the following example, a ",
              "type": "text"
            },
            {
              "code": "Button",
              "type": "codeVoice"
            },
            {
              "text": " changes the color and font size",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of a ",
              "type": "text"
            },
            {
              "code": "Text",
              "type": "codeVoice"
            },
            {
              "text": " view. Since both of these properties apply to the paths of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the text, the ",
              "type": "text"
            },
            {
              "code": "ContentTransition/interpolate",
              "type": "codeVoice"
            },
            {
              "text": " transition can animate a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "gradual change to these properties through the entire transition. By",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "contrast, the ",
              "type": "text"
            },
            {
              "code": "ContentTransition/opacity",
              "type": "codeVoice"
            },
            {
              "text": " transition would simply fade",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "between the start and end states.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "private static let font1 = Font.system(size: 20)",
            "private static let font2 = Font.system(size: 45)",
            "",
            "@State private var color = Color.red",
            "@State private var currentFont = font1",
            "",
            "var body: some View {",
            "    VStack {",
            "        Text(\"Content transition\")",
            "            .foregroundColor(color)",
            "            .font(currentFont)",
            "            .contentTransition(.interpolate)",
            "        Spacer()",
            "        Button(\"Change\") {",
            "            withAnimation(Animation.easeInOut(duration: 5.0)) {",
            "                color = (color == .red) ? .green : .red",
            "                currentFont = (currentFont == font1) ? font2 : font1",
            "            }",
            "        }",
            "    }",
            "}"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "This example uses an ease-inâ€“ease-out animation with a five-second",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "duration to make it easier to see the effect of the interpolation. The",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "figure below shows the ",
              "type": "text"
            },
            {
              "code": "Text",
              "type": "codeVoice"
            },
            {
              "text": " at the beginning of the animation,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "halfway through, and at the end.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "header": "row",
          "rows": [
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Time",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Display",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Start",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Middle",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "End",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [],
                  "type": "paragraph"
                }
              ]
            ]
          ],
          "type": "table"
        },
        {
          "inlineContent": [
            {
              "text": "To control whether content transitions use GPU-accelerated rendering,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "set the value of the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "EnvironmentValues/contentTransitionAddsDrawingGroup",
              "type": "codeVoice"
            },
            {
              "text": " environment",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "variable.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.RealityKit/documentation/RealityKit": {
      "abstract": [
        {
          "text": "Simulate and render 3D content for use in your augmented reality apps.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit",
      "kind": "symbol",
      "role": "collection",
      "title": "RealityKit",
      "type": "topic",
      "url": "/documentation/realitykit"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ResolvedModel3D": {
      "abstract": [
        {
          "text": "A view for displaying static three-dimensional models.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ResolvedModel3D"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ResolvedModel3D",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ResolvedModel3D"
        }
      ],
      "role": "symbol",
      "title": "ResolvedModel3D",
      "type": "topic",
      "url": "/documentation/realitykit/resolvedmodel3d"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/ResolvedModel3D/contentTransition(_:)": {
      "abstract": [
        {
          "text": "Modifies the view to use a given transition as its method of animating",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "changes to the contents of its views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "contentTransition"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI17ContentTransitionV",
          "text": "ContentTransition"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/ResolvedModel3D/contentTransition(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "contentTransition(_:)",
      "type": "topic",
      "url": "/documentation/realitykit/resolvedmodel3d/contenttransition(_:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI17ContentTransitionV": {
      "abstract": [
        {
          "text": "A kind of transition that applies to the content within a single view, rather than to the insertion or removal of a view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ContentTransition"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI17ContentTransitionV",
      "kind": "symbol",
      "role": "symbol",
      "title": "ContentTransition",
      "type": "topic",
      "url": "/documentation/SwiftUI/ContentTransition"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP": {
      "abstract": [
        {
          "text": "A type that represents part of your appâ€™s user interface and provides modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
      "kind": "symbol",
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/SwiftUI/View"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/realitykit/resolvedmodel3d/contenttransition(_:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
