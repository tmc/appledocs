{
  "abstract": [
    {
      "text": "Collects elements by a given time-grouping strategy, and emits a single array of the collection.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.RealityKit/documentation/RealityKit",
        "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/collect(_:options:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Combine",
    "externalID": "s:7Combine9PublisherPAAE7collect_7optionsAA10PublishersO13CollectByTimeVy_xqd__GAG0H16GroupingStrategyOy_qd__G_16SchedulerOptionsQyd__SgtAA0K0Rd__lF::SYNTHESIZED::s:17RealityFoundation11LoadRequestC",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "collect"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "S"
      },
      {
        "kind": "text",
        "text": ">("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Combine10PublishersO",
        "text": "Publishers"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Combine10PublishersO20TimeGroupingStrategyO",
        "text": "TimeGroupingStrategy"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "text": "S"
      },
      {
        "kind": "text",
        "text": ">, "
      },
      {
        "kind": "externalParam",
        "text": "options"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "text": "S"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Combine9SchedulerP0B7OptionsQa",
        "text": "SchedulerOptions"
      },
      {
        "kind": "text",
        "text": "?) -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Combine10PublishersO",
        "text": "Publishers"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Combine10PublishersO13CollectByTimeV",
        "text": "CollectByTime"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "typeIdentifier",
        "text": "S"
      },
      {
        "kind": "text",
        "text": ">"
      }
    ],
    "modules": [
      {
        "name": "RealityKit",
        "relatedModules": [
          "Combine"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "collect(_:options:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "collect"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "S"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "strategy"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7Combine10PublishersO",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Combine10PublishersO",
              "text": "Publishers"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7Combine10PublishersO20TimeGroupingStrategyO",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Combine10PublishersO20TimeGroupingStrategyO",
              "text": "TimeGroupingStrategy"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "text": "S"
            },
            {
              "kind": "text",
              "text": ">, "
            },
            {
              "kind": "externalParam",
              "text": "options"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "text": "S"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7Combine9SchedulerP0B7OptionsQa",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Combine9SchedulerP0B7OptionsQa",
              "text": "SchedulerOptions"
            },
            {
              "kind": "text",
              "text": "? = nil) -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7Combine10PublishersO",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Combine10PublishersO",
              "text": "Publishers"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7Combine10PublishersO13CollectByTimeV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Combine10PublishersO13CollectByTimeV",
              "text": "CollectByTime"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "S"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "S"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7Combine9SchedulerP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Combine9SchedulerP",
              "text": "Scheduler"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The timing group strategy used by the operator to collect and publish elements.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "strategy"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Scheduler options to use for the strategy.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "options"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A publisher that collects elements by a given strategy, and emits a single array of the collection.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use ",
              "type": "text"
            },
            {
              "code": "Publisher/collect(_:options:)",
              "type": "codeVoice"
            },
            {
              "text": " to emit arrays of elements on a schedule specified by a ",
              "type": "text"
            },
            {
              "code": "Scheduler",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "Stride",
              "type": "codeVoice"
            },
            {
              "text": " that you provide. At the end of each scheduled interval, the publisher sends an array that contains the items it collected. If the upstream publisher finishes before filling the buffer, the publisher sends an array that contains items it received. This may be fewer than the number of elements specified in the requested ",
              "type": "text"
            },
            {
              "code": "Stride",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If the upstream publisher fails with an error, this publisher forwards the error to the downstream receiver instead of sending its output.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The example above collects timestamps generated on a one-second ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/timer",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " in groups (",
              "type": "text"
            },
            {
              "code": "Stride",
              "type": "codeVoice"
            },
            {
              "text": ") of five.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let sub = Timer.publish(every: 1, on: .main, in: .default)",
            "    .autoconnect()",
            "    .collect(.byTime(RunLoop.main, .seconds(5)))",
            "    .sink { print(\"\\($0)\", terminator: \"\\n\\n\") }",
            "",
            "// Prints: \"[2020-01-24 00:54:46 +0000, 2020-01-24 00:54:47 +0000,",
            "//          2020-01-24 00:54:48 +0000, 2020-01-24 00:54:49 +0000,",
            "//          2020-01-24 00:54:50 +0000]\""
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "When this publisher receives a request for ",
                  "type": "text"
                },
                {
                  "code": ".max(n)",
                  "type": "codeVoice"
                },
                {
                  "text": " elements, it requests ",
                  "type": "text"
                },
                {
                  "code": ".max(count * n)",
                  "type": "codeVoice"
                },
                {
                  "text": " from the upstream publisher.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.RealityKit/documentation/RealityKit": {
      "abstract": [
        {
          "text": "Simulate and render 3D content for use in your augmented reality apps.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit",
      "kind": "symbol",
      "role": "collection",
      "title": "RealityKit",
      "type": "topic",
      "url": "/documentation/realitykit"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest": {
      "abstract": [
        {
          "text": "A resource loader that acts as a publisher.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LoadRequest"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LoadRequest"
        }
      ],
      "role": "symbol",
      "title": "LoadRequest",
      "type": "topic",
      "url": "/documentation/realitykit/loadrequest"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/collect()": {
      "abstract": [
        {
          "text": "Collects all received elements, and emits a single array of the collection when the upstream publisher finishes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "collect"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO",
          "text": "Publishers"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO7CollectV",
          "text": "Collect"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/collect()",
      "kind": "symbol",
      "role": "symbol",
      "title": "collect()",
      "type": "topic",
      "url": "/documentation/realitykit/loadrequest/collect()"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/collect(_:)": {
      "abstract": [
        {
          "text": "Collects up to the specified number of elements, and then emits a single array of the collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "collect"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO",
          "text": "Publishers"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO14CollectByCountV",
          "text": "CollectByCount"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/collect(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "collect(_:)",
      "type": "topic",
      "url": "/documentation/realitykit/loadrequest/collect(_:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/collect(_:options:)": {
      "abstract": [
        {
          "text": "Collects elements by a given time-grouping strategy, and emits a single array of the collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "collect"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO",
          "text": "Publishers"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO20TimeGroupingStrategyO",
          "text": "TimeGroupingStrategy"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "options"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine9SchedulerP0B7OptionsQa",
          "text": "SchedulerOptions"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO",
          "text": "Publishers"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO13CollectByTimeV",
          "text": "CollectByTime"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/collect(_:options:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "collect(_:options:)",
      "type": "topic",
      "url": "/documentation/realitykit/loadrequest/collect(_:options:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/ignoreOutput()": {
      "abstract": [
        {
          "text": "Ignores all upstream elements, but passes along the upstream publisher’s completion state (finished or failed).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ignoreOutput"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO",
          "text": "Publishers"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO12IgnoreOutputV",
          "text": "IgnoreOutput"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/ignoreOutput()",
      "kind": "symbol",
      "role": "symbol",
      "title": "ignoreOutput()",
      "type": "topic",
      "url": "/documentation/realitykit/loadrequest/ignoreoutput()"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/reduce(_:_:)": {
      "abstract": [
        {
          "text": "Applies a closure that collects each element of a stream and publishes a final result upon completion.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "reduce"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine9PublisherP6OutputQa",
          "text": "Output"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO",
          "text": "Publishers"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO6ReduceV",
          "text": "Reduce"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/reduce(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "reduce(_:_:)",
      "type": "topic",
      "url": "/documentation/realitykit/loadrequest/reduce(_:_:)"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/tryReduce(_:_:)": {
      "abstract": [
        {
          "text": "Applies an error-throwing closure that collects each element of a stream and publishes a final result upon completion.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "tryReduce"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine9PublisherP6OutputQa",
          "text": "Output"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO",
          "text": "Publishers"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO9TryReduceV",
          "text": "TryReduce"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/tryReduce(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "tryReduce(_:_:)",
      "type": "topic",
      "url": "/documentation/realitykit/loadrequest/tryreduce(_:_:)"
    },
    "doc://com.apple.documentation/documentation/foundation/timer": {
      "abstract": [
        {
          "text": "A timer that fires after a certain time interval has elapsed, sending a specified message to a target object.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "Timer"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/timer",
      "kind": "symbol",
      "role": "symbol",
      "title": "Timer",
      "type": "topic",
      "url": "/documentation/foundation/timer"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7Combine10PublishersO": {
      "abstract": [
        {
          "text": "A namespace for types that serve as publishers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Publishers"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7Combine10PublishersO",
      "kind": "symbol",
      "role": "symbol",
      "title": "Publishers",
      "type": "topic",
      "url": "/documentation/Combine/Publishers"
    },
    "doc://com.externally.resolved.symbol/s:7Combine10PublishersO13CollectByTimeV": {
      "abstract": [
        {
          "text": "A publisher that buffers and periodically publishes its items.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CollectByTime"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Upstream"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Context"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Upstream"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine9PublisherP",
          "text": "Publisher"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Context"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine9SchedulerP",
          "text": "Scheduler"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7Combine10PublishersO13CollectByTimeV",
      "kind": "symbol",
      "role": "symbol",
      "title": "Publishers.CollectByTime",
      "type": "topic",
      "url": "/documentation/Combine/Publishers/CollectByTime"
    },
    "doc://com.externally.resolved.symbol/s:7Combine10PublishersO20TimeGroupingStrategyO": {
      "abstract": [
        {
          "text": "A strategy for collecting received elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TimeGroupingStrategy"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Context"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Context"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine9SchedulerP",
          "text": "Scheduler"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7Combine10PublishersO20TimeGroupingStrategyO",
      "kind": "symbol",
      "role": "symbol",
      "title": "Publishers.TimeGroupingStrategy",
      "type": "topic",
      "url": "/documentation/Combine/Publishers/TimeGroupingStrategy"
    },
    "doc://com.externally.resolved.symbol/s:7Combine9SchedulerP": {
      "abstract": [
        {
          "text": "A protocol that defines when and how to execute a closure.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Scheduler"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine9SchedulerP0B8TimeTypeQa",
          "text": "SchedulerTimeType"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7Combine9SchedulerP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Scheduler",
      "type": "topic",
      "url": "/documentation/Combine/Scheduler"
    },
    "doc://com.externally.resolved.symbol/s:7Combine9SchedulerP0B7OptionsQa": {
      "abstract": [
        {
          "text": "A type that defines options accepted by the scheduler.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SchedulerOptions"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7Combine9SchedulerP0B7OptionsQa",
      "kind": "symbol",
      "role": "symbol",
      "title": "SchedulerOptions",
      "type": "topic",
      "url": "/documentation/Combine/Scheduler/SchedulerOptions"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Reducing-elements",
      "generated": true,
      "identifiers": [
        "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/collect()",
        "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/collect(_:)",
        "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/ignoreOutput()",
        "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/reduce(_:_:)",
        "doc://com.apple.RealityKit/documentation/RealityKit/LoadRequest/tryReduce(_:_:)"
      ],
      "title": "Reducing elements"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1foundation~1timer/title",
          "value": "NSTimer"
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/realitykit/loadrequest/collect(_:options:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
