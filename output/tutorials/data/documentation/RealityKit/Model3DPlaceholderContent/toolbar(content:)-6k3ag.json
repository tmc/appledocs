{
  "abstract": [
    {
      "text": "Populates the toolbar or navigation bar with the specified items.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.RealityKit/documentation/RealityKit",
        "doc://com.apple.RealityKit/documentation/RealityKit/Model3DPlaceholderContent"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.RealityKit/documentation/RealityKit/Model3DPlaceholderContent/toolbar(content:)-6k3ag"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI4ViewPAAE7toolbar7contentQrqd__yXE_tAA14ToolbarContentRd__lF::SYNTHESIZED::s:19_RealityKit_SwiftUI25Model3DPlaceholderContentV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "toolbar"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "Content"
      },
      {
        "kind": "text",
        "text": ">("
      },
      {
        "kind": "externalParam",
        "text": "content"
      },
      {
        "kind": "text",
        "text": ": () -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "Content"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "keyword",
        "text": "some"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4ViewP",
        "text": "View"
      }
    ],
    "modules": [
      {
        "name": "RealityKit",
        "relatedModules": [
          "SwiftUI"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "11.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "7.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "toolbar(content:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "nonisolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "toolbar"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Content"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "attribute",
              "text": "@"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI21ToolbarContentBuilderV",
              "kind": "attribute",
              "preciseIdentifier": "s:7SwiftUI21ToolbarContentBuilderV",
              "text": "ToolbarContentBuilder"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "externalParam",
              "text": "content"
            },
            {
              "kind": "text",
              "text": ": () -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "Content"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "keyword",
              "text": "some"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Content"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI14ToolbarContentP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI14ToolbarContentP",
              "text": "ToolbarContent"
            },
            {
              "kind": "text",
              "text": "\n"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The items representing the content of the toolbar.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "content"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use this method to populate a toolbar with a collection of views that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you provide to a toolbar view builder.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The toolbar modifier expects a collection of toolbar items which you can",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "provide either by supplying a collection of views with each view",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "wrapped in a ",
              "type": "text"
            },
            {
              "code": "ToolbarItem",
              "type": "codeVoice"
            },
            {
              "text": ", or by providing a collection of views as",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a ",
              "type": "text"
            },
            {
              "code": "ToolbarItemGroup",
              "type": "codeVoice"
            },
            {
              "text": ". The example below uses a collection of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "ToolbarItem",
              "type": "codeVoice"
            },
            {
              "text": " views to create a macOS toolbar that supports text",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "editing features:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct StructToolbarItemGroupView: View {",
            "    @State private var text = \"\"",
            "    @State private var bold = false",
            "    @State private var italic = false",
            "    @State private var fontSize = 12.0",
            "",
            "    var displayFont: Font {",
            "        let font = Font.system(size: CGFloat(fontSize),",
            "                               weight: bold == true ? .bold : .regular)",
            "        return italic == true ? font.italic() : font",
            "    }",
            "",
            "    var body: some View {",
            "        TextEditor(text: $text)",
            "            .font(displayFont)",
            "            .toolbar {",
            "                ToolbarItemGroup {",
            "                    Slider(",
            "                        value: $fontSize,",
            "                        in: 8...120,",
            "                        minimumValueLabel:",
            "                            Text(\"A\").font(.system(size: 8)),",
            "                        maximumValueLabel:",
            "                            Text(\"A\").font(.system(size: 16))",
            "                    ) {",
            "                        Text(\"Font Size (\\(Int(fontSize)))\")",
            "                    }",
            "                    .frame(width: 150)",
            "                    Toggle(isOn: $bold) {",
            "                        Image(systemName: \"bold\")",
            "                    }",
            "                    Toggle(isOn: $italic) {",
            "                        Image(systemName: \"italic\")",
            "                    }",
            "                }",
            "            }",
            "            .navigationTitle(\"My Note\")",
            "    }",
            "}"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Although it’s not mandatory, wrapping a related group of toolbar",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "items together in a ",
              "type": "text"
            },
            {
              "code": "ToolbarItemGroup",
              "type": "codeVoice"
            },
            {
              "text": " provides a one-to-one mapping",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "between controls and toolbar items which results in the correct layout",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and spacing on each platform.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For design guidance on toolbars, see",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/design/Human-Interface-Guidelines/toolbars",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in the Human Interface Guidelines.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "components-toolbars-thumbnail.png": {
      "alt": null,
      "identifier": "components-toolbars-thumbnail.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/af9a66a513ec927196e10ce743d8b45f/components-toolbars-thumbnail@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b26c97cf64b5d3c4bbe1536f91f1e940/components-toolbars-thumbnail~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.RealityKit/documentation/RealityKit": {
      "abstract": [
        {
          "text": "Simulate and render 3D content for use in your augmented reality apps.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit",
      "kind": "symbol",
      "role": "collection",
      "title": "RealityKit",
      "type": "topic",
      "url": "/documentation/realitykit"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/Model3DPlaceholderContent": {
      "abstract": [
        {
          "text": "A container view that presents either a 3D model or a placeholder for one.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Model3DPlaceholderContent"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Model3DPlaceholderContent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Model3DPlaceholderContent"
        }
      ],
      "role": "symbol",
      "title": "Model3DPlaceholderContent",
      "type": "topic",
      "url": "/documentation/realitykit/model3dplaceholdercontent"
    },
    "doc://com.apple.RealityKit/documentation/RealityKit/Model3DPlaceholderContent/toolbar(content:)-6k3ag": {
      "abstract": [
        {
          "text": "Populates the toolbar or navigation bar with the specified items.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "toolbar"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.RealityKit/documentation/RealityKit/Model3DPlaceholderContent/toolbar(content:)-6k3ag",
      "kind": "symbol",
      "role": "symbol",
      "title": "toolbar(content:)",
      "type": "topic",
      "url": "/documentation/realitykit/model3dplaceholdercontent/toolbar(content:)-6k3ag"
    },
    "doc://com.apple.documentation/design/Human-Interface-Guidelines/toolbars": {
      "abstract": [
        {
          "text": "A toolbar provides convenient access to frequently used commands and controls that perform actions relevant to the current view.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/design/Human-Interface-Guidelines/toolbars",
      "images": [
        {
          "identifier": "components-toolbars-thumbnail.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "article",
      "title": "Toolbars",
      "type": "topic",
      "url": "/design/Human-Interface-Guidelines/toolbars"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI14ToolbarContentP": {
      "abstract": [
        {
          "text": "Conforming types represent items that can be placed in various locations in a toolbar.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ToolbarContent"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI14ToolbarContentP",
      "kind": "symbol",
      "role": "symbol",
      "title": "ToolbarContent",
      "type": "topic",
      "url": "/documentation/SwiftUI/ToolbarContent"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI21ToolbarContentBuilderV": {
      "abstract": [
        {
          "text": "Constructs a toolbar item set from multi-expression closures.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@resultBuilder"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ToolbarContentBuilder"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI21ToolbarContentBuilderV",
      "kind": "symbol",
      "role": "symbol",
      "title": "ToolbarContentBuilder",
      "type": "topic",
      "url": "/documentation/SwiftUI/ToolbarContentBuilder"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
      "kind": "symbol",
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/SwiftUI/View"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/realitykit/model3dplaceholdercontent/toolbar(content:)-6k3ag"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
