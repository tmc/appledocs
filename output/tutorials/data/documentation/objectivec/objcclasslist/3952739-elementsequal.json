{
  "abstract": [
    {
      "text": "Returns a Boolean value indicating whether this sequence and another sequence contain equivalent elements in the same order, using the given predicate as the equivalence test.",
      "type": "text"
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/objectivec",
        "doc://com.apple.documentation/documentation/objectivec/objcclasslist"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.documentation/documentation/objectivec/objcclasslist/3952739-elementsequal"
  },
  "kind": "symbol",
  "legacy_identifier": 3952739,
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:STsE13elementsEqual_2bySbqd___Sb7ElementQz_ACQyd__tKXEtKSTRd__lF::SYNTHESIZED::s:10ObjectiveC13ObjCClassListV",
    "fragments": [
      {
        "kind": "text",
        "text": "func "
      },
      {
        "kind": "identifier",
        "text": "elementsEqual"
      },
      {
        "kind": "text",
        "text": "<OtherSequence>(OtherSequence, "
      },
      {
        "kind": "identifier",
        "text": "by"
      },
      {
        "kind": "text",
        "text": ": (AnyClass, OtherSequence.Element) -> Bool) -> Bool"
      }
    ],
    "modules": [
      {
        "name": "Objective-C Runtime"
      }
    ],
    "parent": {
      "title": "ObjCClassList"
    },
    "platforms": [
      {
        "current": "18.4",
        "introducedAt": "16.0",
        "name": "iOS"
      },
      {
        "current": "18.4",
        "introducedAt": "16.0",
        "name": "iPadOS"
      },
      {
        "current": "18.4",
        "introducedAt": "16.0",
        "name": "Mac Catalyst"
      },
      {
        "current": "15.4",
        "introducedAt": "13.0",
        "name": "macOS"
      },
      {
        "current": "18.4",
        "introducedAt": "16.0",
        "name": "tvOS"
      },
      {
        "current": "2.4",
        "introducedAt": "1.0",
        "name": "visionOS"
      },
      {
        "current": "11.4",
        "introducedAt": "9.0",
        "name": "watchOS"
      },
      {
        "current": "16.3",
        "introducedAt": "14.0",
        "name": "Xcode"
      }
    ],
    "role": "symbol",
    "roleHeading": "Generic Instance Method",
    "symbolKind": "structm",
    "title": "elementsEqual(_:by:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "elementsEqual"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:STsE13elementsEqual_2bySbqd___Sb7ElementQz_ACQyd__tKXEtKSTRd__lF13OtherSequenceL_qd__mfp",
              "text": "OtherSequence"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "other"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:STsE13elementsEqual_2bySbqd___Sb7ElementQz_ACQyd__tKXEtKSTRd__lF13OtherSequenceL_qd__mfp",
              "text": "OtherSequence"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "by"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "areEquivalent"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/AnyClass",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s8AnyClassa",
              "text": "AnyClass"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:STsE13elementsEqual_2bySbqd___Sb7ElementQz_ACQyd__tKXEtKSTRd__lF13OtherSequenceL_qd__mfp",
              "text": "OtherSequence"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Sequence/Element",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:ST7ElementQa",
              "text": "Element"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "rethrows"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:STsE13elementsEqual_2bySbqd___Sb7ElementQz_ACQyd__tKXEtKSTRd__lF13OtherSequenceL_qd__mfp",
              "text": "OtherSequence"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Sequence",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:ST",
              "text": "Sequence"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "languages": [
        "swift"
      ],
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A sequence to compare to this sequence.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "other"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A predicate that returns ",
                  "type": "text"
                },
                {
                  "code": "true",
                  "type": "codeVoice"
                },
                {
                  "text": " if its two arguments are equivalent; otherwise, ",
                  "type": "text"
                },
                {
                  "code": "false",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "areEquivalent"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return_value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "code": "true",
              "type": "codeVoice"
            },
            {
              "text": " if this sequence and ",
              "type": "text"
            },
            {
              "code": "other",
              "type": "codeVoice"
            },
            {
              "text": " contain equivalent items, using ",
              "type": "text"
            },
            {
              "code": "areEquivalent",
              "type": "codeVoice"
            },
            {
              "text": " as the equivalence test; otherwise, ",
              "type": "text"
            },
            {
              "code": "false.",
              "type": "codeVoice"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "At least one of the sequences must be finite.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The predicate must be an ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "equivalence relation",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " over the elements. That is, for any elements ",
              "type": "text"
            },
            {
              "code": "a",
              "type": "codeVoice"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "code": "b",
              "type": "codeVoice"
            },
            {
              "text": ", and ",
              "type": "text"
            },
            {
              "code": "c",
              "type": "codeVoice"
            },
            {
              "text": ", the following conditions must hold:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Complexity: O(",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "m",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": "), where ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "m",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " is the lesser of the length of the sequence and the length of ",
              "type": "text"
            },
            {
              "code": "other",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "areEquivalent(a, a)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " is always ",
                      "type": "text"
                    },
                    {
                      "code": "true",
                      "type": "codeVoice"
                    },
                    {
                      "text": ". (Reflexivity)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "areEquivalent(a, b)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " implies ",
                      "type": "text"
                    },
                    {
                      "code": "areEquivalent(b, a)",
                      "type": "codeVoice"
                    },
                    {
                      "text": ". (Symmetry)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "If ",
                      "type": "text"
                    },
                    {
                      "code": "areEquivalent(a, b)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "areEquivalent(b, c)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " are both ",
                      "type": "text"
                    },
                    {
                      "code": "true",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", then ",
                      "type": "text"
                    },
                    {
                      "code": "areEquivalent(a, c)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " is also ",
                      "type": "text"
                    },
                    {
                      "code": "true",
                      "type": "codeVoice"
                    },
                    {
                      "text": ". (Transitivity)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.Swift/documentation/Swift/AnyClass": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyClass",
      "kind": "symbol",
      "role": "symbol",
      "title": "AnyClass",
      "type": "topic",
      "url": "/documentation/swift/anyclass"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
      "kind": "symbol",
      "role": "symbol",
      "title": "Bool",
      "type": "topic",
      "url": "/documentation/swift/bool"
    },
    "doc://com.apple.Swift/documentation/Swift/Sequence": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sequence",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sequence",
      "type": "topic",
      "url": "/documentation/swift/sequence"
    },
    "doc://com.apple.Swift/documentation/Swift/Sequence/Element": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sequence/Element",
      "kind": "symbol",
      "role": "symbol",
      "title": "Element",
      "type": "topic",
      "url": "/documentation/swift/sequence/element"
    },
    "doc://com.apple.documentation/documentation/objectivec": {
      "identifier": "doc://com.apple.documentation/documentation/objectivec",
      "kind": "symbol",
      "role": "collection",
      "title": "Objective-C Runtime",
      "type": "topic",
      "url": "/documentation/objectivec"
    },
    "doc://com.apple.documentation/documentation/objectivec/objcclasslist": {
      "identifier": "doc://com.apple.documentation/documentation/objectivec/objcclasslist",
      "kind": "symbol",
      "role": "symbol",
      "title": "ObjCClassList",
      "type": "topic",
      "url": "/documentation/objectivec/objcclasslist"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "documentation/objectivec/objcclasslist/3952739-elementsequal"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
