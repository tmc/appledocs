{
  "abstract": [
    {
      "text": "Returns the longest possible subsequences of the sequence, in order, that donâ€™t contain elements satisfying the given predicate. Elements that are used to split the sequence are not returned as part of any subsequence.",
      "type": "text"
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/objectivec",
        "doc://com.apple.documentation/documentation/objectivec/objcclasslist"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.documentation/documentation/objectivec/objcclasslist/3952779-split"
  },
  "kind": "symbol",
  "legacy_identifier": 3952779,
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:STsE5split9maxSplits25omittingEmptySubsequences14whereSeparatorSays10ArraySliceVy7ElementQzGGSi_S2bAHKXEtKF::SYNTHESIZED::s:10ObjectiveC13ObjCClassListV",
    "fragments": [
      {
        "kind": "text",
        "text": "func "
      },
      {
        "kind": "identifier",
        "text": "split"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "identifier",
        "text": "maxSplits"
      },
      {
        "kind": "text",
        "text": ": Int, "
      },
      {
        "kind": "identifier",
        "text": "omittingEmptySubsequences"
      },
      {
        "kind": "text",
        "text": ": Bool, "
      },
      {
        "kind": "identifier",
        "text": "whereSeparator"
      },
      {
        "kind": "text",
        "text": ": (AnyClass) -> Bool) -> [ArraySlice<AnyClass>]"
      }
    ],
    "modules": [
      {
        "name": "Objective-C Runtime"
      }
    ],
    "parent": {
      "title": "ObjCClassList"
    },
    "platforms": [
      {
        "current": "18.4",
        "introducedAt": "16.0",
        "name": "iOS"
      },
      {
        "current": "18.4",
        "introducedAt": "16.0",
        "name": "iPadOS"
      },
      {
        "current": "18.4",
        "introducedAt": "16.0",
        "name": "Mac Catalyst"
      },
      {
        "current": "15.4",
        "introducedAt": "13.0",
        "name": "macOS"
      },
      {
        "current": "18.4",
        "introducedAt": "16.0",
        "name": "tvOS"
      },
      {
        "current": "2.4",
        "introducedAt": "1.0",
        "name": "visionOS"
      },
      {
        "current": "11.4",
        "introducedAt": "9.0",
        "name": "watchOS"
      },
      {
        "current": "16.3",
        "introducedAt": "14.0",
        "name": "Xcode"
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "structm",
    "title": "split(maxSplits:omittingEmptySubsequences:whereSeparator:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "split"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "maxSplits"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Int",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Si",
              "text": "Int"
            },
            {
              "kind": "text",
              "text": " = Int.max"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "omittingEmptySubsequences"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": " = true"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "whereSeparator"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "isSeparator"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/AnyClass",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s8AnyClassa",
              "text": "AnyClass"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "rethrows"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "text",
              "text": "["
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/ArraySlice",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s10ArraySliceV",
              "text": "ArraySlice"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/AnyClass",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s8AnyClassa",
              "text": "AnyClass"
            },
            {
              "kind": "text",
              "text": ">]"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "languages": [
        "swift"
      ],
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The maximum number of times to split the sequence, or one less than the number of subsequences to return. If ",
                  "type": "text"
                },
                {
                  "code": "maxSplits + 1",
                  "type": "codeVoice"
                },
                {
                  "text": " subsequences are returned, the last one is a suffix of the original sequence containing the remaining elements. ",
                  "type": "text"
                },
                {
                  "code": "maxSplits",
                  "type": "codeVoice"
                },
                {
                  "text": " must be greater than or equal to zero. The default value is ",
                  "type": "text"
                },
                {
                  "code": "Int.max",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "maxSplits"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "If ",
                  "type": "text"
                },
                {
                  "code": "false",
                  "type": "codeVoice"
                },
                {
                  "text": ", an empty subsequence is returned in the result for each pair of consecutive elements satisfying the ",
                  "type": "text"
                },
                {
                  "code": "isSeparator",
                  "type": "codeVoice"
                },
                {
                  "text": " predicate and for each element at the start or end of the sequence satisfying the ",
                  "type": "text"
                },
                {
                  "code": "isSeparator",
                  "type": "codeVoice"
                },
                {
                  "text": " predicate. If ",
                  "type": "text"
                },
                {
                  "code": "true",
                  "type": "codeVoice"
                },
                {
                  "text": ", only nonempty subsequences are returned. The default value is ",
                  "type": "text"
                },
                {
                  "code": "true",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "omittingEmptySubsequences"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A closure that returns ",
                  "type": "text"
                },
                {
                  "code": "true",
                  "type": "codeVoice"
                },
                {
                  "text": " if its argument should be used to split the sequence; otherwise, ",
                  "type": "text"
                },
                {
                  "code": "false",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "isSeparator"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return_value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "An array of subsequences, split from this sequenceâ€™s elements.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The following examples show the effects of the ",
              "type": "text"
            },
            {
              "code": "maxSplits",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "omittingEmptySubsequences",
              "type": "codeVoice"
            },
            {
              "text": " parameters when splitting a string using a closure that matches spaces. The first use of ",
              "type": "text"
            },
            {
              "code": "split",
              "type": "codeVoice"
            },
            {
              "text": " returns each word that was originally separated by one or more spaces.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let line = \"BLANCHE:   I don't want realism. I want magic!\"",
            "print(line.split(whereSeparator: { $0 == \" \" })",
            "          .map(String.init))",
            "// Prints \"[\"BLANCHE:\", \"I\", \"don\\'t\", \"want\", \"realism.\", \"I\", \"want\", \"magic!\"]\""
          ],
          "metadata": {
            "anchor": "3952780",
            "title": "Listing 1"
          },
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The second example passes ",
              "type": "text"
            },
            {
              "code": "1",
              "type": "codeVoice"
            },
            {
              "text": " for the ",
              "type": "text"
            },
            {
              "code": "maxSplits",
              "type": "codeVoice"
            },
            {
              "text": " parameter, so the original string is split just once, into two new strings.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "print(",
            "   line.split(maxSplits: 1, whereSeparator: { $0 == \" \" })",
            "                  .map(String.init))",
            "// Prints \"[\"BLANCHE:\", \"  I don\\'t want realism. I want magic!\"]\""
          ],
          "metadata": {
            "anchor": "3952781",
            "title": "Listing 2"
          },
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The final example passes ",
              "type": "text"
            },
            {
              "code": "true",
              "type": "codeVoice"
            },
            {
              "text": " for the ",
              "type": "text"
            },
            {
              "code": "allowEmptySlices",
              "type": "codeVoice"
            },
            {
              "text": " parameter, so the returned array contains empty strings where spaces were repeated.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "print(",
            "    line.split(",
            "        omittingEmptySubsequences: false,",
            "        whereSeparator: { $0 == \" \" }",
            "    ).map(String.init))",
            "// Prints \"[\"BLANCHE:\", \"\", \"\", \"I\", \"don\\'t\", \"want\", \"realism.\", \"I\", \"want\", \"magic!\"]\""
          ],
          "metadata": {
            "anchor": "3952782",
            "title": "Listing 3"
          },
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Complexity: O(",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "n",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": "), where ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "n",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " is the length of the sequence.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.Swift/documentation/Swift/AnyClass": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyClass",
      "kind": "symbol",
      "role": "symbol",
      "title": "AnyClass",
      "type": "topic",
      "url": "/documentation/swift/anyclass"
    },
    "doc://com.apple.Swift/documentation/Swift/ArraySlice": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/ArraySlice",
      "kind": "symbol",
      "role": "symbol",
      "title": "ArraySlice",
      "type": "topic",
      "url": "/documentation/swift/arrayslice"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
      "kind": "symbol",
      "role": "symbol",
      "title": "Bool",
      "type": "topic",
      "url": "/documentation/swift/bool"
    },
    "doc://com.apple.Swift/documentation/Swift/Int": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int",
      "kind": "symbol",
      "role": "symbol",
      "title": "Int",
      "type": "topic",
      "url": "/documentation/swift/int"
    },
    "doc://com.apple.documentation/documentation/objectivec": {
      "identifier": "doc://com.apple.documentation/documentation/objectivec",
      "kind": "symbol",
      "role": "collection",
      "title": "Objective-C Runtime",
      "type": "topic",
      "url": "/documentation/objectivec"
    },
    "doc://com.apple.documentation/documentation/objectivec/objcclasslist": {
      "identifier": "doc://com.apple.documentation/documentation/objectivec/objcclasslist",
      "kind": "symbol",
      "role": "symbol",
      "title": "ObjCClassList",
      "type": "topic",
      "url": "/documentation/objectivec/objcclasslist"
    },
    "doc://com.apple.documentation/documentation/objectivec/objcclasslist/3952779-split#3952780": {
      "identifier": "doc://com.apple.documentation/documentation/objectivec/objcclasslist/3952779-split#3952780",
      "kind": "article",
      "role": "codeListing",
      "title": "Listing 1",
      "type": "section",
      "url": "/documentation/objectivec/objcclasslist/3952779-split#3952780"
    },
    "doc://com.apple.documentation/documentation/objectivec/objcclasslist/3952779-split#3952781": {
      "identifier": "doc://com.apple.documentation/documentation/objectivec/objcclasslist/3952779-split#3952781",
      "kind": "article",
      "role": "codeListing",
      "title": "Listing 2",
      "type": "section",
      "url": "/documentation/objectivec/objcclasslist/3952779-split#3952781"
    },
    "doc://com.apple.documentation/documentation/objectivec/objcclasslist/3952779-split#3952782": {
      "identifier": "doc://com.apple.documentation/documentation/objectivec/objcclasslist/3952779-split#3952782",
      "kind": "article",
      "role": "codeListing",
      "title": "Listing 3",
      "type": "section",
      "url": "/documentation/objectivec/objcclasslist/3952779-split#3952782"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "documentation/objectivec/objcclasslist/3952779-split"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
