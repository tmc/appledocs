{
  "abstract": [
    {
      "text": "Creates an asynchronous sequence that maps an error-throwing closure over the base sequence’s elements, omitting results that don’t return a value.",
      "type": "text"
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/foundation",
        "doc://com.apple.documentation/documentation/foundation/notifications",
        "doc://com.apple.documentation/documentation/foundation/notificationcenter",
        "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767119-compactmap"
  },
  "kind": "symbol",
  "legacy_identifier": 3767119,
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:So20NSNotificationCenterC10FoundationE13NotificationsC",
    "fragments": [
      {
        "kind": "text",
        "text": "func "
      },
      {
        "kind": "identifier",
        "text": "compactMap"
      },
      {
        "kind": "text",
        "text": "<ElementOfResult>((Notification) -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<NotificationCenter.Notifications, ElementOfResult>"
      }
    ],
    "modules": [
      {
        "name": "Foundation"
      }
    ],
    "parent": {
      "title": "NotificationCenter.Notifications"
    },
    "platforms": [
      {
        "current": "18.4",
        "introducedAt": "13.0",
        "name": "iOS"
      },
      {
        "current": "18.4",
        "introducedAt": "13.0",
        "name": "iPadOS"
      },
      {
        "current": "18.4",
        "introducedAt": "15.0",
        "name": "Mac Catalyst"
      },
      {
        "current": "15.4",
        "introducedAt": "10.15",
        "name": "macOS"
      },
      {
        "current": "18.4",
        "introducedAt": "13.0",
        "name": "tvOS"
      },
      {
        "current": "2.4",
        "introducedAt": "1.0",
        "name": "visionOS"
      },
      {
        "current": "11.4",
        "introducedAt": "6.0",
        "name": "watchOS"
      },
      {
        "current": "16.3",
        "introducedAt": "13.0",
        "name": "Xcode"
      }
    ],
    "role": "symbol",
    "roleHeading": "Generic Instance Method",
    "symbolKind": "instm",
    "title": "compactMap(_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@preconcurrency"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "compactMap"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF0H8OfResultL_qd__mfp",
              "text": "ElementOfResult"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "transform"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "@escaping"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "attribute",
              "text": "@Sendable"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/notification",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:10Foundation12NotificationV",
              "text": "Notification"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF0H8OfResultL_qd__mfp",
              "text": "ElementOfResult"
            },
            {
              "kind": "text",
              "text": "?"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncThrowingCompactMapSequence",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:12_Concurrency31AsyncThrowingCompactMapSequenceV",
              "text": "AsyncThrowingCompactMapSequence"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSNotificationCenter",
              "text": "NotificationCenter"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:So20NSNotificationCenterC10FoundationE13NotificationsC",
              "text": "Notifications"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF0H8OfResultL_qd__mfp",
              "text": "ElementOfResult"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "languages": [
        "swift"
      ],
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "An error-throwing mapping closure. ",
                  "type": "text"
                },
                {
                  "code": "transform",
                  "type": "codeVoice"
                },
                {
                  "text": " accepts an element of this sequence as its parameter and returns a transformed value of the same or of a different type. If ",
                  "type": "text"
                },
                {
                  "code": "transform",
                  "type": "codeVoice"
                },
                {
                  "text": " throws an error, the sequence ends.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "transform"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return_value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "An asynchronous sequence that contains, in order, the non-",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " elements produced by the ",
              "type": "text"
            },
            {
              "code": "transform",
              "type": "codeVoice"
            },
            {
              "text": " closure. The sequence ends either when the base sequence ends or when ",
              "type": "text"
            },
            {
              "code": "transform",
              "type": "codeVoice"
            },
            {
              "text": " throws an error.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "code": "compactMap(_:)",
              "type": "codeVoice"
            },
            {
              "text": " method to transform every element received from a base asynchronous sequence, while also discarding any ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " results from the closure. Typically, you use this to transform from one type of element to another.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In this example, an asynchronous sequence called ",
              "type": "text"
            },
            {
              "code": "Counter",
              "type": "codeVoice"
            },
            {
              "text": " produces ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": " values from ",
              "type": "text"
            },
            {
              "code": "1",
              "type": "codeVoice"
            },
            {
              "text": " to ",
              "type": "text"
            },
            {
              "code": "5",
              "type": "codeVoice"
            },
            {
              "text": ". The closure provided to the ",
              "type": "text"
            },
            {
              "code": "compactMap(_:)",
              "type": "codeVoice"
            },
            {
              "text": " method takes each ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": " and looks up a corresponding ",
              "type": "text"
            },
            {
              "code": "String",
              "type": "codeVoice"
            },
            {
              "text": " from a ",
              "type": "text"
            },
            {
              "code": "romanNumeralDict",
              "type": "codeVoice"
            },
            {
              "text": " dictionary. Since there is no key for ",
              "type": "text"
            },
            {
              "code": "4",
              "type": "codeVoice"
            },
            {
              "text": ", the closure returns ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " in this case, which ",
              "type": "text"
            },
            {
              "code": "compactMap(_:)",
              "type": "codeVoice"
            },
            {
              "text": " omits from the transformed asynchronous sequence. When the value is ",
              "type": "text"
            },
            {
              "code": "5",
              "type": "codeVoice"
            },
            {
              "text": ", the closure throws ",
              "type": "text"
            },
            {
              "code": "MyError",
              "type": "codeVoice"
            },
            {
              "text": ", terminating the sequence.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let romanNumeralDict: [Int: String] =",
            "    [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]",
            "",
            "do {",
            "    let stream = Counter(howHigh: 5)",
            "        .compactMap { (value) throws -> String? in",
            "            if value == 5 {",
            "                throw MyError()",
            "            }",
            "            return romanNumeralDict[value]",
            "        }",
            "    for try await numeral in stream {",
            "        print(numeral, terminator: \" \")",
            "    }",
            "} catch {",
            "    print(\"Error: \\(error)\")",
            "}",
            "// Prints \"I II III Error: MyError() \""
          ],
          "metadata": {
            "anchor": "4149850",
            "title": "Listing 1"
          },
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.Swift/documentation/Swift/AsyncThrowingCompactMapSequence": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncThrowingCompactMapSequence",
      "kind": "symbol",
      "role": "symbol",
      "title": "AsyncThrowingCompactMapSequence",
      "type": "topic",
      "url": "/documentation/swift/asyncthrowingcompactmapsequence"
    },
    "doc://com.apple.documentation/documentation/foundation": {
      "identifier": "doc://com.apple.documentation/documentation/foundation",
      "kind": "symbol",
      "role": "collection",
      "title": "Foundation",
      "type": "topic",
      "url": "/documentation/foundation"
    },
    "doc://com.apple.documentation/documentation/foundation/notification": {
      "identifier": "doc://com.apple.documentation/documentation/foundation/notification",
      "kind": "symbol",
      "role": "symbol",
      "title": "Notification",
      "type": "topic",
      "url": "/documentation/foundation/notification"
    },
    "doc://com.apple.documentation/documentation/foundation/notificationcenter": {
      "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter",
      "kind": "symbol",
      "role": "symbol",
      "title": "NotificationCenter",
      "type": "topic",
      "url": "/documentation/foundation/notificationcenter"
    },
    "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications": {
      "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications",
      "kind": "symbol",
      "role": "symbol",
      "title": "NotificationCenter.Notifications",
      "type": "topic",
      "url": "/documentation/foundation/notificationcenter/notifications"
    },
    "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767119-compactmap": {
      "abstract": [
        {
          "text": "Creates an asynchronous sequence that maps an error-throwing closure over the base sequence’s elements, omitting results that don’t return a value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "compactMap"
        },
        {
          "kind": "text",
          "text": "<ElementOfResult>((Notification) -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<NotificationCenter.Notifications, ElementOfResult>"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767119-compactmap",
      "kind": "symbol",
      "role": "symbol",
      "title": "compactMap(_:)",
      "type": "topic",
      "url": "/documentation/foundation/notificationcenter/notifications/3767119-compactmap"
    },
    "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767119-compactmap#4149850": {
      "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767119-compactmap#4149850",
      "kind": "article",
      "role": "codeListing",
      "title": "Listing 1",
      "type": "section",
      "url": "/documentation/foundation/notificationcenter/notifications/3767119-compactmap#4149850"
    },
    "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767120-compactmap": {
      "abstract": [
        {
          "text": "Creates an asynchronous sequence that maps the given closure over the asynchronous sequence’s elements, omitting results that don’t return a value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "compactMap"
        },
        {
          "kind": "text",
          "text": "<ElementOfResult>((Notification) -> ElementOfResult?) -> AsyncCompactMapSequence<NotificationCenter.Notifications, ElementOfResult>"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767120-compactmap",
      "kind": "symbol",
      "role": "symbol",
      "title": "compactMap(_:)",
      "type": "topic",
      "url": "/documentation/foundation/notificationcenter/notifications/3767120-compactmap"
    },
    "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767127-flatmap": {
      "abstract": [
        {
          "text": "Creates an asynchronous sequence that concatenates the results of calling the given error-throwing transformation with each element of this sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "flatMap"
        },
        {
          "kind": "text",
          "text": "<SegmentOfResult>((Notification) -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<NotificationCenter.Notifications, SegmentOfResult>"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767127-flatmap",
      "kind": "symbol",
      "role": "symbol",
      "title": "flatMap(_:)",
      "type": "topic",
      "url": "/documentation/foundation/notificationcenter/notifications/3767127-flatmap"
    },
    "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767130-map": {
      "abstract": [
        {
          "text": "Creates an asynchronous sequence that maps the given error-throwing closure over the asynchronous sequence’s elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "map"
        },
        {
          "kind": "text",
          "text": "<Transformed>((Notification) -> Transformed) -> AsyncThrowingMapSequence<NotificationCenter.Notifications, Transformed>"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767130-map",
      "kind": "symbol",
      "role": "symbol",
      "title": "map(_:)",
      "type": "topic",
      "url": "/documentation/foundation/notificationcenter/notifications/3767130-map"
    },
    "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767131-map": {
      "abstract": [
        {
          "text": "Creates an asynchronous sequence that maps the given closure over the asynchronous sequence’s elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "map"
        },
        {
          "kind": "text",
          "text": "<Transformed>((Notification) -> Transformed) -> AsyncMapSequence<NotificationCenter.Notifications, Transformed>"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767131-map",
      "kind": "symbol",
      "role": "symbol",
      "title": "map(_:)",
      "type": "topic",
      "url": "/documentation/foundation/notificationcenter/notifications/3767131-map"
    },
    "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767136-reduce": {
      "abstract": [
        {
          "text": "Returns the result of combining the elements of the asynchronous sequence using the given closure.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "reduce"
        },
        {
          "kind": "text",
          "text": "<Result>(Result, (Result, Notification) -> Result) -> Result"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767136-reduce",
      "kind": "symbol",
      "role": "symbol",
      "title": "reduce(_:_:)",
      "type": "topic",
      "url": "/documentation/foundation/notificationcenter/notifications/3767136-reduce"
    },
    "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767137-reduce": {
      "abstract": [
        {
          "text": "Returns the result of combining the elements of the asynchronous sequence using the given closure, given a mutable initial value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "reduce"
        },
        {
          "kind": "text",
          "text": "<Result>("
        },
        {
          "kind": "identifier",
          "text": "into"
        },
        {
          "kind": "text",
          "text": ": Result, (inout Result, Notification) -> Void) -> Result"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767137-reduce",
      "kind": "symbol",
      "role": "symbol",
      "title": "reduce(into:_:)",
      "type": "topic",
      "url": "/documentation/foundation/notificationcenter/notifications/3767137-reduce"
    },
    "doc://com.apple.documentation/documentation/foundation/notifications": {
      "identifier": "doc://com.apple.documentation/documentation/foundation/notifications",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Notifications",
      "type": "topic",
      "url": "/documentation/foundation/notifications"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "generated": true,
      "identifiers": [
        "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767131-map",
        "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767130-map",
        "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767120-compactmap",
        "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767127-flatmap",
        "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767136-reduce",
        "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767137-reduce"
      ],
      "title": "Transforming a Sequence"
    }
  ],
  "variants": [
    {
      "paths": [
        "documentation/foundation/notificationcenter/notifications/3767119-compactmap"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
