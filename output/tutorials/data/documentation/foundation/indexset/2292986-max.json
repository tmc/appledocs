{
  "abstract": [
    {
      "text": "Returns the maximum element in the sequence, using the given predicate as the comparison between elements.",
      "type": "text"
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/foundation",
        "doc://com.apple.documentation/documentation/foundation/collections",
        "doc://com.apple.documentation/documentation/foundation/indexset"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.documentation/documentation/foundation/indexset/2292986-max"
  },
  "kind": "symbol",
  "legacy_identifier": 2292986,
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:STsE3max2by7ElementQzSgSbAD_ADtKXE_tKF::SYNTHESIZED::s:10Foundation8IndexSetV",
    "fragments": [
      {
        "kind": "text",
        "text": "func "
      },
      {
        "kind": "identifier",
        "text": "max"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "identifier",
        "text": "by"
      },
      {
        "kind": "text",
        "text": ": (Int, Int) -> Bool) -> Int?"
      }
    ],
    "modules": [
      {
        "name": "Foundation"
      }
    ],
    "parent": {
      "title": "IndexSet"
    },
    "platforms": [
      {
        "current": "18.4",
        "introducedAt": "8.0",
        "name": "iOS"
      },
      {
        "current": "18.4",
        "introducedAt": "8.0",
        "name": "iPadOS"
      },
      {
        "current": "18.4",
        "introducedAt": "13.0",
        "name": "Mac Catalyst"
      },
      {
        "current": "15.4",
        "introducedAt": "10.10",
        "name": "macOS"
      },
      {
        "current": "18.4",
        "introducedAt": "9.0",
        "name": "tvOS"
      },
      {
        "current": "2.4",
        "introducedAt": "1.0",
        "name": "visionOS"
      },
      {
        "current": "11.4",
        "introducedAt": "2.0",
        "name": "watchOS"
      },
      {
        "current": "16.3",
        "introducedAt": "8.0",
        "name": "Xcode"
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "structm",
    "title": "max(by:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@warn_unqualified_access"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "max"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "by"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "areInIncreasingOrder"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Int",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Si",
              "text": "Int"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Int",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Si",
              "text": "Int"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "rethrows"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Int",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Si",
              "text": "Int"
            },
            {
              "kind": "text",
              "text": "?"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "languages": [
        "swift"
      ],
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A predicate that returns ",
                  "type": "text"
                },
                {
                  "code": "true",
                  "type": "codeVoice"
                },
                {
                  "text": " if its first argument should be ordered before its second argument; otherwise, ",
                  "type": "text"
                },
                {
                  "code": "false",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "areInIncreasingOrder"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return_value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The sequenceâ€™s maximum element if the sequence is not empty; otherwise, ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The predicate must be a ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "strict weak ordering",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " over the elements. That is, for any elements ",
              "type": "text"
            },
            {
              "code": "a",
              "type": "codeVoice"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "code": "b",
              "type": "codeVoice"
            },
            {
              "text": ", and ",
              "type": "text"
            },
            {
              "code": "c",
              "type": "codeVoice"
            },
            {
              "text": ", the following conditions must hold:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "areInIncreasingOrder(a, a)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " is always ",
                      "type": "text"
                    },
                    {
                      "code": "false",
                      "type": "codeVoice"
                    },
                    {
                      "text": ". (Irreflexivity)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "If ",
                      "type": "text"
                    },
                    {
                      "code": "areInIncreasingOrder(a, b)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "areInIncreasingOrder(b, c)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " are both ",
                      "type": "text"
                    },
                    {
                      "code": "true",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", then ",
                      "type": "text"
                    },
                    {
                      "code": "areInIncreasingOrder(a, c)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " is also ",
                      "type": "text"
                    },
                    {
                      "code": "true",
                      "type": "codeVoice"
                    },
                    {
                      "text": ". (Transitive comparability)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Two elements are ",
                      "type": "text"
                    },
                    {
                      "inlineContent": [
                        {
                          "text": "incomparable",
                          "type": "text"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "text": " if neither is ordered before the other according to the predicate. If ",
                      "type": "text"
                    },
                    {
                      "code": "a",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "b",
                      "type": "codeVoice"
                    },
                    {
                      "text": " are incomparable, and ",
                      "type": "text"
                    },
                    {
                      "code": "b",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "c",
                      "type": "codeVoice"
                    },
                    {
                      "text": " are incomparable, then ",
                      "type": "text"
                    },
                    {
                      "code": "a",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "c",
                      "type": "codeVoice"
                    },
                    {
                      "text": " are also incomparable. (Transitive incomparability)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "This example shows how to use the ",
              "type": "text"
            },
            {
              "code": "max(by:)",
              "type": "codeVoice"
            },
            {
              "text": " method on a dictionary to find the key-value pair with the highest value.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let hues = [\"Heliotrope\": 296, \"Coral\": 16, \"Aquamarine\": 156]",
            "let greatestHue = hues.max { a, b in a.value < b.value }",
            "print(greatestHue)",
            "// Prints \"Optional((key: \"Heliotrope\", value: 296))\""
          ],
          "metadata": {
            "anchor": "3726506",
            "title": "Listing 1"
          },
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Complexity: O(",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "n",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": "), where ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "n",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " is the length of the sequence.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.Swift/documentation/Swift/Bool": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
      "kind": "symbol",
      "role": "symbol",
      "title": "Bool",
      "type": "topic",
      "url": "/documentation/swift/bool"
    },
    "doc://com.apple.Swift/documentation/Swift/Int": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int",
      "kind": "symbol",
      "role": "symbol",
      "title": "Int",
      "type": "topic",
      "url": "/documentation/swift/int"
    },
    "doc://com.apple.documentation/documentation/foundation": {
      "identifier": "doc://com.apple.documentation/documentation/foundation",
      "kind": "symbol",
      "role": "collection",
      "title": "Foundation",
      "type": "topic",
      "url": "/documentation/foundation"
    },
    "doc://com.apple.documentation/documentation/foundation/collections": {
      "identifier": "doc://com.apple.documentation/documentation/foundation/collections",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Collections",
      "type": "topic",
      "url": "/documentation/foundation/collections"
    },
    "doc://com.apple.documentation/documentation/foundation/indexset": {
      "abstract": [
        {
          "text": "A collection of unique integer values that represent the indexes of elements in another collection. ",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/indexset",
      "kind": "symbol",
      "role": "symbol",
      "title": "IndexSet",
      "type": "topic",
      "url": "/documentation/foundation/indexset"
    },
    "doc://com.apple.documentation/documentation/foundation/indexset/1779673-integergreaterthanorequalto": {
      "abstract": [
        {
          "text": "Returns an integer contained in ",
          "type": "text"
        },
        {
          "code": "self",
          "type": "codeVoice"
        },
        {
          "text": " which is greater than or equal to ",
          "type": "text"
        },
        {
          "code": "integer",
          "type": "codeVoice"
        },
        {
          "text": ", or ",
          "type": "text"
        },
        {
          "code": "nil",
          "type": "codeVoice"
        },
        {
          "text": " if a result could not be found.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "integerGreaterThanOrEqualTo"
        },
        {
          "kind": "text",
          "text": "(IndexSet.Element) -> IndexSet.Element?"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/indexset/1779673-integergreaterthanorequalto",
      "kind": "symbol",
      "role": "symbol",
      "title": "integerGreaterThanOrEqualTo(_:)",
      "type": "topic",
      "url": "/documentation/foundation/indexset/1779673-integergreaterthanorequalto"
    },
    "doc://com.apple.documentation/documentation/foundation/indexset/1779840-integergreaterthan": {
      "abstract": [
        {
          "text": "Returns an integer contained in ",
          "type": "text"
        },
        {
          "code": "self",
          "type": "codeVoice"
        },
        {
          "text": " which is greater than ",
          "type": "text"
        },
        {
          "code": "integer",
          "type": "codeVoice"
        },
        {
          "text": ", or ",
          "type": "text"
        },
        {
          "code": "nil",
          "type": "codeVoice"
        },
        {
          "text": " if a result could not be found.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "integerGreaterThan"
        },
        {
          "kind": "text",
          "text": "(IndexSet.Element) -> IndexSet.Element?"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/indexset/1779840-integergreaterthan",
      "kind": "symbol",
      "role": "symbol",
      "title": "integerGreaterThan(_:)",
      "type": "topic",
      "url": "/documentation/foundation/indexset/1779840-integergreaterthan"
    },
    "doc://com.apple.documentation/documentation/foundation/indexset/1780243-min": {
      "abstract": [
        {
          "text": "Returns the minimum element in the sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "min"
        },
        {
          "kind": "text",
          "text": "() -> Int?"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/indexset/1780243-min",
      "kind": "symbol",
      "role": "symbol",
      "title": "min()",
      "type": "topic",
      "url": "/documentation/foundation/indexset/1780243-min"
    },
    "doc://com.apple.documentation/documentation/foundation/indexset/1780263-max": {
      "abstract": [
        {
          "text": "Returns the maximum element in the sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "max"
        },
        {
          "kind": "text",
          "text": "() -> Int?"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/indexset/1780263-max",
      "kind": "symbol",
      "role": "symbol",
      "title": "max()",
      "type": "topic",
      "url": "/documentation/foundation/indexset/1780263-max"
    },
    "doc://com.apple.documentation/documentation/foundation/indexset/1780356-integerlessthan": {
      "abstract": [
        {
          "text": "Returns an integer contained in ",
          "type": "text"
        },
        {
          "code": "self",
          "type": "codeVoice"
        },
        {
          "text": " which is less than ",
          "type": "text"
        },
        {
          "code": "integer",
          "type": "codeVoice"
        },
        {
          "text": ", or ",
          "type": "text"
        },
        {
          "code": "nil",
          "type": "codeVoice"
        },
        {
          "text": " if a result could not be found.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "integerLessThan"
        },
        {
          "kind": "text",
          "text": "(IndexSet.Element) -> IndexSet.Element?"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/indexset/1780356-integerlessthan",
      "kind": "symbol",
      "role": "symbol",
      "title": "integerLessThan(_:)",
      "type": "topic",
      "url": "/documentation/foundation/indexset/1780356-integerlessthan"
    },
    "doc://com.apple.documentation/documentation/foundation/indexset/1780379-integerlessthanorequalto": {
      "abstract": [
        {
          "text": "Returns an integer contained in ",
          "type": "text"
        },
        {
          "code": "self",
          "type": "codeVoice"
        },
        {
          "text": " which is less than or equal to ",
          "type": "text"
        },
        {
          "code": "integer",
          "type": "codeVoice"
        },
        {
          "text": ", or ",
          "type": "text"
        },
        {
          "code": "nil",
          "type": "codeVoice"
        },
        {
          "text": " if a result could not be found.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "integerLessThanOrEqualTo"
        },
        {
          "kind": "text",
          "text": "(IndexSet.Element) -> IndexSet.Element?"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/indexset/1780379-integerlessthanorequalto",
      "kind": "symbol",
      "role": "symbol",
      "title": "integerLessThanOrEqualTo(_:)",
      "type": "topic",
      "url": "/documentation/foundation/indexset/1780379-integerlessthanorequalto"
    },
    "doc://com.apple.documentation/documentation/foundation/indexset/1849767-first": {
      "abstract": [
        {
          "text": "Returns the first element of the sequence that satisfies the given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "first"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "identifier",
          "text": "where"
        },
        {
          "kind": "text",
          "text": ": (Int) -> Bool) -> Int?"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/indexset/1849767-first",
      "kind": "symbol",
      "role": "symbol",
      "title": "first(where:)",
      "type": "topic",
      "url": "/documentation/foundation/indexset/1849767-first"
    },
    "doc://com.apple.documentation/documentation/foundation/indexset/2292986-max": {
      "abstract": [
        {
          "text": "Returns the maximum element in the sequence, using the given predicate as the comparison between elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "max"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "identifier",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": (Int, Int) -> Bool) -> Int?"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/indexset/2292986-max",
      "kind": "symbol",
      "role": "symbol",
      "title": "max(by:)",
      "type": "topic",
      "url": "/documentation/foundation/indexset/2292986-max"
    },
    "doc://com.apple.documentation/documentation/foundation/indexset/2292986-max#3726506": {
      "identifier": "doc://com.apple.documentation/documentation/foundation/indexset/2292986-max#3726506",
      "kind": "article",
      "role": "codeListing",
      "title": "Listing 1",
      "type": "section",
      "url": "/documentation/foundation/indexset/2292986-max#3726506"
    },
    "doc://com.apple.documentation/documentation/foundation/indexset/2293641-min": {
      "abstract": [
        {
          "text": "Returns the minimum element in the sequence, using the given predicate as the comparison between elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "min"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "identifier",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": (Int, Int) -> Bool) -> Int?"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/indexset/2293641-min",
      "kind": "symbol",
      "role": "symbol",
      "title": "min(by:)",
      "type": "topic",
      "url": "/documentation/foundation/indexset/2293641-min"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "generated": true,
      "identifiers": [
        "doc://com.apple.documentation/documentation/foundation/indexset/1849767-first",
        "doc://com.apple.documentation/documentation/foundation/indexset/1780263-max",
        "doc://com.apple.documentation/documentation/foundation/indexset/1780243-min",
        "doc://com.apple.documentation/documentation/foundation/indexset/2293641-min",
        "doc://com.apple.documentation/documentation/foundation/indexset/1780379-integerlessthanorequalto",
        "doc://com.apple.documentation/documentation/foundation/indexset/1779840-integergreaterthan",
        "doc://com.apple.documentation/documentation/foundation/indexset/1779673-integergreaterthanorequalto",
        "doc://com.apple.documentation/documentation/foundation/indexset/1780356-integerlessthan"
      ],
      "title": "Finding Elements"
    }
  ],
  "variants": [
    {
      "paths": [
        "documentation/foundation/indexset/2292986-max"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
