{
  "abstract": [
    {
      "text": "The sGetPowerTransistionInProgress method is a static function used as C->C++ glue for going behind the command gate.",
      "type": "text"
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/kernel",
        "doc://com.apple.documentation/documentation/kernel/hardware_families",
        "doc://com.apple.documentation/documentation/kernel/hardware_families/scsi",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "occ",
    "url": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810884-sgetpowertransistioninprogress"
  },
  "kind": "symbol",
  "legacy_identifier": 1810884,
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Kernel"
      }
    ],
    "parent": {
      "title": "IOSCSIProtocolInterface"
    },
    "role": "pseudoSymbol",
    "symbolKind": "instm",
    "title": "sGetPowerTransistionInProgress"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "occ"
          ],
          "platforms": [],
          "tokens": [
            {
              "kind": "text",
              "text": "static bool sGetPowerTransistionInProgress ("
            },
            {
              "kind": "text",
              "text": "\n"
            },
            {
              "kind": "text",
              "text": " IOSCSIProtocolInterface *self ); "
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "languages": [
        "occ"
      ],
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The 'this' pointer for the class.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "self"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return_value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "code": "true",
              "type": "codeVoice"
            },
            {
              "text": " if a power state is in progress, otherwise ",
              "type": "text"
            },
            {
              "code": "false",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The sGetPowerTransistionInProgress method is a static function used as C->C++ glue for going behind the command gate.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/kernel": {
      "identifier": "doc://com.apple.documentation/documentation/kernel",
      "kind": "symbol",
      "role": "collection",
      "title": "Kernel",
      "type": "topic",
      "url": "/documentation/kernel"
    },
    "doc://com.apple.documentation/documentation/kernel/hardware_families": {
      "identifier": "doc://com.apple.documentation/documentation/kernel/hardware_families",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Hardware Families",
      "type": "topic",
      "url": "/documentation/kernel/hardware_families"
    },
    "doc://com.apple.documentation/documentation/kernel/hardware_families/scsi": {
      "identifier": "doc://com.apple.documentation/documentation/kernel/hardware_families/scsi",
      "kind": "article",
      "role": "collectionGroup",
      "title": "SCSI",
      "type": "topic",
      "url": "/documentation/kernel/hardware_families/scsi"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface": {
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface",
      "kind": "symbol",
      "role": "symbol",
      "title": "IOSCSIProtocolInterface",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810020-abortcommand": {
      "abstract": [
        {
          "text": "Obsolete. Do not use this method.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810020-abortcommand",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "AbortCommand",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810020-abortcommand"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810034-aborttask": {
      "abstract": [
        {
          "text": "Aborts a task based on the Logical Unit and tagged task identifier.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810034-aborttask",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "AbortTask",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810034-aborttask"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810053-aborttaskset": {
      "abstract": [
        {
          "text": "Aborts a task set based on the Logical Unit.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810053-aborttaskset",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "AbortTaskSet",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810053-aborttaskset"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810067-checkpowerstate": {
      "abstract": [
        {
          "text": "Called by clients to ensure device is in correct power state before issuing I/O.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810067-checkpowerstate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "CheckPowerState",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810067-checkpowerstate"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810087-clearaca": {
      "abstract": [
        {
          "text": "Clears an Auto-Contingent Allegiance (ACA) for the specified Logical Unit.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810087-clearaca",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "ClearACA",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810087-clearaca"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810108-cleartaskset": {
      "abstract": [
        {
          "text": "Clears a task set for the specified Logical Unit.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810108-cleartaskset",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "ClearTaskSet",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810108-cleartaskset"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810126-executecommand": {
      "abstract": [
        {
          "text": "Called to send a SCSITask and transport it across the physical wire(s) to the device.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810126-executecommand",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "ExecuteCommand",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810126-executecommand"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810146-finalize": {
      "abstract": [
        {
          "text": "Finalizes the destruction of an IOService object.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810146-finalize",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "finalize",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810146-finalize"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810163-free": {
      "abstract": [
        {
          "text": "Called to release all resources held by the object.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810163-free",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "free",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810163-free"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810184-getcommandgate": {
      "abstract": [
        {
          "text": "Accessor method to obtain the IOCommandGate.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810184-getcommandgate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "GetCommandGate",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810184-getcommandgate"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810205-getinitialpowerstate": {
      "abstract": [
        {
          "text": "This method is called to obtain the initial power state of the device (usually the highest).",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810205-getinitialpowerstate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "GetInitialPowerState",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810205-getinitialpowerstate"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810233-getuserclientexclusivitystate": {
      "abstract": [
        {
          "text": "Gets the current exclusivity state of the user client.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810233-getuserclientexclusivitystate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "GetUserClientExclusivityState",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810233-getuserclientexclusivitystate"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810265-handlecheckpowerstate": {
      "abstract": [
        {
          "text": "The HandleCheckPowerState (void) method is on the serialized side of the command gate and can change member variables safely without multi-threading issues. It's main purpose is to call the superclass' HandleCheckPowerState ( UInt32 maxPowerState ) with the max power state the class registered with.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810265-handlecheckpowerstate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "HandleCheckPowerState()",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810265-handlecheckpowerstate"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810294-handlecheckpowerstate": {
      "abstract": [
        {
          "text": "The HandleCheckPowerState(UInt32 maxPowerState) method is called by the subclasses and is passed the maxPowerState number given to the power manager at initialization time. This guarantees the threads block until that power state has been achieved.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810294-handlecheckpowerstate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "HandleCheckPowerState(UInt32)",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810294-handlecheckpowerstate"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810368-handlecheckpowerstate": {
      "abstract": [
        {
          "text": "The HandleCheckPowerState (void) method is on the serialized side of the command gate and can change member variables safely without multi-threading issues. It's main purpose is to call the superclass' HandleCheckPowerState ( UInt32 maxPowerState ) with the max power state the class registered with.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810368-handlecheckpowerstate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "HandleCheckPowerState(void)",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810368-handlecheckpowerstate"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810391-handlegetuserclientexclusivityst": {
      "abstract": [
        {
          "text": "Gets the current exclusivity state of the user client.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810391-handlegetuserclientexclusivityst",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "HandleGetUserClientExclusivityState",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810391-handlegetuserclientexclusivityst"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810424-handlepowerchange": {
      "abstract": [
        {
          "text": "The HandlePowerChange method is pure virtual and is left to each protocol or application layer driver to implement. It is guaranteed to be called on its own thread of execution and can make synchronous or asynchronous calls.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810424-handlepowerchange",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "HandlePowerChange",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810424-handlepowerchange"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810462-handleprotocolservicefeature": {
      "abstract": [
        {
          "text": "This method is called to enact support of a protocol specific service feature.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810462-handleprotocolservicefeature",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "HandleProtocolServiceFeature",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810462-handleprotocolservicefeature"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810510-handlesetpowerstate": {
      "abstract": [
        {
          "text": "The HandleSetPowerState method is called by the glue code and is on the serialized side of the command gate.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810510-handlesetpowerstate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "HandleSetPowerState",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810510-handlesetpowerstate"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810570-handlesetuserclientexclusivityst": {
      "abstract": [
        {
          "text": "Sets the current exclusivity state of the user client.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810570-handlesetuserclientexclusivityst",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "HandleSetUserClientExclusivityState",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810570-handlesetuserclientexclusivityst"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810624-initializepowermanagement": {
      "abstract": [
        {
          "text": "This method is called to initialize power management.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810624-initializepowermanagement",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "InitializePowerManagement",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810624-initializepowermanagement"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810676-initialpowerstatefordomainstate": {
      "abstract": [
        {
          "text": "Determines which power state a device is in, given the current power domain state.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810676-initialpowerstatefordomainstate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "initialPowerStateForDomainState",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810676-initialpowerstatefordomainstate"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810727-ispowermanagementintialized": {
      "abstract": [
        {
          "text": "Called to determine if power management is initialized.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810727-ispowermanagementintialized",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "IsPowerManagementIntialized",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810727-ispowermanagementintialized"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810761-isprotocolservicesupported": {
      "abstract": [
        {
          "text": "This method is called to query for support of a protocol specific service feature.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810761-isprotocolservicesupported",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "IsProtocolServiceSupported",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810761-isprotocolservicesupported"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810795-logicalunitreset": {
      "abstract": [
        {
          "text": "Resets the specified Logical Unit.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810795-logicalunitreset",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "LogicalUnitReset",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810795-logicalunitreset"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810826-setpowerstate": {
      "abstract": [
        {
          "text": "Requests a power managed driver to change the power state of its device.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810826-setpowerstate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "setPowerState",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810826-setpowerstate"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810852-setuserclientexclusivitystate": {
      "abstract": [
        {
          "text": "Sets the current exclusivity state of the user client.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810852-setuserclientexclusivitystate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "SetUserClientExclusivityState",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810852-setuserclientexclusivitystate"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810884-sgetpowertransistioninprogress": {
      "abstract": [
        {
          "text": "The sGetPowerTransistionInProgress method is a static function used as C->C++ glue for going behind the command gate.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810884-sgetpowertransistioninprogress",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "sGetPowerTransistionInProgress",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810884-sgetpowertransistioninprogress"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810914-sgetuserclientexclusivitystate": {
      "abstract": [
        {
          "text": "The sGetUserClientExclusivityState method is a static function used as C->C++ glue for going behind the command gate.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810914-sgetuserclientexclusivitystate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "sGetUserClientExclusivityState",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810914-sgetuserclientexclusivitystate"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810945-shandlecheckpowerstate": {
      "abstract": [
        {
          "text": "The sHandleCheckPowerState method is a static function used as C->C++ glue for going behind the command gate.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810945-shandlecheckpowerstate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "sHandleCheckPowerState",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810945-shandlecheckpowerstate"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810965-shandlesetpowerstate": {
      "abstract": [
        {
          "text": "The sHandleSetPowerState method is a static function used as C->C++ glue for going behind the command gate.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810965-shandlesetpowerstate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "sHandleSetPowerState",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810965-shandlesetpowerstate"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810988-spowermanagement": {
      "abstract": [
        {
          "text": "The sPowerManagement method is a static C-function which is called using mach's thread_call API. It guarantees us a thread of execution which is different than the power management thread and the workloop thread on which we can issue commands to the device synchronously or asynchronously without worrying about deadlocks. It calls through to HandlePowerChange, which is a state machine used to direct power management.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810988-spowermanagement",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "sPowerManagement",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1810988-spowermanagement"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811011-ssetuserclientexclusivitystate": {
      "abstract": [
        {
          "text": "The sSetUserClientExclusivityState method is a static function used as C->C++ glue for going behind the command gate.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811011-ssetuserclientexclusivitystate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "sSetUserClientExclusivityState",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1811011-ssetuserclientexclusivitystate"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811044-start": {
      "abstract": [
        {
          "text": "During an IOService object's instantiation, starts the IOService object that has been selected to run on the provider.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811044-start",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "start",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1811044-start"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811073-targetreset": {
      "abstract": [
        {
          "text": "Resets the target device.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811073-targetreset",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "TargetReset",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1811073-targetreset"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811095-ticklepowermanager": {
      "abstract": [
        {
          "text": "The TicklePowerManager(void) method is called by CheckPowerState and sends an activity tickle to the power manager so that the idle timer is reset.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811095-ticklepowermanager",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "TicklePowerManager()",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1811095-ticklepowermanager"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811118-ticklepowermanager": {
      "abstract": [
        {
          "text": "The TicklePowerManager(UInt32 maxPowerState) method is a convenience function which can be called by subclasses in TicklePowerManager (void) in order to tell the power manager to reset idle timer or bring the device into the requested state. It returns whatever is returned by activityTickle (true if device is in the requested state, false if it is not).",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811118-ticklepowermanager",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "TicklePowerManager(UInt32)",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1811118-ticklepowermanager"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811187-ticklepowermanager": {
      "abstract": [
        {
          "text": "The TicklePowerManager(void) method is called by CheckPowerState and sends an activity tickle to the power manager so that the idle timer is reset.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811187-ticklepowermanager",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "TicklePowerManager(void)",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1811187-ticklepowermanager"
    },
    "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811210-willterminate": {
      "abstract": [
        {
          "text": "Passes a termination up the stack.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811210-willterminate",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "title": "willTerminate",
      "type": "topic",
      "url": "/documentation/kernel/ioscsiprotocolinterface/1811210-willterminate"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "generated": true,
      "identifiers": [
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810020-abortcommand",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810034-aborttask",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810053-aborttaskset",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810067-checkpowerstate",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810087-clearaca",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810108-cleartaskset",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810126-executecommand",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810146-finalize",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810163-free",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810184-getcommandgate",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810205-getinitialpowerstate",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810233-getuserclientexclusivitystate",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810265-handlecheckpowerstate",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810294-handlecheckpowerstate",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810368-handlecheckpowerstate",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810391-handlegetuserclientexclusivityst",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810424-handlepowerchange",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810462-handleprotocolservicefeature",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810510-handlesetpowerstate",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810570-handlesetuserclientexclusivityst",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810624-initializepowermanagement",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810676-initialpowerstatefordomainstate",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810727-ispowermanagementintialized",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810761-isprotocolservicesupported",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810795-logicalunitreset",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810826-setpowerstate",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810852-setuserclientexclusivitystate",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810914-sgetuserclientexclusivitystate",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810945-shandlecheckpowerstate",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810965-shandlesetpowerstate",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1810988-spowermanagement",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811011-ssetuserclientexclusivitystate",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811044-start",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811073-targetreset",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811095-ticklepowermanager",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811118-ticklepowermanager",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811187-ticklepowermanager",
        "doc://com.apple.documentation/documentation/kernel/ioscsiprotocolinterface/1811210-willterminate"
      ],
      "title": "Miscellaneous"
    }
  ],
  "variants": [
    {
      "paths": [
        "documentation/kernel/ioscsiprotocolinterface/1810884-sgetpowertransistioninprogress"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
