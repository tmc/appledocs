{
  "abstract": [
    {
      "text": "Learn how to create a simple app that handles multitouch input.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.uikit/documentation/UIKit",
        "doc://com.apple.uikit/documentation/UIKit/touches-presses-and-gestures",
        "doc://com.apple.uikit/documentation/UIKit/handling-touches-in-your-view"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.uikit/documentation/UIKit/implementing-a-multi-touch-app"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "UIKit"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Implementing a Multi-Touch app"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Consider the app shown in the following image, where a single main view that draws a gray circle at each touch location. When a touch ends, the circle disappears. When the user’s fingers move, the underlying circles move with them.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "media-3004384",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The creation of this app begins with the Single View app template in Xcode. This type of app has a single view controller whose view — in this case, a custom subclass of ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.uikit/documentation/UIKit/UIView",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " called ",
              "type": "text"
            },
            {
              "code": "TouchableView",
              "type": "codeVoice"
            },
            {
              "text": " — fills the screen. The view contains only a label initially, but the app programmatically adds subviews later. The following image shows the storyboard for the view controller.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "media-3004385",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Implement-the-TouchableView-class",
          "level": 3,
          "text": "Implement the TouchableView class",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "TouchableView",
              "type": "codeVoice"
            },
            {
              "text": " class overrides the inherited ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesBegan(_:with:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesMoved(_:with:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesEnded(_:with:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesCancelled(_:with:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " methods. These methods handle the creation and management of subviews that draw the gray circles at each touch location. Specifically, these methods do the following:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesBegan(_:with:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " method creates a new subview at the location of each touch event.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesMoved(_:with:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " method updates the position of the subview associated with each touch.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesEnded(_:with:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesCancelled(_:with:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " methods remove the subview associated with each touch that ended.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "The following code shows the main implementation of the ",
              "type": "text"
            },
            {
              "code": "TouchableView",
              "type": "codeVoice"
            },
            {
              "text": " class and its touch handling methods. Each method iterates through the touches and performs the needed actions. The ",
              "type": "text"
            },
            {
              "code": "touchViews",
              "type": "codeVoice"
            },
            {
              "text": " dictionary uses the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.uikit/documentation/UIKit/UITouch",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " objects as keys to retrieve the subviews the user is manipulating onscreen.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "class TouchableView: UIView {",
            "   var touchViews = [UITouch:TouchSpotView]() ",
            " ",
            "   override init(frame: CGRect) {",
            "      super.init(frame: frame)",
            "      isMultipleTouchEnabled = true",
            "   }",
            " ",
            "   required init?(coder aDecoder: NSCoder) {",
            "      super.init(coder: aDecoder)",
            "      isMultipleTouchEnabled = true",
            "   }",
            " ",
            "   override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {",
            "      for touch in touches {",
            "         createViewForTouch(touch: touch)",
            "      }",
            "   }",
            " ",
            "   override func touchesMoved(_ touches: Set<UITouch>, with event: UIEvent?) {",
            "      for touch in touches {",
            "         let view = viewForTouch(touch: touch) ",
            "         // Move the view to the new location.",
            "         let newLocation = touch.location(in: self)",
            "         view?.center = newLocation",
            "      }",
            "   }",
            " ",
            "   override func touchesEnded(_ touches: Set<UITouch>, with event: UIEvent?) {",
            "      for touch in touches {",
            "         removeViewForTouch(touch: touch)",
            "      }",
            "   }",
            " ",
            "   override func touchesCancelled(_ touches: Set<UITouch>, with event: UIEvent?) {",
            "      for touch in touches {",
            "         removeViewForTouch(touch: touch)",
            "      }",
            "   }",
            "  ",
            "   // Other methods. . . ",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Several helper methods handle creation, management, and disposal of the subviews, as shown in the following code. The ",
              "type": "text"
            },
            {
              "code": "createViewForTouch",
              "type": "codeVoice"
            },
            {
              "text": " method creates a new ",
              "type": "text"
            },
            {
              "code": "TouchSpotView",
              "type": "codeVoice"
            },
            {
              "text": " object and adds it to the ",
              "type": "text"
            },
            {
              "code": "TouchableView",
              "type": "codeVoice"
            },
            {
              "text": " object, animating the view to its full size. The ",
              "type": "text"
            },
            {
              "code": "removeViewForTouch",
              "type": "codeVoice"
            },
            {
              "text": " method removes the corresponding subview and updates the class data structures. The ",
              "type": "text"
            },
            {
              "code": "viewForTouch",
              "type": "codeVoice"
            },
            {
              "text": " method is a convenience method for retrieving the view associated with a given touch event.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func createViewForTouch( touch : UITouch ) {",
            "   let newView = TouchSpotView()",
            "   newView.bounds = CGRect(x: 0, y: 0, width: 1, height: 1)",
            "   newView.center = touch.location(in: self)",
            " ",
            "   // Add the view and animate it to a new size.",
            "   addSubview(newView)",
            "   UIView.animate(withDuration: 0.2) {",
            "      newView.bounds.size = CGSize(width: 100, height: 100)",
            "   }",
            " ",
            "   // Save the views internally",
            "   touchViews[touch] = newView",
            "}",
            " ",
            "func viewForTouch (touch : UITouch) -> TouchSpotView? {",
            "   return touchViews[touch]",
            "}",
            " ",
            "func removeViewForTouch (touch : UITouch ) {",
            "   if let view = touchViews[touch] {",
            "      view.removeFromSuperview()",
            "      touchViews.removeValue(forKey: touch)",
            "   }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Implement-the-TouchSpotView-class",
          "level": 3,
          "text": "Implement the TouchSpotView class",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "TouchSpotView",
              "type": "codeVoice"
            },
            {
              "text": " class (shown in the following code) represents the custom subviews that draw the gray circles onscreen. ",
              "type": "text"
            },
            {
              "code": "TouchSpotView",
              "type": "codeVoice"
            },
            {
              "text": " maintains its circular shape by setting the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/QuartzCore/CALayer/cornerRadius",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property of the layer each time its ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.uikit/documentation/UIKit/UIView/bounds",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property changes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "class TouchSpotView : UIView {",
            "   override init(frame: CGRect) {",
            "      super.init(frame: frame)",
            "      backgroundColor = UIColor.lightGray",
            "   }",
            " ",
            "   // Update the corner radius when the bounds change.",
            "   override var bounds: CGRect {",
            "      get { return super.bounds }",
            "      set(newBounds) {",
            "         super.bounds = newBounds",
            "         layer.cornerRadius = newBounds.size.width / 2.0",
            "      }",
            "   }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/QuartzCore/CALayer/cornerRadius": {
      "abstract": [
        {
          "text": "The radius to use when drawing rounded corners for the layer’s background. Animatable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "cornerRadius"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14CoreFoundation7CGFloatV",
          "text": "CGFloat"
        },
        {
          "kind": "text",
          "text": " { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "set"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/QuartzCore/CALayer/cornerRadius",
      "kind": "symbol",
      "role": "symbol",
      "title": "cornerRadius",
      "type": "topic",
      "url": "/documentation/QuartzCore/CALayer/cornerRadius"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.uikit/documentation/UIKit": {
      "abstract": [
        {
          "text": "Construct and manage a graphical, event-driven user interface for your iOS, iPadOS, or tvOS app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit",
      "kind": "symbol",
      "role": "collection",
      "title": "UIKit",
      "type": "topic",
      "url": "/documentation/uikit"
    },
    "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesBegan(_:with:)": {
      "abstract": [
        {
          "text": "Tells this object that one or more new touches occurred in a view or window.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "touchesBegan"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sh",
          "text": "Set"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UITouch",
          "text": "UITouch"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UIEvent",
          "text": "UIEvent"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesBegan(_:with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "touchesBegan:withEvent:"
        }
      ],
      "role": "symbol",
      "title": "touchesBegan(_:with:)",
      "type": "topic",
      "url": "/documentation/uikit/uiresponder/touchesbegan(_:with:)"
    },
    "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesCancelled(_:with:)": {
      "abstract": [
        {
          "text": "Tells the responder when a system event (such as a system alert) cancels a touch sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "touchesCancelled"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sh",
          "text": "Set"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UITouch",
          "text": "UITouch"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UIEvent",
          "text": "UIEvent"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesCancelled(_:with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "touchesCancelled:withEvent:"
        }
      ],
      "role": "symbol",
      "title": "touchesCancelled(_:with:)",
      "type": "topic",
      "url": "/documentation/uikit/uiresponder/touchescancelled(_:with:)"
    },
    "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesEnded(_:with:)": {
      "abstract": [
        {
          "text": "Tells the responder when one or more fingers are raised from a view or window.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "touchesEnded"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sh",
          "text": "Set"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UITouch",
          "text": "UITouch"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UIEvent",
          "text": "UIEvent"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesEnded(_:with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "touchesEnded:withEvent:"
        }
      ],
      "role": "symbol",
      "title": "touchesEnded(_:with:)",
      "type": "topic",
      "url": "/documentation/uikit/uiresponder/touchesended(_:with:)"
    },
    "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesMoved(_:with:)": {
      "abstract": [
        {
          "text": "Tells the responder when one or more touches associated with an event changed.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "touchesMoved"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sh",
          "text": "Set"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UITouch",
          "text": "UITouch"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UIEvent",
          "text": "UIEvent"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit/UIResponder/touchesMoved(_:with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "touchesMoved:withEvent:"
        }
      ],
      "role": "symbol",
      "title": "touchesMoved(_:with:)",
      "type": "topic",
      "url": "/documentation/uikit/uiresponder/touchesmoved(_:with:)"
    },
    "doc://com.apple.uikit/documentation/UIKit/UITouch": {
      "abstract": [
        {
          "text": "An object representing the location, size, movement, and force of a touch occurring on the screen.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UITouch"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit/UITouch",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UITouch"
        }
      ],
      "role": "symbol",
      "title": "UITouch",
      "type": "topic",
      "url": "/documentation/uikit/uitouch"
    },
    "doc://com.apple.uikit/documentation/UIKit/UIView": {
      "abstract": [
        {
          "text": "An object that manages the content for a rectangular area on the screen.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIView"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit/UIView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UIView"
        }
      ],
      "role": "symbol",
      "title": "UIView",
      "type": "topic",
      "url": "/documentation/uikit/uiview"
    },
    "doc://com.apple.uikit/documentation/UIKit/UIView/bounds": {
      "abstract": [
        {
          "text": "The bounds rectangle, which describes the view’s location and size in its own coordinate system.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bounds"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@CGRect",
          "text": "CGRect"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit/UIView/bounds",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "bounds"
        }
      ],
      "role": "symbol",
      "title": "bounds",
      "type": "topic",
      "url": "/documentation/uikit/uiview/bounds"
    },
    "doc://com.apple.uikit/documentation/UIKit/getting-high-fidelity-input-with-coalesced-touches": {
      "abstract": [
        {
          "text": "Learn how to support high-precision touches in your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit/getting-high-fidelity-input-with-coalesced-touches",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Getting high-fidelity input with coalesced touches",
      "type": "topic",
      "url": "/documentation/uikit/getting-high-fidelity-input-with-coalesced-touches"
    },
    "doc://com.apple.uikit/documentation/UIKit/handling-touches-in-your-view": {
      "abstract": [
        {
          "text": "Use touch events directly on a view subclass if touch handling is intricately linked to the view’s content.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit/handling-touches-in-your-view",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Handling touches in your view",
      "type": "topic",
      "url": "/documentation/uikit/handling-touches-in-your-view"
    },
    "doc://com.apple.uikit/documentation/UIKit/minimizing-latency-with-predicted-touches": {
      "abstract": [
        {
          "text": "Create a smooth and responsive drawing experience using UIKit’s predictions for touch locations.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit/minimizing-latency-with-predicted-touches",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Minimizing latency with predicted touches",
      "type": "topic",
      "url": "/documentation/uikit/minimizing-latency-with-predicted-touches"
    },
    "doc://com.apple.uikit/documentation/UIKit/touches-presses-and-gestures": {
      "abstract": [
        {
          "text": "Encapsulate your app’s event-handling logic in gesture recognizers so that you can reuse that code throughout your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit/touches-presses-and-gestures",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Touches, presses, and gestures",
      "type": "topic",
      "url": "/documentation/uikit/touches-presses-and-gestures"
    },
    "media-3004384": {
      "alt": "A screenshot from an app that draws gray circles on the screen at multiple touch points simultaneously.",
      "identifier": "media-3004384",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/c61c904f3cad31b0165a679302487c7b/media-3004384@2x.png"
        }
      ]
    },
    "media-3004385": {
      "alt": "A screenshot of a storyboard in Interface Builder showing a single view controller, whose view is of the custom type TouchableView.",
      "identifier": "media-3004385",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/3ceff2033d80b20f1e8c33757cafed97/media-3004385@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/3ceff2033d80b20f1e8c33757cafed97/media-3004385~dark@2x.png"
        }
      ]
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Advanced-touch-handling",
      "generated": true,
      "identifiers": [
        "doc://com.apple.uikit/documentation/UIKit/getting-high-fidelity-input-with-coalesced-touches",
        "doc://com.apple.uikit/documentation/UIKit/minimizing-latency-with-predicted-touches"
      ],
      "title": "Advanced touch handling"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Advanced-touch-handling",
              "generated": true,
              "identifiers": [
                "doc://com.apple.uikit/documentation/UIKit/getting-high-fidelity-input-with-coalesced-touches",
                "doc://com.apple.uikit/documentation/UIKit/minimizing-latency-with-predicted-touches"
              ],
              "title": "Advanced touch handling"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1QuartzCore~1CALayer~1cornerRadius/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@property"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@CGFloat",
              "text": "CGFloat"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "cornerRadius"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIView/title",
          "value": "UIView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIView/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "UIView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIView/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "UIView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIResponder~1touchesEnded(_:with:)/title",
          "value": "touchesEnded:withEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIResponder~1touchesEnded(_:with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "touchesEnded:withEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UITouch/title",
          "value": "UITouch"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UITouch/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "UITouch"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UITouch/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "UITouch"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIResponder~1touchesMoved(_:with:)/title",
          "value": "touchesMoved:withEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIResponder~1touchesMoved(_:with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "touchesMoved:withEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIResponder~1touchesBegan(_:with:)/title",
          "value": "touchesBegan:withEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIResponder~1touchesBegan(_:with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "touchesBegan:withEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIResponder~1touchesCancelled(_:with:)/title",
          "value": "touchesCancelled:withEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIResponder~1touchesCancelled(_:with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "touchesCancelled:withEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIView~1bounds/title",
          "value": "bounds"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIView~1bounds/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "bounds"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/uikit/implementing-a-multi-touch-app"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/uikit/implementing-a-multi-touch-app"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
