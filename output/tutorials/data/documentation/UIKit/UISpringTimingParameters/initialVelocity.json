{
  "abstract": [
    {
      "text": "The target property’s rate of change at the start of a spring animation, enabling a smooth transition into the animation.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.uikit/documentation/UIKit",
        "doc://com.apple.uikit/documentation/UIKit/UISpringTimingParameters"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.uikit/documentation/UIKit/UISpringTimingParameters/initialVelocity"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(cs)UISpringTimingParameters(py)initialVelocity",
    "fragments": [
      {
        "kind": "keyword",
        "text": "var"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "initialVelocity"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "c:@S@CGVector",
        "text": "CGVector"
      }
    ],
    "modules": [
      {
        "name": "UIKit"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "initialVelocity"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.1",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Property",
    "symbolKind": "property",
    "title": "initialVelocity"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "tvOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:ScM",
              "kind": "attribute",
              "preciseIdentifier": "s:ScM",
              "text": "MainActor"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "var"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "initialVelocity"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/c:@S@CGVector",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@S@CGVector",
              "text": "CGVector"
            },
            {
              "kind": "text",
              "text": " { "
            },
            {
              "kind": "keyword",
              "text": "get"
            },
            {
              "kind": "text",
              "text": " }"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "Discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To create a smooth transition from an object in motion into a spring animation, initialize the spring timing parameters with an initial velocity. One common use of this property is to animate a view to a final resting position at the end of a pan gesture.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For view position animations, both components of the initial velocity vector are considered. Each component specifies the initial rate of change along the respective ",
              "type": "text"
            },
            {
              "code": "x",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "y",
              "type": "codeVoice"
            },
            {
              "text": " axes, normalized to the total distance of the animation. To calculate an initial velocity vector:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Start with a velocity of the view in points per second. For example, when moving a view using a ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.uikit/documentation/UIKit/UIPanGestureRecognizer",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ", you can use ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.uikit/documentation/UIKit/UIPanGestureRecognizer/velocity(in:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " for this starting value.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Calculate the ",
                      "type": "text"
                    },
                    {
                      "code": "x",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "y",
                      "type": "codeVoice"
                    },
                    {
                      "text": " distance, in points, from the view’s current position to the final position.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Set the ",
                      "type": "text"
                    },
                    {
                      "code": "dx",
                      "type": "codeVoice"
                    },
                    {
                      "text": " component of the initial velocity vector to the ",
                      "type": "text"
                    },
                    {
                      "code": "x",
                      "type": "codeVoice"
                    },
                    {
                      "text": " velocity divided by the ",
                      "type": "text"
                    },
                    {
                      "code": "x",
                      "type": "codeVoice"
                    },
                    {
                      "text": " distance. If the ",
                      "type": "text"
                    },
                    {
                      "code": "x",
                      "type": "codeVoice"
                    },
                    {
                      "text": " distance is ",
                      "type": "text"
                    },
                    {
                      "code": "0",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", set ",
                      "type": "text"
                    },
                    {
                      "code": "dx",
                      "type": "codeVoice"
                    },
                    {
                      "text": " to ",
                      "type": "text"
                    },
                    {
                      "code": "0",
                      "type": "codeVoice"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Set the ",
                      "type": "text"
                    },
                    {
                      "code": "dy",
                      "type": "codeVoice"
                    },
                    {
                      "text": " component to the ",
                      "type": "text"
                    },
                    {
                      "code": "y",
                      "type": "codeVoice"
                    },
                    {
                      "text": " velocity divided by the ",
                      "type": "text"
                    },
                    {
                      "code": "y",
                      "type": "codeVoice"
                    },
                    {
                      "text": " distance. If the ",
                      "type": "text"
                    },
                    {
                      "code": "y",
                      "type": "codeVoice"
                    },
                    {
                      "text": " distance is ",
                      "type": "text"
                    },
                    {
                      "code": "0",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", set ",
                      "type": "text"
                    },
                    {
                      "code": "dy",
                      "type": "codeVoice"
                    },
                    {
                      "text": " to ",
                      "type": "text"
                    },
                    {
                      "code": "0",
                      "type": "codeVoice"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "orderedList"
        },
        {
          "inlineContent": [
            {
              "text": "The following example shows a function that performs this calculation using a velocity from the pan gesture recognizer and the view’s current and final positions.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func initialAnimationVelocity(for gestureVelocity: CGPoint, from currentPosition: CGPoint, to finalPosition: CGPoint) -> CGVector {",
            "    var animationVelocity = CGVector.zero",
            "    let xDistance = finalPosition.x - currentPosition.x",
            "    let yDistance = finalPosition.y - currentPosition.y",
            "    if xDistance != 0 {",
            "        animationVelocity.dx = gestureVelocity.x / xDistance",
            "    }",
            "    if yDistance != 0 {",
            "        animationVelocity.dy = gestureVelocity.y / yDistance",
            "    }",
            "    return animationVelocity",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The following example shows how a view controller can create a property animator with spring timing parameters. The view controller passes the result of ",
              "type": "text"
            },
            {
              "code": "initialAnimationVelocity",
              "type": "codeVoice"
            },
            {
              "text": " to the spring timing parameters’ initializer. In this example, ",
              "type": "text"
            },
            {
              "code": "draggedView",
              "type": "codeVoice"
            },
            {
              "text": " is an outlet of the view controller. The value of ",
              "type": "text"
            },
            {
              "code": "destination",
              "type": "codeVoice"
            },
            {
              "text": " is the final resting position of ",
              "type": "text"
            },
            {
              "code": "draggedView",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let panRecognizer: UIPanGestureRecognizer = ... // pan recognizer attached to draggedView",
            "let velocity = panRecognizer.velocity(in: view)",
            "let initialVelocity = initialAnimationVelocity(for: velocity, from: draggedView.center, to: destination)",
            "",
            "let parameters = UISpringTimingParameters(dampingRatio: dampingRatio, initialVelocity: initialVelocity)",
            "let animator = UIViewPropertyAnimator(duration: animationDuration, timingParameters: parameters)",
            "",
            "animator.addAnimations {",
            "    self.draggedView.center = destination",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "For other types of animations where the property value has a single dimension, such as a view’s ",
              "type": "text"
            },
            {
              "code": "alpha",
              "type": "codeVoice"
            },
            {
              "text": ", only the ",
              "type": "text"
            },
            {
              "code": "dx",
              "type": "codeVoice"
            },
            {
              "text": " component is considered.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.uikit/documentation/UIKit": {
      "abstract": [
        {
          "text": "Construct and manage a graphical, event-driven user interface for your iOS, iPadOS, or tvOS app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit",
      "kind": "symbol",
      "role": "collection",
      "title": "UIKit",
      "type": "topic",
      "url": "/documentation/uikit"
    },
    "doc://com.apple.uikit/documentation/UIKit/UIPanGestureRecognizer": {
      "abstract": [
        {
          "text": "A continuous gesture recognizer that interprets panning gestures.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIPanGestureRecognizer"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit/UIPanGestureRecognizer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UIPanGestureRecognizer"
        }
      ],
      "role": "symbol",
      "title": "UIPanGestureRecognizer",
      "type": "topic",
      "url": "/documentation/uikit/uipangesturerecognizer"
    },
    "doc://com.apple.uikit/documentation/UIKit/UIPanGestureRecognizer/velocity(in:)": {
      "abstract": [
        {
          "text": "Interprets the velocity of the pan gesture in the coordinate system of the specified view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "velocity"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "in"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UIView",
          "text": "UIView"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@CGPoint",
          "text": "CGPoint"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit/UIPanGestureRecognizer/velocity(in:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "velocityInView:"
        }
      ],
      "role": "symbol",
      "title": "velocity(in:)",
      "type": "topic",
      "url": "/documentation/uikit/uipangesturerecognizer/velocity(in:)"
    },
    "doc://com.apple.uikit/documentation/UIKit/UISpringTimingParameters": {
      "abstract": [
        {
          "text": "The timing information for animations that mimics the behavior of a spring.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UISpringTimingParameters"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit/UISpringTimingParameters",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UISpringTimingParameters"
        }
      ],
      "role": "symbol",
      "title": "UISpringTimingParameters",
      "type": "topic",
      "url": "/documentation/uikit/uispringtimingparameters"
    },
    "doc://com.apple.uikit/documentation/UIKit/UISpringTimingParameters/initialVelocity": {
      "abstract": [
        {
          "text": "The target property’s rate of change at the start of a spring animation, enabling a smooth transition into the animation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "initialVelocity"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@CGVector",
          "text": "CGVector"
        }
      ],
      "identifier": "doc://com.apple.uikit/documentation/UIKit/UISpringTimingParameters/initialVelocity",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "initialVelocity"
        }
      ],
      "role": "symbol",
      "title": "initialVelocity",
      "type": "topic",
      "url": "/documentation/uikit/uispringtimingparameters/initialvelocity"
    },
    "doc://com.externally.resolved.symbol/c:@S@CGVector": {
      "abstract": [
        {
          "text": "A structure that contains a two-dimensional vector.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "CGVector"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:@S@CGVector",
      "kind": "symbol",
      "role": "symbol",
      "title": "CGVector",
      "type": "topic",
      "url": "/documentation/corefoundation/cgvector"
    },
    "doc://com.externally.resolved.symbol/s:ScM": {
      "abstract": [
        {
          "text": "A singleton actor whose executor is equivalent to the main dispatch queue.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@globalActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "final"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "actor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MainActor"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:ScM",
      "kind": "symbol",
      "role": "symbol",
      "title": "MainActor",
      "type": "topic",
      "url": "/documentation/Swift/MainActor"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.0",
              "name": "iOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.0",
              "name": "iPadOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "13.1",
              "name": "Mac Catalyst",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.0",
              "name": "tvOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "1.0",
              "name": "visionOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Instance Property"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "initialVelocity"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "property"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "initialVelocity"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.uikit/documentation/UIKit",
                "doc://com.apple.uikit/documentation/UIKit/UISpringTimingParameters"
              ]
            ]
          }
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "add",
          "path": "/relationshipsSections",
          "value": null
        },
        {
          "op": "add",
          "path": "/seeAlsoSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "iOS",
                  "iPadOS",
                  "Mac Catalyst",
                  "tvOS",
                  "visionOS"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "@property"
                  },
                  {
                    "kind": "text",
                    "text": " ("
                  },
                  {
                    "kind": "keyword",
                    "text": "nonatomic"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "keyword",
                    "text": "readonly"
                  },
                  {
                    "kind": "text",
                    "text": ") "
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:@S@CGVector",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:@S@CGVector",
                    "text": "CGVector"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "initialVelocity"
                  },
                  {
                    "kind": "text",
                    "text": ";"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UISpringTimingParameters/title",
          "value": "UISpringTimingParameters"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UISpringTimingParameters/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "UISpringTimingParameters"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UISpringTimingParameters/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "UISpringTimingParameters"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIPanGestureRecognizer~1velocity(in:)/title",
          "value": "velocityInView:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIPanGestureRecognizer~1velocity(in:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "velocityInView:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIPanGestureRecognizer/title",
          "value": "UIPanGestureRecognizer"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIPanGestureRecognizer/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "UIPanGestureRecognizer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UIPanGestureRecognizer/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "UIPanGestureRecognizer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UISpringTimingParameters~1initialVelocity/title",
          "value": "initialVelocity"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.uikit~1documentation~1UIKit~1UISpringTimingParameters~1initialVelocity/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "initialVelocity"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/uikit/uispringtimingparameters/initialvelocity"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/uikit/uispringtimingparameters/initialvelocity"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
