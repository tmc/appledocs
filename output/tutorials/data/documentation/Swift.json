{
  "abstract": [
    {
      "text": "Build apps using a powerful open language.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "beta": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.3 beta 1",
        "16.3 beta 2"
      ]
    },
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    },
    "minor": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.2",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "Swift",
    "images": [
      {
        "identifier": "Swift-PageImage-card.png",
        "type": "card"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "introducedAt": "8.0",
        "name": "iOS"
      },
      {
        "beta": false,
        "introducedAt": "8.0",
        "name": "iPadOS"
      },
      {
        "beta": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst"
      },
      {
        "beta": false,
        "introducedAt": "10.10",
        "name": "macOS"
      },
      {
        "beta": false,
        "introducedAt": "9.0",
        "name": "tvOS"
      },
      {
        "beta": false,
        "introducedAt": "1.0",
        "name": "visionOS"
      },
      {
        "beta": false,
        "introducedAt": "2.0",
        "name": "watchOS"
      }
    ],
    "role": "collection",
    "roleHeading": "Framework",
    "symbolKind": "module",
    "title": "Swift"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Swift includes modern features like type inference, optionals, and closures, which",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "make the syntax concise yet expressive. Swift ensures your code is fast and efficient,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "while its memory safety and native error handling make the language safe by design.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Writing Swift code is interactive and fun in Swift Playgrounds, playgrounds in Xcode,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and REPL.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var interestingNumbers = [",
            "    \"primes\": [2, 3, 5, 7, 11, 13, 17],",
            "    \"triangular\": [1, 3, 6, 10, 15, 21, 28],",
            "    \"hexagonal\": [1, 6, 15, 28, 45, 66, 91]",
            "]",
            "",
            "for key in interestingNumbers.keys {",
            "    interestingNumbers[key]?.sort(by: >)",
            "}",
            "",
            "print(interestingNumbers[\"primes\"]!)",
            "// Prints \"[17, 13, 11, 7, 5, 3, 2]\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Learn-Swift",
          "level": 3,
          "text": "Learn Swift",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If you’re new to Swift, read ",
              "type": "text"
            },
            {
              "identifier": "https://docs.swift.org/swift-book/",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "for a quick tour, a comprehensive language guide, and a full reference manual. If",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you’re new to programming, check out ",
              "type": "text"
            },
            {
              "identifier": "https://www.apple.com/swift/playgrounds/",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "on iPad.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Swift is developed in the open. To learn more about the open source Swift project",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and community, visit ",
              "type": "text"
            },
            {
              "identifier": "https://swift.org",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "AdoptingSwift6-PageImage-card.png": {
      "alt": "An orange Swift logo on an orange gradient background.",
      "identifier": "AdoptingSwift6-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/9802f30facfd622ade0b6d08edc21e8a/AdoptingSwift6-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4e698eba0c00f083d0b9633ea6956e79/AdoptingSwift6-PageImage-card~dark@2x.png"
        }
      ]
    },
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Distributed": {
      "abstract": [
        {
          "text": "Build systems that run distributed code across multiple processes and devices.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Distributed",
      "kind": "symbol",
      "role": "collection",
      "title": "Distributed",
      "type": "topic",
      "url": "/documentation/distributed"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder": {
      "abstract": [
        {
          "text": "Use an expressive domain-specific language to build regular expressions,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "for operations like searching and replacing in text.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder",
      "kind": "symbol",
      "role": "collection",
      "title": "RegexBuilder",
      "type": "topic",
      "url": "/documentation/regexbuilder"
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift#Observation": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift#Observation",
      "kind": "section",
      "title": "Observation",
      "type": "topic",
      "url": "/documentation/swift#Observation"
    },
    "doc://com.apple.Swift/documentation/Swift/AdoptingSwift6": {
      "abstract": [
        {
          "text": "Enable strict concurrency checking to find data races at compile time.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AdoptingSwift6",
      "images": [
        {
          "identifier": "AdoptingSwift6-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "article",
      "title": "Adopting strict concurrency in Swift 6 apps",
      "type": "topic",
      "url": "/documentation/swift/adoptingswift6"
    },
    "doc://com.apple.Swift/documentation/Swift/Array": {
      "abstract": [
        {
          "text": "An ordered, random-access collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Array"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Array",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Array"
        }
      ],
      "role": "symbol",
      "title": "Array",
      "type": "topic",
      "url": "/documentation/swift/array"
    },
    "doc://com.apple.Swift/documentation/Swift/CChar8": {
      "abstract": [
        {
          "text": "The C++20 ‘char8_t’ type, which has UTF-8 encoding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CChar8"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CChar8",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CChar8"
        }
      ],
      "role": "symbol",
      "title": "CChar8",
      "type": "topic",
      "url": "/documentation/swift/cchar8"
    },
    "doc://com.apple.Swift/documentation/Swift/CallingAPIsAcrossLanguageBoundaries": {
      "abstract": [
        {
          "text": "Use a variety of C++ APIs in Swift – and vice-versa – across multiple targets and frameworks in an Xcode project.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CallingAPIsAcrossLanguageBoundaries",
      "kind": "article",
      "role": "sampleCode",
      "title": "Calling APIs Across Language Boundaries",
      "type": "topic",
      "url": "/documentation/swift/callingapisacrosslanguageboundaries"
    },
    "doc://com.apple.Swift/documentation/Swift/Dictionary": {
      "abstract": [
        {
          "text": "A collection whose elements are key-value pairs.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Dictionary"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Dictionary",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Dictionary"
        }
      ],
      "role": "symbol",
      "title": "Dictionary",
      "type": "topic",
      "url": "/documentation/swift/dictionary"
    },
    "doc://com.apple.Swift/documentation/Swift/Double": {
      "abstract": [
        {
          "text": "A double-precision, floating-point value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Double"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Double",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Double"
        }
      ],
      "role": "symbol",
      "title": "Double",
      "type": "topic",
      "url": "/documentation/swift/double"
    },
    "doc://com.apple.Swift/documentation/Swift/Int": {
      "abstract": [
        {
          "text": "A signed integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int"
        }
      ],
      "role": "symbol",
      "title": "Int",
      "type": "topic",
      "url": "/documentation/swift/int"
    },
    "doc://com.apple.Swift/documentation/Swift/MixingLanguagesInAnXcodeProject": {
      "abstract": [
        {
          "text": "Use C++ APIs in Swift – and Swift APIs in C++ – in a single framework target, and consume the framework’s APIs in a separate app target.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MixingLanguagesInAnXcodeProject",
      "kind": "article",
      "role": "sampleCode",
      "title": "Mixing Languages in an Xcode project",
      "type": "topic",
      "url": "/documentation/swift/mixinglanguagesinanxcodeproject"
    },
    "doc://com.apple.Swift/documentation/Swift/String": {
      "abstract": [
        {
          "text": "A Unicode string value that is a collection of characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "String"
        }
      ],
      "role": "symbol",
      "title": "String",
      "type": "topic",
      "url": "/documentation/swift/string"
    },
    "doc://com.apple.Swift/documentation/Swift/adopting-common-protocols": {
      "abstract": [
        {
          "text": "Make your custom types easier to use by ensuring that they conform to Swift protocols.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/adopting-common-protocols",
      "kind": "article",
      "role": "article",
      "title": "Adopting Common Protocols",
      "type": "topic",
      "url": "/documentation/swift/adopting-common-protocols"
    },
    "doc://com.apple.Swift/documentation/Swift/calling-objective-c-apis-asynchronously": {
      "abstract": [
        {
          "text": "Learn how functions and methods that take a completion handler are converted to Swift",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "asynchronous functions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/calling-objective-c-apis-asynchronously",
      "kind": "article",
      "role": "article",
      "title": "Calling Objective-C APIs Asynchronously",
      "type": "topic",
      "url": "/documentation/swift/calling-objective-c-apis-asynchronously"
    },
    "doc://com.apple.Swift/documentation/Swift/choosing-between-structures-and-classes": {
      "abstract": [
        {
          "text": "Decide how to store data and model behavior.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/choosing-between-structures-and-classes",
      "kind": "article",
      "role": "article",
      "title": "Choosing Between Structures and Classes",
      "type": "topic",
      "url": "/documentation/swift/choosing-between-structures-and-classes"
    },
    "doc://com.apple.Swift/documentation/Swift/cocoa-design-patterns": {
      "abstract": [
        {
          "text": "Adopt and interoperate with Cocoa design patterns in your Swift apps.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/cocoa-design-patterns",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Cocoa Design Patterns",
      "type": "topic",
      "url": "/documentation/swift/cocoa-design-patterns"
    },
    "doc://com.apple.Swift/documentation/Swift/handling-dynamically-typed-methods-and-objects-in-swift": {
      "abstract": [
        {
          "text": "Cast instances of the Objective-C ",
          "type": "text"
        },
        {
          "code": "id",
          "type": "codeVoice"
        },
        {
          "text": " type to a specific Swift type.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/handling-dynamically-typed-methods-and-objects-in-swift",
      "kind": "article",
      "role": "article",
      "title": "Handling Dynamically Typed Methods and Objects in Swift",
      "type": "topic",
      "url": "/documentation/swift/handling-dynamically-typed-methods-and-objects-in-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/imported-c-and-objective-c-apis": {
      "abstract": [
        {
          "text": "Use native Swift syntax to interoperate with types and functions in C and Objective-C.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/imported-c-and-objective-c-apis",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Imported C and Objective-C APIs",
      "type": "topic",
      "url": "/documentation/swift/imported-c-and-objective-c-apis"
    },
    "doc://com.apple.Swift/documentation/Swift/maintaining-state-in-your-apps": {
      "abstract": [
        {
          "text": "Use enumerations to capture and track the state of your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/maintaining-state-in-your-apps",
      "kind": "article",
      "role": "article",
      "title": "Maintaining State in Your Apps",
      "type": "topic",
      "url": "/documentation/swift/maintaining-state-in-your-apps"
    },
    "doc://com.apple.Swift/documentation/Swift/migrating-your-objective-c-code-to-swift": {
      "abstract": [
        {
          "text": "Learn the recommended steps to migrate your code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/migrating-your-objective-c-code-to-swift",
      "kind": "article",
      "role": "article",
      "title": "Migrating Your Objective-C Code to Swift",
      "type": "topic",
      "url": "/documentation/swift/migrating-your-objective-c-code-to-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization": {
      "abstract": [
        {
          "text": "Apply macros to your Objective-C APIs to customize how they’re imported into Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Objective-C and C Code Customization",
      "type": "topic",
      "url": "/documentation/swift/objective-c-and-c-code-customization"
    },
    "doc://com.apple.Swift/documentation/Swift/preventing-timing-problems-when-using-closures": {
      "abstract": [
        {
          "text": "Understand how different API calls to your closures can affect your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/preventing-timing-problems-when-using-closures",
      "kind": "article",
      "role": "article",
      "title": "Preventing Timing Problems When Using Closures",
      "type": "topic",
      "url": "/documentation/swift/preventing-timing-problems-when-using-closures"
    },
    "doc://com.apple.Swift/documentation/Swift/swift-standard-library": {
      "abstract": [
        {
          "text": "Solve complex problems and write high-performance, readable code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/swift-standard-library",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Swift Standard Library",
      "type": "topic",
      "url": "/documentation/swift/swift-standard-library"
    },
    "doc://com.apple.Swift/documentation/Swift/using-objective-c-runtime-features-in-swift": {
      "abstract": [
        {
          "text": "Use selectors and key paths to interact with dynamic Objective-C APIs.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/using-objective-c-runtime-features-in-swift",
      "kind": "article",
      "role": "article",
      "title": "Using Objective-C Runtime Features in Swift",
      "type": "topic",
      "url": "/documentation/swift/using-objective-c-runtime-features-in-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/withTaskCancellationHandler(operation:onCancel:isolation:)": {
      "abstract": [
        {
          "text": "Execute an operation with a cancellation handler that’s immediately",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "invoked if the current task is canceled.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withTaskCancellationHandler"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "operation"
        },
        {
          "kind": "text",
          "text": ": () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "onCancel"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?) "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withTaskCancellationHandler(operation:onCancel:isolation:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withTaskCancellationHandler(operation:onCancel:isolation:)",
      "type": "topic",
      "url": "/documentation/swift/withtaskcancellationhandler(operation:oncancel:isolation:)"
    },
    "doc://com.apple.Swift/documentation/Synchronization": {
      "abstract": [
        {
          "text": "Build synchronization constructs using low-level, primitive operations.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization",
      "kind": "symbol",
      "role": "collection",
      "title": "Synchronization",
      "type": "topic",
      "url": "/documentation/synchronization"
    },
    "doc://com.apple.documentation/documentation/Updates/Swift": {
      "abstract": [
        {
          "text": "Learn about important changes to Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Updates/Swift",
      "kind": "article",
      "role": "article",
      "title": "Swift updates",
      "type": "topic",
      "url": "/documentation/Updates/Swift"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "https://docs.swift.org/swift-book/": {
      "identifier": "https://docs.swift.org/swift-book/",
      "title": "The Swift Programming Language",
      "titleInlineContent": [
        {
          "text": "The Swift Programming Language",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://docs.swift.org/swift-book/"
    },
    "https://swift.org": {
      "identifier": "https://swift.org",
      "title": "Swift.org",
      "titleInlineContent": [
        {
          "text": "Swift.org",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://swift.org"
    },
    "https://www.apple.com/swift/playgrounds/": {
      "identifier": "https://www.apple.com/swift/playgrounds/",
      "title": "Swift Playgrounds",
      "titleInlineContent": [
        {
          "text": "Swift Playgrounds",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://www.apple.com/swift/playgrounds/"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "topicSections": [
    {
      "anchor": "Essentials",
      "identifiers": [
        "doc://com.apple.documentation/documentation/Updates/Swift",
        "doc://com.apple.Swift/documentation/Swift/AdoptingSwift6"
      ],
      "title": "Essentials"
    },
    {
      "anchor": "Standard-Library",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int",
        "doc://com.apple.Swift/documentation/Swift/Double",
        "doc://com.apple.Swift/documentation/Swift/String",
        "doc://com.apple.Swift/documentation/Swift/Array",
        "doc://com.apple.Swift/documentation/Swift/Dictionary",
        "doc://com.apple.Swift/documentation/Swift/swift-standard-library"
      ],
      "title": "Standard Library"
    },
    {
      "anchor": "Observation",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift#Observation"
      ],
      "title": "Observation"
    },
    {
      "anchor": "Distributed-Actors",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Distributed"
      ],
      "title": "Distributed Actors"
    },
    {
      "anchor": "Regular-Expression-DSL",
      "identifiers": [
        "doc://com.apple.Swift/documentation/RegexBuilder"
      ],
      "title": "Regular Expression DSL"
    },
    {
      "anchor": "Low-Level-Atomic-Operations",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Synchronization"
      ],
      "title": "Low-Level Atomic Operations"
    },
    {
      "anchor": "Data-Modeling",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/choosing-between-structures-and-classes",
        "doc://com.apple.Swift/documentation/Swift/adopting-common-protocols"
      ],
      "title": "Data Modeling"
    },
    {
      "anchor": "Data-Flow-and-Control-Flow",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/maintaining-state-in-your-apps",
        "doc://com.apple.Swift/documentation/Swift/preventing-timing-problems-when-using-closures"
      ],
      "title": "Data Flow and Control Flow"
    },
    {
      "anchor": "Language-Interoperability-with-Objective-C-and-C",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization",
        "doc://com.apple.Swift/documentation/Swift/migrating-your-objective-c-code-to-swift",
        "doc://com.apple.Swift/documentation/Swift/cocoa-design-patterns",
        "doc://com.apple.Swift/documentation/Swift/handling-dynamically-typed-methods-and-objects-in-swift",
        "doc://com.apple.Swift/documentation/Swift/using-objective-c-runtime-features-in-swift",
        "doc://com.apple.Swift/documentation/Swift/imported-c-and-objective-c-apis",
        "doc://com.apple.Swift/documentation/Swift/calling-objective-c-apis-asynchronously"
      ],
      "title": "Language Interoperability with Objective-C and C"
    },
    {
      "anchor": "Language-Interoperability-with-C++",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/MixingLanguagesInAnXcodeProject",
        "doc://com.apple.Swift/documentation/Swift/CallingAPIsAcrossLanguageBoundaries"
      ],
      "title": "Language Interoperability with C++"
    },
    {
      "anchor": "Functions",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/withTaskCancellationHandler(operation:onCancel:isolation:)"
      ],
      "title": "Functions"
    },
    {
      "anchor": "Type-Aliases",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CChar8"
      ],
      "title": "Type Aliases"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
