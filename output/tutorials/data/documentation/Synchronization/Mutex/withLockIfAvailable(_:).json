{
  "abstract": [
    {
      "text": "Attempts to acquire the lock and then calls the given closure if",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "successful.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Synchronization",
        "doc://com.apple.Swift/documentation/Synchronization/Mutex"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Synchronization/Mutex/withLockIfAvailable(_:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Synchronization",
    "externalID": "s:15Synchronization5MutexVAARi_zrlE19withLockIfAvailableyqd__Sgqd__xzYuqd_0_YKYTXEqd_0_YKs5ErrorRd_0_Ri_d__r0_lF",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "withLockIfAvailable"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "Result"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "genericParameter",
        "text": "E"
      },
      {
        "kind": "text",
        "text": ">(("
      },
      {
        "kind": "keyword",
        "text": "inout"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "attribute",
        "text": "sending "
      },
      {
        "kind": "typeIdentifier",
        "text": "Value"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "typeIdentifier",
        "text": "E"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "keyword",
        "text": "sending "
      },
      {
        "kind": "typeIdentifier",
        "text": "Result"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "typeIdentifier",
        "text": "E"
      },
      {
        "kind": "text",
        "text": ") -> sending "
      },
      {
        "kind": "typeIdentifier",
        "text": "Result"
      },
      {
        "kind": "text",
        "text": "?"
      }
    ],
    "modules": [
      {
        "name": "Synchronization"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "11.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "withLockIfAvailable(_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "borrowing"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "withLockIfAvailable"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Result"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "E"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "body"
            },
            {
              "kind": "text",
              "text": ": ("
            },
            {
              "kind": "keyword",
              "text": "inout"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "attribute",
              "text": "sending "
            },
            {
              "kind": "typeIdentifier",
              "text": "Value"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "text": "E"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "keyword",
              "text": "sending "
            },
            {
              "kind": "typeIdentifier",
              "text": "Result"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "text": "E"
            },
            {
              "kind": "text",
              "text": ") -> sending "
            },
            {
              "kind": "typeIdentifier",
              "text": "Result"
            },
            {
              "kind": "text",
              "text": "? "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "E"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Error",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s5ErrorP",
              "text": "Error"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "Result"
            },
            {
              "kind": "text",
              "text": " : ~Copyable"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A closure with a parameter of ",
                  "type": "text"
                },
                {
                  "code": "Value",
                  "type": "codeVoice"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "that has exclusive access to the value being stored within",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "this mutex. This closure is considered the critical section",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "as it will only be executed if the calling thread acquires",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "the lock.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "body"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The return value, if any, of the ",
              "type": "text"
            },
            {
              "code": "body",
              "type": "codeVoice"
            },
            {
              "text": " closure parameter",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or nil if the lock couldn’t be acquired.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If the calling thread was successful in acquiring the lock, the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "closure will be executed and then immediately after it will",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "release ownership of the lock. If we were unable to acquire the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "lock, this will return ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "This method is equivalent to the following sequence of code:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "guard mutex.tryLock() else {",
            "  return nil",
            "}",
            "defer {",
            "  mutex.unlock()",
            "}",
            "return try body(&value)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Recursive calls to ",
                  "type": "text"
                },
                {
                  "code": "withLockIfAvailable",
                  "type": "codeVoice"
                },
                {
                  "text": " within the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "closure parameter has behavior that is platform dependent.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "Some platforms may choose to panic the process, deadlock,",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "or leave this behavior unspecified. This will never",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "reacquire the lock however.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Warning",
          "style": "warning",
          "type": "aside"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.Swift/documentation/Swift/Error": {
      "abstract": [
        {
          "text": "A type representing an error value that can be thrown.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Error"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Error",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Error"
        }
      ],
      "role": "symbol",
      "title": "Error",
      "type": "topic",
      "url": "/documentation/swift/error"
    },
    "doc://com.apple.Swift/documentation/Synchronization": {
      "abstract": [
        {
          "text": "Build synchronization constructs using low-level, primitive operations.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization",
      "kind": "symbol",
      "role": "collection",
      "title": "Synchronization",
      "type": "topic",
      "url": "/documentation/synchronization"
    },
    "doc://com.apple.Swift/documentation/Synchronization/Mutex": {
      "abstract": [
        {
          "text": "A synchronization primitive that protects shared mutable state via",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "mutual exclusion.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Mutex"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/Mutex",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Mutex"
        }
      ],
      "role": "symbol",
      "title": "Mutex",
      "type": "topic",
      "url": "/documentation/synchronization/mutex"
    },
    "doc://com.apple.Swift/documentation/Synchronization/Mutex/withLockIfAvailable(_:)": {
      "abstract": [
        {
          "text": "Attempts to acquire the lock and then calls the given closure if",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "successful.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withLockIfAvailable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/Mutex/withLockIfAvailable(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withLockIfAvailable(_:)",
      "type": "topic",
      "url": "/documentation/synchronization/mutex/withlockifavailable(_:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/synchronization/mutex/withlockifavailable(_:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
