{
  "abstract": [
    {
      "text": "Specifies the memory ordering semantics of an atomic load operation.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Synchronization"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:15Synchronization18AtomicLoadOrderingV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "AtomicLoadOrdering"
      }
    ],
    "modules": [
      {
        "name": "Synchronization"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "AtomicLoadOrdering"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "11.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "AtomicLoadOrdering"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AtomicLoadOrdering"
            }
          ]
        }
      ],
      "kind": "declarations"
    }
  ],
  "references": {
    "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "role": "symbol",
      "title": "BitwiseCopyable",
      "type": "topic",
      "url": "/documentation/swift/bitwisecopyable"
    },
    "doc://com.apple.Swift/documentation/Swift/Copyable": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Copyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/swift/copyable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/Equatable": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Equatable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/swift/equatable"
    },
    "doc://com.apple.Swift/documentation/Swift/Hashable": {
      "abstract": [
        {
          "text": "A type that can be hashed into a ",
          "type": "text"
        },
        {
          "code": "Hasher",
          "type": "codeVoice"
        },
        {
          "text": " to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Hashable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/swift/hashable"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.Swift/documentation/Synchronization": {
      "abstract": [
        {
          "text": "Build synchronization constructs using low-level, primitive operations.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization",
      "kind": "symbol",
      "role": "collection",
      "title": "Synchronization",
      "type": "topic",
      "url": "/documentation/synchronization"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering": {
      "abstract": [
        {
          "text": "Specifies the memory ordering semantics of an atomic load operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AtomicLoadOrdering"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AtomicLoadOrdering"
        }
      ],
      "role": "symbol",
      "title": "AtomicLoadOrdering",
      "type": "topic",
      "url": "/documentation/synchronization/atomicloadordering"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/CustomStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/CustomStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/synchronization/atomicloadordering/customstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/Equatable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/Equatable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Equatable Implementations",
      "type": "topic",
      "url": "/documentation/synchronization/atomicloadordering/equatable-implementations"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/Hashable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/Hashable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Hashable Implementations",
      "type": "topic",
      "url": "/documentation/synchronization/atomicloadordering/hashable-implementations"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/acquiring": {
      "abstract": [
        {
          "text": "An acquiring load synchronizes with a releasing operation whose",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value its reads. It ensures that the releasing and acquiring",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "threads agree that all subsequent variable accesses on the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "acquiring thread happen after the atomic operation itself.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "acquiring"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:15Synchronization18AtomicLoadOrderingV",
          "text": "AtomicLoadOrdering"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/acquiring",
      "kind": "symbol",
      "role": "symbol",
      "title": "acquiring",
      "type": "topic",
      "url": "/documentation/synchronization/atomicloadordering/acquiring"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/relaxed": {
      "abstract": [
        {
          "text": "Guarantees the atomicity of the specific operation on which it is applied,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "but imposes no ordering constraints on any other variable accesses.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "relaxed"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:15Synchronization18AtomicLoadOrderingV",
          "text": "AtomicLoadOrdering"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/relaxed",
      "kind": "symbol",
      "role": "symbol",
      "title": "relaxed",
      "type": "topic",
      "url": "/documentation/synchronization/atomicloadordering/relaxed"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/sequentiallyConsistent": {
      "abstract": [
        {
          "text": "A sequentially consistent load performs an acquiring load and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "also guarantees that it and all other sequentially consistent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "atomic operations (loads, stores, updates) appear to be executed",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "in a single, total sequential ordering.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sequentiallyConsistent"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:15Synchronization18AtomicLoadOrderingV",
          "text": "AtomicLoadOrdering"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/sequentiallyConsistent",
      "kind": "symbol",
      "role": "symbol",
      "title": "sequentiallyConsistent",
      "type": "topic",
      "url": "/documentation/synchronization/atomicloadordering/sequentiallyconsistent"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicStoreOrdering": {
      "abstract": [
        {
          "text": "Specifies the memory ordering semantics of an atomic store operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AtomicStoreOrdering"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicStoreOrdering",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AtomicStoreOrdering"
        }
      ],
      "role": "symbol",
      "title": "AtomicStoreOrdering",
      "type": "topic",
      "url": "/documentation/synchronization/atomicstoreordering"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicUpdateOrdering": {
      "abstract": [
        {
          "text": "Specifies the memory ordering semantics of an atomic read-modify-write",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AtomicUpdateOrdering"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicUpdateOrdering",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AtomicUpdateOrdering"
        }
      ],
      "role": "symbol",
      "title": "AtomicUpdateOrdering",
      "type": "topic",
      "url": "/documentation/synchronization/atomicupdateordering"
    },
    "doc://com.apple.Swift/documentation/Synchronization/atomicMemoryFence(ordering:)": {
      "abstract": [
        {
          "text": "Establishes a memory ordering without associating it with a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "particular atomic operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "atomicMemoryFence"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "ordering"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:15Synchronization20AtomicUpdateOrderingV",
          "text": "AtomicUpdateOrdering"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/atomicMemoryFence(ordering:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "atomicMemoryFence(ordering:)",
      "type": "topic",
      "url": "/documentation/synchronization/atomicmemoryfence(ordering:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
        "doc://com.apple.Swift/documentation/Swift/Copyable",
        "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
        "doc://com.apple.Swift/documentation/Swift/Equatable",
        "doc://com.apple.Swift/documentation/Swift/Hashable",
        "doc://com.apple.Swift/documentation/Swift/Sendable"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Memory-Ordering-Semantics",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Synchronization/AtomicStoreOrdering",
        "doc://com.apple.Swift/documentation/Synchronization/AtomicUpdateOrdering",
        "doc://com.apple.Swift/documentation/Synchronization/atomicMemoryFence(ordering:)"
      ],
      "title": "Memory Ordering Semantics"
    }
  ],
  "topicSections": [
    {
      "anchor": "Type-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/acquiring",
        "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/relaxed",
        "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/sequentiallyConsistent"
      ],
      "title": "Type Properties"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/CustomStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/Equatable-Implementations",
        "doc://com.apple.Swift/documentation/Synchronization/AtomicLoadOrdering/Hashable-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/synchronization/atomicloadordering"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
