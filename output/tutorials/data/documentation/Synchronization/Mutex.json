{
  "abstract": [
    {
      "text": "A synchronization primitive that protects shared mutable state via",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "mutual exclusion.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Synchronization"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Synchronization/Mutex"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:15Synchronization5MutexV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Mutex"
      }
    ],
    "modules": [
      {
        "name": "Synchronization"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Mutex"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "11.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "Mutex"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Mutex"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Value"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Value"
            },
            {
              "kind": "text",
              "text": " : ~Copyable"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "Mutex",
              "type": "codeVoice"
            },
            {
              "text": " type offers non-recursive exclusive access to the state",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "it is protecting by blocking threads attempting to acquire the lock.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Only one execution context at a time has access to the value stored",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "within the ",
              "type": "text"
            },
            {
              "code": "Mutex",
              "type": "codeVoice"
            },
            {
              "text": " allowing for exclusive access.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "An example use of ",
              "type": "text"
            },
            {
              "code": "Mutex",
              "type": "codeVoice"
            },
            {
              "text": " in a class used simultaneously by many",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "threads protecting a ",
              "type": "text"
            },
            {
              "code": "Dictionary",
              "type": "codeVoice"
            },
            {
              "text": " value:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "class Manager {",
            "  let cache = Mutex<[Key: Resource]>([:])",
            "",
            "  func saveResource(_ resource: Resource, as key: Key) {",
            "    cache.withLock {",
            "      $0[key] = resource",
            "    }",
            "  }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Value",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.Swift/documentation/Synchronization": {
      "abstract": [
        {
          "text": "Build synchronization constructs using low-level, primitive operations.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization",
      "kind": "symbol",
      "role": "collection",
      "title": "Synchronization",
      "type": "topic",
      "url": "/documentation/synchronization"
    },
    "doc://com.apple.Swift/documentation/Synchronization/Mutex": {
      "abstract": [
        {
          "text": "A synchronization primitive that protects shared mutable state via",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "mutual exclusion.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Mutex"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/Mutex",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Mutex"
        }
      ],
      "role": "symbol",
      "title": "Mutex",
      "type": "topic",
      "url": "/documentation/synchronization/mutex"
    },
    "doc://com.apple.Swift/documentation/Synchronization/Mutex/init(_:)": {
      "abstract": [
        {
          "text": "Initializes a value of this mutex with the given initial state.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "consuming"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/Mutex/init(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/synchronization/mutex/init(_:)"
    },
    "doc://com.apple.Swift/documentation/Synchronization/Mutex/withLock(_:)": {
      "abstract": [
        {
          "text": "Calls the given closure after acquiring the lock and then releases",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "ownership.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withLock"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/Mutex/withLock(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withLock(_:)",
      "type": "topic",
      "url": "/documentation/synchronization/mutex/withlock(_:)"
    },
    "doc://com.apple.Swift/documentation/Synchronization/Mutex/withLockIfAvailable(_:)": {
      "abstract": [
        {
          "text": "Attempts to acquire the lock and then calls the given closure if",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "successful.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withLockIfAvailable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/Mutex/withLockIfAvailable(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withLockIfAvailable(_:)",
      "type": "topic",
      "url": "/documentation/synchronization/mutex/withlockifavailable(_:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Sendable"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "topicSections": [
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Synchronization/Mutex/init(_:)"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Synchronization/Mutex/withLock(_:)",
        "doc://com.apple.Swift/documentation/Synchronization/Mutex/withLockIfAvailable(_:)"
      ],
      "title": "Instance Methods"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/synchronization/mutex"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
