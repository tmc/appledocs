{
  "abstract": [
    {
      "text": "Atomically initializes this reference if its current value is nil, then",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "returns the initialized value. If this reference is already initialized,",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "then ",
      "type": "text"
    },
    {
      "code": "storeIfNil(_:)",
      "type": "codeVoice"
    },
    {
      "text": " discards its supplied argument and returns the",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "current value without updating it.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Synchronization",
        "doc://com.apple.Swift/documentation/Synchronization/AtomicLazyReference"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Synchronization/AtomicLazyReference/storeIfNil(_:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Synchronization",
    "externalID": "s:15Synchronization19AtomicLazyReferenceV10storeIfNilyxxnF",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "storeIfNil"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "keyword",
        "text": "consuming"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "text": "Instance"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "Instance"
      }
    ],
    "modules": [
      {
        "name": "Synchronization"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "11.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "storeIfNil(_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "storeIfNil"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "desired"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "consuming"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Instance"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "Instance"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A value of ",
                  "type": "text"
                },
                {
                  "code": "Instance",
                  "type": "codeVoice"
                },
                {
                  "text": " that we will attempt to store",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "if the lazy reference is currently nil.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "desired"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The value of ",
              "type": "text"
            },
            {
              "code": "Instance",
              "type": "codeVoice"
            },
            {
              "text": " that was successfully stored within the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "lazy reference. This may or may not be the same value of ",
              "type": "text"
            },
            {
              "code": "Instance",
              "type": "codeVoice"
            },
            {
              "text": " that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "was passed to this function.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The following example demonstrates how this can be used to implement a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "thread-safe lazily initialized reference:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "class Image {",
            "  let _histogram = AtomicLazyReference<Histogram>()",
            "",
            "  // This is safe to call concurrently from multiple threads.",
            "  var atomicLazyHistogram: Histogram {",
            "    if let histogram = _histogram.load() { return histogram }",
            "    // Note that code here may run concurrently on",
            "    // multiple threads, but only one of them will get to",
            "    // succeed setting the reference.",
            "    let histogram = ...",
            "    return _histogram.storeIfNil(histogram)",
            "  }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "This operation uses acquiring-and-releasing memory ordering.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.Swift/documentation/Synchronization": {
      "abstract": [
        {
          "text": "Build synchronization constructs using low-level, primitive operations.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization",
      "kind": "symbol",
      "role": "collection",
      "title": "Synchronization",
      "type": "topic",
      "url": "/documentation/synchronization"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicLazyReference": {
      "abstract": [
        {
          "text": "A lazily initializable atomic strong reference.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AtomicLazyReference"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicLazyReference",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AtomicLazyReference"
        }
      ],
      "role": "symbol",
      "title": "AtomicLazyReference",
      "type": "topic",
      "url": "/documentation/synchronization/atomiclazyreference"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicLazyReference/storeIfNil(_:)": {
      "abstract": [
        {
          "text": "Atomically initializes this reference if its current value is nil, then",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "returns the initialized value. If this reference is already initialized,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "then ",
          "type": "text"
        },
        {
          "code": "storeIfNil(_:)",
          "type": "codeVoice"
        },
        {
          "text": " discards its supplied argument and returns the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "current value without updating it.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "storeIfNil"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "consuming"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Instance"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Instance"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicLazyReference/storeIfNil(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "storeIfNil(_:)",
      "type": "topic",
      "url": "/documentation/synchronization/atomiclazyreference/storeifnil(_:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/synchronization/atomiclazyreference/storeifnil(_:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
