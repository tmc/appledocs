{
  "abstract": [
    {
      "text": "Add drag and drop support so your users can drag media assets and timeline sequences from your app directly into Final Cut Pro.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications",
        "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/content-and-metadata-exchanges-with-final-cut-pro"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/supporting-drag-and-drop-for-data-sent-to-final-cut-pro"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Professional Video Applications"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Supporting Drag and Drop for Data Sent to Final Cut Pro"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Enable drag and drop in your app so your users can drag media assets (or media assets as clips) directly to the Final Cut Pro sidebar, browser, or timeline. For example, if your users frequently send small batches of individual clips to different areas in Final Cut Pro, and often go back and forth between your app and Final Cut Pro, supporting drag and drop can make that process more intuitive.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Drag and drop operations use a pasteboard as the standardized mechanism for exchanging data between apps.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "media-3878513",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When your users start dragging items from your app, it creates a ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "promise",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " — a commitment to provide a data representation — in the drag pasteboard. When users drop the assets into Final Cut Pro, Final Cut Pro retrieves the content of the promise, and the operating system requests the FCPXML document from your app. Your app returns the FCPXML document that represents the dragged asset.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "For information about creating an FCPXML document, see ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/creating-fcpxml-documents",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": "; for examples of FCPXML that describe Final Cut Pro objects, see ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/describing-final-cut-pro-items-in-fcpxml",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Tip",
          "style": "tip",
          "type": "aside"
        },
        {
          "anchor": "Pasteboard-Types-and-Versions",
          "level": 3,
          "text": "Pasteboard Types and Versions",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Final Cut Pro supports a generic XML pasteboard type identified by the string ",
              "type": "text"
            },
            {
              "code": "com.apple.finalcutpro.xml",
              "type": "codeVoice"
            },
            {
              "text": ". Starting in Final Cut Pro 10.5, DTD version 1.8 and later supports version-specific pasteboard types — such as, ",
              "type": "text"
            },
            {
              "code": "com.apple.finalcutpro.xml.v1-8,",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "com.apple.finalcutpro.xml.v1-9, or com.apple.finalcutpro.xml.v1-10",
              "type": "codeVoice"
            },
            {
              "text": ". Final Cut Pro looks for the version-specific pasteboard type with the highest version number and requests the XML associated with it. If there is no version-specific pasteboard type, Final Cut Pro finds the generic XML pasteboard type and requests the XML. When sending XML to your app, Final Cut Pro always writes XML for the current DTD version to the generic pasteboard type and the appropriate XML to each versioned pasteboard type.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For maximum compatibility, make sure your app supports the generic XML pasteboard type, that is, XML for the current DTD version as of your app’s release. It is also recommended that your app supports the versioned pasteboard types for the current and previous DTD versions as of your app’s release. Supporting these versions ensure that you take advantage of XML features for the highest DTD version supported by the user’s Final Cut Pro version.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Create-a-Promise-in-the-Pasteboard",
          "level": 3,
          "text": "Create a Promise in the Pasteboard",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The specific steps to enable drag and drop in your app depend on your app’s design and purpose and include tasks such as adding support to the views in your app and implementing delegate methods. For details and more explanation about the steps for enabling drag and drop, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AppKit/drag-and-drop",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " in the AppKit framework.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When your app is ready to support drag and drop, use the following code snippet to create a promise. In the drag handler, instantiate your custom item-provider class that implements the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AppKit/NSPasteboardItemDataProvider",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol. Create a pasteboard item and set your custom item provider to it with the payload types you intend to support. You can then write the pasteboard item to the drag pasteboard. For more information, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AppKit/NSPasteboardItem",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "let itemProvider = YourItemProvider(data: selection)",
                    "let item = NSPasteboardItem()    ",
                    "//Set supported pasteboard types",
                    "let supportedPasteboardTypes = [\"com.apple.finalcutpro.xml.v1-10\", \"com.apple.finalcutpro.xml.v1-9\", \"com.apple.finalcutpro.xml\"]",
                    "    .map { NSPasteboard.PasteboardType($0) }",
                    "let isOK = item.setDataProvider(itemProvider, forTypes: supportedPasteboardTypes)",
                    "if isOK {",
                    "    draggingPasteboard.writeObjects([item])",
                    "}"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "YourItemProvider *itemProvider = [[YourItemProvider alloc] initWithYourData:self.selection];",
                    "NSPasteboardItem *item = [[NSPasteboardItem alloc] init];",
                    "",
                    "// set the item provider to the pasteboard item for the payload types",
                    "NSArray *supportedPasteboardTypes = @[@\"com.apple.finalcutpro.xml.v1-10\", @\"com.apple.finalcutpro.xml.v1-9\", @\"com.apple.finalcutpro.xml\"];",
                    "BOOL ok = [item setDataProvider: itemProvider forTypes:supportedPasteboardTypes];",
                    "if (ok) {",
                    "    [draggingPasteboard writeObjects:[NSArray arrayWithObject:item]];",
                    "}"
                  ],
                  "syntax": "objc",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "anchor": "Respond-to-Final-Cut-Pro-and-Return-FCPXML",
          "level": 3,
          "text": "Respond to Final Cut Pro and Return FCPXML",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Once your user drops the dragged items into Final Cut Pro, Final Cut Pro takes over. It retrieves the data from the promise you created in the pasteboard, which invokes the ",
              "type": "text"
            },
            {
              "code": "NSPasteboardItemDataProvider",
              "type": "codeVoice"
            },
            {
              "text": " protocol method in your app. (The method is expected to return FCPXML.)",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Use the following code as a guide to implement the ",
              "type": "text"
            },
            {
              "code": "NSPasteboardItemDataProvider",
              "type": "codeVoice"
            },
            {
              "text": " protocol method on your app’s custom pasteboard item provider class and return the FCPXML.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "func pasteboard(_ pasteboard: NSPasteboard?, item: NSPasteboardItem, provideDataForType type: NSPasteboard.PasteboardType) {",
                    "    let supportedPasteboardTypes = [\"com.apple.finalcutpro.xml.v1-10\", \"com.apple.finalcutpro.xml.v1-9\", \"com.apple.finalcutpro.xml\"]",
                    "    .map { NSPasteboard.PasteboardType($0) }",
                    "    guard supportedPasteboardTypes.contains(type) else { return }",
                    "    let document = itemData.newXMLDocument(forPasteboardType: type)",
                    "    let options: XMLDocument.Options = [.nodeCompactEmptyElement, .nodePrettyPrint]",
                    "    let data = document.xmlData(options: options)",
                    "    item.setData(data, forType: type)",
                    "}"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "- (void)pasteboard:(NSPasteboard *)sender",
                    "              item:(NSPasteboardItem *)item",
                    "provideDataForType:(NSString *)type",
                    "{",
                    "    // be sure the type matches your expected payload type",
                    "NSArray *supportedPasteboardTypes = @[@\"com.apple.finalcutpro.xml.v1-10\", @\"com.apple.finalcutpro.xml.v1-9\", @\"com.apple.finalcutpro.xml\"];",
                    "    if ([supportedPasteboardTypes containsObject:type]) {",
                    "        // build a new XML document for what the user dragged",
                    "        NSXMLDocument* xmlDoc = [self.itemData newXMLDocumentForPasteboardType:type];",
                    "        NSUInteger xmlOptions = NSXMLNodeCompactEmptyElement | NSXMLNodePrettyPrint;",
                    "        NSData* xmlData = [xmlDoc XMLDataWithOptions:xmlOptions];",
                    "        ",
                    "        if (xmlData != nil)",
                    "            [item setData:xmlData forType:type];",
                    "    }",
                    "}"
                  ],
                  "syntax": "objc",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "Final Cut Pro validates the document type and the DTD version in the returned FCPXML, and then creates the objects it describes. If there are naming conflicts between new and existing objects, Final Cut Pro handles those conflicts according to the rules described in the following table.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "header": "row",
          "rows": [
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "When users drag a file containing",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Final Cut Pro does the following",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "One or more events to a library in the Final Cut Pro sidebar",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Adds the events to the library. If the library already contains an event with the same name, Final Cut Pro merges the content of the new event with the content in the existing event.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "One or more clips to a Final Cut Pro timeline",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Adds the clips to the event containing the project that’s open in the timeline. Final Cut Pro then inserts the clips onto the timeline at the point where the user dropped them.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "One or more event items, consisting of any combination of clips and projects with their associated metadata, into an event in the Final Cut Pro sidebar or browser",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Adds the items to the event. If the event already contains an item of the same type with the same name, Final Cut Pro prompts the user to either replace the existing item or keep both. (If the user chooses to keep both, Final Cut Pro creates a unique name for the incoming item by adding a numerical suffix to the item’s name.)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "One or more event items to a library in the Final Cut Pro sidebar",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Final Cut Pro creates an event with the name of today’s date, as in ",
                      "type": "text"
                    },
                    {
                      "code": "06-25-19",
                      "type": "codeVoice"
                    },
                    {
                      "text": ". If an event with that name already exists, Final Cut Pro adds a numeric suffix to create a unique name, as in ",
                      "type": "text"
                    },
                    {
                      "code": "06-25-19 1",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", and adds the items to the event.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ]
          ],
          "type": "table"
        },
        {
          "inlineContent": [
            {
              "text": "The type of object being dragged determines where it can be dropped. Final Cut Pro won’t accept a dragged item unless that item is allowed in the drop destination. For example, your users can drag clips into an event, but they can’t drag an event into a smart collection.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/AppKit/NSPasteboardItem": {
      "abstract": [
        {
          "text": "An item on a pasteboard.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSPasteboardItem"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AppKit/NSPasteboardItem",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSPasteboardItem",
      "type": "topic",
      "url": "/documentation/AppKit/NSPasteboardItem"
    },
    "doc://com.apple.documentation/documentation/AppKit/NSPasteboardItemDataProvider": {
      "abstract": [
        {
          "text": "A set of methods implemented by the data provider of a pasteboard item to provide the data for a particular UTI type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSPasteboardItemDataProvider"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AppKit/NSPasteboardItemDataProvider",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSPasteboardItemDataProvider",
      "type": "topic",
      "url": "/documentation/AppKit/NSPasteboardItemDataProvider"
    },
    "doc://com.apple.documentation/documentation/AppKit/drag-and-drop": {
      "abstract": [
        {
          "text": "Support the direct manipulation of your app’s content using drag and drop.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AppKit/drag-and-drop",
      "kind": "article",
      "role": "article",
      "title": "Drag and Drop",
      "type": "topic",
      "url": "/documentation/AppKit/drag-and-drop"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/content-and-metadata-exchanges-with-final-cut-pro": {
      "abstract": [
        {
          "text": "Send media assets and timeline sequences to Final Cut Pro for editing, and receive rendered media and editing decisions in your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/content-and-metadata-exchanges-with-final-cut-pro",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Content and Metadata Exchanges with Final Cut Pro",
      "type": "topic",
      "url": "/documentation/professional-video-applications/content-and-metadata-exchanges-with-final-cut-pro"
    },
    "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/creating-fcpxml-documents": {
      "abstract": [
        {
          "text": "Describe media assets, editing decisions, metadata, and other items in FCPXML so users can send and receive data between your app and Final Cut Pro.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/creating-fcpxml-documents",
      "kind": "article",
      "role": "article",
      "title": "Creating FCPXML Documents",
      "type": "topic",
      "url": "/documentation/professional-video-applications/creating-fcpxml-documents"
    },
    "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/describing-final-cut-pro-items-in-fcpxml": {
      "abstract": [
        {
          "text": "Describe clips, projects, and other items in FCPXML to exchange data with Final Cut Pro.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/describing-final-cut-pro-items-in-fcpxml",
      "kind": "article",
      "role": "article",
      "title": "Describing Final Cut Pro Items in FCPXML",
      "type": "topic",
      "url": "/documentation/professional-video-applications/describing-final-cut-pro-items-in-fcpxml"
    },
    "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/sending-data-programmatically-to-final-cut-pro": {
      "abstract": [
        {
          "text": "Manage and streamline the sending of batches of media assets and timeline sequences from your app using Apple events.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/sending-data-programmatically-to-final-cut-pro",
      "kind": "article",
      "role": "article",
      "title": "Sending Data Programmatically to Final Cut Pro",
      "type": "topic",
      "url": "/documentation/professional-video-applications/sending-data-programmatically-to-final-cut-pro"
    },
    "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/sending-media-and-metadata-to-final-cut-pro": {
      "abstract": [
        {
          "text": "Send media assets, timeline sequences, and metadata from your app to Final Cut Pro.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/sending-media-and-metadata-to-final-cut-pro",
      "kind": "article",
      "role": "article",
      "title": "Sending Media and Metadata to Final Cut Pro",
      "type": "topic",
      "url": "/documentation/professional-video-applications/sending-media-and-metadata-to-final-cut-pro"
    },
    "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/sending-media-to-final-cut-pro-as-it-s-recorded": {
      "abstract": [
        {
          "text": "Designate media as a growing file to make it available to users while it’s still being recorded.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/sending-media-to-final-cut-pro-as-it-s-recorded",
      "kind": "article",
      "role": "article",
      "title": "Sending media to Final Cut Pro as it’s recorded",
      "type": "topic",
      "url": "/documentation/professional-video-applications/sending-media-to-final-cut-pro-as-it-s-recorded"
    },
    "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications": {
      "abstract": [
        {
          "text": "Exchange data with Final Cut Pro, and create effects plug-ins for Final Cut Pro and Motion.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications",
      "kind": "symbol",
      "role": "collection",
      "title": "Professional Video Applications",
      "type": "topic",
      "url": "/documentation/professional_video_applications"
    },
    "media-3878513": {
      "alt": "Illustration showing the drag and drop movement of an F C P X M L file from your app through a pasteboard to Final Cut Pro.",
      "identifier": "media-3878513",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/58e139574b4a5791053b6588c3e3293e/media-3878513@2x.png"
        }
      ]
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Data-Sent-from-Your-App-to-Final-Cut-Pro",
      "generated": true,
      "identifiers": [
        "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/sending-media-and-metadata-to-final-cut-pro",
        "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/sending-data-programmatically-to-final-cut-pro",
        "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/sending-media-to-final-cut-pro-as-it-s-recorded"
      ],
      "title": "Data Sent from Your App to Final Cut Pro"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Data-Sent-from-Your-App-to-Final-Cut-Pro",
              "generated": true,
              "identifiers": [
                "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/sending-media-and-metadata-to-final-cut-pro",
                "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/sending-data-programmatically-to-final-cut-pro",
                "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/sending-media-to-final-cut-pro-as-it-s-recorded"
              ],
              "title": "Data Sent from Your App to Final Cut Pro"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AppKit~1NSPasteboardItemDataProvider/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSPasteboardItemDataProvider"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AppKit~1NSPasteboardItem/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSPasteboardItem"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/professional-video-applications/supporting-drag-and-drop-for-data-sent-to-final-cut-pro"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/professional-video-applications/supporting-drag-and-drop-for-data-sent-to-final-cut-pro"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
