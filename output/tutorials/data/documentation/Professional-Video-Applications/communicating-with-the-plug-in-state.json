{
  "abstract": [
    {
      "text": "Prepare the necessary information, such as parameter values, for your FxPlug plug-in to render.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications",
        "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/fxplug"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/communicating-with-the-plug-in-state"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Professional Video Applications"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Communicating with the plug-in state"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "One of the biggest changes between FxPlug 3 and 4 is that now there is no FxPlug API access at render time. Rendering occurs out-of-process, reducing the amount of back and forth between the host app and the plug-in, which is essential for performance. Thus, if you call ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications/FxParameterRetrievalAPI_v6",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " at render time, it will return ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "nil",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "This means that your plug-in must prepare what it needs to know to render before render time. Then, at render time, this information is provided to your plug-in. This information is called the ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "Plug-in State",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": ". It’s represented by a byte-buffer of ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/nsdata",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " of your own creation that can be passed to the rendering method at render time. The content of the ",
              "type": "text"
            },
            {
              "code": "NSData",
              "type": "codeVoice"
            },
            {
              "text": " object is up to you, but it typically contains parameter values from the host application’s UI, or values calculated from those parameter values.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Prepare-the-plug-in-state",
          "level": 3,
          "text": "Prepare the plug-in state",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Here, your plug-in can query parameter values, and store the required information in an NSData object as you see fit. In the ",
              "type": "text"
            },
            {
              "code": "FxBrightness",
              "type": "codeVoice"
            },
            {
              "text": " example, a struct of values is filled in with plug-in parameter values and ultimately combined into an ",
              "type": "text"
            },
            {
              "code": "NSData",
              "type": "codeVoice"
            },
            {
              "text": " object like this:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "func pluginState(_ pluginState: AutoreleasingUnsafeMutablePointer<NSData>?, at renderTime: CMTime, quality qualityLevel: UInt) throws {",
                    "    let paramAPI = _apiManager!.api(for: FxParameterRetrievalAPI_v6.self) as! FxParameterRetrievalAPI_v6",
                    "        ",
                    "    var brightness = 1.0",
                    "    paramAPI.getFloatValue(UnsafeMutablePointer<Double>(&brightness), fromParameter: 1, at: renderTime)",
                    "        ",
                    "    pluginState?.pointee = NSData.init(bytes: &brightness, length: MemoryLayout.size(ofValue: brightness))",
                    "}"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "- (BOOL)pluginState:(NSData**)pluginState",
                    "             atTime:(CMTime)renderTime",
                    "            quality:(FxQuality)qualityLevel",
                    "              error:(NSError**)error",
                    "{",
                    "    BOOL    succeeded = NO;",
                    "    id<FxParameterRetrievalAPI_v6>  paramGetAPI = [_apiManager apiForProtocol:@protocol(FxParameterRetrievalAPI_v6)];",
                    "    if (paramGetAPI != nil)",
                    "    {",
                    "        double  brightness  = 1.0;",
                    "        [paramGetAPI getFloatValue:&brightness",
                    "                     fromParameter:1",
                    "                            atTime:renderTime];",
                    "        ",
                    "        *pluginState = [NSData dataWithBytes:&brightness",
                    "                                      length:sizeof(brightness)];",
                    "        ",
                    "        if (*pluginState != nil)",
                    "        {",
                    "            succeeded = YES;",
                    "        }",
                    "    }",
                    "    else",
                    "    {",
                    "        *error = [NSError errorWithDomain:FxPlugErrorDomain",
                    "                                     code:kFxError_ThirdPartyDeveloperStart + 20",
                    "                                 userInfo:@{",
                    "                                            NSLocalizedDescriptionKey :",
                    "                                                @\"Unable to retrieve FxParameterRetrievalAPI_v6 in \\",
                    "                                                [-TileableRemoteBrightness pluginStateAtTime:]\" }];",
                    "    }",
                    "    ",
                    "    return succeeded;",
                    "}"
                  ],
                  "syntax": "objc",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "When it’s time to render, your ",
              "type": "text"
            },
            {
              "code": "NSData",
              "type": "codeVoice"
            },
            {
              "text": " is handed back to you, at which point you can unpack the data, like this:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "let brightness  = pluginState!.withUnsafeBytes { (ptr: UnsafePointer<Double>) -> Double in",
                    "        return ptr.pointee",
                    "}"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "double  brightness = 0.0;",
                    "[pluginState getBytes:&brightness",
                    "               length:sizeof(brightness)];"
                  ],
                  "syntax": "objc",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/foundation/nsdata": {
      "abstract": [
        {
          "text": "A static byte buffer that bridges to ; use  when you need reference semantics or other Foundation-specific behavior.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSData"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsdata",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSData",
      "type": "topic",
      "url": "/documentation/foundation/nsdata"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/fxplug": {
      "abstract": [
        {
          "text": "Create custom effects plug-ins for Final Cut Pro and Motion.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/fxplug",
      "kind": "article",
      "role": "collectionGroup",
      "title": "FxPlug",
      "type": "topic",
      "url": "/documentation/professional-video-applications/fxplug"
    },
    "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/optimizing-fxplug-plug-ins": {
      "abstract": [
        {
          "text": "Maintain consistent rendering at all resolutions and aspect ratios by using pixel transforms.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/optimizing-fxplug-plug-ins",
      "kind": "article",
      "role": "article",
      "title": "Optimizing FxPlug plug-ins",
      "type": "topic",
      "url": "/documentation/professional-video-applications/optimizing-fxplug-plug-ins"
    },
    "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/rendering-in-fxplug": {
      "abstract": [
        {
          "text": "Use Metal or other frameworks to render images with your FxPlug plug-in.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/rendering-in-fxplug",
      "kind": "article",
      "role": "article",
      "title": "Rendering in FxPlug",
      "type": "topic",
      "url": "/documentation/professional-video-applications/rendering-in-fxplug"
    },
    "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/working-with-tiled-images": {
      "abstract": [
        {
          "text": "Render only the necessary tiles of an image in your FxPlug plug-in to improve efficiency.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/working-with-tiled-images",
      "kind": "article",
      "role": "article",
      "title": "Working with tiled images",
      "type": "topic",
      "url": "/documentation/professional-video-applications/working-with-tiled-images"
    },
    "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications": {
      "abstract": [
        {
          "text": "Exchange data with Final Cut Pro, and create effects plug-ins for Final Cut Pro and Motion.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications",
      "kind": "symbol",
      "role": "collection",
      "title": "Professional Video Applications",
      "type": "topic",
      "url": "/documentation/professional_video_applications"
    },
    "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications/FxParameterRetrievalAPI_v6": {
      "abstract": [
        {
          "text": "Defines the functions the application provides to retrieve parameter values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FxParameterRetrievalAPI_v6"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications/FxParameterRetrievalAPI_v6",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FxParameterRetrievalAPI_v6"
        }
      ],
      "role": "symbol",
      "title": "FxParameterRetrievalAPI_v6",
      "type": "topic",
      "url": "/documentation/professional_video_applications/fxparameterretrievalapi_v6"
    },
    "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications/FxTileableEffect": {
      "abstract": [
        {
          "text": "The designated initializer for your plug-in for rendering only certain portions of the plug-in’s output, referred to as tiles.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FxTileableEffect"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications/FxTileableEffect",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FxTileableEffect"
        }
      ],
      "role": "symbol",
      "title": "FxTileableEffect",
      "type": "topic",
      "url": "/documentation/professional_video_applications/fxtileableeffect"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Rendering",
      "generated": true,
      "identifiers": [
        "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/rendering-in-fxplug",
        "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/working-with-tiled-images",
        "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/optimizing-fxplug-plug-ins",
        "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications/FxTileableEffect"
      ],
      "title": "Rendering"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Rendering",
              "generated": true,
              "identifiers": [
                "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/rendering-in-fxplug",
                "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/working-with-tiled-images",
                "doc://com.apple.professionalvideoapplications/documentation/Professional-Video-Applications/optimizing-fxplug-plug-ins",
                "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications/FxTileableEffect"
              ],
              "title": "Rendering"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.professionalvideoapplications~1documentation~1professional_video_applications~1FxParameterRetrievalAPI_v6/title",
          "value": "FxParameterRetrievalAPI_v6"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.professionalvideoapplications~1documentation~1professional_video_applications~1FxParameterRetrievalAPI_v6/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "FxParameterRetrievalAPI_v6"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.professionalvideoapplications~1documentation~1professional_video_applications~1FxParameterRetrievalAPI_v6/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "FxParameterRetrievalAPI_v6"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1foundation~1nsdata/abstract",
          "value": [
            {
              "text": "A static byte buffer in memory.",
              "type": "text"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.professionalvideoapplications~1documentation~1professional_video_applications~1FxTileableEffect/title",
          "value": "FxTileableEffect"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.professionalvideoapplications~1documentation~1professional_video_applications~1FxTileableEffect/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "FxTileableEffect"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.professionalvideoapplications~1documentation~1professional_video_applications~1FxTileableEffect/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "FxTileableEffect"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/professional-video-applications/communicating-with-the-plug-in-state"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/professional-video-applications/communicating-with-the-plug-in-state"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
