{
  "abstract": [
    {
      "text": "The desired delivery behavior for interval events.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.dispatch/documentation/Dispatch",
        "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/IntervalFlags"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Dispatch",
    "externalID": "s:So14OS_dispatch_ioC8DispatchE13IntervalFlagsV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "IntervalFlags"
      }
    ],
    "modules": [
      {
        "name": "Dispatch"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "IntervalFlags"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "DispatchIO.IntervalFlags"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "IntervalFlags"
            }
          ]
        }
      ],
      "kind": "declarations"
    }
  ],
  "references": {
    "doc://com.apple.dispatch/documentation/Dispatch": {
      "abstract": [
        {
          "text": "Execute code concurrently on multicore hardware by submitting work to dispatch queues managed by the system.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.dispatch/documentation/Dispatch",
      "kind": "symbol",
      "role": "collection",
      "title": "Dispatch",
      "type": "topic",
      "url": "/documentation/dispatch"
    },
    "doc://com.apple.dispatch/documentation/Dispatch/DISPATCH_IO_STRICT_INTERVAL": {
      "abstract": [
        {
          "text": "Enqueue handlers for a channel at strict intervals regardless of how much data has been read or written.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DISPATCH_IO_STRICT_INTERVAL"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int32V",
          "text": "Int32"
        }
      ],
      "identifier": "doc://com.apple.dispatch/documentation/Dispatch/DISPATCH_IO_STRICT_INTERVAL",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DISPATCH_IO_STRICT_INTERVAL"
        }
      ],
      "role": "symbol",
      "title": "DISPATCH_IO_STRICT_INTERVAL",
      "type": "topic",
      "url": "/documentation/dispatch/dispatch_io_strict_interval"
    },
    "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO": {
      "abstract": [
        {
          "text": "An object that manages operations on a file descriptor using either stream-based or random-access semantics.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DispatchIO"
        }
      ],
      "identifier": "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DispatchIO"
        }
      ],
      "role": "symbol",
      "title": "DispatchIO",
      "type": "topic",
      "url": "/documentation/dispatch/dispatchio"
    },
    "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/IntervalFlags": {
      "abstract": [
        {
          "text": "The desired delivery behavior for interval events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "IntervalFlags"
        }
      ],
      "identifier": "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/IntervalFlags",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IntervalFlags"
        }
      ],
      "role": "symbol",
      "title": "DispatchIO.IntervalFlags",
      "type": "topic",
      "url": "/documentation/dispatch/dispatchio/intervalflags"
    },
    "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/IntervalFlags/init(nilLiteral:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "nilLiteral"
        },
        {
          "kind": "text",
          "text": ": ())"
        }
      ],
      "identifier": "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/IntervalFlags/init(nilLiteral:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(nilLiteral:)",
      "type": "topic",
      "url": "/documentation/dispatch/dispatchio/intervalflags/init(nilliteral:)"
    },
    "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/IntervalFlags/strictInterval": {
      "abstract": [
        {
          "text": "Enqueue handlers for a channel at strict intervals regardless of how much data has been read or written.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "strictInterval"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)OS_dispatch_io",
          "text": "DispatchIO"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:So14OS_dispatch_ioC8DispatchE13IntervalFlagsV",
          "text": "IntervalFlags"
        }
      ],
      "identifier": "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/IntervalFlags/strictInterval",
      "kind": "symbol",
      "role": "symbol",
      "title": "strictInterval",
      "type": "topic",
      "url": "/documentation/dispatch/dispatchio/intervalflags/strictinterval"
    },
    "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/fileDescriptor": {
      "abstract": [
        {
          "text": "Returns the file descriptor associated with the specified channel.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "fileDescriptor"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int32V",
          "text": "Int32"
        }
      ],
      "identifier": "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/fileDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "dispatch_io_get_descriptor"
        }
      ],
      "role": "symbol",
      "title": "fileDescriptor",
      "type": "topic",
      "url": "/documentation/dispatch/dispatchio/filedescriptor"
    },
    "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/setInterval(interval:flags:)": {
      "abstract": [
        {
          "text": "Sets the interval, in nanoseconds, at which to invoke the I/O handlers for the channel.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setInterval"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "interval"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:8Dispatch0A12TimeIntervalO",
          "text": "DispatchTimeInterval"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "flags"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)OS_dispatch_io",
          "text": "DispatchIO"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:So14OS_dispatch_ioC8DispatchE13IntervalFlagsV",
          "text": "IntervalFlags"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/setInterval(interval:flags:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "setInterval(interval:flags:)",
      "type": "topic",
      "url": "/documentation/dispatch/dispatchio/setinterval(interval:flags:)"
    },
    "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/setLimit(highWater:)": {
      "abstract": [
        {
          "text": "Sets the maximum number of bytes to process before enqueueing a handler block.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setLimit"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "highWater"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/setLimit(highWater:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "dispatch_io_set_high_water"
        }
      ],
      "role": "symbol",
      "title": "setLimit(highWater:)",
      "type": "topic",
      "url": "/documentation/dispatch/dispatchio/setlimit(highwater:)"
    },
    "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/setLimit(lowWater:)": {
      "abstract": [
        {
          "text": "Sets the minimum number of bytes to process before enqueueing a handler block.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setLimit"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "lowWater"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/setLimit(lowWater:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "dispatch_io_set_low_water"
        }
      ],
      "role": "symbol",
      "title": "setLimit(lowWater:)",
      "type": "topic",
      "url": "/documentation/dispatch/dispatchio/setlimit(lowwater:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:SY": {
      "abstract": [
        {
          "text": "A type that can be converted to and from an associated raw value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RawRepresentable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SY8RawValueQa",
          "text": "RawValue"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SY",
      "kind": "symbol",
      "role": "symbol",
      "title": "RawRepresentable",
      "type": "topic",
      "url": "/documentation/Swift/RawRepresentable"
    },
    "doc://com.externally.resolved.symbol/s:s10SetAlgebraP": {
      "abstract": [
        {
          "text": "A type that provides mathematical set operations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SetAlgebra"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s10SetAlgebraP7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "> : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s25ExpressibleByArrayLiteralP",
          "text": "ExpressibleByArrayLiteral"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s10SetAlgebraP",
      "kind": "symbol",
      "role": "symbol",
      "title": "SetAlgebra",
      "type": "topic",
      "url": "/documentation/Swift/SetAlgebra"
    },
    "doc://com.externally.resolved.symbol/s:s25ExpressibleByArrayLiteralP": {
      "abstract": [
        {
          "text": "A type that can be initialized using an array literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByArrayLiteral"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s25ExpressibleByArrayLiteralP",
      "kind": "symbol",
      "role": "symbol",
      "title": "ExpressibleByArrayLiteral",
      "type": "topic",
      "url": "/documentation/Swift/ExpressibleByArrayLiteral"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    },
    "doc://com.externally.resolved.symbol/s:s9OptionSetP": {
      "abstract": [
        {
          "text": "A type that presents a mathematical set interface to a bit set.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "OptionSet"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SY",
          "text": "RawRepresentable"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s10SetAlgebraP",
          "text": "SetAlgebra"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s9OptionSetP",
      "kind": "symbol",
      "role": "symbol",
      "title": "OptionSet",
      "type": "topic",
      "url": "/documentation/Swift/OptionSet"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:s25ExpressibleByArrayLiteralP",
        "doc://com.externally.resolved.symbol/s:s9OptionSetP",
        "doc://com.externally.resolved.symbol/s:SY",
        "doc://com.externally.resolved.symbol/s:s8SendableP",
        "doc://com.externally.resolved.symbol/s:s10SetAlgebraP"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Managing-the-File-Descriptor",
      "generated": true,
      "identifiers": [
        "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/fileDescriptor",
        "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/setLimit(highWater:)",
        "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/setLimit(lowWater:)",
        "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/setInterval(interval:flags:)"
      ],
      "title": "Managing the File Descriptor"
    }
  ],
  "topicSections": [
    {
      "anchor": "Interval-Flags",
      "identifiers": [
        "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/IntervalFlags/strictInterval",
        "doc://com.apple.dispatch/documentation/Dispatch/DISPATCH_IO_STRICT_INTERVAL"
      ],
      "title": "Interval Flags"
    },
    {
      "anchor": "Initializing-the-Type",
      "identifiers": [
        "doc://com.apple.dispatch/documentation/Dispatch/DispatchIO/IntervalFlags/init(nilLiteral:)"
      ],
      "title": "Initializing the Type"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dispatch~1documentation~1Dispatch~1DISPATCH_IO_STRICT_INTERVAL/title",
          "value": "DISPATCH_IO_STRICT_INTERVAL"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dispatch~1documentation~1Dispatch~1DISPATCH_IO_STRICT_INTERVAL/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "DISPATCH_IO_STRICT_INTERVAL"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dispatch~1documentation~1Dispatch~1DispatchIO~1fileDescriptor/title",
          "value": "dispatch_io_get_descriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dispatch~1documentation~1Dispatch~1DispatchIO~1fileDescriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "dispatch_io_get_descriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dispatch~1documentation~1Dispatch~1DispatchIO~1setLimit(highWater:)/title",
          "value": "dispatch_io_set_high_water"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dispatch~1documentation~1Dispatch~1DispatchIO~1setLimit(highWater:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "dispatch_io_set_high_water"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dispatch~1documentation~1Dispatch~1DispatchIO~1setLimit(lowWater:)/title",
          "value": "dispatch_io_set_low_water"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dispatch~1documentation~1Dispatch~1DispatchIO~1setLimit(lowWater:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "dispatch_io_set_low_water"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/dispatch/dispatchio/intervalflags"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
