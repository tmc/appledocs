{
  "abstract": [
    {
      "text": "Applies the given transaction mutation function to all animations used",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "within the view.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Assignables/documentation/Assignables",
        "doc://com.apple.Assignables/documentation/Assignables/AssignedWorkDocumentView"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Assignables/documentation/Assignables/AssignedWorkDocumentView/transaction(_:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI4ViewPAAE11transactionyQryAA11TransactionVzcF::SYNTHESIZED::s:11Assignables24AssignedWorkDocumentViewV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "transaction"
      },
      {
        "kind": "text",
        "text": "(("
      },
      {
        "kind": "keyword",
        "text": "inout"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI11TransactionV",
        "text": "Transaction"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s4Voida",
        "text": "Void"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "keyword",
        "text": "some"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4ViewP",
        "text": "View"
      }
    ],
    "modules": [
      {
        "name": "Assignables",
        "relatedModules": [
          "SwiftUI"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "transaction(_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "nonisolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "transaction"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "transform"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "@escaping"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "kind": "keyword",
              "text": "inout"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI11TransactionV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI11TransactionV",
              "text": "Transaction"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s4Voida",
              "text": "Void"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "keyword",
              "text": "some"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": "\n"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The transformation to apply to transactions",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "within this view.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "transform"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A view that wraps this view and applies a transformation to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "all transactions used within the view.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use this modifier to change or replace the animation used in a view.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Consider three identical animations controlled by a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "button that executes all three animations simultaneously:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The first animation rotates the “Rotation” ",
                      "type": "text"
                    },
                    {
                      "code": "Text",
                      "type": "codeVoice"
                    },
                    {
                      "text": " view by 360",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "degrees.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The second uses the ",
                      "type": "text"
                    },
                    {
                      "code": "transaction(_:)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " modifier to change the",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "animation by adding a delay to the start of the animation",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "by two seconds and then increases the rotational speed of the",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "“Rotation\\nModified” ",
                      "type": "text"
                    },
                    {
                      "code": "Text",
                      "type": "codeVoice"
                    },
                    {
                      "text": " view animation by a factor of 2.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The third animation uses the ",
                      "type": "text"
                    },
                    {
                      "code": "transaction(_:)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " modifier to",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "replace the rotation animation affecting the “Animation\\nReplaced”",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "code": "Text",
                      "type": "codeVoice"
                    },
                    {
                      "text": " view with a spring animation.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "The following code implements these animations:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct TransactionExample: View {",
            "    @State private var flag = false",
            "",
            "    var body: some View {",
            "        VStack(spacing: 50) {",
            "            HStack(spacing: 30) {",
            "                Text(\"Rotation\")",
            "                    .rotationEffect(Angle(degrees:",
            "                                            self.flag ? 360 : 0))",
            "",
            "                Text(\"Rotation\\nModified\")",
            "                    .rotationEffect(Angle(degrees:",
            "                                            self.flag ? 360 : 0))",
            "                    .transaction { view in",
            "                        view.animation =",
            "                            view.animation?.delay(2.0).speed(2)",
            "                    }",
            "",
            "                Text(\"Animation\\nReplaced\")",
            "                    .rotationEffect(Angle(degrees:",
            "                                            self.flag ? 360 : 0))",
            "                    .transaction { view in",
            "                        view.animation = .interactiveSpring(",
            "                            response: 0.60,",
            "                            dampingFraction: 0.20,",
            "                            blendDuration: 0.25)",
            "                    }",
            "            }",
            "",
            "            Button(\"Animate\") {",
            "                withAnimation(.easeIn(duration: 2.0)) {",
            "                    self.flag.toggle()",
            "                }",
            "            }",
            "        }",
            "    }",
            "}"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Use this modifier on leaf views such as ",
              "type": "text"
            },
            {
              "code": "Image",
              "type": "codeVoice"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "code": "Button",
              "type": "codeVoice"
            },
            {
              "text": " rather",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "than container views such as ",
              "type": "text"
            },
            {
              "code": "VStack",
              "type": "codeVoice"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "code": "HStack",
              "type": "codeVoice"
            },
            {
              "text": ". The",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "transformation applies to all child views within this view; calling",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "transaction(_:)",
              "type": "codeVoice"
            },
            {
              "text": " on a container view can lead to unbounded scope of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "execution depending on the depth of the view hierarchy.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.Assignables/documentation/Assignables": {
      "abstract": [
        {
          "text": "A framework that contain wrappers to a PDF to allow creation",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "of an assessment and student work on that assessment.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Assignables/documentation/Assignables",
      "kind": "symbol",
      "role": "collection",
      "title": "Assignables",
      "type": "topic",
      "url": "/documentation/assignables"
    },
    "doc://com.apple.Assignables/documentation/Assignables/AssignedWorkDocumentView": {
      "abstract": [
        {
          "text": "SwiftUI View to display an ",
          "type": "text"
        },
        {
          "code": "AssignedWorkDocument",
          "type": "codeVoice"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AssignedWorkDocumentView"
        }
      ],
      "identifier": "doc://com.apple.Assignables/documentation/Assignables/AssignedWorkDocumentView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AssignedWorkDocumentView"
        }
      ],
      "role": "symbol",
      "title": "AssignedWorkDocumentView",
      "type": "topic",
      "url": "/documentation/assignables/assignedworkdocumentview"
    },
    "doc://com.apple.Assignables/documentation/Assignables/AssignedWorkDocumentView/transaction(_:)": {
      "abstract": [
        {
          "text": "Applies the given transaction mutation function to all animations used",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "within the view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "transaction"
        },
        {
          "kind": "text",
          "text": "(("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI11TransactionV",
          "text": "Transaction"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.Assignables/documentation/Assignables/AssignedWorkDocumentView/transaction(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "transaction(_:)",
      "type": "topic",
      "url": "/documentation/assignables/assignedworkdocumentview/transaction(_:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI11TransactionV": {
      "abstract": [
        {
          "text": "The context of the current state-processing update.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Transaction"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI11TransactionV",
      "kind": "symbol",
      "role": "symbol",
      "title": "Transaction",
      "type": "topic",
      "url": "/documentation/SwiftUI/Transaction"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
      "kind": "symbol",
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/SwiftUI/View"
    },
    "doc://com.externally.resolved.symbol/s:s4Voida": {
      "abstract": [
        {
          "text": "The return type of functions that don’t explicitly specify a return type, that is, an empty tuple `()`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": " = ()"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
      "kind": "symbol",
      "role": "symbol",
      "title": "Void",
      "type": "topic",
      "url": "/documentation/Swift/Void"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/assignables/assignedworkdocumentview/transaction(_:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
