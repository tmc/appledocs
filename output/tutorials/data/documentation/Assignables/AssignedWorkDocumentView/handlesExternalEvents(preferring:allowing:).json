{
  "abstract": [
    {
      "text": "Specifies the external events that the view’s scene handles",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "if the scene is already open.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Assignables/documentation/Assignables",
        "doc://com.apple.Assignables/documentation/Assignables/AssignedWorkDocumentView"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Assignables/documentation/Assignables/AssignedWorkDocumentView/handlesExternalEvents(preferring:allowing:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI4ViewPAAE21handlesExternalEvents10preferring8allowingQrShySSG_AGtF::SYNTHESIZED::s:11Assignables24AssignedWorkDocumentViewV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "handlesExternalEvents"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "preferring"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sh",
        "text": "Set"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:SS",
        "text": "String"
      },
      {
        "kind": "text",
        "text": ">, "
      },
      {
        "kind": "externalParam",
        "text": "allowing"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sh",
        "text": "Set"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:SS",
        "text": "String"
      },
      {
        "kind": "text",
        "text": ">) -> "
      },
      {
        "kind": "keyword",
        "text": "some"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4ViewP",
        "text": "View"
      }
    ],
    "modules": [
      {
        "name": "Assignables",
        "relatedModules": [
          "SwiftUI"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "11.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "handlesExternalEvents(preferring:allowing:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "nonisolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "handlesExternalEvents"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "preferring"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sh",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sh",
              "text": "Set"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:SS",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SS",
              "text": "String"
            },
            {
              "kind": "text",
              "text": ">, "
            },
            {
              "kind": "externalParam",
              "text": "allowing"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sh",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sh",
              "text": "Set"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:SS",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SS",
              "text": "String"
            },
            {
              "kind": "text",
              "text": ">) -> "
            },
            {
              "kind": "keyword",
              "text": "some"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": "\n"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A set of strings that SwiftUI compares against the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "incoming user activity or URL to see if the view’s",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "scene prefers to handle the external event.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "preferring"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A set of strings that SwiftUI compares against the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "incoming user activity or URL to see if the view’s",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "scene can handle the exernal event.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "allowing"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A view whose enclosing scene — if already open —",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "handles incoming external events.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Apply this modifier to a view to indicate whether an open scene that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "contains the view handles specified user activities or URLs that your",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "app receives. Specify two sets of string identifiers to distinguish",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "between the kinds of events that the scene ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "prefers",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " to handle",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and those that it ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "can",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " handle. You can dynamically update the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "identifiers in each set to reflect changing app state.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When your app receives an event on a platform that supports multiple",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "simultaneous scenes, SwiftUI sends the event to the first",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "open scene it finds that prefers to handle the event. Otherwise,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "it sends the event to the first open scene it finds that can handle",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the event. If it finds neither — including when you don’t add",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "this view modifier — SwiftUI creates a new scene for the event.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Don’t confuse this view modifier with the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "code": "Scene/handlesExternalEvents(matching:)",
                  "type": "codeVoice"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "inlineContent": [
                    {
                      "text": "scene",
                      "type": "text"
                    }
                  ],
                  "type": "emphasis"
                },
                {
                  "text": " modifier. You use",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "the view modifier to indicate that an open scene handles certain",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "events, whereas you use the scene modifier to help SwiftUI choose a",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "new scene to open when no open scene handles the event.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "On platforms that support only a single scene, SwiftUI ignores this",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "modifier and sends all external events to the one open scene.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Matching-an-event",
          "level": 3,
          "text": "Matching an event",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To find an open scene that handles a particular external event, SwiftUI",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "compares a property of the event against the strings that you specify",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in the ",
              "type": "text"
            },
            {
              "code": "preferring",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "allowing",
              "type": "codeVoice"
            },
            {
              "text": " sets. SwiftUI examines the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "following event properties to perform the comparison:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "For an",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/foundation/nsuseractivity",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ",",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "like when your app handles Handoff, SwiftUI uses the activity’s",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/foundation/nsuseractivity/3238062-targetcontentidentifier",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "property, or if that’s ",
                      "type": "text"
                    },
                    {
                      "code": "nil",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", its",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/foundation/nsuseractivity/1418086-webpageurl",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "property rendered as an",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/foundation/url/1779984-absolutestring",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "For a",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/foundation/url",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ",",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "like when another process opens a URL that your app handles,",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "SwiftUI uses the URL’s",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/foundation/url/1779984-absolutestring",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "For both parameter sets, an empty set of strings never matches.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Similarly, empty strings never match. Conversely, as a special case,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the string that contains only an asterisk (",
              "type": "text"
            },
            {
              "code": "*",
              "type": "codeVoice"
            },
            {
              "text": ") matches anything.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The modifier performs string comparisons that are case and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "diacritic insensitive.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If you specify multiple instances of this view modifier inside a single",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scene, the scene uses the union of the respective ",
              "type": "text"
            },
            {
              "code": "preferring",
              "type": "codeVoice"
            },
            {
              "text": " and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "allowing",
              "type": "codeVoice"
            },
            {
              "text": " sets from all the modifiers.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Handling-a-user-activity-in-an-open-scene",
          "level": 3,
          "text": "Handling a user activity in an open scene",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "As an example, the following view — which participates in Handoff",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "through the ",
              "type": "text"
            },
            {
              "code": "View/userActivity(_:isActive:_:)",
              "type": "codeVoice"
            },
            {
              "text": " and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "View/onContinueUserActivity(_:perform:)",
              "type": "codeVoice"
            },
            {
              "text": " methods — updates its",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "preferring",
              "type": "codeVoice"
            },
            {
              "text": " set according to the current selection. The enclosing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scene prefers to handle an event for a contact that’s already selected,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "but doesn’t volunteer itself as a preferred scene when no contact is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "selected:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "private struct ContactList: View {",
            "    var store: ContactStore",
            "    @State private var selectedContact: UUID?",
            "",
            "    var body: some View {",
            "        NavigationSplitView {",
            "            List(store.contacts, selection: $selectedContact) { contact in",
            "                NavigationLink(contact.name) {",
            "                    Text(contact.name)",
            "                }",
            "            }",
            "        } detail: {",
            "            Text(\"Select a contact\")",
            "        }",
            "        .handlesExternalEvents(",
            "            preferring: selectedContact == nil",
            "                ? []",
            "                : [selectedContact!.uuidString],",
            "            allowing: selectedContact == nil",
            "                ? [\"*\"]",
            "                : []",
            "        )",
            "        .onContinueUserActivity(Contact.userActivityType) { activity in",
            "            if let identifier = activity.targetContentIdentifier {",
            "                selectedContact = UUID(uuidString: identifier)",
            "            }",
            "        }",
            "        .userActivity(",
            "            Contact.userActivityType,",
            "            isActive: selectedContact != nil",
            "        ) { activity in",
            "            activity.title = \"Contact\"",
            "            activity.targetContentIdentifier = selectedContact?.uuidString",
            "            activity.isEligibleForHandoff = true",
            "        }",
            "    }",
            "}"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The above code also updates the ",
              "type": "text"
            },
            {
              "code": "allowing",
              "type": "codeVoice"
            },
            {
              "text": " set to indicate that the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scene can handle any incoming event when there’s no current selection,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "but that it can’t handle any event if the view already displays a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "contact. The ",
              "type": "text"
            },
            {
              "code": "preferring",
              "type": "codeVoice"
            },
            {
              "text": " set takes precedence in the special case",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "where the incoming event exactly matches the currently selected contact.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.Assignables/documentation/Assignables": {
      "abstract": [
        {
          "text": "A framework that contain wrappers to a PDF to allow creation",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "of an assessment and student work on that assessment.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Assignables/documentation/Assignables",
      "kind": "symbol",
      "role": "collection",
      "title": "Assignables",
      "type": "topic",
      "url": "/documentation/assignables"
    },
    "doc://com.apple.Assignables/documentation/Assignables/AssignedWorkDocumentView": {
      "abstract": [
        {
          "text": "SwiftUI View to display an ",
          "type": "text"
        },
        {
          "code": "AssignedWorkDocument",
          "type": "codeVoice"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AssignedWorkDocumentView"
        }
      ],
      "identifier": "doc://com.apple.Assignables/documentation/Assignables/AssignedWorkDocumentView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AssignedWorkDocumentView"
        }
      ],
      "role": "symbol",
      "title": "AssignedWorkDocumentView",
      "type": "topic",
      "url": "/documentation/assignables/assignedworkdocumentview"
    },
    "doc://com.apple.Assignables/documentation/Assignables/AssignedWorkDocumentView/handlesExternalEvents(preferring:allowing:)": {
      "abstract": [
        {
          "text": "Specifies the external events that the view’s scene handles",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "if the scene is already open.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "handlesExternalEvents"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "preferring"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sh",
          "text": "Set"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "allowing"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sh",
          "text": "Set"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.Assignables/documentation/Assignables/AssignedWorkDocumentView/handlesExternalEvents(preferring:allowing:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "handlesExternalEvents(preferring:allowing:)",
      "type": "topic",
      "url": "/documentation/assignables/assignedworkdocumentview/handlesexternalevents(preferring:allowing:)"
    },
    "doc://com.apple.documentation/documentation/foundation/nsuseractivity": {
      "abstract": [
        {
          "text": "A representation of the state of your app at a moment in time.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSUserActivity"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsuseractivity",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSUserActivity",
      "type": "topic",
      "url": "/documentation/foundation/nsuseractivity"
    },
    "doc://com.apple.documentation/documentation/foundation/nsuseractivity/1418086-webpageurl": {
      "abstract": [
        {
          "text": "The URL of the webpage to load in a browser to continue the activity.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "var "
        },
        {
          "kind": "identifier",
          "text": "webpageURL"
        },
        {
          "kind": "text",
          "text": ": URL?"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsuseractivity/1418086-webpageurl",
      "kind": "symbol",
      "role": "symbol",
      "title": "webpageURL",
      "type": "topic",
      "url": "/documentation/foundation/nsuseractivity/1418086-webpageurl"
    },
    "doc://com.apple.documentation/documentation/foundation/nsuseractivity/3238062-targetcontentidentifier": {
      "abstract": [
        {
          "text": "A string that identifies the user activity’s content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "var "
        },
        {
          "kind": "identifier",
          "text": "targetContentIdentifier"
        },
        {
          "kind": "text",
          "text": ": String?"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsuseractivity/3238062-targetcontentidentifier",
      "kind": "symbol",
      "role": "symbol",
      "title": "targetContentIdentifier",
      "type": "topic",
      "url": "/documentation/foundation/nsuseractivity/3238062-targetcontentidentifier"
    },
    "doc://com.apple.documentation/documentation/foundation/url": {
      "abstract": [
        {
          "text": "A value that identifies the location of a resource, such as an item on a remote server or the path to a local file.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "URL"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/url",
      "kind": "symbol",
      "role": "symbol",
      "title": "URL",
      "type": "topic",
      "url": "/documentation/foundation/url"
    },
    "doc://com.apple.documentation/documentation/foundation/url/1779984-absolutestring": {
      "abstract": [
        {
          "text": "The absolute string for the URL.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "var "
        },
        {
          "kind": "identifier",
          "text": "absoluteString"
        },
        {
          "kind": "text",
          "text": ": String"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/url/1779984-absolutestring",
      "kind": "symbol",
      "role": "symbol",
      "title": "absoluteString",
      "type": "topic",
      "url": "/documentation/foundation/url/1779984-absolutestring"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
      "kind": "symbol",
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/SwiftUI/View"
    },
    "doc://com.externally.resolved.symbol/s:SS": {
      "abstract": [
        {
          "text": "A Unicode string value that is a collection of characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "String"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SS",
      "kind": "symbol",
      "role": "symbol",
      "title": "String",
      "type": "topic",
      "url": "/documentation/Swift/String"
    },
    "doc://com.externally.resolved.symbol/s:Sh": {
      "abstract": [
        {
          "text": "An unordered collection of unique elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Set"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SH",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Sh",
      "kind": "symbol",
      "role": "symbol",
      "title": "Set",
      "type": "topic",
      "url": "/documentation/Swift/Set"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/assignables/assignedworkdocumentview/handlesexternalevents(preferring:allowing:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
