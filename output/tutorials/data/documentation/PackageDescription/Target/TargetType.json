{
  "abstract": [
    {
      "text": "The different types of a target.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:18PackageDescription6TargetC0C4TypeO",
    "fragments": [
      {
        "kind": "keyword",
        "text": "enum"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "TargetType"
      }
    ],
    "modules": [
      {
        "name": "PackageDescription"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "TargetType"
      }
    ],
    "role": "symbol",
    "roleHeading": "Enumeration",
    "symbolKind": "enum",
    "title": "Target.TargetType"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "macOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "enum"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "TargetType"
            }
          ]
        }
      ],
      "kind": "declarations"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:SY": {
      "abstract": [
        {
          "text": "A type that can be converted to and from an associated raw value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RawRepresentable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SY8RawValueQa",
          "text": "RawValue"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SY",
      "kind": "symbol",
      "role": "symbol",
      "title": "RawRepresentable",
      "type": "topic",
      "url": "/documentation/Swift/RawRepresentable"
    },
    "doc://com.externally.resolved.symbol/s:s8CopyableP": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8CopyableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/Swift/Copyable"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription": {
      "abstract": [
        {
          "text": "Create reusable code, organize it in a lightweight way, and share it across your projects and with other developers.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription",
      "kind": "symbol",
      "role": "collection",
      "title": "PackageDescription",
      "type": "topic",
      "url": "/documentation/packagedescription"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target": {
      "abstract": [
        {
          "text": "The basic building block of a Swift package.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Target"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Target"
        }
      ],
      "role": "symbol",
      "title": "Target",
      "type": "topic",
      "url": "/documentation/packagedescription/target"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType": {
      "abstract": [
        {
          "text": "The different types of a target.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TargetType"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TargetType"
        }
      ],
      "role": "symbol",
      "title": "Target.TargetType",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/!=(_:_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether two values are not equal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "!="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/!=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "!=(_:_:)",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype/!=(_:_:)"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/Equatable-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/Equatable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Equatable Implementations",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype/equatable-implementations"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/RawRepresentable-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/RawRepresentable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "RawRepresentable Implementations",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype/rawrepresentable-implementations"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/RawValue-swift.typealias": {
      "abstract": [
        {
          "text": "The raw type that can be used to represent all values of the conforming",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RawValue"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/RawValue-swift.typealias",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RawValue"
        }
      ],
      "role": "symbol",
      "title": "Target.TargetType.RawValue",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype/rawvalue-swift.typealias"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/binary": {
      "abstract": [
        {
          "text": "A target that references a binary artifact.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "binary"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/binary",
      "kind": "symbol",
      "role": "symbol",
      "title": "Target.TargetType.binary",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype/binary"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/executable": {
      "abstract": [
        {
          "text": "A target that contains code for an executable’s main module.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "executable"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/executable",
      "kind": "symbol",
      "role": "symbol",
      "title": "Target.TargetType.executable",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype/executable"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/hash(into:)": {
      "abstract": [
        {
          "text": "Hashes the target type by feeding the item into the given hasher.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hash"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "into"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6HasherV",
          "text": "Hasher"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/hash(into:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "hash(into:)",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype/hash(into:)"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/hashValue": {
      "abstract": [
        {
          "text": "The target type’s hash value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hashValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/hashValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "hashValue",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype/hashvalue"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/init(rawValue:)": {
      "abstract": [
        {
          "text": "Creates a new instance with the specified raw value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "rawValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/init(rawValue:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(rawValue:)",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype/init(rawvalue:)"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/macro": {
      "abstract": [
        {
          "text": "A target that provides a Swift macro.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "macro"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/macro",
      "kind": "symbol",
      "role": "symbol",
      "title": "Target.TargetType.macro",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype/macro"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/plugin": {
      "abstract": [
        {
          "text": "A target that provides a package plug-in.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "plugin"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/plugin",
      "kind": "symbol",
      "role": "symbol",
      "title": "Target.TargetType.plugin",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype/plugin"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/rawValue-swift.property": {
      "abstract": [
        {
          "text": "The corresponding value of the raw type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "rawValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/rawValue-swift.property",
      "kind": "symbol",
      "role": "symbol",
      "title": "rawValue",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype/rawvalue-swift.property"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/regular": {
      "abstract": [
        {
          "text": "A target that contains code for the Swift package’s functionality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "regular"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/regular",
      "kind": "symbol",
      "role": "symbol",
      "title": "Target.TargetType.regular",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype/regular"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/system": {
      "abstract": [
        {
          "text": "A target that adapts a library on the system to work with Swift",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "packages.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "system"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/system",
      "kind": "symbol",
      "role": "symbol",
      "title": "Target.TargetType.system",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype/system"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/test": {
      "abstract": [
        {
          "text": "A target that contains tests for the Swift package’s other targets.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "test"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/test",
      "kind": "symbol",
      "role": "symbol",
      "title": "Target.TargetType.test",
      "type": "topic",
      "url": "/documentation/packagedescription/target/targettype/test"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/isTest": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether this is a test target.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isTest"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/isTest",
      "kind": "symbol",
      "role": "symbol",
      "title": "isTest",
      "type": "topic",
      "url": "/documentation/packagedescription/target/istest"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/type": {
      "abstract": [
        {
          "text": "The type of the target.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "type"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:18PackageDescription6TargetC",
          "text": "Target"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:18PackageDescription6TargetC0C4TypeO",
          "text": "TargetType"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/type",
      "kind": "symbol",
      "role": "symbol",
      "title": "type",
      "type": "topic",
      "url": "/documentation/packagedescription/target/type"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s8CopyableP",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/s:SY"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Describing-the-Target-Type",
      "generated": true,
      "identifiers": [
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/isTest",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/type"
      ],
      "title": "Describing the Target Type"
    }
  ],
  "topicSections": [
    {
      "anchor": "Enumeration-Cases",
      "identifiers": [
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/regular",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/binary",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/system",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/test",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/executable",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/plugin",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/macro"
      ],
      "title": "Enumeration Cases"
    },
    {
      "anchor": "Creating-a-Value",
      "identifiers": [
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/init(rawValue:)"
      ],
      "title": "Creating a Value"
    },
    {
      "anchor": "Hashing",
      "identifiers": [
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/hash(into:)",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/hashValue"
      ],
      "title": "Hashing"
    },
    {
      "anchor": "Operator-Functions",
      "identifiers": [
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/!=(_:_:)"
      ],
      "title": "Operator Functions"
    },
    {
      "anchor": "Accessing-the-Raw-Value",
      "identifiers": [
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/rawValue-swift.property",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/RawValue-swift.typealias"
      ],
      "title": "Accessing the Raw Value"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/Equatable-Implementations",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Target/TargetType/RawRepresentable-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/packagedescription/target/targettype"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
