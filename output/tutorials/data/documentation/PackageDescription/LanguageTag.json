{
  "abstract": [
    {
      "text": "A wrapper around an IETF language tag.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:18PackageDescription11LanguageTagV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "LanguageTag"
      }
    ],
    "modules": [
      {
        "name": "PackageDescription"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "LanguageTag"
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "LanguageTag"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "macOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "LanguageTag"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To learn more about the IETF worldwide standard for language tags, see",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "https://tools.ietf.org/html/rfc5646",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:SY": {
      "abstract": [
        {
          "text": "A type that can be converted to and from an associated raw value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RawRepresentable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SY8RawValueQa",
          "text": "RawValue"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SY",
      "kind": "symbol",
      "role": "symbol",
      "title": "RawRepresentable",
      "type": "topic",
      "url": "/documentation/Swift/RawRepresentable"
    },
    "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s26ExpressibleByStringLiteralP": {
      "abstract": [
        {
          "text": "A type that can be initialized with a string literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByStringLiteral"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s43ExpressibleByExtendedGraphemeClusterLiteralP",
          "text": "ExpressibleByExtendedGraphemeClusterLiteral"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s26ExpressibleByStringLiteralP",
      "kind": "symbol",
      "role": "symbol",
      "title": "ExpressibleByStringLiteral",
      "type": "topic",
      "url": "/documentation/Swift/ExpressibleByStringLiteral"
    },
    "doc://com.externally.resolved.symbol/s:s33ExpressibleByUnicodeScalarLiteralP": {
      "abstract": [
        {
          "text": "A type that can be initialized with a string literal containing a single Unicode scalar value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByUnicodeScalarLiteral"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s33ExpressibleByUnicodeScalarLiteralP",
      "kind": "symbol",
      "role": "symbol",
      "title": "ExpressibleByUnicodeScalarLiteral",
      "type": "topic",
      "url": "/documentation/Swift/ExpressibleByUnicodeScalarLiteral"
    },
    "doc://com.externally.resolved.symbol/s:s43ExpressibleByExtendedGraphemeClusterLiteralP": {
      "abstract": [
        {
          "text": "A type that can be initialized with a string literal containing a single extended grapheme cluster.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByExtendedGraphemeClusterLiteral"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s33ExpressibleByUnicodeScalarLiteralP",
          "text": "ExpressibleByUnicodeScalarLiteral"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s43ExpressibleByExtendedGraphemeClusterLiteralP",
      "kind": "symbol",
      "role": "symbol",
      "title": "ExpressibleByExtendedGraphemeClusterLiteral",
      "type": "topic",
      "url": "/documentation/Swift/ExpressibleByExtendedGraphemeClusterLiteral"
    },
    "doc://com.externally.resolved.symbol/s:s8CopyableP": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8CopyableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/Swift/Copyable"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription": {
      "abstract": [
        {
          "text": "Create reusable code, organize it in a lightweight way, and share it across your projects and with other developers.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription",
      "kind": "symbol",
      "role": "collection",
      "title": "PackageDescription",
      "type": "topic",
      "url": "/documentation/packagedescription"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag": {
      "abstract": [
        {
          "text": "A wrapper around an IETF language tag.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LanguageTag"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LanguageTag"
        }
      ],
      "role": "symbol",
      "title": "LanguageTag",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/!=(_:_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether two values are not equal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "!="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/!=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "!=(_:_:)",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/!=(_:_:)"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/CustomStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/CustomStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/customstringconvertible-implementations"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/Equatable-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/Equatable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Equatable Implementations",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/equatable-implementations"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/ExpressibleByExtendedGraphemeClusterLiteral-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/expressiblebyextendedgraphemeclusterliteral-implementations"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/ExpressibleByStringLiteral-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/ExpressibleByStringLiteral-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByStringLiteral Implementations",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/expressiblebystringliteral-implementations"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/ExpressibleByUnicodeScalarLiteral-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/ExpressibleByUnicodeScalarLiteral-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByUnicodeScalarLiteral Implementations",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/expressiblebyunicodescalarliteral-implementations"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/ExtendedGraphemeClusterLiteralType": {
      "abstract": [
        {
          "text": "A type that represents an extended grapheme cluster literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExtendedGraphemeClusterLiteralType"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/ExtendedGraphemeClusterLiteralType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExtendedGraphemeClusterLiteralType"
        }
      ],
      "role": "symbol",
      "title": "LanguageTag.ExtendedGraphemeClusterLiteralType",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/extendedgraphemeclusterliteraltype"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/RawRepresentable-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/RawRepresentable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "RawRepresentable Implementations",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/rawrepresentable-implementations"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/RawValue-swift.typealias": {
      "abstract": [
        {
          "text": "The raw type that can be used to represent all values of the conforming",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RawValue"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/RawValue-swift.typealias",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RawValue"
        }
      ],
      "role": "symbol",
      "title": "LanguageTag.RawValue",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/rawvalue-swift.typealias"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/StringLiteralType": {
      "abstract": [
        {
          "text": "A type that represents a string literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "StringLiteralType"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/StringLiteralType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StringLiteralType"
        }
      ],
      "role": "symbol",
      "title": "LanguageTag.StringLiteralType",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/stringliteraltype"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/UnicodeScalarLiteralType": {
      "abstract": [
        {
          "text": "A type that represents a Unicode scalar literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnicodeScalarLiteralType"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/UnicodeScalarLiteralType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnicodeScalarLiteralType"
        }
      ],
      "role": "symbol",
      "title": "LanguageTag.UnicodeScalarLiteralType",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/unicodescalarliteraltype"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/description": {
      "abstract": [
        {
          "text": "A textual representation of the language tag.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "description"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/description",
      "kind": "symbol",
      "role": "symbol",
      "title": "description",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/description"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/hash(into:)": {
      "abstract": [
        {
          "text": "Hashes the language tag by feeding the item into the given hasher.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hash"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "into"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6HasherV",
          "text": "Hasher"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/hash(into:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "hash(into:)",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/hash(into:)"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/hashValue": {
      "abstract": [
        {
          "text": "The hash value for language tag.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hashValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/hashValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "hashValue",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/hashvalue"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/init(extendedGraphemeClusterLiteral:)": {
      "abstract": [
        {
          "text": "Creates an instance initialized to the given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "extendedGraphemeClusterLiteral"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/init(extendedGraphemeClusterLiteral:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(extendedGraphemeClusterLiteral:)",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/init(extendedgraphemeclusterliteral:)"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/init(rawValue:)": {
      "abstract": [
        {
          "text": "Creates a new instance with the specified raw value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "rawValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/init(rawValue:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(rawValue:)",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/init(rawvalue:)"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/init(stringLiteral:)": {
      "abstract": [
        {
          "text": "Creates an instance initialized to the given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "stringLiteral"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/init(stringLiteral:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(stringLiteral:)",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/init(stringliteral:)"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/init(unicodeScalarLiteral:)": {
      "abstract": [
        {
          "text": "Creates an instance initialized to the given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "unicodeScalarLiteral"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/init(unicodeScalarLiteral:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(unicodeScalarLiteral:)",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/init(unicodescalarliteral:)"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/rawValue-swift.property": {
      "abstract": [
        {
          "text": "The corresponding value of the raw type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "rawValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/rawValue-swift.property",
      "kind": "symbol",
      "role": "symbol",
      "title": "rawValue",
      "type": "topic",
      "url": "/documentation/packagedescription/languagetag/rawvalue-swift.property"
    },
    "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Package/defaultLocalization": {
      "abstract": [
        {
          "text": "The default localization for resources.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "defaultLocalization"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:18PackageDescription11LanguageTagV",
          "text": "LanguageTag"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Package/defaultLocalization",
      "kind": "symbol",
      "role": "symbol",
      "title": "defaultLocalization",
      "type": "topic",
      "url": "/documentation/packagedescription/package/defaultlocalization"
    },
    "https://tools.ietf.org/html/rfc5646": {
      "identifier": "https://tools.ietf.org/html/rfc5646",
      "title": "RFC5646",
      "titleInlineContent": [
        {
          "text": "RFC5646",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://tools.ietf.org/html/rfc5646"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s8CopyableP",
        "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:s43ExpressibleByExtendedGraphemeClusterLiteralP",
        "doc://com.externally.resolved.symbol/s:s26ExpressibleByStringLiteralP",
        "doc://com.externally.resolved.symbol/s:s33ExpressibleByUnicodeScalarLiteralP",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/s:SY"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Localizing-Package-Resources",
      "generated": true,
      "identifiers": [
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/Package/defaultLocalization"
      ],
      "title": "Localizing Package Resources"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-Language-Tag",
      "identifiers": [
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/init(extendedGraphemeClusterLiteral:)",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/init(stringLiteral:)",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/init(unicodeScalarLiteral:)",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/init(rawValue:)",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/rawValue-swift.property"
      ],
      "title": "Creating a Language Tag"
    },
    {
      "anchor": "Describing-a-Language-Tag",
      "identifiers": [
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/description"
      ],
      "title": "Describing a Language Tag"
    },
    {
      "anchor": "Hashing",
      "identifiers": [
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/hash(into:)",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/hashValue"
      ],
      "title": "Hashing"
    },
    {
      "anchor": "Operator-Functions",
      "identifiers": [
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/!=(_:_:)"
      ],
      "title": "Operator Functions"
    },
    {
      "anchor": "Identifying-Related-Types",
      "identifiers": [
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/ExtendedGraphemeClusterLiteralType",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/RawValue-swift.typealias",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/StringLiteralType",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/UnicodeScalarLiteralType"
      ],
      "title": "Identifying Related Types"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/CustomStringConvertible-Implementations",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/Equatable-Implementations",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/ExpressibleByStringLiteral-Implementations",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/ExpressibleByUnicodeScalarLiteral-Implementations",
        "doc://org.swift.swiftpm.packagedescription/documentation/PackageDescription/LanguageTag/RawRepresentable-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/packagedescription/languagetag"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
