{
  "abstract": [
    {
      "text": "Add Picture in Picture (PiP) playback to your app using a player view controller.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.avkit/documentation/AVKit"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-in-a-standard-player"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "AVKit"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Adopting Picture in Picture in a Standard Player"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " provides the standard video playback experience across iOS, iPadOS, and tvOS. In tvOS, it supports a wide variety of remotes, skipping, scanning, scrubbing, Siri commands, interstitial support, and more. After you configure your audio session and set the project capabilities as described in ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFoundation/configuring-your-app-for-media-playback",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", your player automatically supports PiP playback. When your app runs on a supported device, the user can manage PiP in the standard player.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Familiarize-Yourself-with-the-PiP-Controls",
          "level": 3,
          "text": "Familiarize Yourself with the PiP Controls",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "PiP playback starts when the user selects the PiP button in the player interface. In iOS and iPadOS, PiP playback starts automatically if your video is playing in full-screen mode and the user exits the app. When a video isn’t filling the entire screen in width, use ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController/canStartPictureInPictureAutomaticallyFromInline",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to indicate a video is the primary focus. In either case, the player window minimizes to a movable, floating window. In general, the system automatically pauses the video upon scene backgrounding, so you don’t need to pause video based on activation state.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "In iOS and iPadOS, you can disable automatic invocation of Picture in Picture in Settings > General > Picture in Picture. Check this setting if you think you’ve set up everything correctly but find that your video doesn’t enter PiP mode when you return to the Home screen.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Tip",
          "style": "tip",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "Selecting the stop button in the PiP interface terminates PiP and restores video playback within your app. AVKit can’t make assumptions about how you designed your app, so it doesn’t know how to properly restore your video playback interface. Instead, it delegates that responsibility to you.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Starting in iOS 14, the PiP user interface provides controls that allow users to skip forward and backward within a video. The system enables these controls by default for apps linked in iOS 14 or later. If you need to restrict skipping content for legal disclaimers or advertisements, use ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController/requiresLinearPlayback",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " during the required section of your video. Set this property back to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/swift/false",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " once you can allow seeking again.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Restore-Your-Video-Playback-Interface",
          "level": 3,
          "text": "Restore Your Video Playback Interface",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To handle the restore process, your code must adopt the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol and implement the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method. The framework calls this method when control returns to your app, giving you the opportunity to determine how to properly restore your video player’s interface. If you originally presented your video player using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/UIKit/UIViewController/present(_:animated:completion:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method of ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/UIKit/UIViewController",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", restore your player interface in the same way in the delegate callback method.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func playerViewController(_ playerViewController: AVPlayerViewController,",
            "                          restoreUserInterfaceForPictureInPictureStopWithCompletionHandler completionHandler: @escaping (Bool) -> Void) {",
            "    present(playerViewController, animated: false) {",
            "        completionHandler(true)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Avoid adding animations during the swap so you can ensure quick restoration for your user.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "To allow the system to finish restoring your user interface, call the completion handler with a value of ",
                  "type": "text"
                },
                {
                  "code": "true",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "anchor": "Swap-PiP-Content-in-tvOS",
          "level": 3,
          "text": "Swap PiP Content in tvOS",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "In tvOS, users can play videos in PiP alongside a full-screen video. Video playback can move between PiP and full screen, so your app needs to be ready to handle the swap to provide a seamless PiP experience. When you swap your content with another app, consider your content that’s going into PiP and your content leaving PiP to go full screen. The illustration below shows the life cycle of your full-screen content swapping with another app’s PiP.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "media-3908854",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The illustration below shows the life cycle of your app’s PiP content moving to full screen.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "media-3908855",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When you swap content within your app, you need to handle both sides of the life cycle events from both video players. The following sequence shows you the callbacks to expect with a video that swaps content between PiP and full screen.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The video starting PiP receives ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillStartPictureInPicture(_:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ", but the system hasn’t started the animations.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The video going full screen receives ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " to restore its full-screen user interface.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The video going full screen receives ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillStopPictureInPicture(_:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ", and the system hasn’t started the animations.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The video starting PiP receives ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidStartPictureInPicture(_:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ", and the system completes the swap and animations for the video that started PiP.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The video going full screen receives ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidStopPictureInPicture(_:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ", and the system completes the swap and animations for the video that moved full screen.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "orderedList"
        },
        {
          "inlineContent": [
            {
              "identifier": "media-3908853",
              "type": "image"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.avkit/documentation/AVKit": {
      "abstract": [
        {
          "text": "Create user interfaces for media playback, complete with transport controls, chapter navigation, picture-in-picture support, and display of subtitles and closed captions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit",
      "kind": "symbol",
      "role": "collection",
      "title": "AVKit",
      "type": "topic",
      "url": "/documentation/avkit"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController": {
      "abstract": [
        {
          "text": "A controller that responds to user-initiated Picture in Picture playback of video in a floating, resizable window.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPictureInPictureController"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AVPictureInPictureController"
        }
      ],
      "role": "symbol",
      "title": "AVPictureInPictureController",
      "type": "topic",
      "url": "/documentation/avkit/avpictureinpicturecontroller"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController": {
      "abstract": [
        {
          "text": "A view controller that displays content from a player and presents a native user interface to control playback.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPlayerViewController"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AVPlayerViewController"
        }
      ],
      "role": "symbol",
      "title": "AVPlayerViewController",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontroller"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController/canStartPictureInPictureAutomaticallyFromInline": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether Picture in Picture starts automatically when transitioning to the background when the view controller presents its content inline.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "canStartPictureInPictureAutomaticallyFromInline"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController/canStartPictureInPictureAutomaticallyFromInline",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "canStartPictureInPictureAutomaticallyFromInline"
        }
      ],
      "role": "symbol",
      "title": "canStartPictureInPictureAutomaticallyFromInline",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontroller/canstartpictureinpictureautomaticallyfrominline"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController/requiresLinearPlayback": {
      "abstract": [
        {
          "text": "A Boolean value that determines whether the player allows the user to skip media content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "requiresLinearPlayback"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController/requiresLinearPlayback",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "requiresLinearPlayback"
        }
      ],
      "role": "symbol",
      "title": "requiresLinearPlayback",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontroller/requireslinearplayback"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate": {
      "abstract": [
        {
          "text": "A protocol that defines the methods to implement to respond to player view controller events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPlayerViewControllerDelegate"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AVPlayerViewControllerDelegate"
        }
      ],
      "role": "symbol",
      "title": "AVPlayerViewControllerDelegate",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)": {
      "abstract": [
        {
          "text": "Tells the delegate when Picture in Picture is about to stop so you can restore your app’s user interface.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "restoreUserInterfaceForPictureInPictureStopWithCompletionHandler"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:restoreuserinterfaceforpictureinpicturestopwithcompletionhandler:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidStartPictureInPicture(_:)": {
      "abstract": [
        {
          "text": "Tells the delegate when Picture in Picture starts.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewControllerDidStartPictureInPicture"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidStartPictureInPicture(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewControllerDidStartPictureInPicture:"
        }
      ],
      "role": "symbol",
      "title": "playerViewControllerDidStartPictureInPicture(_:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontrollerdidstartpictureinpicture(_:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidStopPictureInPicture(_:)": {
      "abstract": [
        {
          "text": "Tells the delegate when Picture in Picture stops.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewControllerDidStopPictureInPicture"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidStopPictureInPicture(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewControllerDidStopPictureInPicture:"
        }
      ],
      "role": "symbol",
      "title": "playerViewControllerDidStopPictureInPicture(_:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontrollerdidstoppictureinpicture(_:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillStartPictureInPicture(_:)": {
      "abstract": [
        {
          "text": "Tells the delegate when Picture in Picture is about to start.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewControllerWillStartPictureInPicture"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillStartPictureInPicture(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewControllerWillStartPictureInPicture:"
        }
      ],
      "role": "symbol",
      "title": "playerViewControllerWillStartPictureInPicture(_:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontrollerwillstartpictureinpicture(_:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillStopPictureInPicture(_:)": {
      "abstract": [
        {
          "text": "Tells the delegate when Picture in Picture is about to stop.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewControllerWillStopPictureInPicture"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillStopPictureInPicture(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewControllerWillStopPictureInPicture:"
        }
      ],
      "role": "symbol",
      "title": "playerViewControllerWillStopPictureInPicture(_:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontrollerwillstoppictureinpicture(_:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/accessing-the-camera-while-multitasking-on-ipad": {
      "abstract": [
        {
          "text": "Operate the camera in Split View, Slide Over, Picture in Picture, and Stage Manager modes.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/accessing-the-camera-while-multitasking-on-ipad",
      "kind": "article",
      "role": "article",
      "title": "Accessing the camera while multitasking on iPad",
      "type": "topic",
      "url": "/documentation/avkit/accessing-the-camera-while-multitasking-on-ipad"
    },
    "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-for-video-calls": {
      "abstract": [
        {
          "text": "Add multitasking capability to your video-call apps by using Picture in Picture (PiP).",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-for-video-calls",
      "kind": "article",
      "role": "article",
      "title": "Adopting Picture in Picture for video calls",
      "type": "topic",
      "url": "/documentation/avkit/adopting-picture-in-picture-for-video-calls"
    },
    "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-in-a-custom-player": {
      "abstract": [
        {
          "text": "Add controls to your custom player user interface to invoke Picture in Picture (PiP) playback.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-in-a-custom-player",
      "kind": "article",
      "role": "article",
      "title": "Adopting Picture in Picture in a Custom Player",
      "type": "topic",
      "url": "/documentation/avkit/adopting-picture-in-picture-in-a-custom-player"
    },
    "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-playback-in-tvos": {
      "abstract": [
        {
          "text": "Add advanced multitasking capabilities to your video apps by using Picture in Picture playback in tvOS.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-playback-in-tvos",
      "kind": "article",
      "role": "sampleCode",
      "title": "Adopting Picture in Picture Playback in tvOS",
      "type": "topic",
      "url": "/documentation/avkit/adopting-picture-in-picture-playback-in-tvos"
    },
    "doc://com.apple.documentation/documentation/AVFoundation/configuring-your-app-for-media-playback": {
      "abstract": [
        {
          "text": "Configure apps to enable standard media playback behavior.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFoundation/configuring-your-app-for-media-playback",
      "kind": "article",
      "role": "article",
      "title": "Configuring your app for media playback",
      "type": "topic",
      "url": "/documentation/AVFoundation/configuring-your-app-for-media-playback"
    },
    "doc://com.apple.documentation/documentation/UIKit/UIViewController": {
      "abstract": [
        {
          "text": "An object that manages a view hierarchy for your UIKit app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIViewController"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/UIKit/UIViewController",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIViewController",
      "type": "topic",
      "url": "/documentation/UIKit/UIViewController"
    },
    "doc://com.apple.documentation/documentation/UIKit/UIViewController/present(_:animated:completion:)": {
      "abstract": [
        {
          "text": "Presents a view controller modally.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "present"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "viewControllerToPresent"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UIViewController",
          "text": "UIViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "animated"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "flag"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "completion"
        },
        {
          "kind": "text",
          "text": ": (() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")? = nil)"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/UIKit/UIViewController/present(_:animated:completion:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "present(_:animated:completion:)",
      "type": "topic",
      "url": "/documentation/UIKit/UIViewController/present(_:animated:completion:)"
    },
    "doc://com.apple.documentation/documentation/swift/false": {
      "abstract": [
        {
          "text": "A false value.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/swift/false",
      "kind": "symbol",
      "role": "symbol",
      "title": "false",
      "type": "topic",
      "url": "/documentation/swift/false"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "media-3908853": {
      "alt": "A diagram that describes the sequence of delegate calls your app receives when your app owns the full-screen and PiP videos. The sequence of calls you should expect, between your full-screen and PiP players, precedes the diagram.",
      "identifier": "media-3908853",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/eea0e50ab42ff488144b862ae57cdf7b/media-3908853@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/6f3697d53bc7a429fc1830b83e8d7676/media-3908853~dark@2x.png"
        }
      ]
    },
    "media-3908854": {
      "alt": "A diagram that describes the sequence of delegate calls your app receives when your full-screen video moves to PiP. When the swap starts, the player view controller calls the will start PiP method. At this point the animations haven’t started. When the swap and animations complete, the player view controller calls the did stop PiP method. Finally, your app is in the background state. ",
      "identifier": "media-3908854",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/660b45bbe135d61ae1a97a16422ef178/media-3908854@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1b7be5de81c80d76d5ddb3270e6daf06/media-3908854~dark@2x.png"
        }
      ]
    },
    "media-3908855": {
      "alt": "A diagram that describes the sequence of delegate calls your app receives when your PiP video moves to full screen. When the swap initiates, the system moves your app to the foreground, and the player view controller calls the restore user interface for PiP method. At this point, the swap starts, but animations haven’t started. The player view controller calls the will stop PiP method, and then the did stop PiP method when the swap and animations complete.",
      "identifier": "media-3908855",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/7c273e2fce23c889d2c406e3798f81e2/media-3908855@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/88ebce42185fec830b58acd4b6d023ab/media-3908855~dark@2x.png"
        }
      ]
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Picture-in-Picture",
      "generated": true,
      "identifiers": [
        "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-playback-in-tvos",
        "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-in-a-custom-player",
        "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-for-video-calls",
        "doc://com.apple.avkit/documentation/AVKit/accessing-the-camera-while-multitasking-on-ipad",
        "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController"
      ],
      "title": "Picture in Picture"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Picture-in-Picture",
              "generated": true,
              "identifiers": [
                "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-playback-in-tvos",
                "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-in-a-custom-player",
                "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-for-video-calls",
                "doc://com.apple.avkit/documentation/AVKit/accessing-the-camera-while-multitasking-on-ipad",
                "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController"
              ],
              "title": "Picture in Picture"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1UIKit~1UIViewController~1present(_:animated:completion:)/title",
          "value": "presentViewController:animated:completion:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1UIKit~1UIViewController~1present(_:animated:completion:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "presentViewController:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)UIViewController",
              "text": "UIViewController"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "viewControllerToPresent"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "animated:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "internalParam",
              "text": "flag"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "completion:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": " (^)()) "
            },
            {
              "kind": "internalParam",
              "text": "completion"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController/title",
          "value": "AVPlayerViewController"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)/title",
          "value": "playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1UIKit~1UIViewController/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIViewController"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)UIResponder",
              "text": "UIResponder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController~1requiresLinearPlayback/title",
          "value": "requiresLinearPlayback"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController~1requiresLinearPlayback/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "requiresLinearPlayback"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate/title",
          "value": "AVPlayerViewControllerDelegate"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewControllerDelegate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewControllerDelegate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerWillStopPictureInPicture(_:)/title",
          "value": "playerViewControllerWillStopPictureInPicture:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerWillStopPictureInPicture(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewControllerWillStopPictureInPicture:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerWillStartPictureInPicture(_:)/title",
          "value": "playerViewControllerWillStartPictureInPicture:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerWillStartPictureInPicture(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewControllerWillStartPictureInPicture:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController/title",
          "value": "AVPictureInPictureController"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPictureInPictureController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPictureInPictureController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController~1canStartPictureInPictureAutomaticallyFromInline/title",
          "value": "canStartPictureInPictureAutomaticallyFromInline"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController~1canStartPictureInPictureAutomaticallyFromInline/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "canStartPictureInPictureAutomaticallyFromInline"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerDidStopPictureInPicture(_:)/title",
          "value": "playerViewControllerDidStopPictureInPicture:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerDidStopPictureInPicture(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewControllerDidStopPictureInPicture:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerDidStartPictureInPicture(_:)/title",
          "value": "playerViewControllerDidStartPictureInPicture:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerDidStartPictureInPicture(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewControllerDidStartPictureInPicture:"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/avkit/adopting-picture-in-picture-in-a-standard-player"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/avkit/adopting-picture-in-picture-in-a-standard-player"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
