{
  "abstract": [
    {
      "text": "Add controls to your custom player user interface to invoke Picture in Picture (PiP) playback.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.avkit/documentation/AVKit"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-in-a-custom-player"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "AVKit"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Adopting Picture in Picture in a Custom Player"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Add PiP playback to your custom player by using the AVKit framework’s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " class. This class lets you implement the same PiP behavior found in ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " in your custom player.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Configure-Audio-Session-and-Background-Modes",
          "level": 3,
          "text": "Configure Audio Session and Background Modes",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To participate with PiP in iOS and tvOS, customize your app’s audio playback capabilities by configuring its audio session and background modes. For more information, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFoundation/configuring-your-app-for-media-playback",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Update-Your-Custom-Player-User-Interface",
          "level": 3,
          "text": "Update Your Custom Player User Interface",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Begin by adding a user interface (UI) to your custom player interface to enable users to begin PiP playback. Make this UI consistent with the system default UI that ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " presents. Access the standard images for controlling PiP playback by using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController/pictureInPictureButtonStartImage",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController/pictureInPictureButtonStopImage",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " class properties of ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". These methods return system default images to present in your UI.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "import AVKit",
            "",
            "@IBOutlet weak var pipButton: UIButton!",
            "",
            "override func viewDidLoad() {",
            "    super.viewDidLoad()",
            "    ",
            "    let startImage = AVPictureInPictureController.pictureInPictureButtonStartImage",
            "    let stopImage = AVPictureInPictureController.pictureInPictureButtonStopImage",
            "    ",
            "    pipButton.setImage(startImage, for: .normal)",
            "    pipButton.setImage(stopImage, for: .selected)",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Use key-value observing (KVO) on the controller’s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController/canStopPictureInPicture",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property to display the appropriate affordances and provide the correct behavior in your playback UI. If ",
              "type": "text"
            },
            {
              "code": "false",
              "type": "codeVoice"
            },
            {
              "text": ", display a start PiP affordance. If ",
              "type": "text"
            },
            {
              "code": "true",
              "type": "codeVoice"
            },
            {
              "text": ", your app stops your custom playback UI and displays UI affordances to swap if you’re creating a tvOS app. For more information about KVO, see ",
              "type": "text"
            },
            {
              "code": "Using Key-Value Observing in Swift",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Create-the-PiP-Controller",
          "level": 3,
          "text": "Create the PiP Controller",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Create an instance of ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to control PiP playback in your app. Before attempting to create the controller instance, verify that the current hardware supports PiP playback by calling the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController/isPictureInPictureSupported()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var pipController: AVPictureInPictureController!",
            "var pipPossibleObservation: NSKeyValueObservation?",
            "",
            "func setupPictureInPicture() {",
            "    // Ensure PiP is supported by current device.",
            "    if AVPictureInPictureController.isPictureInPictureSupported() {",
            "        // Create a new controller, passing the reference to the AVPlayerLayer.",
            "        pipController = AVPictureInPictureController(playerLayer: playerLayer)",
            "        pipController.delegate = self",
            "",
            "        pipPossibleObservation = pipController.observe(\\AVPictureInPictureController.isPictureInPicturePossible,",
            "options: [.initial, .new]) { [weak self] _, change in",
            "            // Update the PiP button's enabled state.",
            "            self?.pipButton.isEnabled = change.newValue ?? false",
            "        }",
            "    } else {",
            "        // PiP isn't supported by the current device. Disable the PiP button.",
            "        pipButton.isEnabled = false",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "This example creates a new ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " instance, passing it a reference to the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFoundation/AVPlayerLayer",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " that presents the video content. The system supports displaying content from an ",
              "type": "text"
            },
            {
              "code": "AVPlayerLayer",
              "type": "codeVoice"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFoundation/AVSampleBufferDisplayLayer",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " in a PiP window.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For PiP functionality to work, maintain a strong reference to the controller object.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "The PiP display doesn’t use the ",
                  "type": "text"
                },
                {
                  "code": "AVPlayerLayer",
                  "type": "codeVoice"
                },
                {
                  "text": " that you passed to ",
                  "type": "text"
                },
                {
                  "code": "AVPictureInPictureController",
                  "type": "codeVoice"
                },
                {
                  "text": ", so AVFoundation stops vending video frames to ",
                  "type": "text"
                },
                {
                  "code": "AVPlayerLayer",
                  "type": "codeVoice"
                },
                {
                  "text": " when PiP mode is active.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "To participate in PiP life-cycle events, your code should adopt the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureControllerDelegate",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol and set itself as the controller’s delegate. Also, use KVO on the controller’s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController/isPictureInPicturePossible",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property to observe whether using PiP mode is possible in the current context, for example, when the system is displaying an active FaceTime window. By observing this property, you can determine when it’s appropriate to change the enabled state of your PiP button.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Publish-the-Now-Playing-State",
          "level": 3,
          "text": "Publish the Now Playing State",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "On tvOS, ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/MediaPlayer/MPNowPlayingSession",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ties your ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFoundation/AVPlayer",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " instances to a session. Your app can have many playing sessions, and in the case of PiP, your player must be tied to a session. You can have a Now Playing session for your PiP content and one for your full-screen content. When you update a session, the system ignores updates from the default ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/MediaPlayer/MPNowPlayingInfoCenter",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", so migrate away from ",
              "type": "text"
            },
            {
              "code": "MPNowPlayingInfoCenter.default()",
              "type": "codeVoice"
            },
            {
              "text": " and switch to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/MediaPlayer/MPNowPlayingSession",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " across your whole app.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The system determines which Now Playing information to display, so publish your information even if the UI isn’t displaying your session — the system might display your session at any moment. For more information about Now Playing metadata, see the Now Playing Metadata Properties topic group at ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/MediaPlayer/MPNowPlayingInfoCenter",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func publishNowPlayingMetadata() {",
            "    nowPlayingSession.nowPlayingInfoCenter.nowPlayingInfo = nowPlayingInfo",
            "    nowPlayingSession.becomeActiveIfPossible()",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Handle-User-Initiated-Requests",
          "level": 3,
          "text": "Handle User-Initiated Requests",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "With the ",
              "type": "text"
            },
            {
              "code": "AVPictureInPictureController",
              "type": "codeVoice"
            },
            {
              "text": " setup complete, add an ",
              "type": "text"
            },
            {
              "code": "@IBAction",
              "type": "codeVoice"
            },
            {
              "text": " method to handle user-initiated requests to start or stop PiP playback.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@IBAction func togglePictureInPictureMode(_ sender: UIButton) {",
            "    if pipController.isPictureInPictureActive {",
            "        pipController.stopPictureInPicture()",
            "    } else {",
            "        pipController.startPictureInPicture()",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "Only begin PiP playback in response to user interaction and never programmatically. The App Store review team rejects apps that fail to follow this requirement.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "anchor": "Restore-Control-to-Your-App",
          "level": 3,
          "text": "Restore Control to Your App",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A user selects the stop PiP affordance in the PiP window to return control to your app. By default, this action terminates playback when control returns to the app. It’s your responsibility to properly restore your video playback interface.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To handle the restore process, implement the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureControllerDelegate/pictureInPictureController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " delegate method and restore your player interface as needed. When the restoration is complete, call the completion handler with a value of ",
              "type": "text"
            },
            {
              "code": "true",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func pictureInPictureController(_ pictureInPictureController: AVPictureInPictureController,",
            "                                restoreUserInterfaceForPictureInPictureStopWithCompletionHandler completionHandler: @escaping (Bool) -> Void) {",
            "    // Restore the user interface.",
            "    completionHandler(true)",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Dismiss-Playback-Controls",
          "level": 3,
          "text": "Dismiss Playback Controls",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "While PiP is active, dismiss playback controls in your main player, and present artwork in the PiP window to indicate that PiP mode is active. To implement this functionality, use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureControllerDelegate/pictureInPictureControllerWillStartPictureInPicture(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureControllerDelegate/pictureInPictureControllerDidStopPictureInPicture(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " delegate methods, and take the required actions.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func pictureInPictureControllerWillStartPictureInPicture(_ pictureInPictureController: AVPictureInPictureController) {",
            "    // Hide the playback controls.",
            "    // Show the placeholder artwork.",
            "}",
            "",
            "func pictureInPictureControllerDidStopPictureInPicture(_ pictureInPictureController: AVPictureInPictureController) {",
            "    // Hide the placeholder artwork.",
            "    // Show the playback controls.",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.avkit/documentation/AVKit": {
      "abstract": [
        {
          "text": "Create user interfaces for media playback, complete with transport controls, chapter navigation, picture-in-picture support, and display of subtitles and closed captions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit",
      "kind": "symbol",
      "role": "collection",
      "title": "AVKit",
      "type": "topic",
      "url": "/documentation/avkit"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController": {
      "abstract": [
        {
          "text": "A controller that responds to user-initiated Picture in Picture playback of video in a floating, resizable window.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPictureInPictureController"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AVPictureInPictureController"
        }
      ],
      "role": "symbol",
      "title": "AVPictureInPictureController",
      "type": "topic",
      "url": "/documentation/avkit/avpictureinpicturecontroller"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController/canStopPictureInPicture": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether Picture in Picture is active and is able to stop.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "canStopPictureInPicture"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController/canStopPictureInPicture",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "canStopPictureInPicture"
        }
      ],
      "role": "symbol",
      "title": "canStopPictureInPicture",
      "type": "topic",
      "url": "/documentation/avkit/avpictureinpicturecontroller/canstoppictureinpicture"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController/isPictureInPicturePossible": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether Picture in Picture playback is currently possible.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isPictureInPicturePossible"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController/isPictureInPicturePossible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "pictureInPicturePossible"
        }
      ],
      "role": "symbol",
      "title": "isPictureInPicturePossible",
      "type": "topic",
      "url": "/documentation/avkit/avpictureinpicturecontroller/ispictureinpicturepossible"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController/isPictureInPictureSupported()": {
      "abstract": [
        {
          "text": "Returns a Boolean value that indicates whether the current device supports Picture in Picture.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isPictureInPictureSupported"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController/isPictureInPictureSupported()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "isPictureInPictureSupported"
        }
      ],
      "role": "symbol",
      "title": "isPictureInPictureSupported()",
      "type": "topic",
      "url": "/documentation/avkit/avpictureinpicturecontroller/ispictureinpicturesupported()"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController/pictureInPictureButtonStartImage": {
      "abstract": [
        {
          "text": "A system-default template image for the button that starts Picture in Picture in your app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "pictureInPictureButtonStartImage"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UIImage",
          "text": "UIImage"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController/pictureInPictureButtonStartImage",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "pictureInPictureButtonStartImage"
        }
      ],
      "role": "symbol",
      "title": "pictureInPictureButtonStartImage",
      "type": "topic",
      "url": "/documentation/avkit/avpictureinpicturecontroller/pictureinpicturebuttonstartimage"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController/pictureInPictureButtonStopImage": {
      "abstract": [
        {
          "text": "A system-default template image for the button that stops Picture in Picture in your app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "pictureInPictureButtonStopImage"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UIImage",
          "text": "UIImage"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController/pictureInPictureButtonStopImage",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "pictureInPictureButtonStopImage"
        }
      ],
      "role": "symbol",
      "title": "pictureInPictureButtonStopImage",
      "type": "topic",
      "url": "/documentation/avkit/avpictureinpicturecontroller/pictureinpicturebuttonstopimage"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureControllerDelegate": {
      "abstract": [
        {
          "text": "A protocol to adopt to respond to Picture in Picture events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPictureInPictureControllerDelegate"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureControllerDelegate",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AVPictureInPictureControllerDelegate"
        }
      ],
      "role": "symbol",
      "title": "AVPictureInPictureControllerDelegate",
      "type": "topic",
      "url": "/documentation/avkit/avpictureinpicturecontrollerdelegate"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureControllerDelegate/pictureInPictureController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)": {
      "abstract": [
        {
          "text": "Tells the delegate to restore the user interface before Picture in Picture stops.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "pictureInPictureController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPictureInPictureController",
          "text": "AVPictureInPictureController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "restoreUserInterfaceForPictureInPictureStopWithCompletionHandler"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureControllerDelegate/pictureInPictureController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:"
        }
      ],
      "role": "symbol",
      "title": "pictureInPictureController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)",
      "type": "topic",
      "url": "/documentation/avkit/avpictureinpicturecontrollerdelegate/pictureinpicturecontroller(_:restoreuserinterfaceforpictureinpicturestopwithcompletionhandler:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureControllerDelegate/pictureInPictureControllerDidStopPictureInPicture(_:)": {
      "abstract": [
        {
          "text": "Tells the delegate that Picture in Picture stopped.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "pictureInPictureControllerDidStopPictureInPicture"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPictureInPictureController",
          "text": "AVPictureInPictureController"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureControllerDelegate/pictureInPictureControllerDidStopPictureInPicture(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "pictureInPictureControllerDidStopPictureInPicture:"
        }
      ],
      "role": "symbol",
      "title": "pictureInPictureControllerDidStopPictureInPicture(_:)",
      "type": "topic",
      "url": "/documentation/avkit/avpictureinpicturecontrollerdelegate/pictureinpicturecontrollerdidstoppictureinpicture(_:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureControllerDelegate/pictureInPictureControllerWillStartPictureInPicture(_:)": {
      "abstract": [
        {
          "text": "Tells the delegate that Picture in Picture is about to start.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "pictureInPictureControllerWillStartPictureInPicture"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPictureInPictureController",
          "text": "AVPictureInPictureController"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureControllerDelegate/pictureInPictureControllerWillStartPictureInPicture(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "pictureInPictureControllerWillStartPictureInPicture:"
        }
      ],
      "role": "symbol",
      "title": "pictureInPictureControllerWillStartPictureInPicture(_:)",
      "type": "topic",
      "url": "/documentation/avkit/avpictureinpicturecontrollerdelegate/pictureinpicturecontrollerwillstartpictureinpicture(_:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController": {
      "abstract": [
        {
          "text": "A view controller that displays content from a player and presents a native user interface to control playback.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPlayerViewController"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AVPlayerViewController"
        }
      ],
      "role": "symbol",
      "title": "AVPlayerViewController",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontroller"
    },
    "doc://com.apple.avkit/documentation/AVKit/accessing-the-camera-while-multitasking-on-ipad": {
      "abstract": [
        {
          "text": "Operate the camera in Split View, Slide Over, Picture in Picture, and Stage Manager modes.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/accessing-the-camera-while-multitasking-on-ipad",
      "kind": "article",
      "role": "article",
      "title": "Accessing the camera while multitasking on iPad",
      "type": "topic",
      "url": "/documentation/avkit/accessing-the-camera-while-multitasking-on-ipad"
    },
    "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-for-video-calls": {
      "abstract": [
        {
          "text": "Add multitasking capability to your video-call apps by using Picture in Picture (PiP).",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-for-video-calls",
      "kind": "article",
      "role": "article",
      "title": "Adopting Picture in Picture for video calls",
      "type": "topic",
      "url": "/documentation/avkit/adopting-picture-in-picture-for-video-calls"
    },
    "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-in-a-standard-player": {
      "abstract": [
        {
          "text": "Add Picture in Picture (PiP) playback to your app using a player view controller.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-in-a-standard-player",
      "kind": "article",
      "role": "article",
      "title": "Adopting Picture in Picture in a Standard Player",
      "type": "topic",
      "url": "/documentation/avkit/adopting-picture-in-picture-in-a-standard-player"
    },
    "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-playback-in-tvos": {
      "abstract": [
        {
          "text": "Add advanced multitasking capabilities to your video apps by using Picture in Picture playback in tvOS.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-playback-in-tvos",
      "kind": "article",
      "role": "sampleCode",
      "title": "Adopting Picture in Picture Playback in tvOS",
      "type": "topic",
      "url": "/documentation/avkit/adopting-picture-in-picture-playback-in-tvos"
    },
    "doc://com.apple.documentation/documentation/AVFoundation/AVPlayer": {
      "abstract": [
        {
          "text": "An object that provides the interface to control the player’s transport behavior.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPlayer"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFoundation/AVPlayer",
      "kind": "symbol",
      "role": "symbol",
      "title": "AVPlayer",
      "type": "topic",
      "url": "/documentation/AVFoundation/AVPlayer"
    },
    "doc://com.apple.documentation/documentation/AVFoundation/AVPlayerLayer": {
      "abstract": [
        {
          "text": "An object that presents the visual contents of a player object.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPlayerLayer"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFoundation/AVPlayerLayer",
      "kind": "symbol",
      "role": "symbol",
      "title": "AVPlayerLayer",
      "type": "topic",
      "url": "/documentation/AVFoundation/AVPlayerLayer"
    },
    "doc://com.apple.documentation/documentation/AVFoundation/AVSampleBufferDisplayLayer": {
      "abstract": [
        {
          "text": "An object that displays compressed or uncompressed video frames.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVSampleBufferDisplayLayer"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFoundation/AVSampleBufferDisplayLayer",
      "kind": "symbol",
      "role": "symbol",
      "title": "AVSampleBufferDisplayLayer",
      "type": "topic",
      "url": "/documentation/AVFoundation/AVSampleBufferDisplayLayer"
    },
    "doc://com.apple.documentation/documentation/AVFoundation/configuring-your-app-for-media-playback": {
      "abstract": [
        {
          "text": "Configure apps to enable standard media playback behavior.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFoundation/configuring-your-app-for-media-playback",
      "kind": "article",
      "role": "article",
      "title": "Configuring your app for media playback",
      "type": "topic",
      "url": "/documentation/AVFoundation/configuring-your-app-for-media-playback"
    },
    "doc://com.apple.documentation/documentation/MediaPlayer/MPNowPlayingInfoCenter": {
      "abstract": [
        {
          "text": "An object for setting the Now Playing information for media that your app plays.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MPNowPlayingInfoCenter"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/MediaPlayer/MPNowPlayingInfoCenter",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPNowPlayingInfoCenter",
      "type": "topic",
      "url": "/documentation/MediaPlayer/MPNowPlayingInfoCenter"
    },
    "doc://com.apple.documentation/documentation/MediaPlayer/MPNowPlayingSession": {
      "abstract": [
        {
          "text": "An object that manages Now Playing information and remote commands for multiple players.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MPNowPlayingSession"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/MediaPlayer/MPNowPlayingSession",
      "kind": "symbol",
      "role": "symbol",
      "title": "MPNowPlayingSession",
      "type": "topic",
      "url": "/documentation/MediaPlayer/MPNowPlayingSession"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Picture-in-Picture",
      "generated": true,
      "identifiers": [
        "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-playback-in-tvos",
        "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-in-a-standard-player",
        "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-for-video-calls",
        "doc://com.apple.avkit/documentation/AVKit/accessing-the-camera-while-multitasking-on-ipad",
        "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController"
      ],
      "title": "Picture in Picture"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Picture-in-Picture",
              "generated": true,
              "identifiers": [
                "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-playback-in-tvos",
                "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-in-a-standard-player",
                "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-for-video-calls",
                "doc://com.apple.avkit/documentation/AVKit/accessing-the-camera-while-multitasking-on-ipad",
                "doc://com.apple.avkit/documentation/AVKit/AVPictureInPictureController"
              ],
              "title": "Picture in Picture"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController~1pictureInPictureButtonStartImage/title",
          "value": "pictureInPictureButtonStartImage"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController~1pictureInPictureButtonStartImage/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "pictureInPictureButtonStartImage"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureControllerDelegate~1pictureInPictureControllerDidStopPictureInPicture(_:)/title",
          "value": "pictureInPictureControllerDidStopPictureInPicture:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureControllerDelegate~1pictureInPictureControllerDidStopPictureInPicture(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "pictureInPictureControllerDidStopPictureInPicture:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController~1canStopPictureInPicture/title",
          "value": "canStopPictureInPicture"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController~1canStopPictureInPicture/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "canStopPictureInPicture"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureControllerDelegate/title",
          "value": "AVPictureInPictureControllerDelegate"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureControllerDelegate/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPictureInPictureControllerDelegate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureControllerDelegate/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPictureInPictureControllerDelegate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFoundation~1AVPlayerLayer/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AVPlayerLayer"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)CALayer",
              "text": "CALayer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController~1pictureInPictureButtonStopImage/title",
          "value": "pictureInPictureButtonStopImage"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController~1pictureInPictureButtonStopImage/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "pictureInPictureButtonStopImage"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFoundation~1AVSampleBufferDisplayLayer/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AVSampleBufferDisplayLayer"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)CALayer",
              "text": "CALayer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1MediaPlayer~1MPNowPlayingInfoCenter/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MPNowPlayingInfoCenter"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController~1isPictureInPicturePossible/title",
          "value": "pictureInPicturePossible"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController~1isPictureInPicturePossible/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "pictureInPicturePossible"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureControllerDelegate~1pictureInPictureControllerWillStartPictureInPicture(_:)/title",
          "value": "pictureInPictureControllerWillStartPictureInPicture:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureControllerDelegate~1pictureInPictureControllerWillStartPictureInPicture(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "pictureInPictureControllerWillStartPictureInPicture:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController/title",
          "value": "AVPictureInPictureController"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPictureInPictureController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPictureInPictureController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureControllerDelegate~1pictureInPictureController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)/title",
          "value": "pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureControllerDelegate~1pictureInPictureController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController/title",
          "value": "AVPlayerViewController"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController~1isPictureInPictureSupported()/title",
          "value": "isPictureInPictureSupported"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPictureInPictureController~1isPictureInPictureSupported()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "isPictureInPictureSupported"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1MediaPlayer~1MPNowPlayingSession/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MPNowPlayingSession"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFoundation~1AVPlayer/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AVPlayer"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/avkit/adopting-picture-in-picture-in-a-custom-player"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/avkit/adopting-picture-in-picture-in-a-custom-player"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
