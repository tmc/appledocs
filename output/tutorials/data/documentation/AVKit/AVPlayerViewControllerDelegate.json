{
  "abstract": [
    {
      "text": "A protocol that defines the methods to implement to respond to player view controller events.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.avkit/documentation/AVKit"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(pl)AVPlayerViewControllerDelegate",
    "fragments": [
      {
        "kind": "keyword",
        "text": "protocol"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "AVPlayerViewControllerDelegate"
      }
    ],
    "modules": [
      {
        "name": "AVKit"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "AVPlayerViewControllerDelegate"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.1",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Protocol",
    "symbolKind": "protocol",
    "title": "AVPlayerViewControllerDelegate"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "tvOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AVPlayerViewControllerDelegate"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObjectProtocol"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.avkit/documentation/AVKit/presenting-content-proposals-in-tvos",
        "doc://com.apple.avkit/documentation/AVKit/working-with-interstitial-content",
        "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-in-a-standard-player"
      ]
    }
  ],
  "references": {
    "doc://com.apple.avkit/documentation/AVKit": {
      "abstract": [
        {
          "text": "Create user interfaces for media playback, complete with transport controls, chapter navigation, picture-in-picture support, and display of subtitles and closed captions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit",
      "kind": "symbol",
      "role": "collection",
      "title": "AVKit",
      "type": "topic",
      "url": "/documentation/avkit"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVCaptureEvent": {
      "abstract": [
        {
          "text": "An object that describes a user interaction with a system hardware button.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVCaptureEvent"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVCaptureEvent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AVCaptureEvent"
        }
      ],
      "role": "symbol",
      "title": "AVCaptureEvent",
      "type": "topic",
      "url": "/documentation/avkit/avcaptureevent"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction": {
      "abstract": [
        {
          "text": "An object that registers handlers to respond to capture events from system hardware buttons.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVCaptureEventInteraction"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AVCaptureEventInteraction"
        }
      ],
      "role": "symbol",
      "title": "AVCaptureEventInteraction",
      "type": "topic",
      "url": "/documentation/avkit/avcaptureeventinteraction"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController": {
      "abstract": [
        {
          "text": "A view controller that displays content from a player and presents a native user interface to control playback.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPlayerViewController"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AVPlayerViewController"
        }
      ],
      "role": "symbol",
      "title": "AVPlayerViewController",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontroller"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerAnimationCoordinator": {
      "abstract": [
        {
          "text": "A protocol that defines the methods to implement to synchronize animations with playback controls’ visibility animation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPlayerViewControllerAnimationCoordinator"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerAnimationCoordinator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AVPlayerViewControllerAnimationCoordinator"
        }
      ],
      "role": "symbol",
      "title": "AVPlayerViewControllerAnimationCoordinator",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrolleranimationcoordinator"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate": {
      "abstract": [
        {
          "text": "A protocol that defines the methods to implement to respond to player view controller events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPlayerViewControllerDelegate"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AVPlayerViewControllerDelegate"
        }
      ],
      "role": "symbol",
      "title": "AVPlayerViewControllerDelegate",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/nextChannelInterstitialViewController(for:)": {
      "abstract": [
        {
          "text": "Asks the delegate for a view controller that describes the layout of the next channel’s interstitial view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "nextChannelInterstitialViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UIViewController",
          "text": "UIViewController"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/nextChannelInterstitialViewController(for:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "nextChannelInterstitialViewControllerForPlayerViewController:"
        }
      ],
      "role": "symbol",
      "title": "nextChannelInterstitialViewController(for:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/nextchannelinterstitialviewcontroller(for:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didAccept:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the user accepts the proposed content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "didAccept"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVContentProposal",
          "text": "AVContentProposal"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didAccept:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:didAcceptContentProposal:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:didAccept:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:didaccept:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didPresent:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the player view controller finishes playing a range of interstitial content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "didPresent"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVInterstitialTimeRange",
          "text": "AVInterstitialTimeRange"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didPresent:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:didPresentInterstitialTimeRange:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:didPresent:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:didpresent:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didReject:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the user rejects the proposed content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "didReject"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVContentProposal",
          "text": "AVContentProposal"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didReject:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:didRejectContentProposal:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:didReject:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:didreject:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didSelect:in:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the user selects a media option from a media selection group.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "didSelect"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVMediaSelectionOption",
          "text": "AVMediaSelectionOption"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "in"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVMediaSelectionGroup",
          "text": "AVMediaSelectionGroup"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didSelect:in:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:didSelectMediaSelectionOption:inMediaSelectionGroup:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:didSelect:in:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:didselect:in:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:failedToStartPictureInPictureWithError:)": {
      "abstract": [
        {
          "text": "Tells the delegate when Picture in Picture fails to start.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "failedToStartPictureInPictureWithError"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:failedToStartPictureInPictureWithError:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:failedToStartPictureInPictureWithError:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:failedToStartPictureInPictureWithError:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:failedtostartpictureinpicturewitherror:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:restoreUserInterfaceForFullScreenExitWithCompletionHandler:)": {
      "abstract": [
        {
          "text": "Tells the delegate to restore the app’s user interface after returning from a full-screen presentation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "restoreUserInterfaceForFullScreenExitWithCompletionHandler"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:restoreUserInterfaceForFullScreenExitWithCompletionHandler:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:restoreUserInterfaceForFullScreenExitWithCompletionHandler:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:restoreuserinterfaceforfullscreenexitwithcompletionhandler:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)": {
      "abstract": [
        {
          "text": "Tells the delegate when Picture in Picture is about to stop so you can restore your app’s user interface.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "restoreUserInterfaceForPictureInPictureStopWithCompletionHandler"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:restoreuserinterfaceforpictureinpicturestopwithcompletionhandler:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:shouldPresent:)": {
      "abstract": [
        {
          "text": "Asks the delegate whether the player view controller presents a content proposal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "shouldPresent"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVContentProposal",
          "text": "AVContentProposal"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:shouldPresent:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:shouldPresentContentProposal:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:shouldPresent:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:shouldpresent:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:skipToNextChannel:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the user wants to skip to the next channel.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "skipToNextChannel"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:skipToNextChannel:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:skipToNextChannel:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:skipToNextChannel:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:skiptonextchannel:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:skipToPreviousChannel:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the user wants to skip to the previous channel.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "skipToPreviousChannel"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:skipToPreviousChannel:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:skipToPreviousChannel:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:skipToPreviousChannel:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:skiptopreviouschannel:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:timeToSeekAfterUserNavigatedFrom:to:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the user skips, scrubs, or otherwise navigates to a new time and wants to resume playback at the target time.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "timeToSeekAfterUserNavigatedFrom"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@CMTime",
          "text": "CMTime"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@CMTime",
          "text": "CMTime"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@CMTime",
          "text": "CMTime"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:timeToSeekAfterUserNavigatedFrom:to:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:timeToSeekAfterUserNavigatedFromTime:toTime:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:timeToSeekAfterUserNavigatedFrom:to:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:timetoseekafterusernavigatedfrom:to:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willBeginFullScreenPresentationWithAnimationCoordinator:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the player view controller is about to start full-screen display.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "willBeginFullScreenPresentationWithAnimationCoordinator"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)UIViewControllerTransitionCoordinator",
          "text": "UIViewControllerTransitionCoordinator"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willBeginFullScreenPresentationWithAnimationCoordinator:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:willBeginFullScreenPresentationWithAnimationCoordinator:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:willbeginfullscreenpresentationwithanimationcoordinator:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willEndFullScreenPresentationWithAnimationCoordinator:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the player view controller is about to end full-screen display.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "willEndFullScreenPresentationWithAnimationCoordinator"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)UIViewControllerTransitionCoordinator",
          "text": "UIViewControllerTransitionCoordinator"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willEndFullScreenPresentationWithAnimationCoordinator:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:willEndFullScreenPresentationWithAnimationCoordinator:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:willendfullscreenpresentationwithanimationcoordinator:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willPresent:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the player view controller is about to start playing a range of interstitial content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "willPresent"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVInterstitialTimeRange",
          "text": "AVInterstitialTimeRange"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willPresent:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:willPresentInterstitialTimeRange:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:willPresent:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:willpresent:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willResumePlaybackAfterUserNavigatedFrom:to:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the user navigates to a new time and playback is about to begin.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "willResumePlaybackAfterUserNavigatedFrom"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@CMTime",
          "text": "CMTime"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@CMTime",
          "text": "CMTime"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willResumePlaybackAfterUserNavigatedFrom:to:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:willResumePlaybackAfterUserNavigatedFromTime:toTime:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:willResumePlaybackAfterUserNavigatedFrom:to:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:willresumeplaybackafterusernavigatedfrom:to:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willTransitionToVisibilityOfTransportBar:with:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the transport bar’s visibility is about to change.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "willTransitionToVisibilityOfTransportBar"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)AVPlayerViewControllerAnimationCoordinator",
          "text": "AVPlayerViewControllerAnimationCoordinator"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willTransitionToVisibilityOfTransportBar:with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:willTransitionToVisibilityOfTransportBar:withAnimationCoordinator:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController(_:willTransitionToVisibilityOfTransportBar:with:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller(_:willtransitiontovisibilityoftransportbar:with:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController:didSelectExternalSubtitleOptionLanguage:": {
      "abstract": [
        {
          "text": "Tells the delegate when the user selects a specific subtitle option.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "playerViewController:didSelectExternalSubtitleOptionLanguage:"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController:didSelectExternalSubtitleOptionLanguage:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewController:didSelectExternalSubtitleOptionLanguage:"
        }
      ],
      "role": "symbol",
      "title": "playerViewController:didSelectExternalSubtitleOptionLanguage:",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontroller:didselectexternalsubtitleoptionlanguage:"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidEndDismissalTransition(_:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the player view controller ends its dismissal transition.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewControllerDidEndDismissalTransition"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidEndDismissalTransition(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewControllerDidEndDismissalTransition:"
        }
      ],
      "role": "symbol",
      "title": "playerViewControllerDidEndDismissalTransition(_:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontrollerdidenddismissaltransition(_:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidStartPictureInPicture(_:)": {
      "abstract": [
        {
          "text": "Tells the delegate when Picture in Picture starts.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewControllerDidStartPictureInPicture"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidStartPictureInPicture(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewControllerDidStartPictureInPicture:"
        }
      ],
      "role": "symbol",
      "title": "playerViewControllerDidStartPictureInPicture(_:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontrollerdidstartpictureinpicture(_:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidStopPictureInPicture(_:)": {
      "abstract": [
        {
          "text": "Tells the delegate when Picture in Picture stops.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewControllerDidStopPictureInPicture"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidStopPictureInPicture(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewControllerDidStopPictureInPicture:"
        }
      ],
      "role": "symbol",
      "title": "playerViewControllerDidStopPictureInPicture(_:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontrollerdidstoppictureinpicture(_:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart(_:)": {
      "abstract": [
        {
          "text": "Asks the delegate whether the player view controller automatically dismisses itself when Picture in Picture starts.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:"
        }
      ],
      "role": "symbol",
      "title": "playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart(_:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontrollershouldautomaticallydismissatpictureinpicturestart(_:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerShouldDismiss(_:)": {
      "abstract": [
        {
          "text": "Asks the delegate object whether the player view controller dismisses itself upon request.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewControllerShouldDismiss"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerShouldDismiss(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewControllerShouldDismiss:"
        }
      ],
      "role": "symbol",
      "title": "playerViewControllerShouldDismiss(_:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontrollershoulddismiss(_:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillBeginDismissalTransition(_:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the player view controller is about to start its dismissal transition.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewControllerWillBeginDismissalTransition"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillBeginDismissalTransition(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewControllerWillBeginDismissalTransition:"
        }
      ],
      "role": "symbol",
      "title": "playerViewControllerWillBeginDismissalTransition(_:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontrollerwillbegindismissaltransition(_:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillStartPictureInPicture(_:)": {
      "abstract": [
        {
          "text": "Tells the delegate when Picture in Picture is about to start.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewControllerWillStartPictureInPicture"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillStartPictureInPicture(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewControllerWillStartPictureInPicture:"
        }
      ],
      "role": "symbol",
      "title": "playerViewControllerWillStartPictureInPicture(_:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontrollerwillstartpictureinpicture(_:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillStopPictureInPicture(_:)": {
      "abstract": [
        {
          "text": "Tells the delegate when Picture in Picture is about to stop.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "playerViewControllerWillStopPictureInPicture"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillStopPictureInPicture(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "playerViewControllerWillStopPictureInPicture:"
        }
      ],
      "role": "symbol",
      "title": "playerViewControllerWillStopPictureInPicture(_:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/playerviewcontrollerwillstoppictureinpicture(_:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/previousChannelInterstitialViewController(for:)": {
      "abstract": [
        {
          "text": "Asks the delegate for a view controller that describes the layout of the previous channel’s interstitial view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "previousChannelInterstitialViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UIViewController",
          "text": "UIViewController"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/previousChannelInterstitialViewController(for:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "previousChannelInterstitialViewControllerForPlayerViewController:"
        }
      ],
      "role": "symbol",
      "title": "previousChannelInterstitialViewController(for:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/previouschannelinterstitialviewcontroller(for:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/skipToNextItem(for:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the user requests skipping to the next item in the timeline.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "skipToNextItem"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/skipToNextItem(for:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "skipToNextItemForPlayerViewController:"
        }
      ],
      "role": "symbol",
      "title": "skipToNextItem(for:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/skiptonextitem(for:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/skipToPreviousItem(for:)": {
      "abstract": [
        {
          "text": "Tells the delegate when the user requests skipping to the previous item in the timeline.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "skipToPreviousItem"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVPlayerViewController",
          "text": "AVPlayerViewController"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/skipToPreviousItem(for:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "skipToPreviousItemForPlayerViewController:"
        }
      ],
      "role": "symbol",
      "title": "skipToPreviousItem(for:)",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate/skiptopreviousitem(for:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-in-a-standard-player": {
      "abstract": [
        {
          "text": "Add Picture in Picture (PiP) playback to your app using a player view controller.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/adopting-picture-in-picture-in-a-standard-player",
      "kind": "article",
      "role": "article",
      "title": "Adopting Picture in Picture in a Standard Player",
      "type": "topic",
      "url": "/documentation/avkit/adopting-picture-in-picture-in-a-standard-player"
    },
    "doc://com.apple.avkit/documentation/AVKit/playing-video-content-in-a-standard-user-interface": {
      "abstract": [
        {
          "text": "Play media full screen, embedded inline, or in a floating Picture in Picture (PiP) window using a player view controller.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/playing-video-content-in-a-standard-user-interface",
      "kind": "article",
      "role": "sampleCode",
      "title": "Playing video content in a standard user interface",
      "type": "topic",
      "url": "/documentation/avkit/playing-video-content-in-a-standard-user-interface"
    },
    "doc://com.apple.avkit/documentation/AVKit/presenting-content-proposals-in-tvos": {
      "abstract": [
        {
          "text": "Display a preview of an upcoming media item at the conclusion of the currently playing media item.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/presenting-content-proposals-in-tvos",
      "kind": "article",
      "role": "article",
      "title": "Presenting Content Proposals in tvOS",
      "type": "topic",
      "url": "/documentation/avkit/presenting-content-proposals-in-tvos"
    },
    "doc://com.apple.avkit/documentation/AVKit/working-with-interstitial-content": {
      "abstract": [
        {
          "text": "Present additional content alongside your main media presentation using HTTP Live Streaming support.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/working-with-interstitial-content",
      "kind": "article",
      "role": "article",
      "title": "Working with Interstitial Content",
      "type": "topic",
      "url": "/documentation/avkit/working-with-interstitial-content"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSObject": {
      "abstract": [
        {
          "text": "The group of methods that are fundamental to all Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObjectProtocol",
      "type": "topic",
      "url": "/documentation/objectivec/nsobjectprotocol"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/c:objc(pl)NSObject"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "iOS-Playback-and-Capture",
      "generated": true,
      "identifiers": [
        "doc://com.apple.avkit/documentation/AVKit/playing-video-content-in-a-standard-user-interface",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController",
        "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction",
        "doc://com.apple.avkit/documentation/AVKit/AVCaptureEvent"
      ],
      "title": "iOS Playback and Capture"
    }
  ],
  "topicSections": [
    {
      "anchor": "Dismissing-the-Player-View-Controller",
      "identifiers": [
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerShouldDismiss(_:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillBeginDismissalTransition(_:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidEndDismissalTransition(_:)"
      ],
      "title": "Dismissing the Player View Controller"
    },
    {
      "anchor": "Responding-to-Picture-in-Picture-Life-Cycle-Events",
      "identifiers": [
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart(_:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillStartPictureInPicture(_:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidStartPictureInPicture(_:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:failedToStartPictureInPictureWithError:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillStopPictureInPicture(_:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidStopPictureInPicture(_:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)"
      ],
      "title": "Responding to Picture in Picture Life Cycle Events"
    },
    {
      "anchor": "Responding-to-Navigation-Events",
      "identifiers": [
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:timeToSeekAfterUserNavigatedFrom:to:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willResumePlaybackAfterUserNavigatedFrom:to:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/skipToPreviousItem(for:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/skipToNextItem(for:)"
      ],
      "title": "Responding to Navigation Events"
    },
    {
      "anchor": "Responding-to-Interstitial-Content-Playback-Events",
      "identifiers": [
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willPresent:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didPresent:)"
      ],
      "title": "Responding to Interstitial Content Playback Events"
    },
    {
      "anchor": "Responding-to-Content-Proposals",
      "identifiers": [
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:shouldPresent:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didAccept:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didReject:)"
      ],
      "title": "Responding to Content Proposals"
    },
    {
      "anchor": "Responding-to-Media-Selection",
      "identifiers": [
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didSelect:in:)"
      ],
      "title": "Responding to Media Selection"
    },
    {
      "anchor": "Responding-to-Transport-Bar-Changes",
      "identifiers": [
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willTransitionToVisibilityOfTransportBar:with:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerAnimationCoordinator"
      ],
      "title": "Responding to Transport Bar Changes"
    },
    {
      "anchor": "Responding-to-Channel-Changes",
      "identifiers": [
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:skipToNextChannel:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:skipToPreviousChannel:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/nextChannelInterstitialViewController(for:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/previousChannelInterstitialViewController(for:)"
      ],
      "title": "Responding to Channel Changes"
    },
    {
      "anchor": "Responding-to-Full-Screen-Presentations",
      "identifiers": [
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willBeginFullScreenPresentationWithAnimationCoordinator:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willEndFullScreenPresentationWithAnimationCoordinator:)",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:restoreUserInterfaceForFullScreenExitWithCompletionHandler:)"
      ],
      "title": "Responding to Full-Screen Presentations"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "9.0",
              "name": "iOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "9.0",
              "name": "iPadOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "13.1",
              "name": "Mac Catalyst",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "9.0",
              "name": "tvOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "1.0",
              "name": "visionOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Protocol"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "AVPlayerViewControllerDelegate"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "protocol"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewControllerDelegate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewControllerDelegate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.avkit/documentation/AVKit"
              ]
            ]
          }
        },
        {
          "op": "replace",
          "path": "/topicSections",
          "value": [
            {
              "anchor": "Dismissing-the-Player-View-Controller",
              "identifiers": [
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerShouldDismiss(_:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillBeginDismissalTransition(_:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidEndDismissalTransition(_:)"
              ],
              "title": "Dismissing the Player View Controller"
            },
            {
              "anchor": "Responding-to-Picture-in-Picture-Life-Cycle-Events",
              "identifiers": [
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart(_:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillStartPictureInPicture(_:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidStartPictureInPicture(_:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:failedToStartPictureInPictureWithError:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerWillStopPictureInPicture(_:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewControllerDidStopPictureInPicture(_:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)"
              ],
              "title": "Responding to Picture in Picture Life Cycle Events"
            },
            {
              "anchor": "Responding-to-Navigation-Events",
              "identifiers": [
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:timeToSeekAfterUserNavigatedFrom:to:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willResumePlaybackAfterUserNavigatedFrom:to:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/skipToPreviousItem(for:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/skipToNextItem(for:)"
              ],
              "title": "Responding to Navigation Events"
            },
            {
              "anchor": "Responding-to-Interstitial-Content-Playback-Events",
              "identifiers": [
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willPresent:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didPresent:)"
              ],
              "title": "Responding to Interstitial Content Playback Events"
            },
            {
              "anchor": "Responding-to-Content-Proposals",
              "identifiers": [
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:shouldPresent:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didAccept:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didReject:)"
              ],
              "title": "Responding to Content Proposals"
            },
            {
              "anchor": "Responding-to-Media-Selection",
              "identifiers": [
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:didSelect:in:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController:didSelectExternalSubtitleOptionLanguage:"
              ],
              "title": "Responding to Media Selection"
            },
            {
              "anchor": "Responding-to-Transport-Bar-Changes",
              "identifiers": [
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willTransitionToVisibilityOfTransportBar:with:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerAnimationCoordinator"
              ],
              "title": "Responding to Transport Bar Changes"
            },
            {
              "anchor": "Responding-to-Channel-Changes",
              "identifiers": [
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:skipToNextChannel:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:skipToPreviousChannel:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/nextChannelInterstitialViewController(for:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/previousChannelInterstitialViewController(for:)"
              ],
              "title": "Responding to Channel Changes"
            },
            {
              "anchor": "Responding-to-Full-Screen-Presentations",
              "identifiers": [
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willBeginFullScreenPresentationWithAnimationCoordinator:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:willEndFullScreenPresentationWithAnimationCoordinator:)",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate/playerViewController(_:restoreUserInterfaceForFullScreenExitWithCompletionHandler:)"
              ],
              "title": "Responding to Full-Screen Presentations"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/relationshipsSections",
          "value": [
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(pl)NSObject"
              ],
              "kind": "relationships",
              "title": "Inherits From",
              "type": "inheritsFrom"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "iOS-Playback-and-Capture",
              "generated": true,
              "identifiers": [
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController",
                "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction",
                "doc://com.apple.avkit/documentation/AVKit/AVCaptureEvent"
              ],
              "title": "iOS Playback and Capture"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "iOS",
                  "iPadOS",
                  "Mac Catalyst",
                  "tvOS",
                  "visionOS"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "@protocol"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "AVPlayerViewControllerDelegate"
                  },
                  {
                    "kind": "text",
                    "text": " <"
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(pl)NSObject",
                    "text": "NSObject"
                  },
                  {
                    "kind": "text",
                    "text": ">"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1skipToPreviousItem(for:)/title",
          "value": "skipToPreviousItemForPlayerViewController:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1skipToPreviousItem(for:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "skipToPreviousItemForPlayerViewController:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerWillStartPictureInPicture(_:)/title",
          "value": "playerViewControllerWillStartPictureInPicture:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerWillStartPictureInPicture(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewControllerWillStartPictureInPicture:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerAnimationCoordinator/title",
          "value": "AVPlayerViewControllerAnimationCoordinator"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerAnimationCoordinator/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewControllerAnimationCoordinator"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerAnimationCoordinator/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewControllerAnimationCoordinator"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:didSelect:in:)/title",
          "value": "playerViewController:didSelectMediaSelectionOption:inMediaSelectionGroup:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:didSelect:in:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:didSelectMediaSelectionOption:inMediaSelectionGroup:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerWillBeginDismissalTransition(_:)/title",
          "value": "playerViewControllerWillBeginDismissalTransition:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerWillBeginDismissalTransition(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewControllerWillBeginDismissalTransition:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart(_:)/title",
          "value": "playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:timeToSeekAfterUserNavigatedFrom:to:)/title",
          "value": "playerViewController:timeToSeekAfterUserNavigatedFromTime:toTime:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:timeToSeekAfterUserNavigatedFrom:to:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:timeToSeekAfterUserNavigatedFromTime:toTime:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1skipToNextItem(for:)/title",
          "value": "skipToNextItemForPlayerViewController:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1skipToNextItem(for:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "skipToNextItemForPlayerViewController:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEvent/title",
          "value": "AVCaptureEvent"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEvent/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVCaptureEvent"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEvent/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVCaptureEvent"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:didAccept:)/title",
          "value": "playerViewController:didAcceptContentProposal:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:didAccept:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:didAcceptContentProposal:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:failedToStartPictureInPictureWithError:)/title",
          "value": "playerViewController:failedToStartPictureInPictureWithError:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:failedToStartPictureInPictureWithError:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:failedToStartPictureInPictureWithError:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:didPresent:)/title",
          "value": "playerViewController:didPresentInterstitialTimeRange:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:didPresent:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:didPresentInterstitialTimeRange:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)/title",
          "value": "playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerDidStartPictureInPicture(_:)/title",
          "value": "playerViewControllerDidStartPictureInPicture:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerDidStartPictureInPicture(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewControllerDidStartPictureInPicture:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:restoreUserInterfaceForFullScreenExitWithCompletionHandler:)/title",
          "value": "playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:restoreUserInterfaceForFullScreenExitWithCompletionHandler:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSObject/title",
          "value": "NSObject"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController/title",
          "value": "AVPlayerViewController"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1previousChannelInterstitialViewController(for:)/title",
          "value": "previousChannelInterstitialViewControllerForPlayerViewController:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1previousChannelInterstitialViewController(for:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "previousChannelInterstitialViewControllerForPlayerViewController:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:willBeginFullScreenPresentationWithAnimationCoordinator:)/title",
          "value": "playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:willBeginFullScreenPresentationWithAnimationCoordinator:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEventInteraction/title",
          "value": "AVCaptureEventInteraction"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEventInteraction/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVCaptureEventInteraction"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEventInteraction/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVCaptureEventInteraction"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerWillStopPictureInPicture(_:)/title",
          "value": "playerViewControllerWillStopPictureInPicture:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerWillStopPictureInPicture(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewControllerWillStopPictureInPicture:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:didReject:)/title",
          "value": "playerViewController:didRejectContentProposal:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:didReject:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:didRejectContentProposal:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:willPresent:)/title",
          "value": "playerViewController:willPresentInterstitialTimeRange:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:willPresent:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:willPresentInterstitialTimeRange:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:willEndFullScreenPresentationWithAnimationCoordinator:)/title",
          "value": "playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:willEndFullScreenPresentationWithAnimationCoordinator:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:shouldPresent:)/title",
          "value": "playerViewController:shouldPresentContentProposal:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:shouldPresent:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:shouldPresentContentProposal:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerShouldDismiss(_:)/title",
          "value": "playerViewControllerShouldDismiss:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerShouldDismiss(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewControllerShouldDismiss:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:skipToNextChannel:)/title",
          "value": "playerViewController:skipToNextChannel:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:skipToNextChannel:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:skipToNextChannel:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:skipToPreviousChannel:)/title",
          "value": "playerViewController:skipToPreviousChannel:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:skipToPreviousChannel:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:skipToPreviousChannel:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1nextChannelInterstitialViewController(for:)/title",
          "value": "nextChannelInterstitialViewControllerForPlayerViewController:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1nextChannelInterstitialViewController(for:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "nextChannelInterstitialViewControllerForPlayerViewController:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerDidStopPictureInPicture(_:)/title",
          "value": "playerViewControllerDidStopPictureInPicture:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerDidStopPictureInPicture(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewControllerDidStopPictureInPicture:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerDidEndDismissalTransition(_:)/title",
          "value": "playerViewControllerDidEndDismissalTransition:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewControllerDidEndDismissalTransition(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewControllerDidEndDismissalTransition:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:willResumePlaybackAfterUserNavigatedFrom:to:)/title",
          "value": "playerViewController:willResumePlaybackAfterUserNavigatedFromTime:toTime:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:willResumePlaybackAfterUserNavigatedFrom:to:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:willResumePlaybackAfterUserNavigatedFromTime:toTime:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:willTransitionToVisibilityOfTransportBar:with:)/title",
          "value": "playerViewController:willTransitionToVisibilityOfTransportBar:withAnimationCoordinator:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate~1playerViewController(_:willTransitionToVisibilityOfTransportBar:with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "playerViewController:willTransitionToVisibilityOfTransportBar:withAnimationCoordinator:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate/title",
          "value": "AVPlayerViewControllerDelegate"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewControllerDelegate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewControllerDelegate"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/avkit/avplayerviewcontrollerdelegate"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/avkit/avplayerviewcontrollerdelegate"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
