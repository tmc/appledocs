{
  "abstract": [
    {
      "text": "An object that registers handlers to respond to capture events from system hardware buttons.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.avkit/documentation/AVKit"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(cs)AVCaptureEventInteraction",
    "fragments": [
      {
        "kind": "keyword",
        "text": "class"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "AVCaptureEventInteraction"
      }
    ],
    "modules": [
      {
        "name": "AVKit"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "AVCaptureEventInteraction"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.2",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.2",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.2",
        "name": "Mac Catalyst",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Class",
    "symbolKind": "class",
    "title": "AVCaptureEventInteraction"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:ScM",
              "kind": "attribute",
              "preciseIdentifier": "s:ScM",
              "text": "MainActor"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "class"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AVCaptureEventInteraction"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The system Camera app allows people to perform capture functions by pressing hardware buttons on their iOS device. UIKit apps can add similar functionality by using this type to register handlers that respond to interactions from device hardware.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "In SwiftUI, respond to capture events from hardware buttons using ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/onCameraCaptureEvent(isEnabled:action:)",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " and ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/onCameraCaptureEvent(isEnabled:primaryAction:secondaryAction:)",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " instead.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "The following example shows how to add a handler that captures a photo when a user presses a hardware button on their device.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "class CameraViewController: UIViewController {",
            "    ",
            "    /// An object that manages the camera functionality.",
            "    private let camera = CameraModel()",
            "    ",
            "    /// A capture event interaction to handle hardware button presses.",
            "    private var eventInteraction: AVCaptureEventInteraction?",
            "    ",
            "    override func viewDidLoad() {",
            "        super.viewDidLoad()",
            "        // Configure the app to take a photo on hardware button press.",
            "        configureHardwareInteraction()",
            "    }",
            "    ",
            "    private func configureHardwareInteraction() {",
            "        // Create a new capture event interaction with a handler that captures a photo.",
            "        let interaction = AVCaptureEventInteraction { [weak self] event in",
            "            // Capture a photo on \"press up\" of a hardware button.",
            "            if event.phase == .ended {",
            "                self?.camera.capturePhoto()",
            "            }",
            "        }",
            "        // Add the interaction to the view controller's view.",
            "        view.addInteraction(interaction)",
            "        eventInteraction = interaction",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The event handler queries the capture event to determine its phase, and when the interaction ends, captures a photo.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "You can only use this API for capture use cases. The system sends capture events only to apps that actively use the camera. Backgrounded capture apps, and apps not performing capture, donâ€™t receive events.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            },
            {
              "inlineContent": [
                {
                  "text": "Adopting this API overrides default hardware button behavior, so apps must always respond appropriately to any events received. Failing to handle events results in a nonfunctional button that provides a poor user experience. If your app is temporarily unable to handle events, disable the interaction by setting its ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction/isEnabled",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " property to ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/swift/false",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ", which restores the system button behavior.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.avkit/documentation/AVKit": {
      "abstract": [
        {
          "text": "Create user interfaces for media playback, complete with transport controls, chapter navigation, picture-in-picture support, and display of subtitles and closed captions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit",
      "kind": "symbol",
      "role": "collection",
      "title": "AVKit",
      "type": "topic",
      "url": "/documentation/avkit"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVCaptureEvent": {
      "abstract": [
        {
          "text": "An object that describes a user interaction with a system hardware button.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVCaptureEvent"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVCaptureEvent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AVCaptureEvent"
        }
      ],
      "role": "symbol",
      "title": "AVCaptureEvent",
      "type": "topic",
      "url": "/documentation/avkit/avcaptureevent"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction": {
      "abstract": [
        {
          "text": "An object that registers handlers to respond to capture events from system hardware buttons.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVCaptureEventInteraction"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AVCaptureEventInteraction"
        }
      ],
      "role": "symbol",
      "title": "AVCaptureEventInteraction",
      "type": "topic",
      "url": "/documentation/avkit/avcaptureeventinteraction"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction/init(handler:)": {
      "abstract": [
        {
          "text": "Creates a capture event interaction with a handler that responds to presses of hardware buttons.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "handler"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVCaptureEvent",
          "text": "AVCaptureEvent"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction/init(handler:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "initWithEventHandler:"
        }
      ],
      "role": "symbol",
      "title": "init(handler:)",
      "type": "topic",
      "url": "/documentation/avkit/avcaptureeventinteraction/init(handler:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction/init(primary:secondary:)": {
      "abstract": [
        {
          "text": "Creates a capture event interaction with handlers that respond independently to presses of hardware buttons.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "primary"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVCaptureEvent",
          "text": "AVCaptureEvent"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "secondary"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVCaptureEvent",
          "text": "AVCaptureEvent"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction/init(primary:secondary:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "initWithPrimaryEventHandler:secondaryEventHandler:"
        }
      ],
      "role": "symbol",
      "title": "init(primary:secondary:)",
      "type": "topic",
      "url": "/documentation/avkit/avcaptureeventinteraction/init(primary:secondary:)"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction/isEnabled": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether this capture event interaction is in an enabled state.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isEnabled"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction/isEnabled",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "enabled"
        }
      ],
      "role": "symbol",
      "title": "isEnabled",
      "type": "topic",
      "url": "/documentation/avkit/avcaptureeventinteraction/isenabled"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController": {
      "abstract": [
        {
          "text": "A view controller that displays content from a player and presents a native user interface to control playback.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPlayerViewController"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AVPlayerViewController"
        }
      ],
      "role": "symbol",
      "title": "AVPlayerViewController",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontroller"
    },
    "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate": {
      "abstract": [
        {
          "text": "A protocol that defines the methods to implement to respond to player view controller events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVPlayerViewControllerDelegate"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AVPlayerViewControllerDelegate"
        }
      ],
      "role": "symbol",
      "title": "AVPlayerViewControllerDelegate",
      "type": "topic",
      "url": "/documentation/avkit/avplayerviewcontrollerdelegate"
    },
    "doc://com.apple.avkit/documentation/AVKit/playing-video-content-in-a-standard-user-interface": {
      "abstract": [
        {
          "text": "Play media full screen, embedded inline, or in a floating Picture in Picture (PiP) window using a player view controller.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.avkit/documentation/AVKit/playing-video-content-in-a-standard-user-interface",
      "kind": "article",
      "role": "sampleCode",
      "title": "Playing video content in a standard user interface",
      "type": "topic",
      "url": "/documentation/avkit/playing-video-content-in-a-standard-user-interface"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/View/onCameraCaptureEvent(isEnabled:action:)": {
      "abstract": [
        {
          "text": "Used to register an action triggered by system capture events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "onCameraCaptureEvent"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "isEnabled"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": " = true, "
        },
        {
          "kind": "externalParam",
          "text": "action"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "@escaping"
        },
        {
          "kind": "text",
          "text": " ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVCaptureEvent",
          "text": "AVCaptureEvent"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        },
        {
          "kind": "text",
          "text": "\n"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/onCameraCaptureEvent(isEnabled:action:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "onCameraCaptureEvent(isEnabled:action:)",
      "type": "topic",
      "url": "/documentation/SwiftUI/View/onCameraCaptureEvent(isEnabled:action:)"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/View/onCameraCaptureEvent(isEnabled:primaryAction:secondaryAction:)": {
      "abstract": [
        {
          "text": "Used to register actions triggered by system capture events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "onCameraCaptureEvent"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "isEnabled"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": " = true, "
        },
        {
          "kind": "externalParam",
          "text": "primaryAction"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "@escaping"
        },
        {
          "kind": "text",
          "text": " ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVCaptureEvent",
          "text": "AVCaptureEvent"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "secondaryAction"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "@escaping"
        },
        {
          "kind": "text",
          "text": " ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVCaptureEvent",
          "text": "AVCaptureEvent"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        },
        {
          "kind": "text",
          "text": "\n"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/onCameraCaptureEvent(isEnabled:primaryAction:secondaryAction:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "onCameraCaptureEvent(isEnabled:primaryAction:secondaryAction:)",
      "type": "topic",
      "url": "/documentation/SwiftUI/View/onCameraCaptureEvent(isEnabled:primaryAction:secondaryAction:)"
    },
    "doc://com.apple.documentation/documentation/swift/false": {
      "abstract": [
        {
          "text": "A false value.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/swift/false",
      "kind": "symbol",
      "role": "symbol",
      "title": "false",
      "type": "topic",
      "url": "/documentation/swift/false"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/c:objc(cs)NSObject": {
      "abstract": [
        {
          "text": "The root class of most Objective-C class hierarchies, from which subclasses inherit a basic interface to the runtime system and the ability to behave as Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSObject"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObject",
      "type": "topic",
      "url": "/documentation/objectivec/nsobject"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSObject": {
      "abstract": [
        {
          "text": "The group of methods that are fundamental to all Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObjectProtocol",
      "type": "topic",
      "url": "/documentation/objectivec/nsobjectprotocol"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UIInteraction": {
      "abstract": [
        {
          "text": "The protocol that an interaction implements to access the view that owns it.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIInteraction"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UIInteraction",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIInteraction",
      "type": "topic",
      "url": "/documentation/UIKit/UIInteraction"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:ScM": {
      "abstract": [
        {
          "text": "A singleton actor whose executor is equivalent to the main dispatch queue.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@globalActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "final"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "actor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MainActor"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:ScM",
      "kind": "symbol",
      "role": "symbol",
      "title": "MainActor",
      "type": "topic",
      "url": "/documentation/Swift/MainActor"
    },
    "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomDebugStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s7CVarArgP": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as elements of a C `va_list`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s7CVarArgP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/Swift/CVarArg"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    },
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s7CVarArgP",
        "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
        "doc://com.externally.resolved.symbol/s:s8SendableP",
        "doc://com.externally.resolved.symbol/c:objc(pl)UIInteraction"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "iOS-Playback-and-Capture",
      "generated": true,
      "identifiers": [
        "doc://com.apple.avkit/documentation/AVKit/playing-video-content-in-a-standard-user-interface",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController",
        "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate",
        "doc://com.apple.avkit/documentation/AVKit/AVCaptureEvent"
      ],
      "title": "iOS Playback and Capture"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-an-interaction",
      "identifiers": [
        "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction/init(handler:)",
        "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction/init(primary:secondary:)"
      ],
      "title": "Creating an interaction"
    },
    {
      "anchor": "Inspecting-the-interaction",
      "identifiers": [
        "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction/isEnabled"
      ],
      "title": "Inspecting the interaction"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "17.2",
              "name": "iOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "17.2",
              "name": "iPadOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "17.2",
              "name": "Mac Catalyst",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Class"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "AVCaptureEventInteraction"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "class"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVCaptureEventInteraction"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVCaptureEventInteraction"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.avkit/documentation/AVKit"
              ]
            ]
          }
        },
        {
          "op": "replace",
          "path": "/topicSections",
          "value": [
            {
              "anchor": "Creating-an-interaction",
              "identifiers": [
                "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction/init(handler:)",
                "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction/init(primary:secondary:)"
              ],
              "title": "Creating an interaction"
            },
            {
              "anchor": "Inspecting-the-interaction",
              "identifiers": [
                "doc://com.apple.avkit/documentation/AVKit/AVCaptureEventInteraction/isEnabled"
              ],
              "title": "Inspecting the interaction"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/relationshipsSections",
          "value": [
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
              ],
              "kind": "relationships",
              "title": "Inherits From",
              "type": "inheritsFrom"
            },
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(pl)UIInteraction"
              ],
              "kind": "relationships",
              "title": "Conforms To",
              "type": "conformsTo"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "iOS-Playback-and-Capture",
              "generated": true,
              "identifiers": [
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewController",
                "doc://com.apple.avkit/documentation/AVKit/AVPlayerViewControllerDelegate",
                "doc://com.apple.avkit/documentation/AVKit/AVCaptureEvent"
              ],
              "title": "iOS Playback and Capture"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "iOS",
                  "iPadOS",
                  "Mac Catalyst",
                  "visionOS"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "@interface"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "AVCaptureEventInteraction"
                  },
                  {
                    "kind": "text",
                    "text": " : "
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(cs)NSObject",
                    "text": "NSObject"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEventInteraction~1init(primary:secondary:)/title",
          "value": "initWithPrimaryEventHandler:secondaryEventHandler:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEventInteraction~1init(primary:secondary:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "initWithPrimaryEventHandler:secondaryEventHandler:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEvent/title",
          "value": "AVCaptureEvent"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEvent/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVCaptureEvent"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEvent/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVCaptureEvent"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEventInteraction/title",
          "value": "AVCaptureEventInteraction"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEventInteraction/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVCaptureEventInteraction"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEventInteraction/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVCaptureEventInteraction"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEventInteraction~1isEnabled/title",
          "value": "enabled"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEventInteraction~1isEnabled/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "enabled"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate/title",
          "value": "AVPlayerViewControllerDelegate"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewControllerDelegate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewControllerDelegate/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewControllerDelegate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UIInteraction/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIInteraction"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEventInteraction~1init(handler:)/title",
          "value": "initWithEventHandler:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVCaptureEventInteraction~1init(handler:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "initWithEventHandler:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController/title",
          "value": "AVPlayerViewController"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.avkit~1documentation~1AVKit~1AVPlayerViewController/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "AVPlayerViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSObject/title",
          "value": "NSObject"
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/avkit/avcaptureeventinteraction"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/avkit/avcaptureeventinteraction"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
