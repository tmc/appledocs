{
  "abstract": [
    {
      "text": "Sets the style for buttons within this view to a button style with a",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "custom appearance and standard interaction behavior.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.ManagedAppDistribution/documentation/ManagedAppDistribution",
        "doc://com.apple.ManagedAppDistribution/documentation/ManagedAppDistribution/ManagedAppView"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.ManagedAppDistribution/documentation/ManagedAppDistribution/ManagedAppView/buttonStyle(_:)-6r3d6"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI4ViewPAAE11buttonStyleyQrqd__AA06ButtonE0Rd__lF::SYNTHESIZED::s:31_ManagedAppDistribution_SwiftUI0aB4ViewV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "buttonStyle"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "S"
      },
      {
        "kind": "text",
        "text": ">("
      },
      {
        "kind": "typeIdentifier",
        "text": "S"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "keyword",
        "text": "some"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4ViewP",
        "text": "View"
      }
    ],
    "modules": [
      {
        "name": "ManagedAppDistribution",
        "relatedModules": [
          "SwiftUI"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "buttonStyle(_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "nonisolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "buttonStyle"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "S"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "style"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "text": "S"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "keyword",
              "text": "some"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "S"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI11ButtonStyleP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI11ButtonStyleP",
              "text": "ButtonStyle"
            },
            {
              "kind": "text",
              "text": "\n"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use this modifier to set a specific style for all button instances",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "within a view:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "HStack {",
            "    Button(\"Sign In\", action: signIn)",
            "    Button(\"Register\", action: register)",
            "}",
            ".buttonStyle(.bordered)"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "You can also use this modifier to set the style for controls that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "acquire a button style through composition, like the ",
              "type": "text"
            },
            {
              "code": "Menu",
              "type": "codeVoice"
            },
            {
              "text": " and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "Toggle",
              "type": "codeVoice"
            },
            {
              "text": " views in the following example:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "VStack {",
            "    Menu(\"Terms and Conditions\") {",
            "        Button(\"Open in Preview\", action: openInPreview)",
            "        Button(\"Save as PDF\", action: saveAsPDF)",
            "    }",
            "    Toggle(\"Remember Password\", isOn: $isToggleOn)",
            "    Toggle(\"Flag\", isOn: $flagged)",
            "    Button(\"Sign In\", action: signIn)",
            "}",
            ".menuStyle(.button)",
            ".toggleStyle(.button)",
            ".buttonStyle(.bordered)"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "View/menuStyle(_:)",
              "type": "codeVoice"
            },
            {
              "text": " modifier causes the Terms",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and Conditions menu to render as a button. Similarly, the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "View/toggleStyle(_:)",
              "type": "codeVoice"
            },
            {
              "text": " modifier causes the two toggles to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "render as buttons. The button style modifier then causes not only",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the explicit Sign In ",
              "type": "text"
            },
            {
              "code": "Button",
              "type": "codeVoice"
            },
            {
              "text": ", but also the menu and toggles with",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "button styling, to render with the bordered button style.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.ManagedAppDistribution/documentation/ManagedAppDistribution": {
      "abstract": [
        {
          "text": "Manage the distribution of apps within an organization.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.ManagedAppDistribution/documentation/ManagedAppDistribution",
      "kind": "symbol",
      "role": "collection",
      "title": "ManagedAppDistribution",
      "type": "topic",
      "url": "/documentation/managedappdistribution"
    },
    "doc://com.apple.ManagedAppDistribution/documentation/ManagedAppDistribution/ManagedAppView": {
      "abstract": [
        {
          "text": "A view that displays a managed app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ManagedAppView"
        }
      ],
      "identifier": "doc://com.apple.ManagedAppDistribution/documentation/ManagedAppDistribution/ManagedAppView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ManagedAppView"
        }
      ],
      "role": "symbol",
      "title": "ManagedAppView",
      "type": "topic",
      "url": "/documentation/managedappdistribution/managedappview"
    },
    "doc://com.apple.ManagedAppDistribution/documentation/ManagedAppDistribution/ManagedAppView/buttonStyle(_:)-6r3d6": {
      "abstract": [
        {
          "text": "Sets the style for buttons within this view to a button style with a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "custom appearance and standard interaction behavior.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "buttonStyle"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.ManagedAppDistribution/documentation/ManagedAppDistribution/ManagedAppView/buttonStyle(_:)-6r3d6",
      "kind": "symbol",
      "role": "symbol",
      "title": "buttonStyle(_:)",
      "type": "topic",
      "url": "/documentation/managedappdistribution/managedappview/buttonstyle(_:)-6r3d6"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI11ButtonStyleP": {
      "abstract": [
        {
          "text": "A type that applies standard interaction behavior and a custom appearance to all buttons within a view hierarchy.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ButtonStyle"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI11ButtonStyleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "ButtonStyle",
      "type": "topic",
      "url": "/documentation/SwiftUI/ButtonStyle"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
      "kind": "symbol",
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/SwiftUI/View"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/managedappdistribution/managedappview/buttonstyle(_:)-6r3d6"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
