{
  "abstract": [
    {
      "text": "Serialize a world-tracking session to resume it later on.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.arkit/documentation/ARKit",
        "doc://com.apple.arkit/documentation/ARKit/arkit-in-ios",
        "doc://com.apple.arkit/documentation/ARKit/data-management"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.arkit/documentation/ARKit/saving-and-loading-world-data"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "ARKit"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "introducedAt": "12.0",
        "name": "iOS"
      },
      {
        "beta": false,
        "introducedAt": "12.0",
        "name": "iPadOS"
      },
      {
        "beta": false,
        "introducedAt": "16.0",
        "name": "Xcode"
      }
    ],
    "role": "sampleCode",
    "roleHeading": "Sample Code",
    "title": "Saving and loading world data"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This sample app demonstrates a simple AR experience for iOS 12 devices. Before exploring the code, try building and running the app to familiarize yourself with the user experience it demonstrates:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Run the app. You can look around and tap to place a virtual 3D object on real-world surfaces. (Tap again to relocate the object.)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "After you’ve explored the environment, the Save Experience button becomes available. Tap it to save ARKit’s world-mapping data to local storage.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Tap the Load Experience button. (You can do this immediately, or after quitting and relaunching the app, even if the app has been terminated in the background.)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "While ARKit attempts to resume an AR session from the saved world-mapping data, the app displays a snapshot of the camera view from the time that data was saved. For best results, move the device so that the camera view matches the screenshot.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "orderedList"
        },
        {
          "inlineContent": [
            {
              "text": "Follow the steps below to see how this app uses the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARWorldMap",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " class to save and restore ARKit’s spatial mapping state.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Getting-started",
          "level": 2,
          "text": "Getting started",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Requires Xcode 10.0, iOS 12.0 and an iOS device with A9 or later processor.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Run-the-AR-session-and-place-AR-content",
          "level": 2,
          "text": "Run the AR session and place AR content",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This app extends the basic workflow for building an ARKit app. (For details, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/tracking-and-visualizing-planes",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".) It defines an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARWorldTrackingConfiguration",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " with plane detection enabled, then runs that configuration in the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARSession",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " attached to the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARSCNView",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " that displays the AR experience.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/UIKit/UITapGestureRecognizer",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " detects a tap on the screen, the ",
              "type": "text"
            },
            {
              "code": "handleSceneTap",
              "type": "codeVoice"
            },
            {
              "text": " method uses ARKit hit-testing to find a 3D point on a real-world surface, then places an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARAnchor",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " marking that position. When ARKit calls the delegate method ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARSCNViewDelegate/renderer(_:didAdd:for:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", the app loads a 3D model for ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARSCNView",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to display at the anchor’s position.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Capture-and-save-the-AR-world-map",
          "level": 2,
          "text": "Capture and save the AR world map",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "An ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARWorldMap",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object contains a snapshot of all the spatial mapping information that ARKit uses to locate the user’s device in real-world space. To save a map that can reliably be used for restoring your AR session later, you’ll first need to find a good time to capture the map.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "ARKit provides a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARFrame/worldMappingStatus-swift.property",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " value that indicates whether it’s currently a good time to capture a world map (or if it’s better to wait until ARKit has mapped more of the local environment). This app uses that value to provide visual feedback and choose when to make the Save Experience button available:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// Enable Save button only when the mapping status is good and an object has been placed",
            "switch frame.worldMappingStatus {",
            "case .extending, .mapped:",
            "    saveExperienceButton.isEnabled =",
            "        virtualObjectAnchor != nil && frame.anchors.contains(virtualObjectAnchor!)",
            "default:",
            "    saveExperienceButton.isEnabled = false",
            "}",
            "statusLabel.text = \"\"\"",
            "Mapping: \\(frame.worldMappingStatus.description)",
            "Tracking: \\(frame.camera.trackingState.description)",
            "\"\"\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When the user taps the Save Experience button, the app calls ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARSession/getCurrentWorldMap(completionHandler:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to capture the map from the running ARSession, then serializes it to a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/data",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object with ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/nskeyedarchiver",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and writes it to local storage:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "sceneView.session.getCurrentWorldMap { worldMap, error in",
            "    guard let map = worldMap",
            "        else { self.showAlert(title: \"Can't get current world map\", message: error!.localizedDescription); return }",
            "    ",
            "    // Add a snapshot image indicating where the map was captured.",
            "    guard let snapshotAnchor = SnapshotAnchor(capturing: self.sceneView)",
            "        else { fatalError(\"Can't take snapshot\") }",
            "    map.anchors.append(snapshotAnchor)",
            "    ",
            "    do {",
            "        let data = try NSKeyedArchiver.archivedData(withRootObject: map, requiringSecureCoding: true)",
            "        try data.write(to: self.mapSaveURL, options: [.atomic])",
            "        DispatchQueue.main.async {",
            "            self.loadExperienceButton.isHidden = false",
            "            self.loadExperienceButton.isEnabled = true",
            "        }",
            "    } catch {",
            "        fatalError(\"Can't save map: \\(error.localizedDescription)\")",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "To help a user resume the AR experience from this map later, the app also captures a snapshot of the camera view with the example ",
              "type": "text"
            },
            {
              "code": "SnapshotAnchor",
              "type": "codeVoice"
            },
            {
              "text": " class and stores it in the world map.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Load-and-relocalize-to-a-saved-map",
          "level": 2,
          "text": "Load and relocalize to a saved map",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When the app launches, it checks local storage for a world map file it may have saved in an earlier session:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "do {",
            "    guard let worldMap = try NSKeyedUnarchiver.unarchivedObject(ofClass: ARWorldMap.self, from: data)",
            "        else { fatalError(\"No ARWorldMap in archive.\") }",
            "    return worldMap",
            "} catch {",
            "    fatalError(\"Can't unarchive ARWorldMap from file data: \\(error)\")",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "If that file exists and can be deserialized as an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARWorldMap",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object, the app makes its Load Experience button available. When you tap the button, the app tells ARKit to attempt resuming the session captured in that world map, by creating and running an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARWorldTrackingConfiguration",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " using that map as the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARWorldTrackingConfiguration/initialWorldMap",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let configuration = self.defaultConfiguration // this app's standard world tracking settings",
            "configuration.initialWorldMap = worldMap",
            "sceneView.session.run(configuration, options: [.resetTracking, .removeExistingAnchors])"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "ARKit then attempts to ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "relocalize",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " to the new world map—that is, to reconcile the received spatial-mapping information with what it senses of the local environment. This process is more likely to succeed if the user moves to areas of the local environment that they visited during the previous session. To help the user successfully resume the saved experience, this app uses the example ",
              "type": "text"
            },
            {
              "code": "SnapshotAnchor",
              "type": "codeVoice"
            },
            {
              "text": " class to save a camera image in the world map, then displays that image while ARKit is relocalizing.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Restore-AR-content-after-relocalization",
          "level": 2,
          "text": "Restore AR content after relocalization",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Saving a world map also archives all anchors currently associated with the AR session. After you successfully run a session from a saved world map, the session contains all anchors previously saved in the map. You can use saved anchors to restore virtual content from a previous session.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In this app, after relocalizing to a previously saved world map, the virtual object placed in the previous session automatically appears at its saved position. The same ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARSCNView",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " delegate method ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARSCNViewDelegate/renderer(_:didAdd:for:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " fires both when you directly add an anchor to the session and when the session restores anchors from a world map. To determine which saved anchor represents the virtual object, this app uses the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARAnchor",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARAnchor/name",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func renderer(_ renderer: SCNSceneRenderer, didAdd node: SCNNode, for anchor: ARAnchor) {",
            "    guard anchor.name == virtualObjectAnchorName",
            "        else { return }",
            "    ",
            "    // save the reference to the virtual object anchor when the anchor is added from relocalizing",
            "    if virtualObjectAnchor == nil {",
            "        virtualObjectAnchor = anchor",
            "    }",
            "    node.addChildNode(virtualObject)",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "In your own AR experience, you can choose among various techniques for restoring virtual content associated with saved anchors. For example:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "An app for visualizing furniture from a fixed catalog might save an identifier for each placed object in the corresponding anchor’s ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARAnchor/name",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ", then use that identifier to determine which 3D model to display when resuming a session from a saved map.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "A game that places virtual characters to play in the user’s environment might create various custom ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARAnchor",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " subclasses to store gameplay data specific to each character, so that resuming a session from a saved map also restores the state of the game. (See ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARAnchor",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " Subclassing Notes and ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARAnchorCopying",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ".)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "7ad88eecc792/SavingAndLoadingWorldData.zip": {
      "checksum": "7ad88eecc7927df01ea1a16b1b3549f0e66f1bd49fb6882e31a88bc165b942f9b5899920d6a7847b5472ae29189257504957a97b6cce1b75b69f84bf51989456",
      "identifier": "7ad88eecc792/SavingAndLoadingWorldData.zip",
      "type": "download",
      "url": "https://docs-assets.developer.apple.com/published/7ad88eecc792/SavingAndLoadingWorldData.zip"
    },
    "doc://com.apple.arkit/documentation/ARKit": {
      "abstract": [
        {
          "text": "Integrate hardware sensing features to produce augmented reality apps and games.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit",
      "kind": "symbol",
      "role": "collection",
      "title": "ARKit",
      "type": "topic",
      "url": "/documentation/arkit"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARAnchor": {
      "abstract": [
        {
          "text": "An object that specifies the position and orientation of an item in the physical environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ARAnchor"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARAnchor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ARAnchor"
        }
      ],
      "role": "symbol",
      "title": "ARAnchor",
      "type": "topic",
      "url": "/documentation/arkit/aranchor"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARAnchor/name": {
      "abstract": [
        {
          "text": "A descriptive name for the anchor.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "name"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARAnchor/name",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "name"
        }
      ],
      "role": "symbol",
      "title": "name",
      "type": "topic",
      "url": "/documentation/arkit/aranchor/name"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARAnchorCopying": {
      "abstract": [
        {
          "text": "Support for custom anchor subclasses.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ARAnchorCopying"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARAnchorCopying",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ARAnchorCopying"
        }
      ],
      "role": "symbol",
      "title": "ARAnchorCopying",
      "type": "topic",
      "url": "/documentation/arkit/aranchorcopying"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARFrame/worldMappingStatus-swift.property": {
      "abstract": [
        {
          "text": "The feasibility of generating or relocalizing a world map for this frame.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "worldMappingStatus"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)ARFrame",
          "text": "ARFrame"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@ARWorldMappingStatus",
          "text": "WorldMappingStatus"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARFrame/worldMappingStatus-swift.property",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "worldMappingStatus"
        }
      ],
      "role": "symbol",
      "title": "worldMappingStatus",
      "type": "topic",
      "url": "/documentation/arkit/arframe/worldmappingstatus-swift.property"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARSCNView": {
      "abstract": [
        {
          "text": "A view that blends virtual 3D content from SceneKit into your augmented reality experience.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ARSCNView"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARSCNView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ARSCNView"
        }
      ],
      "role": "symbol",
      "title": "ARSCNView",
      "type": "topic",
      "url": "/documentation/arkit/arscnview"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARSCNViewDelegate/renderer(_:didAdd:for:)": {
      "abstract": [
        {
          "text": "Tells the delegate that a SceneKit node corresponding to a new AR anchor has been added to the scene.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "renderer"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)SCNSceneRenderer",
          "text": "SCNSceneRenderer"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "didAdd"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)SCNNode",
          "text": "SCNNode"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)ARAnchor",
          "text": "ARAnchor"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARSCNViewDelegate/renderer(_:didAdd:for:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "renderer:didAddNode:forAnchor:"
        }
      ],
      "role": "symbol",
      "title": "renderer(_:didAdd:for:)",
      "type": "topic",
      "url": "/documentation/arkit/arscnviewdelegate/renderer(_:didadd:for:)"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARSession": {
      "abstract": [
        {
          "text": "The object that manages the major tasks associated with every AR experience, such as motion tracking, camera passthrough, and image analysis.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ARSession"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARSession",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ARSession"
        }
      ],
      "role": "symbol",
      "title": "ARSession",
      "type": "topic",
      "url": "/documentation/arkit/arsession"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARSession/getCurrentWorldMap(completionHandler:)": {
      "abstract": [
        {
          "text": "Returns an object encapsulating the world-tracking session’s space-mapping state and set of anchors.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "getCurrentWorldMap"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "completionHandler"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)ARWorldMap",
          "text": "ARWorldMap"
        },
        {
          "kind": "text",
          "text": "?, (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ")?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARSession/getCurrentWorldMap(completionHandler:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "getCurrentWorldMapWithCompletionHandler:"
        }
      ],
      "role": "symbol",
      "title": "getCurrentWorldMap(completionHandler:)",
      "type": "topic",
      "url": "/documentation/arkit/arsession/getcurrentworldmap(completionhandler:)"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARWorldMap": {
      "abstract": [
        {
          "text": "The state in a world-tracking AR session during which a device maps the user’s position in physical space and proximity to anchor objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ARWorldMap"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARWorldMap",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ARWorldMap"
        }
      ],
      "role": "symbol",
      "title": "ARWorldMap",
      "type": "topic",
      "url": "/documentation/arkit/arworldmap"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARWorldTrackingConfiguration": {
      "abstract": [
        {
          "text": "A configuration that tracks the position of a device in relation to objects in the environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ARWorldTrackingConfiguration"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARWorldTrackingConfiguration",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ARWorldTrackingConfiguration"
        }
      ],
      "role": "symbol",
      "title": "ARWorldTrackingConfiguration",
      "type": "topic",
      "url": "/documentation/arkit/arworldtrackingconfiguration"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARWorldTrackingConfiguration/initialWorldMap": {
      "abstract": [
        {
          "text": "The state from a previous AR session to attempt to resume with this session configuration.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "initialWorldMap"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)ARWorldMap",
          "text": "ARWorldMap"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARWorldTrackingConfiguration/initialWorldMap",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "initialWorldMap"
        }
      ],
      "role": "symbol",
      "title": "initialWorldMap",
      "type": "topic",
      "url": "/documentation/arkit/arworldtrackingconfiguration/initialworldmap"
    },
    "doc://com.apple.arkit/documentation/ARKit/arkit-in-ios": {
      "abstract": [
        {
          "text": "Integrate iOS device camera and motion features to produce augmented reality experiences in your app or game.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/arkit-in-ios",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ARKit in iOS",
      "type": "topic",
      "url": "/documentation/arkit/arkit-in-ios"
    },
    "doc://com.apple.arkit/documentation/ARKit/data-management": {
      "abstract": [
        {
          "text": "Obtain detailed information about skeletal and face geometry, and saved world data.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/data-management",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Data Management",
      "type": "topic",
      "url": "/documentation/arkit/data-management"
    },
    "doc://com.apple.arkit/documentation/ARKit/tracking-and-visualizing-planes": {
      "abstract": [
        {
          "text": "Detect surfaces in the physical environment and visualize their shape and location in 3D space.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/tracking-and-visualizing-planes",
      "kind": "article",
      "role": "sampleCode",
      "title": "Tracking and visualizing planes",
      "type": "topic",
      "url": "/documentation/arkit/tracking-and-visualizing-planes"
    },
    "doc://com.apple.documentation/documentation/UIKit/UITapGestureRecognizer": {
      "abstract": [
        {
          "text": "A discrete gesture recognizer that interprets single or multiple taps.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UITapGestureRecognizer"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/UIKit/UITapGestureRecognizer",
      "kind": "symbol",
      "role": "symbol",
      "title": "UITapGestureRecognizer",
      "type": "topic",
      "url": "/documentation/UIKit/UITapGestureRecognizer"
    },
    "doc://com.apple.documentation/documentation/foundation/data": {
      "abstract": [
        {
          "text": "A byte buffer in memory.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "Data"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/data",
      "kind": "symbol",
      "role": "symbol",
      "title": "Data",
      "type": "topic",
      "url": "/documentation/foundation/data"
    },
    "doc://com.apple.documentation/documentation/foundation/nskeyedarchiver": {
      "abstract": [
        {
          "text": "An encoder that stores an object’s data to an archive referenced by keys.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSKeyedArchiver"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nskeyedarchiver",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSKeyedArchiver",
      "type": "topic",
      "url": "/documentation/foundation/nskeyedarchiver"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "sampleCodeDownload": {
    "action": {
      "identifier": "7ad88eecc792/SavingAndLoadingWorldData.zip",
      "isActive": true,
      "overridingTitle": "Download",
      "type": "reference"
    },
    "kind": "sampleDownload"
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "World-Data",
      "generated": true,
      "identifiers": [
        "doc://com.apple.arkit/documentation/ARKit/ARWorldMap"
      ],
      "title": "World Data"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "World-Data",
              "generated": true,
              "identifiers": [
                "doc://com.apple.arkit/documentation/ARKit/ARWorldMap"
              ],
              "title": "World Data"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARFrame~1worldMappingStatus-swift.property/title",
          "value": "worldMappingStatus"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARFrame~1worldMappingStatus-swift.property/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "worldMappingStatus"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARAnchorCopying/title",
          "value": "ARAnchorCopying"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARAnchorCopying/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "ARAnchorCopying"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARAnchorCopying/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "ARAnchorCopying"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1UIKit~1UITapGestureRecognizer/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UITapGestureRecognizer"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)UIGestureRecognizer",
              "text": "UIGestureRecognizer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARAnchor~1name/title",
          "value": "name"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARAnchor~1name/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "name"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARAnchor/title",
          "value": "ARAnchor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARAnchor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "ARAnchor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARAnchor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "ARAnchor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARSCNViewDelegate~1renderer(_:didAdd:for:)/title",
          "value": "renderer:didAddNode:forAnchor:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARSCNViewDelegate~1renderer(_:didAdd:for:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "renderer:didAddNode:forAnchor:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARSession~1getCurrentWorldMap(completionHandler:)/title",
          "value": "getCurrentWorldMapWithCompletionHandler:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARSession~1getCurrentWorldMap(completionHandler:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "getCurrentWorldMapWithCompletionHandler:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARSCNView/title",
          "value": "ARSCNView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARSCNView/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "ARSCNView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARSCNView/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "ARSCNView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARSession/title",
          "value": "ARSession"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARSession/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "ARSession"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARSession/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "ARSession"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARWorldTrackingConfiguration~1initialWorldMap/title",
          "value": "initialWorldMap"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARWorldTrackingConfiguration~1initialWorldMap/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "initialWorldMap"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARWorldMap/title",
          "value": "ARWorldMap"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARWorldMap/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "ARWorldMap"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARWorldMap/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "ARWorldMap"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARWorldTrackingConfiguration/title",
          "value": "ARWorldTrackingConfiguration"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARWorldTrackingConfiguration/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "ARWorldTrackingConfiguration"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARWorldTrackingConfiguration/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "ARWorldTrackingConfiguration"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/arkit/saving-and-loading-world-data"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/arkit/saving-and-loading-world-data"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
