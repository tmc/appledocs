{
  "abstract": [
    {
      "text": "The size and y-axis rotation of a detected plane.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.arkit/documentation/ARKit"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(cs)ARPlaneExtent",
    "fragments": [
      {
        "kind": "keyword",
        "text": "class"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "ARPlaneExtent"
      }
    ],
    "modules": [
      {
        "name": "ARKit"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "ARPlaneExtent"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Mac Catalyst",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Class",
    "symbolKind": "class",
    "title": "ARPlaneExtent"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "class"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "ARPlaneExtent"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A plane anchor (",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ") describes its size and orientation on the y-axis using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor/planeExtent",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property of this type.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "At runtime, ARKit continually updates the anchor’s width and height as the framework refines its knowledge of the plane’s shape in the environment.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Similarly, as the session runs, the framework may update the plane’s y-rotation to better fit its rectangular area in the environment. In iOS 15 and earlier, the framework rotates the plane anchor according to that angle. In iOS 16, the framework doesn’t rotate the anchor automatically and its transform matrix remains unchanged. Instead, the framework exposes the angle ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent/rotationOnYAxis",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " that you apply to any plane extent geometry in your app.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "Apps that run on iOS 16 with a deployment target less than iOS 16 preserve the prior y-axis rotation behavior.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "anchor": "Size-and-Rotate-an-Entity-to-a-Planes-Extent",
          "level": 3,
          "text": "Size and Rotate an Entity to a Plane’s Extent",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The following code defines a RealityKit entity sized to the plane extent’s width and height. The helper function also applies the extent’s suggested y-axis rotation by setting its transform ",
              "type": "text"
            },
            {
              "code": "yaw",
              "type": "codeVoice"
            },
            {
              "text": " value to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent/rotationOnYAxis",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func createPlane(for planeAnchor: ARPlaneAnchor, material: Material) -> ModelEntity {",
            "",
            "    // Get the plane's extent.",
            "    let extent = planeAnchor.planeExtent",
            "",
            "    // Create a model entity sized to the plane's extent.",
            "    let planeEntity = ModelEntity(mesh: .generatePlane (width: extent.width, depth: extent.height),",
            "        materials: [material])",
            "",
            "    // Orient the entity according to the extent's y-axis rotation.",
            "    planeEntity.transform = Transform(pitch: 0, yaw: extent.rotationOnYAxis, roll: 0)",
            "",
            "    // Center the entity on the plane.",
            "    planeEntity.transform.translation = planeAnchor.center",
            "",
            "    return planeEntity",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.arkit/documentation/ARKit": {
      "abstract": [
        {
          "text": "Integrate hardware sensing features to produce augmented reality apps and games.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit",
      "kind": "symbol",
      "role": "collection",
      "title": "ARKit",
      "type": "topic",
      "url": "/documentation/arkit"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor": {
      "abstract": [
        {
          "text": "An anchor for a 2D planar surface that ARKit detects in the physical environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ARPlaneAnchor"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ARPlaneAnchor"
        }
      ],
      "role": "symbol",
      "title": "ARPlaneAnchor",
      "type": "topic",
      "url": "/documentation/arkit/arplaneanchor"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor/center": {
      "abstract": [
        {
          "text": "The center point of the plane relative to its anchor position.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "center"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@simd_float3",
          "text": "simd_float3"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor/center",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "center"
        }
      ],
      "role": "symbol",
      "title": "center",
      "type": "topic",
      "url": "/documentation/arkit/arplaneanchor/center"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor/extent": {
      "abstract": [
        {
          "text": "The estimated width and length of the detected plane.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "extent"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@simd_float3",
          "text": "simd_float3"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor/extent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "extent"
        }
      ],
      "role": "symbol",
      "title": "extent",
      "type": "topic",
      "url": "/documentation/arkit/arplaneanchor/extent"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor/planeExtent": {
      "abstract": [
        {
          "text": "The estimated width, length, and y-axis rotation of the detected plane.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "planeExtent"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)ARPlaneExtent",
          "text": "ARPlaneExtent"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor/planeExtent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "planeExtent"
        }
      ],
      "role": "symbol",
      "title": "planeExtent",
      "type": "topic",
      "url": "/documentation/arkit/arplaneanchor/planeextent"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent": {
      "abstract": [
        {
          "text": "The size and y-axis rotation of a detected plane.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ARPlaneExtent"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ARPlaneExtent"
        }
      ],
      "role": "symbol",
      "title": "ARPlaneExtent",
      "type": "topic",
      "url": "/documentation/arkit/arplaneextent"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent/height": {
      "abstract": [
        {
          "text": "The estimated height of the plane.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "height"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sf",
          "text": "Float"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent/height",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "height"
        }
      ],
      "role": "symbol",
      "title": "height",
      "type": "topic",
      "url": "/documentation/arkit/arplaneextent/height"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent/rotationOnYAxis": {
      "abstract": [
        {
          "text": "A radian value that indicates a plane’s y-axis orientation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "rotationOnYAxis"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sf",
          "text": "Float"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent/rotationOnYAxis",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "rotationOnYAxis"
        }
      ],
      "role": "symbol",
      "title": "rotationOnYAxis",
      "type": "topic",
      "url": "/documentation/arkit/arplaneextent/rotationonyaxis"
    },
    "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent/width": {
      "abstract": [
        {
          "text": "The estimated width of the plane.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "width"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sf",
          "text": "Float"
        }
      ],
      "identifier": "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent/width",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "width"
        }
      ],
      "role": "symbol",
      "title": "width",
      "type": "topic",
      "url": "/documentation/arkit/arplaneextent/width"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/c:objc(cs)NSObject": {
      "abstract": [
        {
          "text": "The root class of most Objective-C class hierarchies, from which subclasses inherit a basic interface to the runtime system and the ability to behave as Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSObject"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObject",
      "type": "topic",
      "url": "/documentation/objectivec/nsobject"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding": {
      "abstract": [
        {
          "text": "A protocol that enables an object to be encoded and decoded for archiving and distribution.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSCoding"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSCoding",
      "type": "topic",
      "url": "/documentation/foundation/nscoding"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSObject": {
      "abstract": [
        {
          "text": "The group of methods that are fundamental to all Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObjectProtocol",
      "type": "topic",
      "url": "/documentation/objectivec/nsobjectprotocol"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSSecureCoding": {
      "abstract": [
        {
          "text": "A protocol that enables encoding and decoding in a manner that is robust against object substitution attacks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSSecureCoding"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSSecureCoding",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSSecureCoding",
      "type": "topic",
      "url": "/documentation/foundation/nssecurecoding"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomDebugStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s7CVarArgP": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as elements of a C `va_list`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s7CVarArgP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/Swift/CVarArg"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    },
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s7CVarArgP",
        "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSSecureCoding",
        "doc://com.externally.resolved.symbol/s:s8SendableP"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Dimensions",
      "generated": true,
      "identifiers": [
        "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor/center",
        "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor/planeExtent",
        "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor/extent"
      ],
      "title": "Dimensions"
    }
  ],
  "topicSections": [
    {
      "anchor": "Inspecting-Plane-Size",
      "identifiers": [
        "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent/width",
        "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent/height"
      ],
      "title": "Inspecting Plane Size"
    },
    {
      "anchor": "Inspecting-Plane-Y-Rotation",
      "identifiers": [
        "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent/rotationOnYAxis"
      ],
      "title": "Inspecting Plane Y-Rotation"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "16.0",
              "name": "iOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "16.0",
              "name": "iPadOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "16.0",
              "name": "Mac Catalyst",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Class"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "ARPlaneExtent"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "class"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "ARPlaneExtent"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "ARPlaneExtent"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.arkit/documentation/ARKit"
              ]
            ]
          }
        },
        {
          "op": "replace",
          "path": "/topicSections",
          "value": [
            {
              "anchor": "Inspecting-Plane-Size",
              "identifiers": [
                "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent/width",
                "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent/height"
              ],
              "title": "Inspecting Plane Size"
            },
            {
              "anchor": "Inspecting-Plane-Y-Rotation",
              "identifiers": [
                "doc://com.apple.arkit/documentation/ARKit/ARPlaneExtent/rotationOnYAxis"
              ],
              "title": "Inspecting Plane Y-Rotation"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/relationshipsSections",
          "value": [
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
              ],
              "kind": "relationships",
              "title": "Inherits From",
              "type": "inheritsFrom"
            },
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(pl)NSSecureCoding"
              ],
              "kind": "relationships",
              "title": "Conforms To",
              "type": "conformsTo"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Dimensions",
              "generated": true,
              "identifiers": [
                "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor/center",
                "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor/planeExtent",
                "doc://com.apple.arkit/documentation/ARKit/ARPlaneAnchor/extent"
              ],
              "title": "Dimensions"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "iOS",
                  "iPadOS",
                  "Mac Catalyst"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "@interface"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "ARPlaneExtent"
                  },
                  {
                    "kind": "text",
                    "text": " : "
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(cs)NSObject",
                    "text": "NSObject"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneAnchor~1extent/title",
          "value": "extent"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneAnchor~1extent/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "extent"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneExtent~1width/title",
          "value": "width"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneExtent~1width/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "width"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneExtent/title",
          "value": "ARPlaneExtent"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneExtent/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "ARPlaneExtent"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneExtent/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "ARPlaneExtent"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneAnchor~1planeExtent/title",
          "value": "planeExtent"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneAnchor~1planeExtent/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "planeExtent"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneAnchor~1center/title",
          "value": "center"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneAnchor~1center/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "center"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneExtent~1height/title",
          "value": "height"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneExtent~1height/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "height"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneAnchor/title",
          "value": "ARPlaneAnchor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneAnchor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "ARPlaneAnchor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneAnchor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "ARPlaneAnchor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSObject/title",
          "value": "NSObject"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneExtent~1rotationOnYAxis/title",
          "value": "rotationOnYAxis"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.arkit~1documentation~1ARKit~1ARPlaneExtent~1rotationOnYAxis/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "rotationOnYAxis"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/arkit/arplaneextent"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/arkit/arplaneextent"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
