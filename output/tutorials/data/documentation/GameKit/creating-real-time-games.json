{
  "abstract": [
    {
      "text": "Develop games where multiple players interact in real time.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.gamekit/documentation/GameKit"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.gamekit/documentation/GameKit/creating-real-time-games"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "GameKit"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "introducedAt": "17.4",
        "name": "iOS"
      },
      {
        "beta": false,
        "introducedAt": "17.4",
        "name": "iPadOS"
      },
      {
        "beta": false,
        "introducedAt": "15.3",
        "name": "Xcode"
      }
    ],
    "role": "sampleCode",
    "roleHeading": "Sample Code",
    "title": "Creating real-time games"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This sample code project uses the GameKit framework to create a simple real-time game where two players are immediately aware of the actions each other takes.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The sample shows both the matchmaker interface that enables players to invite others, and the automatch feature that lets Game Center find players.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "It provides access to Game Center using the access point and dashboard to show the playersâ€™ progress toward an achievement, as well as scores on the game leaderboard.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "It uses the match object to send game data and text messages between players.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "It also uses voice chat for additional communications.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To create your own real-time game, replace the SwiftUI files with your gameplay interface, and modify the ",
              "type": "text"
            },
            {
              "code": "RealTimeGame",
              "type": "codeVoice"
            },
            {
              "text": " class to support your game. To extend this sample to use matchmaking rules, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GameKit/finding-players-using-matchmaking-rules",
              "isActive": true,
              "overridingTitle": "Finding players using matchmaking rules",
              "overridingTitleInlineContent": [
                {
                  "text": "Finding players using matchmaking rules",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Configure-the-sample-code-project",
          "level": 3,
          "text": "Configure the sample code project",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To configure the sample code project, perform the following steps in Xcode:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Choose Xcode > Settings > Accounts, click the Add button (+), and add your Apple ID account.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Select the project in the Project navigator, click the Signing & Capabilities pane, select the target, and assign your team to it. Optionally, enter a unique identifier in the Bundle Identifier text field. Otherwise, use the existing bundle ID that ends in your team ID.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "If necessary, add the Game Center capability (see ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/GameKit/enabling-and-configuring-game-center",
                      "isActive": true,
                      "overridingTitle": "Enabling and configuring Game Center",
                      "overridingTitleInlineContent": [
                        {
                          "text": "Enabling and configuring Game Center",
                          "type": "text"
                        }
                      ],
                      "type": "reference"
                    },
                    {
                      "text": ").",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "In App Store Connect, create an app record that matches the bundle ID (see ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/help/app-store-connect/create-an-app-record/add-a-new-app",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " in App Store Connect Help).",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Add a classic leaderboard with ",
                      "type": "text"
                    },
                    {
                      "code": "123",
                      "type": "codeVoice"
                    },
                    {
                      "text": " as the leaderboard ID, Integer as the score format type, Best Score as the score submission type, High to Low as the sort order, and ",
                      "type": "text"
                    },
                    {
                      "code": "0",
                      "type": "codeVoice"
                    },
                    {
                      "text": " to ",
                      "type": "text"
                    },
                    {
                      "code": "100",
                      "type": "codeVoice"
                    },
                    {
                      "text": " as the score range. Add one localization with an integer format. See ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/help/app-store-connect/configure-game-center/configure-leaderboards",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Add an achievement with ",
                      "type": "text"
                    },
                    {
                      "code": "1234",
                      "type": "codeVoice"
                    },
                    {
                      "text": " as the achievement ID, ",
                      "type": "text"
                    },
                    {
                      "code": "100",
                      "type": "codeVoice"
                    },
                    {
                      "text": " as the point value, and No for the hidden option (see ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/help/app-store-connect/configure-game-center/configure-achievements",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": "). Add one localization with an image.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Connect two iOS devices to your Mac.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "If necessary, click Register Device in the Signing & Capabilities pane to create the provisioning profile.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Build and run the sample on the two iOS devices.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "If the Welcome to Game Center sheet appears, sign in using a different Apple ID on each device.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "orderedList"
        },
        {
          "anchor": "Authenticate-the-player-and-register-for-real-time-events",
          "level": 3,
          "text": "Authenticate the player and register for real-time events",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Before using any GameKit APIs, the game needs to authenticate the local player by presenting an interface for them to sign in to Game Center on their device.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "RealTimeGame.authenticatePlayer()",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method handles the authentication flow and, when complete, registers for real-time game events.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// Register for real-time invitations from other players.",
            "GKLocalPlayer.local.register(self)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Start-a-real-time-match",
          "level": 3,
          "text": "Start a real-time match",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To start a real-time game, the player taps Choose Player on the content view.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Then the ",
              "type": "text"
            },
            {
              "code": "RealTimeGame.choosePlayer()",
              "type": "codeVoice"
            },
            {
              "text": " method creates a match request for a two-player game and presents a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GameKit/GKMatchmakerViewController",
              "isActive": true,
              "overridingTitle": "GKMatchmakerViewController",
              "overridingTitleInlineContent": [
                {
                  "code": "GKMatchmakerViewController",
                  "type": "codeVoice"
                }
              ],
              "type": "reference"
            },
            {
              "text": " interface where the player can invite friends or automatch to fill empty slots.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// Create a match request.",
            "let request = GKMatchRequest()",
            "request.minPlayers = 2",
            "request.maxPlayers = 2",
            "",
            "// If you use matchmaking rules, set the GKMatchRequest.queueName property here. If the rules use",
            "// game-specific properties, set the local player's GKMatchRequest.properties too.",
            "",
            "// Present the interface where the player selects opponents and starts the game.",
            "if let viewController = GKMatchmakerViewController(matchRequest: request) {",
            "    viewController.matchmakerDelegate = self",
            "    rootViewController?.present(viewController, animated: true) { }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "After the player selects an opponent in the Game Center interface, GameKit sends the invitation and changes the view controller interface to show the invitation status.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "After the opponent accepts the invitation by tapping the notification that appears, GameKit launches the game on their device and invokes the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GameKit/GKInviteEventListener/player(_:didAccept:)",
              "isActive": true,
              "overridingTitle": "GKLocalPlayerListener.player(didAccept:)",
              "overridingTitleInlineContent": [
                {
                  "code": "GKLocalPlayerListener.player(didAccept:)",
                  "type": "codeVoice"
                }
              ],
              "type": "reference"
            },
            {
              "text": " protocol method.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "This method presents the matchmaker view controller that shows the connection status.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// Present the matchmaker view controller in the invitation state.",
            "if let viewController = GKMatchmakerViewController(invite: invite) {",
            "    viewController.matchmakerDelegate = self",
            "    rootViewController?.present(viewController, animated: true) { }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When the status of the players changes from Connecting to Ready in the interface, GameKit invokes the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GameKit/GKMatchmakerViewControllerDelegate/matchmakerViewController(_:didFind:)",
              "isActive": true,
              "overridingTitle": "GKMatchmakerViewControllerDelegate.matchmakerViewController(_:didFind:)",
              "overridingTitleInlineContent": [
                {
                  "code": "GKMatchmakerViewControllerDelegate.matchmakerViewController(_:didFind:)",
                  "type": "codeVoice"
                }
              ],
              "type": "reference"
            },
            {
              "text": " method in both game instances, passing the local view controller and new ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GameKit/GKMatch",
              "isActive": true,
              "overridingTitle": "GKMatch",
              "overridingTitleInlineContent": [
                {
                  "code": "GKMatch",
                  "type": "codeVoice"
                }
              ],
              "type": "reference"
            },
            {
              "text": " object.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "matchmakerViewController(_:didFind:)",
              "type": "codeVoice"
            },
            {
              "text": " method first dismisses the view controller and then starts the match by invoking the ",
              "type": "text"
            },
            {
              "code": "RealTimeGame.startMyMatchWith(match:)",
              "type": "codeVoice"
            },
            {
              "text": " method.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "startMyMatchWith(match:)",
              "type": "codeVoice"
            },
            {
              "text": " method sets the ",
              "type": "text"
            },
            {
              "code": "playingGame",
              "type": "codeVoice"
            },
            {
              "text": " property to ",
              "type": "text"
            },
            {
              "code": "true",
              "type": "codeVoice"
            },
            {
              "text": ", which displays the game interface, and loads the opponentâ€™s avatar.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Automatch-the-local-player-with-others",
          "level": 3,
          "text": "Automatch the local player with others",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To let Game Center find an opponent without presenting the matchmaker view controller, the player taps the Automatch toggle.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "RealTimeGame.findPlayer()",
              "type": "codeVoice"
            },
            {
              "text": " method creates a match request and passes it to the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GameKit/GKMatchmaker/findMatch(for:withCompletionHandler:)",
              "isActive": true,
              "overridingTitle": "GKMatchmaker.findMatch(for:withCompletionHandler:)",
              "overridingTitleInlineContent": [
                {
                  "code": "GKMatchmaker.findMatch(for:withCompletionHandler:)",
                  "type": "codeVoice"
                }
              ],
              "type": "reference"
            },
            {
              "text": " method.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "When a player running another game instance taps the Automatch toggle, the ",
              "type": "text"
            },
            {
              "code": "GKMatchmaker.findMatch(for:withCompletionHandler:)",
              "type": "codeVoice"
            },
            {
              "text": " method returns a match object.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Then the ",
              "type": "text"
            },
            {
              "code": "findPlayer()",
              "type": "codeVoice"
            },
            {
              "text": " method invokes ",
              "type": "text"
            },
            {
              "code": "startMyMatchWith(match:)",
              "type": "codeVoice"
            },
            {
              "text": ", which sets the matchâ€™s delegate so that when the opponent connects to the match, GameKit calls the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GameKit/GKMatchDelegate/match(_:player:didChange:)-8ohgr",
              "isActive": true,
              "overridingTitle": "GKMatchDelegate.match(_:player:didChange:)",
              "overridingTitleInlineContent": [
                {
                  "code": "GKMatchDelegate.match(_:player:didChange:)",
                  "type": "codeVoice"
                }
              ],
              "type": "reference"
            },
            {
              "text": " delegate method.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The game view displays a placeholder for the opponentâ€™s name until they connect.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If the state is ",
              "type": "text"
            },
            {
              "code": ".connected",
              "type": "codeVoice"
            },
            {
              "text": " when GameKit invokes the ",
              "type": "text"
            },
            {
              "code": "RealTimeGame.match(_:player:didChange:)",
              "type": "codeVoice"
            },
            {
              "text": " method, it sets the ",
              "type": "text"
            },
            {
              "code": "opponent",
              "type": "codeVoice"
            },
            {
              "text": " property and loads the opponentâ€™s avatar, which updates the game view.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To stop finding players, the player taps Automatch again and it invokes ",
              "type": "text"
            },
            {
              "code": "GKMatchmaker.shared().cancel()",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Exchange-game-data-between-players",
          "level": 3,
          "text": "Exchange game data between players",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Each time the player takes an action, the game shares the results with the other player.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "When the player taps Take Action, their score increases in both game instances.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If the player taps End Game or Forfeit, both game instances exit the match.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "RealTimeGame.takeAction()",
              "type": "codeVoice"
            },
            {
              "text": " method increments the score, then encodes and sends the game data to the opponent.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "do {",
            "    let data = encode(score: myScore)",
            "    try myMatch?.sendData(toAllPlayers: data!, with: GKMatch.SendDataMode.unreliable)",
            "} catch {",
            "    print(\"Error: \\(error.localizedDescription).\")",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When the player taps the message bubble in the game view, the chat view sheet appears so the player can send a text message to the opponent.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "sendMessage(content:)",
              "type": "codeVoice"
            },
            {
              "text": " method sends the text message as game data.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Similarly, the ",
              "type": "text"
            },
            {
              "code": "endMatch()",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "forfeitMatch()",
              "type": "codeVoice"
            },
            {
              "text": " methods encode and send game data, except they send the game outcome.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In the recipientâ€™s game instance, GameKit invokes the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GameKit/GKMatchDelegate/match(_:didReceive:fromRemotePlayer:)",
              "isActive": true,
              "overridingTitle": "GKMatchDelegate.match(_:didReceive:fromRemotePlayer:)",
              "overridingTitleInlineContent": [
                {
                  "code": "GKMatchDelegate.match(_:didReceive:fromRemotePlayer:)",
                  "type": "codeVoice"
                }
              ],
              "type": "reference"
            },
            {
              "text": " method.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "RealTimeGame",
              "type": "codeVoice"
            },
            {
              "text": " implementation of ",
              "type": "text"
            },
            {
              "code": "match(_:didReceive:fromRemotePlayer:)",
              "type": "codeVoice"
            },
            {
              "text": " decodes the data object and updates the game state, depending on its contents.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example, this method exits the match if the opponent ends or forfeits the game.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "In both game instances, an alert appears showing each player the outcome of the game. When the player taps OK, the game returns to the content view.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Start-voice-chat-between-players",
          "level": 3,
          "text": "Start voice chat between players",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When the player taps the telephone bubble in the game view, the ",
              "type": "text"
            },
            {
              "code": "RealTimeGame.startVoiceChat()",
              "type": "codeVoice"
            },
            {
              "text": " method starts a voice chat audio session with the opponent.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "First it creates a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GameKit/GKVoiceChat",
              "isActive": true,
              "overridingTitle": "GKVoiceChat",
              "overridingTitleInlineContent": [
                {
                  "code": "GKVoiceChat",
                  "type": "codeVoice"
                }
              ],
              "type": "reference"
            },
            {
              "text": " object, providing a unique name for the channel, sets a connection change handler, and sets the volume.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "if voiceChat == nil {",
            "    // Create the voice chat object.",
            "    voiceChat = myMatch?.voiceChat(withName: \"RealTimeGameChannel\")",
            "}",
            "",
            "// Exit early if the app can't start a voice chat session.",
            "guard let voiceChat = voiceChat else { return }",
            "",
            "// Handle an unknown, connected, or disconnected player state.",
            "voiceChat.playerVoiceChatStateDidChangeHandler = voiceChatChangeHandler",
            "",
            "// Set the audio volume.",
            "voiceChat.volume = 0.5"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Next it activates a shared audio session.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "do {",
            "    let audioSession = AVAudioSession.sharedInstance()",
            "",
            "    try audioSession.setActive(true, options: [])",
            "} catch {",
            "    print(\"AVAudioSession error: \\(error.localizedDescription).\")",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Then it starts and activates the voice chat.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "voiceChat.start()",
            "voiceChat.isActive = true"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "After both players tap the telephone bubble, the state changes to ",
              "type": "text"
            },
            {
              "code": "GKVoiceChat.PlayerState.connected",
              "type": "codeVoice"
            },
            {
              "text": " and they can begin speaking.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The first time the sample starts voice chat, the system displays a dialog asking the player whether the sample may use the microphone.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "This dialog displays the value of the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSMicrophoneUsageDescription",
              "isActive": true,
              "overridingTitle": "NSMicrophoneUsageDescription",
              "overridingTitleInlineContent": [
                {
                  "code": "NSMicrophoneUsageDescription",
                  "type": "codeVoice"
                }
              ],
              "type": "reference"
            },
            {
              "text": " information property list key as the reason for requesting access permission.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When the player taps the telephone bubble again, the ",
              "type": "text"
            },
            {
              "code": "stopVoiceChat()",
              "type": "codeVoice"
            },
            {
              "text": " method stops the voice chat and deactivates the shared audio session.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// Stop the voice chat.",
            "voiceChat?.stop()",
            "voiceChat = nil",
            "",
            "// Deactivate the shared audio session.",
            "do {",
            "    let audioSession = AVAudioSession.sharedInstance()",
            "",
            "    try audioSession.setActive(false, options: [])",
            "} catch {",
            "    print(\"Error: \\(error.localizedDescription).\")",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "You can enhance this sample to provide more feedback and controls, such as:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Show when players connect to the voice chat and start speaking in the connection change handler.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Add a control to mute the voice chat using the ",
                      "type": "text"
                    },
                    {
                      "code": "muteVoiceChat()",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "unmuteVoiceChat()",
                      "type": "codeVoice"
                    },
                    {
                      "text": " methods.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Let players change the volume using the ",
                      "type": "text"
                    },
                    {
                      "code": "voiceChat(volume:)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " method.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Notify the player when the opponent wants to voice chat.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Connect-players-with-friends",
          "level": 3,
          "text": "Connect players with friends",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This sample uses Game Center features that let players request friends and let the game access the playerâ€™s friends list.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When the player taps Add Friends in the Friends section of the content view, the ",
              "type": "text"
            },
            {
              "code": "RealTimeGame.addFriends()",
              "type": "codeVoice"
            },
            {
              "text": " method presents a view controller that allows the player to send a friend request to another player.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "do {",
            "    try GKLocalPlayer.local.presentFriendRequestCreator(from: viewController)",
            "} catch {",
            "    print(\"Error: \\(error.localizedDescription).\")",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When the player taps Access Friends, the ",
              "type": "text"
            },
            {
              "code": "accessFriends()",
              "type": "codeVoice"
            },
            {
              "text": " method checks the authorization status before accessing the playerâ€™s friends.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let authorizationStatus = try await GKLocalPlayer.local.loadFriendsAuthorizationStatus()"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "If the status is ",
              "type": "text"
            },
            {
              "code": "GKFriendsAuthorizationStatus.notDetermined",
              "type": "codeVoice"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "code": "GKFriendsAuthorizationStatus.authorized",
              "type": "codeVoice"
            },
            {
              "text": ", the method loads the friends and displays their names in a sheet.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// Load the local player's friends.",
            "let players = try await GKLocalPlayer.local.loadFriends()"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The first time the sample loads the playerâ€™s friends, the system displays a dialog asking the player whether the sample may access their friends.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "This dialog displays the value of the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSGKFriendListUsageDescription",
              "isActive": true,
              "overridingTitle": "NSGKFriendListUsageDescription",
              "overridingTitleInlineContent": [
                {
                  "code": "NSGKFriendListUsageDescription",
                  "type": "codeVoice"
                }
              ],
              "type": "reference"
            },
            {
              "text": " information property list key as the reason for requesting access permission.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "An error occurs if the sample calls ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GameKit/GKLocalPlayer/loadFriends(_:)",
              "isActive": true,
              "overridingTitle": "loadFriends()",
              "overridingTitleInlineContent": [
                {
                  "code": "loadFriends()",
                  "type": "codeVoice"
                }
              ],
              "type": "reference"
            },
            {
              "text": " without permission or without providing a reason using the ",
              "type": "text"
            },
            {
              "code": "NSGKFriendListUsageDescription",
              "type": "codeVoice"
            },
            {
              "text": " key.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Report-progress-toward-an-achievement",
          "level": 3,
          "text": "Report progress toward an achievement",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "startMyMatchWith(match:)",
              "type": "codeVoice"
            },
            {
              "text": " method also reports progress toward an achievement.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Each time the player starts a match, they earn 10% toward this achievement until they reach 100%.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// Set the progress for the achievement.",
            "achievement?.percentComplete = achievement!.percentComplete + 10.0",
            "",
            "// Report the progress to Game Center.",
            "GKAchievement.report(achievementsToReport, withCompletionHandler: {(error: Error?) in",
            "    if let error {",
            "        print(\"Error: \\(error.localizedDescription).\")",
            "    }",
            "})"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "For details about configuring achievements for a game, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GameKit/rewarding-players-with-achievements",
              "isActive": true,
              "overridingTitle": "Rewarding players with achievements",
              "overridingTitleInlineContent": [
                {
                  "text": "Rewarding players with achievements",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Submit-scores-to-the-leaderboard",
          "level": 3,
          "text": "Submit scores to the leaderboard",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "saveScore()",
              "type": "codeVoice"
            },
            {
              "text": " method saves the local playerâ€™s score to the leaderboard when either the player wins or the opponent forfeits.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "GKLeaderboard.submitScore(myScore, context: 0, player: GKLocalPlayer.local,",
            "    leaderboardIDs: [\"123\"]) { error in",
            "    if let error {",
            "        print(\"Error: \\(error.localizedDescription).\")",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "For details about configuring leaderboards, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GameKit/creating-recurring-leaderboards",
              "isActive": true,
              "overridingTitle": "Creating recurring leaderboards",
              "overridingTitleInlineContent": [
                {
                  "text": "Creating recurring leaderboards",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Display-achievements-and-leaderboards",
          "level": 3,
          "text": "Display achievements and leaderboards",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The player can see their achievements and top scores using the access point that appears in the upper-left corner, or by tapping the buttons below Game Center Data in the content view. For example, when the player taps Top Scores, the ",
              "type": "text"
            },
            {
              "code": "RealTimeGame.topScore()",
              "type": "codeVoice"
            },
            {
              "text": " method shows the scores in the Game Center dashboard.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let viewController = GKGameCenterViewController(leaderboardID: \"123\", playerScope: GKLeaderboard.PlayerScope.global,",
            "                                                timeScope: GKLeaderboard.TimeScope.allTime)",
            "viewController.gameCenterDelegate = self",
            "rootViewController?.present(viewController, animated: true) { }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "For more information about displaying Game Center information, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GameKit/adding-an-access-point-to-your-game",
              "isActive": true,
              "overridingTitle": "Adding an access point to your game",
              "overridingTitleInlineContent": [
                {
                  "text": "Adding an access point to your game",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/GameKit/displaying-the-game-center-dashboard",
              "isActive": true,
              "overridingTitle": "Displaying the Game Center dashboard",
              "overridingTitleInlineContent": [
                {
                  "text": "Displaying the Game Center dashboard",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "bbbac5efeb8f/CreatingRealTimeGames.zip": {
      "checksum": "bbbac5efeb8f6030286a63d94f45e5dbb3673eb584f79185ec3d07ff3aa15f962fe3e1556b8342bf8d66fb5f8a0c9d7c9c14871b1136e1284b68308a54cd34e8",
      "identifier": "bbbac5efeb8f/CreatingRealTimeGames.zip",
      "type": "download",
      "url": "https://docs-assets.developer.apple.com/published/bbbac5efeb8f/CreatingRealTimeGames.zip"
    },
    "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSGKFriendListUsageDescription": {
      "abstract": [
        {
          "text": "A message that tells the user why the app needs access to their Game Center friends list.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSGKFriendListUsageDescription",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSGKFriendListUsageDescription",
      "type": "topic",
      "url": "/documentation/BundleResources/Information-Property-List/NSGKFriendListUsageDescription"
    },
    "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSMicrophoneUsageDescription": {
      "abstract": [
        {
          "text": "A message that tells the user why the app is requesting access to the deviceâ€™s microphone.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSMicrophoneUsageDescription",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSMicrophoneUsageDescription",
      "type": "topic",
      "url": "/documentation/BundleResources/Information-Property-List/NSMicrophoneUsageDescription"
    },
    "doc://com.apple.documentation/documentation/GameKit/GKInviteEventListener/player(_:didAccept:)": {
      "abstract": [
        {
          "text": "Handles the event when the local player accepts an invitation from another player.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "optional"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "player"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "player"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)GKPlayer",
          "text": "GKPlayer"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "didAccept"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "invite"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)GKInvite",
          "text": "GKInvite"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GameKit/GKInviteEventListener/player(_:didAccept:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "player(_:didAccept:)",
      "type": "topic",
      "url": "/documentation/GameKit/GKInviteEventListener/player(_:didAccept:)"
    },
    "doc://com.apple.documentation/documentation/GameKit/GKLocalPlayer/loadFriends(_:)": {
      "abstract": [
        {
          "text": "Loads the local playerâ€™s friends list if the local player and their friends grant access.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "loadFriends"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "completionHandler"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "@escaping"
        },
        {
          "kind": "text",
          "text": " (["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)GKPlayer",
          "text": "GKPlayer"
        },
        {
          "kind": "text",
          "text": "]?, (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ")?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GameKit/GKLocalPlayer/loadFriends(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "loadFriends(_:)",
      "type": "topic",
      "url": "/documentation/GameKit/GKLocalPlayer/loadFriends(_:)"
    },
    "doc://com.apple.documentation/documentation/GameKit/GKMatch": {
      "abstract": [
        {
          "text": "A peer-to-peer network between a group of players that sign into Game Center.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GKMatch"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GameKit/GKMatch",
      "kind": "symbol",
      "role": "symbol",
      "title": "GKMatch",
      "type": "topic",
      "url": "/documentation/GameKit/GKMatch"
    },
    "doc://com.apple.documentation/documentation/GameKit/GKMatchDelegate/match(_:didReceive:fromRemotePlayer:)": {
      "abstract": [
        {
          "text": "Processes the data sent from another player to the local player.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "optional"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "match"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "match"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)GKMatch",
          "text": "GKMatch"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "didReceive"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "data"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DataV",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "fromRemotePlayer"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "player"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)GKPlayer",
          "text": "GKPlayer"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GameKit/GKMatchDelegate/match(_:didReceive:fromRemotePlayer:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "match(_:didReceive:fromRemotePlayer:)",
      "type": "topic",
      "url": "/documentation/GameKit/GKMatchDelegate/match(_:didReceive:fromRemotePlayer:)"
    },
    "doc://com.apple.documentation/documentation/GameKit/GKMatchDelegate/match(_:player:didChange:)-8ohgr": {
      "abstract": [
        {
          "text": "Handles when players connect or disconnect from a match.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "optional"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "match"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "match"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)GKMatch",
          "text": "GKMatch"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "player"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)GKPlayer",
          "text": "GKPlayer"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "didChange"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "state"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@GKPlayerConnectionState",
          "text": "GKPlayerConnectionState"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GameKit/GKMatchDelegate/match(_:player:didChange:)-8ohgr",
      "kind": "symbol",
      "role": "symbol",
      "title": "match(_:player:didChange:)",
      "type": "topic",
      "url": "/documentation/GameKit/GKMatchDelegate/match(_:player:didChange:)-8ohgr"
    },
    "doc://com.apple.documentation/documentation/GameKit/GKMatchmaker/findMatch(for:withCompletionHandler:)": {
      "abstract": [
        {
          "text": "Initiates a request to find players for a peer-to-peer match.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "findMatch"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "request"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)GKMatchRequest",
          "text": "GKMatchRequest"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "withCompletionHandler"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "completionHandler"
        },
        {
          "kind": "text",
          "text": ": (("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)GKMatch",
          "text": "GKMatch"
        },
        {
          "kind": "text",
          "text": "?, (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ")?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")? = nil)"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GameKit/GKMatchmaker/findMatch(for:withCompletionHandler:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "findMatch(for:withCompletionHandler:)",
      "type": "topic",
      "url": "/documentation/GameKit/GKMatchmaker/findMatch(for:withCompletionHandler:)"
    },
    "doc://com.apple.documentation/documentation/GameKit/GKMatchmakerViewController": {
      "abstract": [
        {
          "text": "An interface that allows a player to invite other players to a real-time game and automatch to fill any empty slots.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GKMatchmakerViewController"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GameKit/GKMatchmakerViewController",
      "kind": "symbol",
      "role": "symbol",
      "title": "GKMatchmakerViewController",
      "type": "topic",
      "url": "/documentation/GameKit/GKMatchmakerViewController"
    },
    "doc://com.apple.documentation/documentation/GameKit/GKMatchmakerViewControllerDelegate/matchmakerViewController(_:didFind:)": {
      "abstract": [
        {
          "text": "Handles when the view controller finds players for a peer-to-peer match.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "optional"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "matchmakerViewController"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "viewController"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)GKMatchmakerViewController",
          "text": "GKMatchmakerViewController"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "didFind"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "match"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)GKMatch",
          "text": "GKMatch"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GameKit/GKMatchmakerViewControllerDelegate/matchmakerViewController(_:didFind:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "matchmakerViewController(_:didFind:)",
      "type": "topic",
      "url": "/documentation/GameKit/GKMatchmakerViewControllerDelegate/matchmakerViewController(_:didFind:)"
    },
    "doc://com.apple.documentation/documentation/GameKit/GKVoiceChat": {
      "abstract": [
        {
          "text": "A voice channel that allows players to speak with each other in a multiplayer game.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GKVoiceChat"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GameKit/GKVoiceChat",
      "kind": "symbol",
      "role": "symbol",
      "title": "GKVoiceChat",
      "type": "topic",
      "url": "/documentation/GameKit/GKVoiceChat"
    },
    "doc://com.apple.documentation/documentation/GameKit/adding-an-access-point-to-your-game": {
      "abstract": [
        {
          "text": "Provide your users a convenient connection to the Game Center dashboard.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GameKit/adding-an-access-point-to-your-game",
      "kind": "article",
      "role": "article",
      "title": "Adding an access point to your game",
      "type": "topic",
      "url": "/documentation/GameKit/adding-an-access-point-to-your-game"
    },
    "doc://com.apple.documentation/documentation/GameKit/creating-recurring-leaderboards": {
      "abstract": [
        {
          "text": "Create a leaderboard for your game that ranks player scores based on a schedule.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GameKit/creating-recurring-leaderboards",
      "kind": "article",
      "role": "article",
      "title": "Creating recurring leaderboards",
      "type": "topic",
      "url": "/documentation/GameKit/creating-recurring-leaderboards"
    },
    "doc://com.apple.documentation/documentation/GameKit/displaying-the-game-center-dashboard": {
      "abstract": [
        {
          "text": "Provide an interface for players to navigate to their Game Center data from your game.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GameKit/displaying-the-game-center-dashboard",
      "kind": "article",
      "role": "article",
      "title": "Displaying the Game Center dashboard",
      "type": "topic",
      "url": "/documentation/GameKit/displaying-the-game-center-dashboard"
    },
    "doc://com.apple.documentation/documentation/GameKit/enabling-and-configuring-game-center": {
      "abstract": [
        {
          "text": "Enable Game Center in your Xcode project and configure features in App Store Connect.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GameKit/enabling-and-configuring-game-center",
      "kind": "article",
      "role": "article",
      "title": "Enabling and configuring Game Center",
      "type": "topic",
      "url": "/documentation/GameKit/enabling-and-configuring-game-center"
    },
    "doc://com.apple.documentation/documentation/GameKit/finding-players-using-matchmaking-rules": {
      "abstract": [
        {
          "text": "Create a more customized and optimized gaming experience by using matchmaking rules to find players in a real-time game.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GameKit/finding-players-using-matchmaking-rules",
      "kind": "article",
      "role": "article",
      "title": "Finding players using matchmaking rules",
      "type": "topic",
      "url": "/documentation/GameKit/finding-players-using-matchmaking-rules"
    },
    "doc://com.apple.documentation/documentation/GameKit/rewarding-players-with-achievements": {
      "abstract": [
        {
          "text": "Use achievements to motivate players and engage them more in your game.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/GameKit/rewarding-players-with-achievements",
      "kind": "article",
      "role": "article",
      "title": "Rewarding players with achievements",
      "type": "topic",
      "url": "/documentation/GameKit/rewarding-players-with-achievements"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.gamekit/documentation/GameKit": {
      "abstract": [
        {
          "text": "Enable players to interact with friends, compare leaderboard ranks, earn achievements, and participate in multiplayer games.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.gamekit/documentation/GameKit",
      "kind": "symbol",
      "role": "collection",
      "title": "GameKit",
      "type": "topic",
      "url": "/documentation/gamekit"
    },
    "doc://com.apple.gamekit/documentation/GameKit/GKInvite": {
      "abstract": [
        {
          "text": "An invitation to join a match sent to the local player from another player.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GKInvite"
        }
      ],
      "identifier": "doc://com.apple.gamekit/documentation/GameKit/GKInvite",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "GKInvite"
        }
      ],
      "role": "symbol",
      "title": "GKInvite",
      "type": "topic",
      "url": "/documentation/gamekit/gkinvite"
    },
    "doc://com.apple.gamekit/documentation/GameKit/GKInviteEventListener": {
      "abstract": [
        {
          "text": "A protocol that handles invite events from Game Center.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GKInviteEventListener"
        }
      ],
      "identifier": "doc://com.apple.gamekit/documentation/GameKit/GKInviteEventListener",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "GKInviteEventListener"
        }
      ],
      "role": "symbol",
      "title": "GKInviteEventListener",
      "type": "topic",
      "url": "/documentation/gamekit/gkinviteeventlistener"
    },
    "doc://com.apple.gamekit/documentation/GameKit/GKMatch": {
      "abstract": [
        {
          "text": "A peer-to-peer network between a group of players that sign into Game Center.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GKMatch"
        }
      ],
      "identifier": "doc://com.apple.gamekit/documentation/GameKit/GKMatch",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "GKMatch"
        }
      ],
      "role": "symbol",
      "title": "GKMatch",
      "type": "topic",
      "url": "/documentation/gamekit/gkmatch"
    },
    "doc://com.apple.gamekit/documentation/GameKit/GKMatchRequest": {
      "abstract": [
        {
          "text": "An object that encapsulates the parameters to create a real-time or turn-based match.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GKMatchRequest"
        }
      ],
      "identifier": "doc://com.apple.gamekit/documentation/GameKit/GKMatchRequest",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "GKMatchRequest"
        }
      ],
      "role": "symbol",
      "title": "GKMatchRequest",
      "type": "topic",
      "url": "/documentation/gamekit/gkmatchrequest"
    },
    "doc://com.apple.gamekit/documentation/GameKit/GKMatchmaker": {
      "abstract": [
        {
          "text": "An object that creates matches with other players without presenting an interface to the players.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GKMatchmaker"
        }
      ],
      "identifier": "doc://com.apple.gamekit/documentation/GameKit/GKMatchmaker",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "GKMatchmaker"
        }
      ],
      "role": "symbol",
      "title": "GKMatchmaker",
      "type": "topic",
      "url": "/documentation/gamekit/gkmatchmaker"
    },
    "doc://com.apple.gamekit/documentation/GameKit/GKMatchmakerViewController": {
      "abstract": [
        {
          "text": "An interface that allows a player to invite other players to a real-time game and automatch to fill any empty slots.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GKMatchmakerViewController"
        }
      ],
      "identifier": "doc://com.apple.gamekit/documentation/GameKit/GKMatchmakerViewController",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "GKMatchmakerViewController"
        }
      ],
      "role": "symbol",
      "title": "GKMatchmakerViewController",
      "type": "topic",
      "url": "/documentation/gamekit/gkmatchmakerviewcontroller"
    },
    "doc://com.apple.gamekit/documentation/GameKit/adding-voice-chat-to-multiplayer-games": {
      "abstract": [
        {
          "text": "Enable players to voice chat with all, or groups of, players in a multiplayer game.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.gamekit/documentation/GameKit/adding-voice-chat-to-multiplayer-games",
      "kind": "article",
      "role": "article",
      "title": "Adding voice chat to multiplayer games",
      "type": "topic",
      "url": "/documentation/gamekit/adding-voice-chat-to-multiplayer-games"
    },
    "doc://com.apple.gamekit/documentation/GameKit/exchanging-data-between-players-in-real-time-games": {
      "abstract": [
        {
          "text": "Send data between players in a real-time multiplayer game.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.gamekit/documentation/GameKit/exchanging-data-between-players-in-real-time-games",
      "kind": "article",
      "role": "article",
      "title": "Exchanging data between players in real-time games",
      "type": "topic",
      "url": "/documentation/gamekit/exchanging-data-between-players-in-real-time-games"
    },
    "doc://com.apple.gamekit/documentation/GameKit/finding-multiple-players-for-a-game": {
      "abstract": [
        {
          "text": "Discover and invite other players to participate in a real-time game.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.gamekit/documentation/GameKit/finding-multiple-players-for-a-game",
      "kind": "article",
      "role": "article",
      "title": "Finding multiple players for a game",
      "type": "topic",
      "url": "/documentation/gamekit/finding-multiple-players-for-a-game"
    },
    "doc://com.apple.gamekit/documentation/GameKit/matchmaking-rules": {
      "abstract": [
        {
          "text": "Game Center applies different type of rules you create in a particular order to find the best matches.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.gamekit/documentation/GameKit/matchmaking-rules",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Matchmaking rules",
      "type": "topic",
      "url": "/documentation/gamekit/matchmaking-rules"
    },
    "https://developer.apple.com/help/app-store-connect/configure-game-center/configure-achievements": {
      "identifier": "https://developer.apple.com/help/app-store-connect/configure-game-center/configure-achievements",
      "title": "Configure achievements",
      "titleInlineContent": [
        {
          "text": "Configure achievements",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/help/app-store-connect/configure-game-center/configure-achievements"
    },
    "https://developer.apple.com/help/app-store-connect/configure-game-center/configure-leaderboards": {
      "identifier": "https://developer.apple.com/help/app-store-connect/configure-game-center/configure-leaderboards",
      "title": "Configure leaderboards",
      "titleInlineContent": [
        {
          "text": "Configure leaderboards",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/help/app-store-connect/configure-game-center/configure-leaderboards"
    },
    "https://developer.apple.com/help/app-store-connect/create-an-app-record/add-a-new-app": {
      "identifier": "https://developer.apple.com/help/app-store-connect/create-an-app-record/add-a-new-app",
      "title": "Add a new app",
      "titleInlineContent": [
        {
          "text": "Add a new app",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/help/app-store-connect/create-an-app-record/add-a-new-app"
    }
  },
  "sampleCodeDownload": {
    "action": {
      "identifier": "bbbac5efeb8f/CreatingRealTimeGames.zip",
      "isActive": true,
      "overridingTitle": "Download",
      "type": "reference"
    },
    "kind": "sampleDownload"
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Real-time-games",
      "generated": true,
      "identifiers": [
        "doc://com.apple.gamekit/documentation/GameKit/finding-multiple-players-for-a-game",
        "doc://com.apple.gamekit/documentation/GameKit/exchanging-data-between-players-in-real-time-games",
        "doc://com.apple.gamekit/documentation/GameKit/adding-voice-chat-to-multiplayer-games",
        "doc://com.apple.gamekit/documentation/GameKit/matchmaking-rules",
        "doc://com.apple.gamekit/documentation/GameKit/GKMatchRequest",
        "doc://com.apple.gamekit/documentation/GameKit/GKMatchmaker",
        "doc://com.apple.gamekit/documentation/GameKit/GKMatchmakerViewController",
        "doc://com.apple.gamekit/documentation/GameKit/GKInviteEventListener",
        "doc://com.apple.gamekit/documentation/GameKit/GKInvite",
        "doc://com.apple.gamekit/documentation/GameKit/GKMatch"
      ],
      "title": "Real-time games"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Real-time-games",
              "generated": true,
              "identifiers": [
                "doc://com.apple.gamekit/documentation/GameKit/finding-multiple-players-for-a-game",
                "doc://com.apple.gamekit/documentation/GameKit/exchanging-data-between-players-in-real-time-games",
                "doc://com.apple.gamekit/documentation/GameKit/adding-voice-chat-to-multiplayer-games",
                "doc://com.apple.gamekit/documentation/GameKit/matchmaking-rules",
                "doc://com.apple.gamekit/documentation/GameKit/GKMatchRequest",
                "doc://com.apple.gamekit/documentation/GameKit/GKMatchmaker",
                "doc://com.apple.gamekit/documentation/GameKit/GKMatchmakerViewController",
                "doc://com.apple.gamekit/documentation/GameKit/GKInviteEventListener",
                "doc://com.apple.gamekit/documentation/GameKit/GKInvite",
                "doc://com.apple.gamekit/documentation/GameKit/GKMatch"
              ],
              "title": "Real-time games"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1GameKit~1GKInviteEventListener~1player(_:didAccept:)/title",
          "value": "player:didAcceptInvite:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1GameKit~1GKInviteEventListener~1player(_:didAccept:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "player:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)GKPlayer",
              "text": "GKPlayer"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "player"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "didAcceptInvite:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)GKInvite",
              "text": "GKInvite"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "invite"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1GameKit~1GKMatchDelegate~1match(_:didReceive:fromRemotePlayer:)/title",
          "value": "match:didReceiveData:fromRemotePlayer:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1GameKit~1GKMatchDelegate~1match(_:didReceive:fromRemotePlayer:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "match:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)GKMatch",
              "text": "GKMatch"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "match"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "didReceiveData:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSData",
              "text": "NSData"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "data"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "fromRemotePlayer:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)GKPlayer",
              "text": "GKPlayer"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "player"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1GameKit~1GKMatchmakerViewControllerDelegate~1matchmakerViewController(_:didFind:)/title",
          "value": "matchmakerViewController:didFindMatch:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1GameKit~1GKMatchmakerViewControllerDelegate~1matchmakerViewController(_:didFind:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "matchmakerViewController:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)GKMatchmakerViewController",
              "text": "GKMatchmakerViewController"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "viewController"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "didFindMatch:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)GKMatch",
              "text": "GKMatch"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "match"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1GameKit~1GKMatchmaker~1findMatch(for:withCompletionHandler:)/title",
          "value": "findMatchForRequest:withCompletionHandler:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1GameKit~1GKMatchmaker~1findMatch(for:withCompletionHandler:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "findMatchForRequest:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)GKMatchRequest",
              "text": "GKMatchRequest"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "request"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "withCompletionHandler:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": " (^)("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)GKMatch",
              "text": "GKMatch"
            },
            {
              "kind": "text",
              "text": " * "
            },
            {
              "kind": "internalParam",
              "text": "match"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSError",
              "text": "NSError"
            },
            {
              "kind": "text",
              "text": " * "
            },
            {
              "kind": "internalParam",
              "text": "error"
            },
            {
              "kind": "text",
              "text": ")) "
            },
            {
              "kind": "internalParam",
              "text": "completionHandler"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKMatchmakerViewController/title",
          "value": "GKMatchmakerViewController"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKMatchmakerViewController/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "GKMatchmakerViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKMatchmakerViewController/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "GKMatchmakerViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1GameKit~1GKMatch/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "GKMatch"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1GameKit~1GKVoiceChat/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "GKVoiceChat"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKMatchmaker/title",
          "value": "GKMatchmaker"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKMatchmaker/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "GKMatchmaker"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKMatchmaker/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "GKMatchmaker"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKMatch/title",
          "value": "GKMatch"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKMatch/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "GKMatch"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKMatch/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "GKMatch"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1GameKit~1GKMatchmakerViewController/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "GKMatchmakerViewController"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSViewController",
              "text": "NSViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKMatchRequest/title",
          "value": "GKMatchRequest"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKMatchRequest/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "GKMatchRequest"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKMatchRequest/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "GKMatchRequest"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1GameKit~1GKMatchDelegate~1match(_:player:didChange:)-8ohgr/title",
          "value": "match:player:didChangeConnectionState:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1GameKit~1GKMatchDelegate~1match(_:player:didChange:)-8ohgr/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "match:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)GKMatch",
              "text": "GKMatch"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "match"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "player:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)GKPlayer",
              "text": "GKPlayer"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "player"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "didChangeConnectionState:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@E@GKPlayerConnectionState",
              "text": "GKPlayerConnectionState"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "internalParam",
              "text": "state"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKInvite/title",
          "value": "GKInvite"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKInvite/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "GKInvite"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKInvite/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "GKInvite"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1GameKit~1GKLocalPlayer~1loadFriends(_:)/title",
          "value": "loadFriends:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1GameKit~1GKLocalPlayer~1loadFriends(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "loadFriends:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": " (^)("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:Q$objc(cs)NSArray",
              "text": "NSArray<GKPlayer *>"
            },
            {
              "kind": "text",
              "text": " * "
            },
            {
              "kind": "internalParam",
              "text": "friends"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSError",
              "text": "NSError"
            },
            {
              "kind": "text",
              "text": " * "
            },
            {
              "kind": "internalParam",
              "text": "error"
            },
            {
              "kind": "text",
              "text": ")) "
            },
            {
              "kind": "internalParam",
              "text": "completionHandler"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKInviteEventListener/title",
          "value": "GKInviteEventListener"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKInviteEventListener/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "GKInviteEventListener"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.gamekit~1documentation~1GameKit~1GKInviteEventListener/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "GKInviteEventListener"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/gamekit/creating-real-time-games"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/gamekit/creating-real-time-games"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
