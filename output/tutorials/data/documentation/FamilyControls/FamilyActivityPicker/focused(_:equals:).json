{
  "abstract": [
    {
      "text": "Modifies this view by binding its focus state to the given state value.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.FamilyControls/documentation/FamilyControls",
        "doc://com.apple.FamilyControls/documentation/FamilyControls/FamilyActivityPicker"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.FamilyControls/documentation/FamilyControls/FamilyActivityPicker/focused(_:equals:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI4ViewPAAE7focused_6equalsQrAA10FocusStateV7BindingVyqd___G_qd__tSHRd__lF::SYNTHESIZED::s:14FamilyControls0A14ActivityPickerV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "focused"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "Value"
      },
      {
        "kind": "text",
        "text": ">("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI10FocusStateV",
        "text": "FocusState"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "text": "Value"
      },
      {
        "kind": "text",
        "text": ">."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI10FocusStateV7BindingV",
        "text": "Binding"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "equals"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "text": "Value"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "keyword",
        "text": "some"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4ViewP",
        "text": "View"
      }
    ],
    "modules": [
      {
        "name": "FamilyControls",
        "relatedModules": [
          "SwiftUI"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "12.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "focused(_:equals:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "nonisolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "focused"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Value"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "binding"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI10FocusStateV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI10FocusStateV",
              "text": "FocusState"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "text": "Value"
            },
            {
              "kind": "text",
              "text": ">."
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI10FocusStateV7BindingV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI10FocusStateV7BindingV",
              "text": "Binding"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "equals"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "value"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "text": "Value"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "keyword",
              "text": "some"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Value"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:SH",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SH",
              "text": "Hashable"
            },
            {
              "kind": "text",
              "text": "\n"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The state binding to register. When focus moves to the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "modified view, the binding sets the bound value to the corresponding",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "match value. If a caller sets the state value programmatically to the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "matching value, then focus moves to the modified view. When focus",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "leaves the modified view, the binding sets the bound value to",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "code": "nil",
                  "type": "codeVoice"
                },
                {
                  "text": ". If a caller sets the value to ",
                  "type": "text"
                },
                {
                  "code": "nil",
                  "type": "codeVoice"
                },
                {
                  "text": ", SwiftUI automatically",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "dismisses focus.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "binding"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The value to match against when determining whether the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "binding should change.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "value"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The modified view.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use this modifier to cause the view to receive focus whenever the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the ",
              "type": "text"
            },
            {
              "code": "binding",
              "type": "codeVoice"
            },
            {
              "text": " equals the ",
              "type": "text"
            },
            {
              "code": "value",
              "type": "codeVoice"
            },
            {
              "text": ". Typically, you create an enumeration",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of fields that may receive focus, bind an instance of this enumeration,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and assign its cases to focusable views.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The following example uses the cases of a ",
              "type": "text"
            },
            {
              "code": "LoginForm",
              "type": "codeVoice"
            },
            {
              "text": " enumeration to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "bind the focus state of two ",
              "type": "text"
            },
            {
              "code": "TextField",
              "type": "codeVoice"
            },
            {
              "text": " views. A sign-in button",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "validates the fields and sets the bound ",
              "type": "text"
            },
            {
              "code": "focusedField",
              "type": "codeVoice"
            },
            {
              "text": " value to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "any field that requires the user to correct a problem.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct LoginForm {",
            "    enum Field: Hashable {",
            "        case usernameField",
            "        case passwordField",
            "    }",
            "",
            "    @State private var username = \"\"",
            "    @State private var password = \"\"",
            "    @FocusState private var focusedField: Field?",
            "",
            "    var body: some View {",
            "        Form {",
            "            TextField(\"Username\", text: $username)",
            "                .focused($focusedField, equals: .usernameField)",
            "",
            "            SecureField(\"Password\", text: $password)",
            "                .focused($focusedField, equals: .passwordField)",
            "",
            "            Button(\"Sign In\") {",
            "                if username.isEmpty {",
            "                    focusedField = .usernameField",
            "                } else if password.isEmpty {",
            "                    focusedField = .passwordField",
            "                } else {",
            "                    handleLogin(username, password)",
            "                }",
            "            }",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "To control focus using a Boolean, use the ",
              "type": "text"
            },
            {
              "code": "View/focused(_:)",
              "type": "codeVoice"
            },
            {
              "text": " method",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instead.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.FamilyControls/documentation/FamilyControls": {
      "abstract": [
        {
          "text": "Authorize your app to provide parental controls on a device.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.FamilyControls/documentation/FamilyControls",
      "kind": "symbol",
      "role": "collection",
      "title": "FamilyControls",
      "type": "topic",
      "url": "/documentation/familycontrols"
    },
    "doc://com.apple.FamilyControls/documentation/FamilyControls/FamilyActivityPicker": {
      "abstract": [
        {
          "text": "A view in which users specify applications, web domains,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and categories without revealing their choices to the app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FamilyActivityPicker"
        }
      ],
      "identifier": "doc://com.apple.FamilyControls/documentation/FamilyControls/FamilyActivityPicker",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FamilyActivityPicker"
        }
      ],
      "role": "symbol",
      "title": "FamilyActivityPicker",
      "type": "topic",
      "url": "/documentation/familycontrols/familyactivitypicker"
    },
    "doc://com.apple.FamilyControls/documentation/FamilyControls/FamilyActivityPicker/focusable(_:)": {
      "abstract": [
        {
          "text": "Specifies if the view is focusable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focusable"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.FamilyControls/documentation/FamilyControls/FamilyActivityPicker/focusable(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focusable(_:)",
      "type": "topic",
      "url": "/documentation/familycontrols/familyactivitypicker/focusable(_:)"
    },
    "doc://com.apple.FamilyControls/documentation/FamilyControls/FamilyActivityPicker/focused(_:)": {
      "abstract": [
        {
          "text": "Modifies this view by binding its focus state to the given Boolean state",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focused"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10FocusStateV",
          "text": "FocusState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10FocusStateV7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.FamilyControls/documentation/FamilyControls/FamilyActivityPicker/focused(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focused(_:)",
      "type": "topic",
      "url": "/documentation/familycontrols/familyactivitypicker/focused(_:)"
    },
    "doc://com.apple.FamilyControls/documentation/FamilyControls/FamilyActivityPicker/focused(_:equals:)": {
      "abstract": [
        {
          "text": "Modifies this view by binding its focus state to the given state value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focused"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10FocusStateV",
          "text": "FocusState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10FocusStateV7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "equals"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.FamilyControls/documentation/FamilyControls/FamilyActivityPicker/focused(_:equals:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focused(_:equals:)",
      "type": "topic",
      "url": "/documentation/familycontrols/familyactivitypicker/focused(_:equals:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI10FocusStateV": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value that SwiftUI updates as the placement of focus within the scene changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@propertyWrapper"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FocusState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SH",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI10FocusStateV",
      "kind": "symbol",
      "role": "symbol",
      "title": "FocusState",
      "type": "topic",
      "url": "/documentation/SwiftUI/FocusState"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI10FocusStateV7BindingV": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value that indicates the current focus location.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@propertyWrapper"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Binding"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI10FocusStateV7BindingV",
      "kind": "symbol",
      "role": "symbol",
      "title": "FocusState.Binding",
      "type": "topic",
      "url": "/documentation/SwiftUI/FocusState/Binding"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
      "kind": "symbol",
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/SwiftUI/View"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Focus",
      "generated": true,
      "identifiers": [
        "doc://com.apple.FamilyControls/documentation/FamilyControls/FamilyActivityPicker/focused(_:)",
        "doc://com.apple.FamilyControls/documentation/FamilyControls/FamilyActivityPicker/focusable(_:)"
      ],
      "title": "Focus"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/familycontrols/familyactivitypicker/focused(_:equals:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
