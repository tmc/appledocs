{
  "abstract": [
    {
      "text": "Reduce or remove periodic artifacts from images.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.accelerate/documentation/Accelerate"
      ],
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.accelerate/documentation/Accelerate",
        "doc://com.apple.accelerate/documentation/Accelerate/fast-fourier-transforms"
      ],
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.accelerate/documentation/Accelerate",
        "doc://com.apple.accelerate/documentation/Accelerate/vdsp-library",
        "doc://com.apple.accelerate/documentation/Accelerate/fast-fourier-transforms"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.accelerate/documentation/Accelerate/halftone-descreening-with-2d-fast-fourier-transform"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Accelerate"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "introducedAt": "13.0",
        "name": "macOS"
      },
      {
        "beta": false,
        "introducedAt": "14.0",
        "name": "Xcode"
      }
    ],
    "role": "sampleCode",
    "roleHeading": "Sample Code",
    "title": "Halftone descreening with 2D fast Fourier transform"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Accelerate’s vDSP module provides functions to perform 2D fast Fourier transforms (FFTs) on matrices of data, such as images. You can exploit the amplitude peaks in the frequency domain of periodic patterns, such as halftone screens, to reduce or remove such artifacts from images. The example below shows an image with halftone artifacts (left) and the same image with the halftone artifacts reduced (right):",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "halftone_descreen_2x.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The sample app reduces halftone artifacts from a source image by first performing forward FFTs on the image and a halftone screen sample. The following image shows the positive frequencies of the halftone sample’s frequency-domain representation. For more information on performing Fourier transforms on 2D data, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/understanding-data-packing-for-fourier-transforms",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "halftone_frequency_domain_2x.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The descreening operation zeroes frequency-domain values in the source image that correspond to the bright peaks in the halftone sample’s frequency-domain values.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Convert-the-image-data-to-a-split-complex-vector",
          "level": 3,
          "text": "Convert the image data to a split-complex vector",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The vImage ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImageBuffer_InitWithCGImage(_:_:_:_:_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function converts the source Core Graphics image to an array of single-precision values. The sample app creates its own backing storage, ",
              "type": "text"
            },
            {
              "code": "pixelsStorage",
              "type": "codeVoice"
            },
            {
              "text": ", rather than using ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImageBuffer_Init(_:_:_:_:_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to ensure that the vImage buffer doesn’t contain any additional padding bytes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let pixelsStorage = UnsafeMutableBufferPointer<Float>.allocate(capacity: pixelCount)",
            "defer {",
            "    pixelsStorage.deallocate()",
            "}",
            "",
            "var tmpBuffer = vImage_Buffer(",
            "    data: pixelsStorage.baseAddress,",
            "    height: vImagePixelCount(cgImage.height),",
            "    width: vImagePixelCount(cgImage.width),",
            "    rowBytes: cgImage.width * MemoryLayout<Float>.stride)",
            "",
            "vImageBuffer_InitWithCGImage(",
            "    &tmpBuffer,",
            "    &Self.imageFormat,",
            "    [0, 0, 0, 0],",
            "    cgImage,",
            "    vImage_Flags(kvImageNoAllocate))"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vDSP_ctoz",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function converts the interleaved pixel values to split-complex format. The function copies odd-numbered pixels to the real parts and the even-numbered pixels to the imaginary parts of each complex value.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "pixelsStorage.withMemoryRebound(to: DSPComplex.self) {",
            "    ",
            "    vDSP_ctoz([DSPComplex]($0), 2,",
            "              &self.dspSplitComplex, 1,",
            "              vDSP_Length(complexValuesCount))",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Create-the-FFT-setup-object",
          "level": 3,
          "text": "Create the FFT setup object",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The sample app creates an FFT setup object that contains all the information required to perform the forward and inverse 2D FFT operations. Creating this setup object can be expensive, so the sample only performs this initialization once.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The following code creates a setup object suitable for performing forward and inverse 2D FFTs on a 1024 x 1024 pixel image:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "static let fftSetUp = vDSP.FFT2D(width: imageWidth,",
            "                                 height: imageHeight,",
            "                                 ofType: DSPSplitComplex.self)!"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Prepare-arrays-for-transformed-image-data",
          "level": 3,
          "text": "Prepare arrays for transformed image data",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Rather than allocating and deallocating memory with each call to the descreening code, the sample app declares several ",
              "type": "text"
            },
            {
              "code": "SplitComplex",
              "type": "codeVoice"
            },
            {
              "text": " structures and an array that the descreening operation uses.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "/// The `SplitComplex` structure that stores the source image frequency-domain pixels.",
            "var imageFrequencyDomainPixels = SplitComplex(count: HalftoneDescreener.complexValuesCount)",
            "",
            "/// The `SplitComplex` structure that stores the halftone sample frequency-domain pixels.",
            "var halftoneFrequencyDomainPixels = SplitComplex(count: HalftoneDescreener.complexValuesCount)",
            "",
            "/// The array that stores the square magnitudes of the halftone frequency-domain values.",
            "var halftoneSampleAmplitudes = [Float](repeating: 0,",
            "                                       count: HalftoneDescreener.complexValuesCount)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Perform-forward-2D-FFTs-on-the-image-data",
          "level": 3,
          "text": "Perform forward 2D FFTs on the image data",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vDSP/FFT/transform(input:output:direction:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function performs a forward 2D FFT on the image data, and creates the frequency-domain representation of the image.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The following code performs the FFT on the source image and the halftone sample data. After the code completes the forward FFT of the halftone sample, the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vDSP/squareMagnitudes(_:result:)-22k5h",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function computes the magnitudes of the complex values representing the halftone sample:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "fftSetUp.transform(input: imagePixels.dspSplitComplex,",
            "                   output: &imageFrequencyDomainPixels.dspSplitComplex,",
            "                   direction: .forward)",
            "",
            "fftSetUp.transform(input: halftonePixels.dspSplitComplex,",
            "                   output: &halftoneFrequencyDomainPixels.dspSplitComplex,",
            "                   direction: .forward)",
            "",
            "vDSP.squareMagnitudes(halftoneFrequencyDomainPixels.dspSplitComplex,",
            "                      result: &halftoneSampleAmplitudes)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Zero-the-peaks-in-the-halftone-sample-magnitude",
          "level": 3,
          "text": "Zero the peaks in the halftone sample magnitude",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The sample app reduces the halftone screen artifacts by manipulating the magnitude of the frequency-domain data for the halftone sample.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vDSP/threshold(_:to:with:)-77g7l",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function sets all magnitude values that are over the threshold to -1, and all magnitude values that are less than or equal to the threshold to 1:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let outputConstant: Float = -1",
            "",
            "vDSP.threshold(halftoneSampleAmplitudes,",
            "               to: threshold,",
            "               with: .signedConstant(outputConstant),",
            "               result: &halftoneSampleAmplitudes)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vDSP/clip(_:to:result:)-3lbii",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function clips the values in the ",
              "type": "text"
            },
            {
              "code": "halftoneSampleAmplitude",
              "type": "codeVoice"
            },
            {
              "text": ", setting all of the high-magnitude values to ",
              "type": "text"
            },
            {
              "code": "0.0",
              "type": "codeVoice"
            },
            {
              "text": ", and all of the low-magnitude values to ",
              "type": "text"
            },
            {
              "code": "1.0",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "vDSP.clip(halftoneSampleAmplitudes,",
            "          to: 0 ... 1,",
            "          result: &halftoneSampleAmplitudes)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Descreen-the-source-image",
          "level": 3,
          "text": "Descreen the source image",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The app multiplies the frequency-domain data of the source image by the values in ",
              "type": "text"
            },
            {
              "code": "halftoneSampleAmplitude",
              "type": "codeVoice"
            },
            {
              "text": ", thus removing or reducing the halftone screen.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "vDSP.multiply(imageFrequencyDomainPixels.dspSplitComplex,",
            "              by: halftoneSampleAmplitudes,",
            "              result: &imageFrequencyDomainPixels.dspSplitComplex)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Perform-an-inverse-2D-FFT-on-the-frequency-domain-data",
          "level": 3,
          "text": "Perform an inverse 2D FFT on the frequency domain data",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vDSP/FFT/transform(input:output:direction:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function performs an inverse FFT on the frequency-domain image data to generate the descreened spatial-domain image.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "fftSetUp.transform(input: imageFrequencyDomainPixels.dspSplitComplex,",
            "                   output: &destinationSpatialDomainPixels.dspSplitComplex,",
            "                   direction: .inverse)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Generate-an-image-from-the-split-complex-vector",
          "level": 3,
          "text": "Generate an image from the split-complex vector",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Finally, the app creates a displayable image from the spatial-domain representation of the treated source image.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var floatPixels = [Float](fromSplitComplex: self.dspSplitComplex,",
            "                          scale: 1 / Float(count),",
            "                          count: count * 2)",
            "",
            "return floatPixels.withUnsafeMutableBytes {",
            "    let tmpBuffer = vImage_Buffer(",
            "        data: $0.baseAddress,",
            "        height: vImagePixelCount(HalftoneDescreener.imageHeight),",
            "        width: vImagePixelCount(HalftoneDescreener.imageWidth),",
            "        rowBytes: HalftoneDescreener.imageWidth * MemoryLayout<Float>.stride)",
            "    ",
            "    return try! tmpBuffer.createCGImage(format: SplitComplex.imageFormat)",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "aec39161b171/HalftoneDescreeningWith2DFastFourierTransform.zip": {
      "checksum": "aec39161b1716b2627b1d837b827c5470bbae076880ba1b48775975116241642166e4c03e3607e774cd7b4eb2ba5bb65901f58ebcfd8e40ebcc3f2b2a3d1a8d1",
      "identifier": "aec39161b171/HalftoneDescreeningWith2DFastFourierTransform.zip",
      "type": "download",
      "url": "https://docs-assets.developer.apple.com/published/aec39161b171/HalftoneDescreeningWith2DFastFourierTransform.zip"
    },
    "doc://com.apple.accelerate/documentation/Accelerate": {
      "abstract": [
        {
          "text": "Make large-scale mathematical computations and image calculations, optimized for high performance and low energy consumption.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate",
      "kind": "symbol",
      "role": "collection",
      "title": "Accelerate",
      "type": "topic",
      "url": "/documentation/accelerate"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/discrete-cosine-transforms": {
      "abstract": [
        {
          "text": "Transform vectors of temporal and spatial domain real values to the frequency domain, and vice versa.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/discrete-cosine-transforms",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Discrete Cosine transforms",
      "type": "topic",
      "url": "/documentation/accelerate/discrete-cosine-transforms"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/discrete-fourier-transforms": {
      "abstract": [
        {
          "text": "Transform vectors of temporal and spatial domain complex values to the frequency domain, and vice versa.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/discrete-fourier-transforms",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Discrete Fourier transforms",
      "type": "topic",
      "url": "/documentation/accelerate/discrete-fourier-transforms"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/fast-fourier-transforms": {
      "abstract": [
        {
          "text": "Transform vectors and matrices of temporal and spatial domain complex values to the frequency domain, and vice versa.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/fast-fourier-transforms",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Fast Fourier transforms",
      "type": "topic",
      "url": "/documentation/accelerate/fast-fourier-transforms"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/finding-the-component-frequencies-in-a-composite-sine-wave": {
      "abstract": [
        {
          "text": "Use 1D fast Fourier transform to compute the frequency components of a signal.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/finding-the-component-frequencies-in-a-composite-sine-wave",
      "kind": "article",
      "role": "article",
      "title": "Finding the component frequencies in a composite sine wave",
      "type": "topic",
      "url": "/documentation/accelerate/finding-the-component-frequencies-in-a-composite-sine-wave"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/performing-fourier-transforms-on-interleaved-complex-data": {
      "abstract": [
        {
          "text": "Optimize discrete Fourier transform (DFT) performance with the vDSP interleaved DFT routines.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/performing-fourier-transforms-on-interleaved-complex-data",
      "kind": "article",
      "role": "article",
      "title": "Performing Fourier transforms on interleaved-complex data",
      "type": "topic",
      "url": "/documentation/accelerate/performing-fourier-transforms-on-interleaved-complex-data"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/performing-fourier-transforms-on-multiple-signals": {
      "abstract": [
        {
          "text": "Use Accelerate’s multiple-signal fast Fourier transform (FFT) functions to transform multiple signals with a single function call.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/performing-fourier-transforms-on-multiple-signals",
      "kind": "article",
      "role": "article",
      "title": "Performing Fourier Transforms on Multiple Signals",
      "type": "topic",
      "url": "/documentation/accelerate/performing-fourier-transforms-on-multiple-signals"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/reducing-spectral-leakage-with-windowing": {
      "abstract": [
        {
          "text": "Multiply signal data by window sequence values when performing transforms with noninteger period signals.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/reducing-spectral-leakage-with-windowing",
      "kind": "article",
      "role": "article",
      "title": "Reducing spectral leakage with windowing",
      "type": "topic",
      "url": "/documentation/accelerate/reducing-spectral-leakage-with-windowing"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/signal-extraction-from-noise": {
      "abstract": [
        {
          "text": "Use Accelerate’s discrete cosine transform to remove noise from a signal.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/signal-extraction-from-noise",
      "kind": "article",
      "role": "sampleCode",
      "title": "Signal extraction from noise",
      "type": "topic",
      "url": "/documentation/accelerate/signal-extraction-from-noise"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/understanding-data-packing-for-fourier-transforms": {
      "abstract": [
        {
          "text": "Format source data for the vDSP Fourier functions, and interpret the results.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/understanding-data-packing-for-fourier-transforms",
      "kind": "article",
      "role": "article",
      "title": "Understanding data packing for Fourier transforms",
      "type": "topic",
      "url": "/documentation/accelerate/understanding-data-packing-for-fourier-transforms"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vDSP/FFT/transform(input:output:direction:)": {
      "abstract": [
        {
          "text": "Computes an out-of-place fast Fourier transform.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "transform"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "input"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "output"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "direction"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Accelerate4vDSPO",
          "text": "vDSP"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Accelerate4vDSPO25FourierTransformDirectionO",
          "text": "FourierTransformDirection"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vDSP/FFT/transform(input:output:direction:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "transform(input:output:direction:)",
      "type": "topic",
      "url": "/documentation/accelerate/vdsp/fft/transform(input:output:direction:)"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vDSP/clip(_:to:result:)-3lbii": {
      "abstract": [
        {
          "text": "Calculates the elements of a double-precision vector clipped to the specified range.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "clip"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "U"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "U"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SN",
          "text": "ClosedRange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sd",
          "text": "Double"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "result"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vDSP/clip(_:to:result:)-3lbii",
      "kind": "symbol",
      "role": "symbol",
      "title": "clip(_:to:result:)",
      "type": "topic",
      "url": "/documentation/accelerate/vdsp/clip(_:to:result:)-3lbii"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vDSP/squareMagnitudes(_:result:)-22k5h": {
      "abstract": [
        {
          "text": "Calculates the square magnitude of each element in the supplied single-precision complex vector.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "squareMagnitudes"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@DSPSplitComplex",
          "text": "DSPSplitComplex"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "result"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vDSP/squareMagnitudes(_:result:)-22k5h",
      "kind": "symbol",
      "role": "symbol",
      "title": "squareMagnitudes(_:result:)",
      "type": "topic",
      "url": "/documentation/accelerate/vdsp/squaremagnitudes(_:result:)-22k5h"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vDSP/threshold(_:to:with:)-77g7l": {
      "abstract": [
        {
          "text": "Returns the elements of the supplied double-precision vector after applying a specified thresholding rule.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "threshold"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "U"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "U"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sd",
          "text": "Double"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Accelerate4vDSPO",
          "text": "vDSP"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Accelerate4vDSPO13ThresholdRuleO",
          "text": "ThresholdRule"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sd",
          "text": "Double"
        },
        {
          "kind": "text",
          "text": ">) -> ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sd",
          "text": "Double"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vDSP/threshold(_:to:with:)-77g7l",
      "kind": "symbol",
      "role": "symbol",
      "title": "threshold(_:to:with:)",
      "type": "topic",
      "url": "/documentation/accelerate/vdsp/threshold(_:to:with:)-77g7l"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vDSP_ctoz": {
      "abstract": [
        {
          "text": "Copies the contents of an interleaved single-precision complex vector to a split complex vector.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "vDSP_ctoz"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vDSP_ctoz",
      "kind": "symbol",
      "role": "symbol",
      "title": "vDSP_ctoz",
      "type": "topic",
      "url": "/documentation/accelerate/vdsp_ctoz"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vImageBuffer_Init(_:_:_:_:_:)": {
      "abstract": [
        {
          "text": "Initializes a vImage buffer with a specified width, height, and bits per pixel.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "vImageBuffer_Init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sp",
          "text": "UnsafeMutablePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@vImage_Buffer",
          "text": "vImage_Buffer"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@vImagePixelCount",
          "text": "vImagePixelCount"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@vImagePixelCount",
          "text": "vImagePixelCount"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt32V",
          "text": "UInt32"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@vImage_Flags",
          "text": "vImage_Flags"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@vImage_Error",
          "text": "vImage_Error"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImageBuffer_Init(_:_:_:_:_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "vImageBuffer_Init"
        }
      ],
      "role": "symbol",
      "title": "vImageBuffer_Init(_:_:_:_:_:)",
      "type": "topic",
      "url": "/documentation/accelerate/vimagebuffer_init(_:_:_:_:_:)"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vImageBuffer_InitWithCGImage(_:_:_:_:_:)": {
      "abstract": [
        {
          "text": "Initializes a vImage buffer with the contents of a Core Graphics image.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "vImageBuffer_InitWithCGImage"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sp",
          "text": "UnsafeMutablePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@vImage_Buffer",
          "text": "vImage_Buffer"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sp",
          "text": "UnsafeMutablePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@vImage_CGImageFormat",
          "text": "vImage_CGImageFormat"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14CoreFoundation7CGFloatV",
          "text": "CGFloat"
        },
        {
          "kind": "text",
          "text": ">!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@CGImageRef",
          "text": "CGImage"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@vImage_Flags",
          "text": "vImage_Flags"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@vImage_Error",
          "text": "vImage_Error"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImageBuffer_InitWithCGImage(_:_:_:_:_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "vImageBuffer_InitWithCGImage"
        }
      ],
      "role": "symbol",
      "title": "vImageBuffer_InitWithCGImage(_:_:_:_:_:)",
      "type": "topic",
      "url": "/documentation/accelerate/vimagebuffer_initwithcgimage(_:_:_:_:_:)"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vdsp-library": {
      "abstract": [
        {
          "text": "Perform basic arithmetic operations and common digital signal processing (DSP) routines on large vectors.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vdsp-library",
      "kind": "article",
      "role": "collectionGroup",
      "title": "vDSP",
      "type": "topic",
      "url": "/documentation/accelerate/vdsp-library"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "halftone_descreen_2x.png": {
      "alt": "A comparison of the original image of a flower with its descreened counterpart. A zoomed-in segment of the original image shows pronounced diagonal halftone lines. In the descreened image, the same close-up segment appears smoother, with more continuous tones.",
      "identifier": "halftone_descreen_2x.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/cd044b250fdee1c6b64487d5224b8aca/halftone_descreen_2x.png"
        }
      ]
    },
    "halftone_frequency_domain_2x.png": {
      "alt": "An image of the frequency-domain representation of the halftone screen containing a series of bright star shapes. The stars follow a diagonal path from the top-left to the middle-right of the image and decrease in size from left to right.",
      "identifier": "halftone_frequency_domain_2x.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/2c27cb3bb371156d18d1cf4e2a1b9279/halftone_frequency_domain_2x.png"
        }
      ]
    }
  },
  "sampleCodeDownload": {
    "action": {
      "identifier": "aec39161b171/HalftoneDescreeningWith2DFastFourierTransform.zip",
      "isActive": true,
      "overridingTitle": "Download",
      "type": "reference"
    },
    "kind": "sampleDownload"
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Fourier-and-Cosine-Transforms",
      "generated": true,
      "identifiers": [
        "doc://com.apple.accelerate/documentation/Accelerate/understanding-data-packing-for-fourier-transforms",
        "doc://com.apple.accelerate/documentation/Accelerate/finding-the-component-frequencies-in-a-composite-sine-wave",
        "doc://com.apple.accelerate/documentation/Accelerate/performing-fourier-transforms-on-interleaved-complex-data",
        "doc://com.apple.accelerate/documentation/Accelerate/reducing-spectral-leakage-with-windowing",
        "doc://com.apple.accelerate/documentation/Accelerate/signal-extraction-from-noise",
        "doc://com.apple.accelerate/documentation/Accelerate/performing-fourier-transforms-on-multiple-signals",
        "doc://com.apple.accelerate/documentation/Accelerate/fast-fourier-transforms",
        "doc://com.apple.accelerate/documentation/Accelerate/discrete-fourier-transforms",
        "doc://com.apple.accelerate/documentation/Accelerate/discrete-cosine-transforms"
      ],
      "title": "Fourier and Cosine Transforms"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImageBuffer_InitWithCGImage(_:_:_:_:_:)/title",
          "value": "vImageBuffer_InitWithCGImage"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImageBuffer_InitWithCGImage(_:_:_:_:_:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "vImageBuffer_InitWithCGImage"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImageBuffer_Init(_:_:_:_:_:)/title",
          "value": "vImageBuffer_Init"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImageBuffer_Init(_:_:_:_:_:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "vImageBuffer_Init"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
