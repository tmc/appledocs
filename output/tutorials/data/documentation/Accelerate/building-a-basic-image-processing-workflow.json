{
  "abstract": [
    {
      "text": "Resize an image with vImage.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.accelerate/documentation/Accelerate"
      ],
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.accelerate/documentation/Accelerate",
        "doc://com.apple.accelerate/documentation/Accelerate/vimage-library"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.accelerate/documentation/Accelerate/building-a-basic-image-processing-workflow"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Accelerate"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Building a Basic Image-Processing Workflow"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "vImage provides fast and accurate high-level functions for image manipulation; for example, compositing, convolution, and histogram operations. It operates on common image formats through ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage_Buffer",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " structures. vImage buffers describe the size of an image and the number of bytes in each row, and point to the image pixel data. Buffers are initialized from Core Graphics images, Core Video pixel buffers, or raw pixel data. The pixel data a buffer points to can be used to create a new Core Graphics image or can be copied into a Core Video pixel buffer.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In the simplest workflow, you convert an image to a vImage buffer, apply an operation to the buffer, and convert the buffer back to an image. In this example, the width and height of the result are one-third of the original:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "media-2953430",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Initialize-an-Image-Format-and-vImage-Buffers",
          "level": 3,
          "text": "Initialize an Image Format and vImage Buffers",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To learn about initializing the buffers you’ll need to perform a scaling operation, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Accelerate/converting-bitmap-data-between-core-graphics-images-and-vimage-buffers",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Accelerate/creating-and-populating-buffers-from-core-graphics-images",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". In this example, you’ll need the image format and buffers discussed in ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Accelerate/creating-and-populating-buffers-from-core-graphics-images",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". However, you’ll use the following code to initialize a destination buffer with a height and width that are a quarter of the source dimensions.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let destinationHeight = Int(CGFloat(sourceBuffer.height) * 0.25)",
            "let destinationWidth = Int(CGFloat(sourceBuffer.width) * 0.25)",
            "",
            "guard var destinationBuffer = try? vImage_Buffer(width: destinationWidth,",
            "                                                 height: destinationHeight,",
            "                                                 bitsPerPixel: format.bitsPerPixel) else {",
            "                                                    return nil",
            "}",
            "",
            "defer {",
            "    destinationBuffer.free()",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Apply-the-Scale-Operation",
          "level": 3,
          "text": "Apply the Scale Operation",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If you’re rescaling an image with premultiplied alpha (that is, with a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage_CGImageFormat/bitmapInfo",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " value with ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/coregraphics/cgimagealphainfo/premultipliedfirst",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/coregraphics/cgimagealphainfo/premultipliedlast",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": "), before you apply the scale operation, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Accelerate/building-a-basic-image-processing-workflow#Avoid-Artifacts-by-Unpremultiplying",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Otherwise, with the source and destination buffers properly initialized, you’re ready to perform the scaling operation. Because your format contains four 8-bit channels, you use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImageScale_ARGB8888(_:_:_:_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function. This function works equally well on all channel orderings; for example, RGBA or BGRA.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "error = vImageScale_ARGB8888(&sourceBuffer,",
            "                             &destinationBuffer,",
            "                             nil,",
            "                             vImage_Flags(kvImageHighQualityResampling))",
            "        ",
            "guard error == kvImageNoError else {",
            "    fatalError(\"Error in vImageScale_ARGB8888: \\(error)\")",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/kvImageHighQualityResampling",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " flag uses a high-quality Lanczos 5 x 5 resampling filter. If you require faster scaling, pass ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/kvImageNoFlags",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "code": "destinationBuffer",
              "type": "codeVoice"
            },
            {
              "text": " now contains the scaled version of ",
              "type": "text"
            },
            {
              "code": "sourceBuffer",
              "type": "codeVoice"
            },
            {
              "text": ". To learn how to display the scaled result to your user, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Accelerate/creating-a-core-graphics-image-from-a-vimage-buffer",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "After you’ve finished with the source and destination buffers, it’s important that you free the memory allocated to them:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "sourceBuffer.free()",
            "destinationBuffer.free()"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Avoid-Artifacts-by-Unpremultiplying",
          "level": 3,
          "text": "Avoid Artifacts by Unpremultiplying",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If you’re rescaling an image with premultiplied alpha, you may see artifacts in high-frequency regions of the image. To avoid this situation, unpremultiply the image data — that is, remove the premultiplied alpha value from the image data — before the scaling operation, and premultiply the scaled result.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "This code shows the additional operations required, with error handling removed for brevity:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "error = vImageUnpremultiplyData_ARGB8888(&sourceBuffer,",
            "                                         &sourceBuffer,",
            "                                         vImage_Flags(kvImageNoFlags))",
            " ",
            "error = vImageScale_ARGB8888(&sourceBuffer,",
            "                             &destinationBuffer,",
            "                             nil,",
            "                             vImage_Flags(kvImageHighQualityResampling))",
            " ",
            "error = vImagePremultiplyData_ARGB8888(&destinationBuffer,",
            "                                       &destinationBuffer,",
            "                                       vImage_Flags(kvImageNoFlags))"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.accelerate/documentation/Accelerate": {
      "abstract": [
        {
          "text": "Make large-scale mathematical computations and image calculations, optimized for high performance and low energy consumption.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate",
      "kind": "symbol",
      "role": "collection",
      "title": "Accelerate",
      "type": "topic",
      "url": "/documentation/accelerate"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/applying-geometric-transforms-to-images": {
      "abstract": [
        {
          "text": "Reflect, shear, rotate, and scale image buffers using vImage.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/applying-geometric-transforms-to-images",
      "kind": "article",
      "role": "article",
      "title": "Applying geometric transforms to images",
      "type": "topic",
      "url": "/documentation/accelerate/applying-geometric-transforms-to-images"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/applying-vimage-operations-to-regions-of-interest": {
      "abstract": [
        {
          "text": "Limit the effect of vImage operations to rectangular regions of interest.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/applying-vimage-operations-to-regions-of-interest",
      "kind": "article",
      "role": "article",
      "title": "Applying vImage operations to regions of interest",
      "type": "topic",
      "url": "/documentation/accelerate/applying-vimage-operations-to-regions-of-interest"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/compositing-images-with-alpha-blending": {
      "abstract": [
        {
          "text": "Combine two images by using alpha blending to create a single output.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/compositing-images-with-alpha-blending",
      "kind": "article",
      "role": "article",
      "title": "Compositing images with alpha blending",
      "type": "topic",
      "url": "/documentation/accelerate/compositing-images-with-alpha-blending"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/compositing-images-with-vimage-blend-modes": {
      "abstract": [
        {
          "text": "Combine two images by using blend modes to create a single output.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/compositing-images-with-vimage-blend-modes",
      "kind": "article",
      "role": "article",
      "title": "Compositing images with vImage blend modes",
      "type": "topic",
      "url": "/documentation/accelerate/compositing-images-with-vimage-blend-modes"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/converting-bitmap-data-between-core-graphics-images-and-vimage-buffers": {
      "abstract": [
        {
          "text": "Pass image data between Core Graphics and vImage to create and manipulate images.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/converting-bitmap-data-between-core-graphics-images-and-vimage-buffers",
      "kind": "article",
      "role": "article",
      "title": "Converting bitmap data between Core Graphics images and vImage buffers",
      "type": "topic",
      "url": "/documentation/accelerate/converting-bitmap-data-between-core-graphics-images-and-vimage-buffers"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/creating-a-core-graphics-image-from-a-vimage-buffer": {
      "abstract": [
        {
          "text": "Create displayable representations of vImage buffers.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/creating-a-core-graphics-image-from-a-vimage-buffer",
      "kind": "article",
      "role": "article",
      "title": "Creating a Core Graphics Image from a vImage Buffer",
      "type": "topic",
      "url": "/documentation/accelerate/creating-a-core-graphics-image-from-a-vimage-buffer"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/creating-and-populating-buffers-from-core-graphics-images": {
      "abstract": [
        {
          "text": "Initialize vImage buffers from Core Graphics images.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/creating-and-populating-buffers-from-core-graphics-images",
      "kind": "article",
      "role": "article",
      "title": "Creating and Populating Buffers from Core Graphics Images",
      "type": "topic",
      "url": "/documentation/accelerate/creating-and-populating-buffers-from-core-graphics-images"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/kvImageHighQualityResampling": {
      "abstract": [
        {
          "text": "A flag that uses a higher-quality, slower resampling filter for geometry operations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "kvImageHighQualityResampling"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/kvImageHighQualityResampling",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "kvImageHighQualityResampling"
        }
      ],
      "role": "symbol",
      "title": "kvImageHighQualityResampling",
      "type": "topic",
      "url": "/documentation/accelerate/kvimagehighqualityresampling"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/kvImageNoFlags": {
      "abstract": [
        {
          "text": "A flag that sets the behavior to the default.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "kvImageNoFlags"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/kvImageNoFlags",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "kvImageNoFlags"
        }
      ],
      "role": "symbol",
      "title": "kvImageNoFlags",
      "type": "topic",
      "url": "/documentation/accelerate/kvimagenoflags"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/optimizing-image-processing-performance": {
      "abstract": [
        {
          "text": "Improve your app’s performance by converting image buffer formats from interleaved to planar.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/optimizing-image-processing-performance",
      "kind": "article",
      "role": "article",
      "title": "Optimizing image-processing performance",
      "type": "topic",
      "url": "/documentation/accelerate/optimizing-image-processing-performance"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vImageScale_ARGB8888(_:_:_:_:)": {
      "abstract": [
        {
          "text": "Scales an 8-bit-per-channel, 4-channel interleaved image to fit a destination buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "vImageScale_ARGB8888"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@vImage_Buffer",
          "text": "vImage_Buffer"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@vImage_Buffer",
          "text": "vImage_Buffer"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sv",
          "text": "UnsafeMutableRawPointer"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@vImage_Flags",
          "text": "vImage_Flags"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@vImage_Error",
          "text": "vImage_Error"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImageScale_ARGB8888(_:_:_:_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "vImageScale_ARGB8888"
        }
      ],
      "role": "symbol",
      "title": "vImageScale_ARGB8888(_:_:_:_:)",
      "type": "topic",
      "url": "/documentation/accelerate/vimagescale_argb8888(_:_:_:_:)"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vImage_Buffer": {
      "abstract": [
        {
          "text": "An image buffer that stores an image’s pixel data, dimensions, and row stride.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "vImage_Buffer"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage_Buffer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "vImage_Buffer"
        }
      ],
      "role": "symbol",
      "title": "vImage_Buffer",
      "type": "topic",
      "url": "/documentation/accelerate/vimage_buffer"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vImage_CGImageFormat/bitmapInfo": {
      "abstract": [
        {
          "text": "The component information that describes the color channels.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bitmapInfo"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@CGBitmapInfo",
          "text": "CGBitmapInfo"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage_CGImageFormat/bitmapInfo",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "bitmapInfo"
        }
      ],
      "role": "symbol",
      "title": "bitmapInfo",
      "type": "topic",
      "url": "/documentation/accelerate/vimage_cgimageformat/bitmapinfo"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vimage-library": {
      "abstract": [
        {
          "text": "Manipulate large images using the CPU’s vector processor.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vimage-library",
      "kind": "article",
      "role": "collectionGroup",
      "title": "vImage",
      "type": "topic",
      "url": "/documentation/accelerate/vimage-library"
    },
    "doc://com.apple.documentation/documentation/Accelerate/building-a-basic-image-processing-workflow#Avoid-Artifacts-by-Unpremultiplying": {
      "abstract": [
        {
          "text": "Resize an image with vImage.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Accelerate/building-a-basic-image-processing-workflow#Avoid-Artifacts-by-Unpremultiplying",
      "kind": "article",
      "role": "article",
      "title": "Building a Basic Image-Processing Workflow",
      "type": "topic",
      "url": "/documentation/Accelerate/building-a-basic-image-processing-workflow"
    },
    "doc://com.apple.documentation/documentation/Accelerate/converting-bitmap-data-between-core-graphics-images-and-vimage-buffers": {
      "abstract": [
        {
          "text": "Pass image data between Core Graphics and vImage to create and manipulate images.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Accelerate/converting-bitmap-data-between-core-graphics-images-and-vimage-buffers",
      "kind": "article",
      "role": "article",
      "title": "Converting bitmap data between Core Graphics images and vImage buffers",
      "type": "topic",
      "url": "/documentation/Accelerate/converting-bitmap-data-between-core-graphics-images-and-vimage-buffers"
    },
    "doc://com.apple.documentation/documentation/Accelerate/creating-a-core-graphics-image-from-a-vimage-buffer": {
      "abstract": [
        {
          "text": "Create displayable representations of vImage buffers.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Accelerate/creating-a-core-graphics-image-from-a-vimage-buffer",
      "kind": "article",
      "role": "article",
      "title": "Creating a Core Graphics Image from a vImage Buffer",
      "type": "topic",
      "url": "/documentation/Accelerate/creating-a-core-graphics-image-from-a-vimage-buffer"
    },
    "doc://com.apple.documentation/documentation/Accelerate/creating-and-populating-buffers-from-core-graphics-images": {
      "abstract": [
        {
          "text": "Initialize vImage buffers from Core Graphics images.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Accelerate/creating-and-populating-buffers-from-core-graphics-images",
      "kind": "article",
      "role": "article",
      "title": "Creating and Populating Buffers from Core Graphics Images",
      "type": "topic",
      "url": "/documentation/Accelerate/creating-and-populating-buffers-from-core-graphics-images"
    },
    "doc://com.apple.documentation/documentation/coregraphics/cgimagealphainfo/premultipliedfirst": {
      "abstract": [
        {
          "text": "The alpha component is stored in the most significant bits of each pixel and the color components have already been multiplied by this alpha value. For example, premultiplied ARGB.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "premultipliedFirst"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/coregraphics/cgimagealphainfo/premultipliedfirst",
      "kind": "symbol",
      "role": "symbol",
      "title": "CGImageAlphaInfo.premultipliedFirst",
      "type": "topic",
      "url": "/documentation/coregraphics/cgimagealphainfo/premultipliedfirst"
    },
    "doc://com.apple.documentation/documentation/coregraphics/cgimagealphainfo/premultipliedlast": {
      "abstract": [
        {
          "text": "The alpha component is stored in the least significant bits of each pixel and the color components have already been multiplied by this alpha value. For example, premultiplied RGBA.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "case "
        },
        {
          "kind": "identifier",
          "text": "premultipliedLast"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/coregraphics/cgimagealphainfo/premultipliedlast",
      "kind": "symbol",
      "role": "symbol",
      "title": "CGImageAlphaInfo.premultipliedLast",
      "type": "topic",
      "url": "/documentation/coregraphics/cgimagealphainfo/premultipliedlast"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "media-2953430": {
      "alt": "Photos showing the original image and the resized image.",
      "identifier": "media-2953430",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/af8011e648b6c8c2084e3a2e1d828ec0/media-2953430@2x.png"
        }
      ]
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Image-Processing-Essentials",
      "generated": true,
      "identifiers": [
        "doc://com.apple.accelerate/documentation/Accelerate/converting-bitmap-data-between-core-graphics-images-and-vimage-buffers",
        "doc://com.apple.accelerate/documentation/Accelerate/creating-and-populating-buffers-from-core-graphics-images",
        "doc://com.apple.accelerate/documentation/Accelerate/creating-a-core-graphics-image-from-a-vimage-buffer",
        "doc://com.apple.accelerate/documentation/Accelerate/applying-geometric-transforms-to-images",
        "doc://com.apple.accelerate/documentation/Accelerate/compositing-images-with-alpha-blending",
        "doc://com.apple.accelerate/documentation/Accelerate/compositing-images-with-vimage-blend-modes",
        "doc://com.apple.accelerate/documentation/Accelerate/applying-vimage-operations-to-regions-of-interest",
        "doc://com.apple.accelerate/documentation/Accelerate/optimizing-image-processing-performance",
        "doc://com.apple.accelerate/documentation/Accelerate/vimage-library"
      ],
      "title": "Image Processing Essentials"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImageScale_ARGB8888(_:_:_:_:)/title",
          "value": "vImageScale_ARGB8888"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImageScale_ARGB8888(_:_:_:_:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "vImageScale_ARGB8888"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1coregraphics~1cgimagealphainfo~1premultipliedfirst/title",
          "value": "kCGImageAlphaPremultipliedFirst"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1coregraphics~1cgimagealphainfo~1premultipliedlast/title",
          "value": "kCGImageAlphaPremultipliedLast"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImage_Buffer/title",
          "value": "vImage_Buffer"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImage_Buffer/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "vImage_Buffer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImage_Buffer/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "vImage_Buffer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1kvImageHighQualityResampling/title",
          "value": "kvImageHighQualityResampling"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1kvImageHighQualityResampling/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "kvImageHighQualityResampling"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImage_CGImageFormat~1bitmapInfo/title",
          "value": "bitmapInfo"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImage_CGImageFormat~1bitmapInfo/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "bitmapInfo"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1kvImageNoFlags/title",
          "value": "kvImageNoFlags"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1kvImageNoFlags/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "kvImageNoFlags"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
