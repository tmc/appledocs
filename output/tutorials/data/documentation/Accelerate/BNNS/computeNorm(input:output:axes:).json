{
  "abstract": [
    {
      "text": "Computes the Euclidean norm and writes the result to the output tensor.",
      "type": "text"
    }
  ],
  "deprecationSummary": [
    {
      "inlineContent": [
        {
          "text": "Use the BNNSGraph API instead.",
          "type": "text"
        }
      ],
      "type": "paragraph"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.accelerate/documentation/Accelerate",
        "doc://com.apple.accelerate/documentation/Accelerate/BNNS"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.accelerate/documentation/Accelerate/BNNS/computeNorm(input:output:axes:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Accelerate",
    "externalID": "s:10Accelerate4BNNSO11computeNorm5input6output4axesySo21BNNSNDArrayDescriptora_AISaySiGSgtKFZ",
    "fragments": [
      {
        "kind": "keyword",
        "text": "static"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "computeNorm"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "input"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "c:@SA@BNNSNDArrayDescriptor",
        "text": "BNNSNDArrayDescriptor"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "output"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "c:@SA@BNNSNDArrayDescriptor",
        "text": "BNNSNDArrayDescriptor"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "axes"
      },
      {
        "kind": "text",
        "text": ": ["
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Si",
        "text": "Int"
      },
      {
        "kind": "text",
        "text": "]?) "
      },
      {
        "kind": "keyword",
        "text": "throws"
      }
    ],
    "modules": [
      {
        "name": "Accelerate"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "12.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "watchOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": true,
        "message": "Use the BNNSGraph API instead.",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "Mac Catalyst",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Type Method",
    "symbolKind": "method",
    "title": "computeNorm(input:output:axes:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "static"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "computeNorm"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "input"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/BNNSNDArrayDescriptor",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@SA@BNNSNDArrayDescriptor",
              "text": "BNNSNDArrayDescriptor"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "output"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/BNNSNDArrayDescriptor",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@SA@BNNSNDArrayDescriptor",
              "text": "BNNSNDArrayDescriptor"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "axes"
            },
            {
              "kind": "text",
              "text": ": ["
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Si",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Si",
              "text": "Int"
            },
            {
              "kind": "text",
              "text": "]? = nil) "
            },
            {
              "kind": "keyword",
              "text": "throws"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The descriptor of the input.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "input"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The descriptor of the output.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "output"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The indices of the axes over which the function computes the norm. Set to ",
                  "type": "text"
                },
                {
                  "code": "nil",
                  "type": "codeVoice"
                },
                {
                  "text": " to specify that the function computes the norm over the entire tensor.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "axes"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "Discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use this function to compute the norm of either an entire tensor or an axis or axes of a tensor.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example, the following code defines a 3D tensor:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let inputValues: [Float] = [1, 2, 3,",
            "                            4, 5, 6,",
            "                            ",
            "                            10, 20, 30,",
            "                            40, 50, 60,",
            "                            ",
            "                            100, 200, 300,",
            "                            400, 500, 600,",
            "                            ",
            "                            1000, 2000, 3000,",
            "                            4000, 5000, 6000]",
            "",
            "let input = BNNSNDArrayDescriptor.allocate(",
            "    initializingFrom: inputValues,",
            "    shape: .imageCHW(3, 2, 4))"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Define the ",
              "type": "text"
            },
            {
              "code": "axes",
              "type": "codeVoice"
            },
            {
              "text": " parameter as either ",
              "type": "text"
            },
            {
              "code": "[0, 1, 2]",
              "type": "codeVoice"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " to specify that the operation computes the norm of the entire tensor. In this case, the norm is a scalar value, and the destination’s data layout must be a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/BNNS/DataLayout/vector",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " with a size of ",
              "type": "text"
            },
            {
              "code": "1",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let output = BNNSNDArrayDescriptor.allocateUninitialized(",
            "    scalarType: Float.self,",
            "    shape: .vector(1))",
            "",
            "try? BNNS.computeNorm(input: input,",
            "                     output: output,",
            "                     axes: [0, 1, 2])",
            "",
            "// Prints `[9587.45]`.",
            "print(output.makeArray(of: Float.self)!)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "On return, the output descriptor contains a single value that is the square root of the sum of squares of each element in the tensor:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "media-3786765",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Specify an ",
              "type": "text"
            },
            {
              "code": "axes",
              "type": "codeVoice"
            },
            {
              "text": " of ",
              "type": "text"
            },
            {
              "code": "[2]",
              "type": "codeVoice"
            },
            {
              "text": " to compute the norms along the second axis. In this case, the destination must be a matrix with a size that matches the zeroth and first dimensions of the source tensor:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let output = BNNSNDArrayDescriptor.allocateUninitialized(",
            "    scalarType: Float.self,",
            "    shape: .matrixColumnMajor(3, 2))",
            "",
            "try? BNNS.computeNorm(input: input,",
            "                     output: output,",
            "                     axes: [2])",
            "",
            "// Prints",
            "//      [1005.0378, 2010.075, 3015.113,",
            "//       4020.1511, 5025.189, 6030.227]",
            "print(output.makeArray(of: Float.self)!)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "On return, the output descriptor contains six values that are the norms of the slices along the second axis of the input tensor:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "media-3786768",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To compute the norm along more that one dimension, define the destination tensor with a size of the dimensions you’re not calculating over. For example, the following code defines an ",
              "type": "text"
            },
            {
              "code": "axes",
              "type": "codeVoice"
            },
            {
              "text": " with a value of ",
              "type": "text"
            },
            {
              "code": "[0, 2]",
              "type": "codeVoice"
            },
            {
              "text": " to compute the norm of dimensions zero and two:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let output = BNNSNDArrayDescriptor.allocateUninitialized(",
            "    scalarType: Float.self,",
            "    shape: .vector(2))",
            "",
            "try? BNNS.computeNorm(input: input,",
            "                     output: output,",
            "                     axes: [0, 2])",
            "",
            "// Prints `[3760.507, 8819.171]`",
            "print(output.makeArray(of: Float.self)!)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "On return, the output descriptor contains two values that are the norms of the top and bottom slices of the input tensor:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "media-3786762",
              "type": "image"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.accelerate/documentation/Accelerate": {
      "abstract": [
        {
          "text": "Make large-scale mathematical computations and image calculations, optimized for high performance and low energy consumption.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate",
      "kind": "symbol",
      "role": "collection",
      "title": "Accelerate",
      "type": "topic",
      "url": "/documentation/accelerate"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/BNNS": {
      "abstract": [
        {
          "text": "An enumeration that acts as a namespace for Swift overlays to BNNS.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BNNS"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/BNNS",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BNNS"
        }
      ],
      "role": "symbol",
      "title": "BNNS",
      "type": "topic",
      "url": "/documentation/accelerate/bnns"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/BNNS/DataLayout/vector": {
      "abstract": [
        {
          "text": "A constant that represents a 1D vector.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "vector"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/BNNS/DataLayout/vector",
      "kind": "symbol",
      "role": "symbol",
      "title": "BNNS.DataLayout.vector",
      "type": "topic",
      "url": "/documentation/accelerate/bnns/datalayout/vector"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/BNNS/computeNorm(input:output:axes:)": {
      "abstract": [
        {
          "text": "Computes the Euclidean norm and writes the result to the output tensor.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "computeNorm"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "input"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@BNNSNDArrayDescriptor",
          "text": "BNNSNDArrayDescriptor"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "output"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@BNNSNDArrayDescriptor",
          "text": "BNNSNDArrayDescriptor"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "axes"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "]?) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/BNNS/computeNorm(input:output:axes:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "computeNorm(input:output:axes:)",
      "type": "topic",
      "url": "/documentation/accelerate/bnns/computenorm(input:output:axes:)"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/BNNS/computeNormBackward(input:output:axes:outputGradient:generatingInputGradient:)": {
      "abstract": [
        {
          "text": "Backpropogates gradients for the compute norm function.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "computeNormBackward"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "input"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@BNNSNDArrayDescriptor",
          "text": "BNNSNDArrayDescriptor"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "output"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@BNNSNDArrayDescriptor",
          "text": "BNNSNDArrayDescriptor"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "axes"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "]?, "
        },
        {
          "kind": "externalParam",
          "text": "outputGradient"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@BNNSNDArrayDescriptor",
          "text": "BNNSNDArrayDescriptor"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "generatingInputGradient"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@BNNSNDArrayDescriptor",
          "text": "BNNSNDArrayDescriptor"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/BNNS/computeNormBackward(input:output:axes:outputGradient:generatingInputGradient:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "computeNormBackward(input:output:axes:outputGradient:generatingInputGradient:)",
      "type": "topic",
      "url": "/documentation/accelerate/bnns/computenormbackward(input:output:axes:outputgradient:generatinginputgradient:)"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/BNNSComputeNorm(_:_:_:_:)": {
      "abstract": [
        {
          "text": "Computes the specified norm over an entire tensor or the specified axes.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BNNSComputeNorm"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sp",
          "text": "UnsafeMutablePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@BNNSNDArrayDescriptor",
          "text": "BNNSNDArrayDescriptor"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@BNNSNDArrayDescriptor",
          "text": "BNNSNDArrayDescriptor"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@EA@BNNSNormType",
          "text": "BNNSNormType"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt32V",
          "text": "UInt32"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int32V",
          "text": "Int32"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/BNNSComputeNorm(_:_:_:_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BNNSComputeNorm"
        }
      ],
      "role": "symbol",
      "title": "BNNSComputeNorm(_:_:_:_:)",
      "type": "topic",
      "url": "/documentation/accelerate/bnnscomputenorm(_:_:_:_:)"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/BNNSComputeNormBackward(_:_:_:_:_:_:)": {
      "abstract": [
        {
          "text": "Backpropogates gradients for the compute norm function.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BNNSComputeNormBackward"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SV",
          "text": "UnsafeRawPointer"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sp",
          "text": "UnsafeMutablePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@BNNSNDArrayDescriptor",
          "text": "BNNSNDArrayDescriptor"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SV",
          "text": "UnsafeRawPointer"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@BNNSNDArrayDescriptor",
          "text": "BNNSNDArrayDescriptor"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@EA@BNNSNormType",
          "text": "BNNSNormType"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt32V",
          "text": "UInt32"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int32V",
          "text": "Int32"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/BNNSComputeNormBackward(_:_:_:_:_:_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BNNSComputeNormBackward"
        }
      ],
      "role": "symbol",
      "title": "BNNSComputeNormBackward(_:_:_:_:_:_:)",
      "type": "topic",
      "url": "/documentation/accelerate/bnnscomputenormbackward(_:_:_:_:_:_:)"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/BNNSNDArrayDescriptor": {
      "abstract": [
        {
          "text": "A structure that describes the shape, stride, data type, and, optionally, the memory location of an n-dimensional array.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BNNSNDArrayDescriptor"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/BNNSNDArrayDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BNNSNDArrayDescriptor"
        }
      ],
      "role": "symbol",
      "title": "BNNSNDArrayDescriptor",
      "type": "topic",
      "url": "/documentation/accelerate/bnnsndarraydescriptor"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/BNNSNormType": {
      "abstract": [
        {
          "text": "Constants that describe norm types.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BNNSNormType"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/BNNSNormType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BNNSNormType"
        }
      ],
      "role": "symbol",
      "title": "BNNSNormType",
      "type": "topic",
      "url": "/documentation/accelerate/bnnsnormtype"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:Si": {
      "abstract": [
        {
          "text": "A signed integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Si",
      "kind": "symbol",
      "role": "symbol",
      "title": "Int",
      "type": "topic",
      "url": "/documentation/Swift/Int"
    },
    "media-3786762": {
      "alt": "A diagram that depicts a 3D tensor as four 2D planes along the channel axis. Each plane is two elements high and three elements wide. The compute norm operation calculates separate norms for the pair of three-by-four matrices defined by the channel axis and the width axis.",
      "identifier": "media-3786762",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/2c2a41e95612a64cab4fadb97d45b77d/media-3786762@2x.png"
        }
      ]
    },
    "media-3786765": {
      "alt": "A diagram that depicts a 3D tensor as four 2D planes along the channel axis. Each plane is two elements high and three elements wide. The compute norm operation calculates a single value for the norm of the entire tensor.",
      "identifier": "media-3786765",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/a829c34d4b4f4071bbaf72b10112a033/media-3786765@2x.png"
        }
      ]
    },
    "media-3786768": {
      "alt": "A diagram that depicts a 3D tensor as four 2D planes along the channel axis. Each plane is two elements high and three elements wide. The compute norm operation calculates separate norms for the six 4-element vectors along the channel axis.",
      "identifier": "media-3786768",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/be33dde19816c79781bdf5340a21e1a1/media-3786768@2x.png"
        }
      ]
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Compute-norm-functions",
      "generated": true,
      "identifiers": [
        "doc://com.apple.accelerate/documentation/Accelerate/BNNS/computeNormBackward(input:output:axes:outputGradient:generatingInputGradient:)",
        "doc://com.apple.accelerate/documentation/Accelerate/BNNSComputeNorm(_:_:_:_:)",
        "doc://com.apple.accelerate/documentation/Accelerate/BNNSComputeNormBackward(_:_:_:_:_:_:)",
        "doc://com.apple.accelerate/documentation/Accelerate/BNNSNormType"
      ],
      "title": "Compute norm functions"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1BNNSComputeNorm(_:_:_:_:)/title",
          "value": "BNNSComputeNorm"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1BNNSComputeNorm(_:_:_:_:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "BNNSComputeNorm"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1BNNSComputeNormBackward(_:_:_:_:_:_:)/title",
          "value": "BNNSComputeNormBackward"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1BNNSComputeNormBackward(_:_:_:_:_:_:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "BNNSComputeNormBackward"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1BNNSNormType/title",
          "value": "BNNSNormType"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1BNNSNormType/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "BNNSNormType"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1BNNSNormType/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "BNNSNormType"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1BNNSNDArrayDescriptor/title",
          "value": "BNNSNDArrayDescriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1BNNSNDArrayDescriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "BNNSNDArrayDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1BNNSNDArrayDescriptor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "BNNSNDArrayDescriptor"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/accelerate/bnns/computenorm(input:output:axes:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
