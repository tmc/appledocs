{
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.accelerate/documentation/Accelerate",
        "doc://com.apple.accelerate/documentation/Accelerate/SparseIterativeMethod",
        "doc://com.apple.accelerate/documentation/Accelerate/SparseIterativeMethod/options"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "occ",
    "url": "doc://com.apple.accelerate/documentation/Accelerate/SparseIterativeMethod/options/lsmr"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:@SA@SparseIterativeMethod@U@Solve.h@167014@FI@lsmr",
    "fragments": [
      {
        "kind": "identifier",
        "text": "lsmr"
      }
    ],
    "modules": [
      {
        "name": "Accelerate"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "lsmr"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Property",
    "symbolKind": "property",
    "title": "lsmr"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "occ"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseLSMROptions",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@SA@SparseLSMROptions",
              "text": "SparseLSMROptions"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "lsmr"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [],
          "name": "message"
        },
        {
          "content": [],
          "name": "message"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use LSMR to solve equations of the form Ax=b where an exact",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "solution does not exist. The returned solution minimises || b-Ax ||_2.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Whilst LSMR is equivalent to MINRES applied to the normal equations",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "A^TAx = A^Tb in exact arithmetic, it has superior numerical behaviour and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "should be used in preference.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "We note that due to the implicit squaring of the condition of A in the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "normal equations, LSMR may struggle to converge in single precision, and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "double precision arithmetic is recommended.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For symmetric positive-definite systems, use CG instead.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For square, full rank unsymmetric or indefinite equations, use GMRES instead.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "LSMR is described in the following paper:",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "[1] D.C.-L. Fong and M.A. Saunders (2011), “LSMR: An iterative algoirthm for",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "sparse least-squares problems”, SIAM J. Scientific Computing 33(5),",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "pp 2950–2971.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "@callback reportError Function to use to report parameter errors.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If NULL, errors are logged via <os/log.h> and execution is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "halted via __builtin_trap().  If non-NULL, the provided function is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "called with a human-readable string describing the error condition.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If the callback returns, control will be returned to the caller with",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "any outputs in a safe but undefined state (i.e. they may hold partial",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "results or garbage, but all sizes and pointers are valid).",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "\\field lambda",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Damping parameter, if non-zero the actual problem solved is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "min_x || Ax-b ||_2 + lambda || x ||_2.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Using damping can often allow the iteration to converge on ill-conditioned",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "systems.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "\\field variant",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Variant of GMRES to use. See definition of SparseGMRESVariant_t for",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "further information on the available variants.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "\\field nvec",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Number of vectors used for local orthagonalization.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If nvec<=0, no orthagonalization is performed.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "\\field convergenceTest",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Which convergence test to use. See definition of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "SparseLSMRConvergenceTest_t for further information.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "\\field maxIterations",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Maximum number of iterations to perform. If 0, the default value of 4n",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is used.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "However, if a good preconditioner is available and/or the matrix is well",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "conditioned such that singular values are clustered, a value of n/2 may",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "be more approriate.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "\\field atol",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Either absolute tolerance (default test) or A tolerance (Fong-Saunders",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "test). In the Fong and Saunders case, it should hold an estimate of the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "relative error in the data defining the matrix A. For example, if A is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "accurate to about 6 digits, set atol = 1.0e-6. In the Fong and Saunders",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "case, if atol is 0.0, it is treated as machine epsilon. If using the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "default test, a value of 0.0 is treated as 0.0.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "\\field rtol",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Relative convergence tolerance (default test only).",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If rtol = 0.0, default value of sqrt(epsilon) is used.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If negative, rtol is treated as 0.0 (default is not used).",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "\\field btol",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "b tolerance (Fong-Saunders test only). It should hold an estimate of the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "relative error in the data defining the rhs b. For example, if b is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "accurate to about 6 digits, set btol = 1.0e-6. If btol is zero, it",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is treated as machine epsilon.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "\\field conditionLimit",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Condition number limit (Fong-Saunders test). Iterations will be terminated",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "if a computed estimate of cond(Abar) exceeds this value. This is intended",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to prevent certain small or zero singular values of A or Abar from coming",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "into effect and causing unwanted growth in the computed solution.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "conditionLimit and lambda may be used separately or together to regularize",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "ill-conditioned systems.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Normally, conlim should be in the range 1000 to 1/eps.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Suggested value:",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "conlim = 1/(100",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "eps)  for compatible systems,",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "conlim = 1/(10",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": "sqrt(eps)) for least squares.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If conditionLimit is 0.0, it is treated as 1/eps.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "@callback reportStatus Function to use to report status (iteration count",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and residual of first right-hand side) every few iterations.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If NULL, status is not reported.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.accelerate/documentation/Accelerate": {
      "abstract": [
        {
          "text": "Make large-scale mathematical computations and image calculations, optimized for high performance and low energy consumption.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate",
      "kind": "symbol",
      "role": "collection",
      "title": "Accelerate",
      "type": "topic",
      "url": "/documentation/accelerate"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/SparseIterativeMethod": {
      "abstract": [
        {
          "text": "The base type for all iterative methods.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SparseIterativeMethod"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseIterativeMethod",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SparseIterativeMethod"
        }
      ],
      "role": "symbol",
      "title": "SparseIterativeMethod",
      "type": "topic",
      "url": "/documentation/accelerate/sparseiterativemethod"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/SparseIterativeMethod/options": {
      "abstract": [
        {
          "text": "The options for the method.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "options"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@SparseIterativeMethod",
          "text": "SparseIterativeMethod"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "text": "__Unnamed_union_options"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseIterativeMethod/options",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "options"
        }
      ],
      "role": "symbol",
      "title": "options",
      "type": "topic",
      "url": "/documentation/accelerate/sparseiterativemethod/options"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/SparseIterativeMethod/options/lsmr": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "lsmr"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseIterativeMethod/options/lsmr",
      "kind": "symbol",
      "role": "symbol",
      "title": "lsmr",
      "type": "topic",
      "url": "/documentation/accelerate/sparseiterativemethod/options/lsmr"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/SparseLSMROptions": {
      "abstract": [
        {
          "text": "Options for creating a least squares minimum residual method.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SparseLSMROptions"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseLSMROptions",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SparseLSMROptions"
        }
      ],
      "role": "symbol",
      "title": "SparseLSMROptions",
      "type": "topic",
      "url": "/documentation/accelerate/sparselsmroptions"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseIterativeMethod~1options/title",
          "value": "options"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseIterativeMethod~1options/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "options"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseLSMROptions/title",
          "value": "SparseLSMROptions"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseLSMROptions/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SparseLSMROptions"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseLSMROptions/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SparseLSMROptions"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseIterativeMethod/title",
          "value": "SparseIterativeMethod"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseIterativeMethod/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SparseIterativeMethod"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseIterativeMethod/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SparseIterativeMethod"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/accelerate/sparseiterativemethod/options/lsmr"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
