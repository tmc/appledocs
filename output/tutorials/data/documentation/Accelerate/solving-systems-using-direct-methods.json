{
  "abstract": [
    {
      "text": "Use direct methods to solve systems of equations where the coefficient matrix is sparse.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.accelerate/documentation/Accelerate"
      ],
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.accelerate/documentation/Accelerate",
        "doc://com.apple.accelerate/documentation/Accelerate/sparse-solvers-library"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.accelerate/documentation/Accelerate/solving-systems-using-direct-methods"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Accelerate"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Solving systems using direct methods"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Direct methods offer high-precision solving with a simple API when compared to iterative methods. The code example below uses sparse Cholesky factorization to solve the following equation:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "media-2904628",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In the equation above, ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "A",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " refers to the four-by-four coefficient matrix and ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "b",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " to the right-hand-side vector. The code in this article solves the equation ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "Ax = b",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " by finding ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "x",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Note that ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "A",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " is sparse. Some entries (those that are blank) are zero. For small matrices such as this, there’s little gain in exploiting this structure. However, it’s essential for larger systems that don’t otherwise fit in memory, even on a large computer.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The code in this article performs a sparse Cholesky factorization, equivalent to calling the LAPACK function ",
              "type": "text"
            },
            {
              "code": "dpotrf_(_:_:_:_:_:)",
              "type": "codeVoice"
            },
            {
              "text": " on a dense matrix. The main requirement for sparse Cholesky factorization is that the matrix is symmetric positive-definite (that is, ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "A=Aᵀ),",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " and all eigenvalues are greater than zero. A sufficient, but not necessary, condition is that the matrix is diagonally dominant (that is, the sum of the absolute values of the off-diagonal entries in each row or column is less than the value of the diagonal). This is the case for the above matrix.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Create-the-matrix-structure",
          "level": 3,
          "text": "Create the matrix structure",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use the code below to define the matrix structure. As ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Accelerate/creating-sparse-matrices",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " explains, because ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "A",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " is symmetric, it stores only half of the data.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "var rowIndices: [Int32] = [0, 1, 3,     // Column 0",
                    "                           1, 2, 3,     // Column 1",
                    "                           2,           // Column 2",
                    "                           3]           // Column 3",
                    " ",
                    "var columnStarts = [0, 3, 6, 7, 8]",
                    "",
                    "let structure: SparseMatrixStructure = rowIndices.withUnsafeMutableBufferPointer { rowIndicesPtr in",
                    "    columnStarts.withUnsafeMutableBufferPointer { columnStartsPtr in",
                    "        var attributes = SparseAttributes_t()",
                    "        attributes.triangle = SparseLowerTriangle",
                    "        attributes.kind = SparseSymmetric",
                    "        ",
                    "        return SparseMatrixStructure(",
                    "            rowCount: 4,",
                    "            columnCount: 4,",
                    "            columnStarts: columnStartsPtr.baseAddress!,",
                    "            rowIndices: rowIndicesPtr.baseAddress!,",
                    "            attributes: attributes,",
                    "            blockSize: 1",
                    "        )",
                    "    }",
                    "}"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "int rowIndices[]    = {0, 1, 3, 1, 2, 3, 2, 3}; ",
                    " ",
                    "double values[] = {10.0, 1.0, 2.5, 12.0, -0.3, 1.1, 9.5, 6.0};",
                    "long columnStarts[] = { 0, 3, 6, 7, 8}; ",
                    " ",
                    "SparseMatrixStructure structure = {",
                    "    .rowCount     = 4,",
                    "    .columnCount  = 4,",
                    "    .columnStarts = columnStarts,",
                    "    .rowIndices   = rowIndices,",
                    "    .attributes = {",
                    "        .kind = SparseSymmetric,",
                    "        .triangle = SparseLowerTriangle",
                    "    },",
                    "    .blockSize = 1",
                    "};"
                  ],
                  "syntax": "objc",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "anchor": "Create-and-factorize-the-matrix",
          "level": 3,
          "text": "Create and factorize the matrix",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseFactor(_:_:)-8gl6j",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function performs the actual Cholesky factorization, finding ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "L",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " such that ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "A = LLᵀ",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "let llt: SparseOpaqueFactorization_Double = values.withUnsafeMutableBufferPointer { valuesPtr in",
                    "    let a = SparseMatrix_Double(",
                    "        structure: structure,",
                    "        data: valuesPtr.baseAddress!",
                    "    )",
                    "    ",
                    "    return SparseFactor(SparseFactorizationCholesky, a)",
                    "}"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "var values = [10.0, 1.0, 2.5,           // Column 0",
                    "              12.0, -0.3, 1.1,          // Column 1",
                    "              9.5,                      // Column 2",
                    "              6.0]                      // Column 3",
                    "",
                    "SparseMatrix_Double A = {",
                    "    .structure = structure,",
                    "    .data = values",
                    "};",
                    "",
                    "__auto_type LLT = SparseFactor(SparseFactorizationCholesky, A);"
                  ],
                  "syntax": "objc",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "If the factorization function encounters an error, the code prints an error message and terminates. You may instead want to capture the error by using the optional ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseSymbolicFactorOptions",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " parameter and set the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseSymbolicFactorOptions/reportError",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " parameter to a user-supplied error-handling routine. The returned ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseOpaqueFactorization_Double",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " structure reflects the error.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Solve-the-equation",
          "level": 3,
          "text": "Solve the equation",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use the factorization to solve the equation. The right-hand-side and solution vectors are arrays that you wrap in ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/DenseVector_Double",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " structures. The actual values of ",
              "type": "text"
            },
            {
              "code": "x",
              "type": "codeVoice"
            },
            {
              "text": " don’t matter because the function overwrites them.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "var bValues = [ 2.20, 2.85, 2.79, 2.87 ]",
                    "var xValues = [ 0.00, 0.00, 0.00, 0.00 ]"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "double bValues[] = { 2.20, 2.85, 2.79, 2.87 };",
                    "DenseVector_Double b = {",
                    "    .count = 4,     ",
                    "    .data = bValues ",
                    "  };",
                    " ",
                    "double xValues[] = { 0.00, 0.00, 0.00, 0.00 };",
                    "DenseVector_Double x = {",
                    "    .count = 4,    ",
                    "    .data = xValues ",
                    "  };"
                  ],
                  "syntax": "objc",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "The solve call takes the factorization ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "A = LLᵀ",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " and solves the system ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "Ax = b",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " as ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "LLᵀx = b",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " by solving the two triangular systems:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Ly = b",
                          "type": "text"
                        }
                      ],
                      "type": "emphasis"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "Lᵀx = y",
                          "type": "text"
                        }
                      ],
                      "type": "emphasis"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "However, you need only to supply the right-hand-side vector and the factorization.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseSolve(_:_:_:)-416bj",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function solves the equation and populates ",
              "type": "text"
            },
            {
              "code": "x",
              "type": "codeVoice"
            },
            {
              "text": " with the solution.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "bValues.withUnsafeMutableBufferPointer { bPtr in",
                    "    xValues.withUnsafeMutableBufferPointer { xPtr in",
                    "        ",
                    "        let b = DenseVector_Double(",
                    "            count: 4,",
                    "            data: bPtr.baseAddress!",
                    "        )",
                    "        let x = DenseVector_Double(",
                    "            count: 4,",
                    "            data: xPtr.baseAddress!",
                    "        )",
                    "",
                    "        SparseSolve(llt, b, x)",
                    "    }",
                    "}"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "SparseSolve(LLT, b, x);"
                  ],
                  "syntax": "objc",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "If the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseSolve(_:_:_:)-416bj",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function encounters an error, the code prints an error message and terminates, unless you set ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseSymbolicFactorOptions/reportError",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " on the initial call to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseFactor(_:_:)-8gl6j",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The following code iterates over the solution vector, ",
              "type": "text"
            },
            {
              "code": "x",
              "type": "codeVoice"
            },
            {
              "text": ", and prints the solution, ",
              "type": "text"
            },
            {
              "code": "x = 0.10 0.20 0.30 0.40",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "print(\"x = \\(xValues)\")"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "printf(\"x = \"); for(int i=0; i<x.count; i++) printf(\" %.2f\", x.data[i]); printf(\"\\n\");"
                  ],
                  "syntax": "objc",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.accelerate/documentation/Accelerate": {
      "abstract": [
        {
          "text": "Make large-scale mathematical computations and image calculations, optimized for high performance and low energy consumption.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate",
      "kind": "symbol",
      "role": "collection",
      "title": "Accelerate",
      "type": "topic",
      "url": "/documentation/accelerate"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/DenseVector_Double": {
      "abstract": [
        {
          "text": "A structure that contains a dense vector of double-precision, floating-point values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DenseVector_Double"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/DenseVector_Double",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DenseVector_Double"
        }
      ],
      "role": "symbol",
      "title": "DenseVector_Double",
      "type": "topic",
      "url": "/documentation/accelerate/densevector_double"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/SparseFactor(_:_:)-8gl6j": {
      "abstract": [
        {
          "text": "Returns the specified factorization of a sparse matrix of double-precision values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SparseFactor"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@EA@SparseFactorization_t",
          "text": "SparseFactorization_t"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@SparseMatrix_Double",
          "text": "SparseMatrix_Double"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@SparseOpaqueFactorization_Double",
          "text": "SparseOpaqueFactorization_Double"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseFactor(_:_:)-8gl6j",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SparseFactor"
        }
      ],
      "role": "symbol",
      "title": "SparseFactor(_:_:)",
      "type": "topic",
      "url": "/documentation/accelerate/sparsefactor(_:_:)-8gl6j"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/SparseOpaqueFactorization_Double": {
      "abstract": [
        {
          "text": "A structure that represents the factorization of a matrix of double-precision, floating-point values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SparseOpaqueFactorization_Double"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseOpaqueFactorization_Double",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SparseOpaqueFactorization_Double"
        }
      ],
      "role": "symbol",
      "title": "SparseOpaqueFactorization_Double",
      "type": "topic",
      "url": "/documentation/accelerate/sparseopaquefactorization_double"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/SparseSolve(_:_:_:)-416bj": {
      "abstract": [
        {
          "text": "Solves the system ",
          "type": "text"
        },
        {
          "inlineContent": [
            {
              "text": "Ax = b",
              "type": "text"
            }
          ],
          "type": "emphasis"
        },
        {
          "text": " using the supplied double-precision factorization of ",
          "type": "text"
        },
        {
          "inlineContent": [
            {
              "text": "A",
              "type": "text"
            }
          ],
          "type": "emphasis"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SparseSolve"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@SparseOpaqueFactorization_Double",
          "text": "SparseOpaqueFactorization_Double"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@DenseVector_Double",
          "text": "DenseVector_Double"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@DenseVector_Double",
          "text": "DenseVector_Double"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseSolve(_:_:_:)-416bj",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SparseSolve"
        }
      ],
      "role": "symbol",
      "title": "SparseSolve(_:_:_:)",
      "type": "topic",
      "url": "/documentation/accelerate/sparsesolve(_:_:_:)-416bj"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/SparseSymbolicFactorOptions": {
      "abstract": [
        {
          "text": "A structure that contains options that affect the symbolic stage of a sparse factorization.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SparseSymbolicFactorOptions"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseSymbolicFactorOptions",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SparseSymbolicFactorOptions"
        }
      ],
      "role": "symbol",
      "title": "SparseSymbolicFactorOptions",
      "type": "topic",
      "url": "/documentation/accelerate/sparsesymbolicfactoroptions"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/SparseSymbolicFactorOptions/reportError": {
      "abstract": [
        {
          "text": "The function for reporting parameter errors.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "reportError"
        },
        {
          "kind": "text",
          "text": ": (("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/SparseSymbolicFactorOptions/reportError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "reportError"
        }
      ],
      "role": "symbol",
      "title": "reportError",
      "type": "topic",
      "url": "/documentation/accelerate/sparsesymbolicfactoroptions/reporterror"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/creating-a-sparse-matrix-from-coordinate-format-arrays": {
      "abstract": [
        {
          "text": "Use separate coordinate format arrays to create sparse matrices.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/creating-a-sparse-matrix-from-coordinate-format-arrays",
      "kind": "article",
      "role": "article",
      "title": "Creating a sparse matrix from coordinate format arrays",
      "type": "topic",
      "url": "/documentation/accelerate/creating-a-sparse-matrix-from-coordinate-format-arrays"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/creating-sparse-matrices": {
      "abstract": [
        {
          "text": "Create sparse matrices for factorization and solving systems.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/creating-sparse-matrices",
      "kind": "article",
      "role": "article",
      "title": "Creating sparse matrices",
      "type": "topic",
      "url": "/documentation/accelerate/creating-sparse-matrices"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/solving-systems-using-iterative-methods": {
      "abstract": [
        {
          "text": "Use iterative methods to solve systems of equations where the coefficient matrix is sparse.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/solving-systems-using-iterative-methods",
      "kind": "article",
      "role": "article",
      "title": "Solving systems using iterative methods",
      "type": "topic",
      "url": "/documentation/accelerate/solving-systems-using-iterative-methods"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/sparse-solvers-library": {
      "abstract": [
        {
          "text": "Solve systems of equations where the coefficient matrix is sparse.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/sparse-solvers-library",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Sparse Solvers",
      "type": "topic",
      "url": "/documentation/accelerate/sparse-solvers-library"
    },
    "doc://com.apple.documentation/documentation/Accelerate/creating-sparse-matrices": {
      "abstract": [
        {
          "text": "Create sparse matrices for factorization and solving systems.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Accelerate/creating-sparse-matrices",
      "kind": "article",
      "role": "article",
      "title": "Creating sparse matrices",
      "type": "topic",
      "url": "/documentation/Accelerate/creating-sparse-matrices"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "media-2904628": {
      "alt": "A mathematical equation that consists of a four-by-four sparse matrix multiplied by a four-element vector of unknown values equals a four-element vector of known values.",
      "identifier": "media-2904628",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/2c13eba9c0f47ff54e7774d087efc9f1/media-2904628@2x.png"
        }
      ]
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Sparse-Matrices",
      "generated": true,
      "identifiers": [
        "doc://com.apple.accelerate/documentation/Accelerate/creating-sparse-matrices",
        "doc://com.apple.accelerate/documentation/Accelerate/solving-systems-using-iterative-methods",
        "doc://com.apple.accelerate/documentation/Accelerate/creating-a-sparse-matrix-from-coordinate-format-arrays",
        "doc://com.apple.accelerate/documentation/Accelerate/sparse-solvers-library"
      ],
      "title": "Sparse Matrices"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseSymbolicFactorOptions/title",
          "value": "SparseSymbolicFactorOptions"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseSymbolicFactorOptions/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SparseSymbolicFactorOptions"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseSymbolicFactorOptions/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SparseSymbolicFactorOptions"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseSolve(_:_:_:)-416bj/title",
          "value": "SparseSolve"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseSolve(_:_:_:)-416bj/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SparseSolve"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseSymbolicFactorOptions~1reportError/title",
          "value": "reportError"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseSymbolicFactorOptions~1reportError/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "reportError"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseFactor(_:_:)-8gl6j/title",
          "value": "SparseFactor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseFactor(_:_:)-8gl6j/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SparseFactor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1DenseVector_Double/title",
          "value": "DenseVector_Double"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1DenseVector_Double/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "DenseVector_Double"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1DenseVector_Double/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "DenseVector_Double"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseOpaqueFactorization_Double/title",
          "value": "SparseOpaqueFactorization_Double"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseOpaqueFactorization_Double/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SparseOpaqueFactorization_Double"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1SparseOpaqueFactorization_Double/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SparseOpaqueFactorization_Double"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
