{
  "abstract": [
    {
      "text": "Improve your app’s performance by converting image buffer formats from interleaved to planar.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.accelerate/documentation/Accelerate"
      ],
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.accelerate/documentation/Accelerate",
        "doc://com.apple.accelerate/documentation/Accelerate/vimage-library"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.accelerate/documentation/Accelerate/optimizing-image-processing-performance"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Accelerate"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Optimizing image-processing performance"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The vImage library operates on image data with two memory layouts:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "inlineContent": [
                {
                  "text": "Interleaved",
                  "type": "text"
                }
              ],
              "type": "strong"
            },
            {
              "text": " stores each pixel’s color data consecutively in a single buffer. For example, the data that describes a 4-channel image (red, green, blue, and alpha) would be stored as RGBARGBARGBA…",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "inlineContent": [
                {
                  "text": "Planar",
                  "type": "text"
                }
              ],
              "type": "strong"
            },
            {
              "text": " stores each color channel in separate buffers. For example, a 4-channel image would be stored as four individual buffers containing red, green, blue, and alpha data.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "media-3023512",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Because many vImage functions operate on a single color channel at a time — by converting an interleaved buffer to planar buffers — you can often improve your app’s performance by doing this conversion manually. However, most vImage functions are available in both the interleaved and planar variants, so before you do the conversion, try both to see which works better in your context.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In some cases, you may not want to apply a vImage operation to all four channels of an image. For example, you may know beforehand that the alpha channel is irrelevant in the images that you’re dealing with, or perhaps all of your images are grayscale and you need to operate on only one channel. Using planar formats makes it possible to isolate and work with only the channels you need.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Review-interleaved-performance",
          "level": 3,
          "text": "Review interleaved performance",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Typically, your source imagery is in interleaved format, and your default option will be to use the interleaved variant of a vImage function. For example, the following code scales a Core Graphics image to one tenth of its original size. Note that the 4-channel, 8-bit-per-channel interleaved pixel buffer ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/scale(destination:)-5euvc",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function calls ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImageScale_ARGB8888(_:_:_:_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var cgImageFormat = vImage_CGImageFormat(",
            "    bitsPerComponent: 8,",
            "    bitsPerPixel: 8 * 4,",
            "    colorSpace: CGColorSpaceCreateDeviceRGB(),",
            "    bitmapInfo: CGBitmapInfo(rawValue:",
            "                                CGImageAlphaInfo.noneSkipLast.rawValue))!",
            "",
            "let sourceBuffer = try vImage.PixelBuffer(cgImage: sourceImage,",
            "                                          cgImageFormat: &cgImageFormat,",
            "                                          pixelFormat: vImage.Interleaved8x4.self)",
            "",
            "let destinationBuffer = vImage.PixelBuffer(size: .init(width: sourceBuffer.width / 10,",
            "                                                       height: sourceBuffer.height / 10),",
            "                                           pixelFormat: vImage.Interleaved8x4.self)",
            "",
            "let time = ContinuousClock().measure {",
            "    sourceBuffer.scale(destination: destinationBuffer)",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "You can use ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/ContinuousClock",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to measure the execution time.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Convert-an-interleaved-source-buffer-to-planar-buffers",
          "level": 3,
          "text": "Convert an interleaved source buffer to planar buffers",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The pixel buffer ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/init(cgImage:cgImageFormat:pixelFormat:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " initializer and the vImage buffer ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImageBuffer_InitWithCGImage(_:_:_:_:_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function both populate a buffer based on the properties of a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage_CGImageFormat",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " structure.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example, the following code creates an interleaved 3-channel, 8-bit-per-channel ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " structure from the source Core Graphics image. The code calls ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/deinterleave(destination:)-hrhz",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to deinterleave the image data and populate the individual red, green, and blue planar pixel buffers.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var cgImageFormat = vImage_CGImageFormat(",
            "    bitsPerComponent: 8,",
            "    bitsPerPixel: 8 * 3,",
            "    colorSpace: CGColorSpaceCreateDeviceRGB(),",
            "    bitmapInfo: CGBitmapInfo(rawValue:",
            "                                CGImageAlphaInfo.none.rawValue))!",
            "",
            "let sourceBuffer = try vImage.PixelBuffer(cgImage: sourceImage,",
            "                                          cgImageFormat: &cgImageFormat,",
            "                                          pixelFormat: vImage.Interleaved8x3.self)",
            "let sourceRedBuffer = vImage.PixelBuffer(size: sourceBuffer.size,",
            "                                         pixelFormat: vImage.Planar8.self)",
            "let sourceGreenBuffer = vImage.PixelBuffer(size: sourceBuffer.size,",
            "                                           pixelFormat: vImage.Planar8.self)",
            "let sourceBlueBuffer = vImage.PixelBuffer(size: sourceBuffer.size,",
            "                                          pixelFormat: vImage.Planar8.self)",
            "",
            "sourceBuffer.deinterleave(planarDestinationBuffers: [sourceRedBuffer,",
            "                                                     sourceGreenBuffer,",
            "                                                     sourceBlueBuffer])"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Initialize-the-destination-buffers",
          "level": 3,
          "text": "Initialize the destination buffers",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Create an interleaved 3-channel, 8-bit-per-channel destination buffer and three planar destination buffers:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let destinationBuffer = vImage.PixelBuffer(size: .init(width: sourceBuffer.width / 10,",
            "                                                       height: sourceBuffer.height / 10),",
            "                                           pixelFormat: vImage.Interleaved8x3.self)",
            "",
            "let destinationRedBuffer = vImage.PixelBuffer(size: destinationBuffer.size,",
            "                                              pixelFormat: vImage.Planar8.self)",
            "let destinationGreenBuffer = vImage.PixelBuffer(size: destinationBuffer.size,",
            "                                                pixelFormat: vImage.Planar8.self)",
            "let destinationBlueBuffer = vImage.PixelBuffer(size: destinationBuffer.size,",
            "                                               pixelFormat: vImage.Planar8.self)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Apply-the-scale-operation-to-the-planar-buffers",
          "level": 3,
          "text": "Apply the scale operation to the planar buffers",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "code": "withTaskGroup(of:returning:body:)",
              "type": "codeVoice"
            },
            {
              "text": " function to start a new scope that contains the three planar scale operations. Note that the 8-bit planar ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/scale(destination:)-5euvc",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function calls ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImageScale_Planar8(_:_:_:_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In the code below, the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/interleave(destination:)-46cgi",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function interleaves the three planar buffers and populates the interleaved destination buffer with the scaled image:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let time = await ContinuousClock().measure {",
            "    ",
            "    await withTaskGroup(of: Void.self) { group in",
            "        ",
            "        group.addTask(priority: .userInitiated) {",
            "            sourceRedBuffer.scale(destination: destinationRedBuffer)",
            "        }",
            "        ",
            "        group.addTask(priority: .userInitiated) {",
            "            sourceGreenBuffer.scale(destination: destinationGreenBuffer)",
            "        }",
            "        ",
            "        group.addTask(priority: .userInitiated) {",
            "            sourceBlueBuffer.scale(destination: destinationBlueBuffer)",
            "        }",
            "    }",
            "    ",
            "    destinationBuffer.interleave(planarSourceBuffers: [destinationRedBuffer,",
            "                                                       destinationGreenBuffer,",
            "                                                       destinationBlueBuffer])",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The following code calls ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/makeCGImage(cgImageFormat:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to create a Core Graphics image from the result of the scale operation:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let scaledImage = destinationBuffer.makeCGImage(cgImageFormat: cgImageFormat)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.accelerate/documentation/Accelerate": {
      "abstract": [
        {
          "text": "Make large-scale mathematical computations and image calculations, optimized for high performance and low energy consumption.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate",
      "kind": "symbol",
      "role": "collection",
      "title": "Accelerate",
      "type": "topic",
      "url": "/documentation/accelerate"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/applying-geometric-transforms-to-images": {
      "abstract": [
        {
          "text": "Reflect, shear, rotate, and scale image buffers using vImage.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/applying-geometric-transforms-to-images",
      "kind": "article",
      "role": "article",
      "title": "Applying geometric transforms to images",
      "type": "topic",
      "url": "/documentation/accelerate/applying-geometric-transforms-to-images"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/applying-vimage-operations-to-regions-of-interest": {
      "abstract": [
        {
          "text": "Limit the effect of vImage operations to rectangular regions of interest.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/applying-vimage-operations-to-regions-of-interest",
      "kind": "article",
      "role": "article",
      "title": "Applying vImage operations to regions of interest",
      "type": "topic",
      "url": "/documentation/accelerate/applying-vimage-operations-to-regions-of-interest"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/building-a-basic-image-processing-workflow": {
      "abstract": [
        {
          "text": "Resize an image with vImage.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/building-a-basic-image-processing-workflow",
      "kind": "article",
      "role": "article",
      "title": "Building a Basic Image-Processing Workflow",
      "type": "topic",
      "url": "/documentation/accelerate/building-a-basic-image-processing-workflow"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/compositing-images-with-alpha-blending": {
      "abstract": [
        {
          "text": "Combine two images by using alpha blending to create a single output.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/compositing-images-with-alpha-blending",
      "kind": "article",
      "role": "article",
      "title": "Compositing images with alpha blending",
      "type": "topic",
      "url": "/documentation/accelerate/compositing-images-with-alpha-blending"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/compositing-images-with-vimage-blend-modes": {
      "abstract": [
        {
          "text": "Combine two images by using blend modes to create a single output.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/compositing-images-with-vimage-blend-modes",
      "kind": "article",
      "role": "article",
      "title": "Compositing images with vImage blend modes",
      "type": "topic",
      "url": "/documentation/accelerate/compositing-images-with-vimage-blend-modes"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/converting-bitmap-data-between-core-graphics-images-and-vimage-buffers": {
      "abstract": [
        {
          "text": "Pass image data between Core Graphics and vImage to create and manipulate images.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/converting-bitmap-data-between-core-graphics-images-and-vimage-buffers",
      "kind": "article",
      "role": "article",
      "title": "Converting bitmap data between Core Graphics images and vImage buffers",
      "type": "topic",
      "url": "/documentation/accelerate/converting-bitmap-data-between-core-graphics-images-and-vimage-buffers"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/creating-a-core-graphics-image-from-a-vimage-buffer": {
      "abstract": [
        {
          "text": "Create displayable representations of vImage buffers.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/creating-a-core-graphics-image-from-a-vimage-buffer",
      "kind": "article",
      "role": "article",
      "title": "Creating a Core Graphics Image from a vImage Buffer",
      "type": "topic",
      "url": "/documentation/accelerate/creating-a-core-graphics-image-from-a-vimage-buffer"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/creating-and-populating-buffers-from-core-graphics-images": {
      "abstract": [
        {
          "text": "Initialize vImage buffers from Core Graphics images.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/creating-and-populating-buffers-from-core-graphics-images",
      "kind": "article",
      "role": "article",
      "title": "Creating and Populating Buffers from Core Graphics Images",
      "type": "topic",
      "url": "/documentation/accelerate/creating-and-populating-buffers-from-core-graphics-images"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer": {
      "abstract": [
        {
          "text": "An image buffer that stores an image’s pixel data, dimensions, bit depth, and number of channels.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PixelBuffer"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PixelBuffer"
        }
      ],
      "role": "symbol",
      "title": "vImage.PixelBuffer",
      "type": "topic",
      "url": "/documentation/accelerate/vimage/pixelbuffer"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/deinterleave(destination:)-hrhz": {
      "abstract": [
        {
          "text": "Deinterleaves the 8-bit-per-channel, three-channel interleaved buffer and writes the result to a multiple-plane pixel buffer.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Format",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "vImage.Interleaved8x3",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "deinterleave"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "destination"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Accelerate6vImageO",
          "text": "vImage"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Accelerate6vImageO11PixelBufferV",
          "text": "PixelBuffer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Accelerate6vImageO",
          "text": "vImage"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Accelerate6vImageO9Planar8x3V",
          "text": "Planar8x3"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/deinterleave(destination:)-hrhz",
      "kind": "symbol",
      "role": "symbol",
      "title": "deinterleave(destination:)",
      "type": "topic",
      "url": "/documentation/accelerate/vimage/pixelbuffer/deinterleave(destination:)-hrhz"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/init(cgImage:cgImageFormat:pixelFormat:)": {
      "abstract": [
        {
          "text": "Returns a new pixel buffer initialized from a Core Graphics image.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Format",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "InitializableFromCGImage",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "StaticPixelFormat",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "cgImage"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@CGImageRef",
          "text": "CGImage"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "cgImageFormat"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@vImage_CGImageFormat",
          "text": "vImage_CGImageFormat"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "pixelFormat"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Format"
        },
        {
          "kind": "text",
          "text": ".Type) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/init(cgImage:cgImageFormat:pixelFormat:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(cgImage:cgImageFormat:pixelFormat:)",
      "type": "topic",
      "url": "/documentation/accelerate/vimage/pixelbuffer/init(cgimage:cgimageformat:pixelformat:)"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/interleave(destination:)-46cgi": {
      "abstract": [
        {
          "text": "Interleaves the 8-bit-per-channel, three-channel multiple-plane buffer and writes the result to an interleaved pixel buffer.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Format",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "vImage.Planar8x3",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "interleave"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "destination"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Accelerate6vImageO",
          "text": "vImage"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Accelerate6vImageO11PixelBufferV",
          "text": "PixelBuffer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Accelerate6vImageO",
          "text": "vImage"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Accelerate6vImageO14Interleaved8x3V",
          "text": "Interleaved8x3"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/interleave(destination:)-46cgi",
      "kind": "symbol",
      "role": "symbol",
      "title": "interleave(destination:)",
      "type": "topic",
      "url": "/documentation/accelerate/vimage/pixelbuffer/interleave(destination:)-46cgi"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/makeCGImage(cgImageFormat:)": {
      "abstract": [
        {
          "text": "Returns a Core Graphics image from the pixel buffer’s contents.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Format",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "StaticPixelFormat",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "makeCGImage"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "cgImageFormat"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@vImage_CGImageFormat",
          "text": "vImage_CGImageFormat"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@CGImageRef",
          "text": "CGImage"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/makeCGImage(cgImageFormat:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "makeCGImage(cgImageFormat:)",
      "type": "topic",
      "url": "/documentation/accelerate/vimage/pixelbuffer/makecgimage(cgimageformat:)"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/scale(destination:)-5euvc": {
      "abstract": [
        {
          "text": "Scales an 8-bit planar pixel buffer to fit the destination buffer.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Format",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "vImage.Planar8",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "scale"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "destination"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Accelerate6vImageO",
          "text": "vImage"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Accelerate6vImageO11PixelBufferV",
          "text": "PixelBuffer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Format"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage/PixelBuffer/scale(destination:)-5euvc",
      "kind": "symbol",
      "role": "symbol",
      "title": "scale(destination:)",
      "type": "topic",
      "url": "/documentation/accelerate/vimage/pixelbuffer/scale(destination:)-5euvc"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vImageBuffer_InitWithCGImage(_:_:_:_:_:)": {
      "abstract": [
        {
          "text": "Initializes a vImage buffer with the contents of a Core Graphics image.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "vImageBuffer_InitWithCGImage"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sp",
          "text": "UnsafeMutablePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@vImage_Buffer",
          "text": "vImage_Buffer"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sp",
          "text": "UnsafeMutablePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@vImage_CGImageFormat",
          "text": "vImage_CGImageFormat"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14CoreFoundation7CGFloatV",
          "text": "CGFloat"
        },
        {
          "kind": "text",
          "text": ">!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@CGImageRef",
          "text": "CGImage"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@vImage_Flags",
          "text": "vImage_Flags"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@vImage_Error",
          "text": "vImage_Error"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImageBuffer_InitWithCGImage(_:_:_:_:_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "vImageBuffer_InitWithCGImage"
        }
      ],
      "role": "symbol",
      "title": "vImageBuffer_InitWithCGImage(_:_:_:_:_:)",
      "type": "topic",
      "url": "/documentation/accelerate/vimagebuffer_initwithcgimage(_:_:_:_:_:)"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vImageScale_ARGB8888(_:_:_:_:)": {
      "abstract": [
        {
          "text": "Scales an 8-bit-per-channel, 4-channel interleaved image to fit a destination buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "vImageScale_ARGB8888"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@vImage_Buffer",
          "text": "vImage_Buffer"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@vImage_Buffer",
          "text": "vImage_Buffer"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sv",
          "text": "UnsafeMutableRawPointer"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@vImage_Flags",
          "text": "vImage_Flags"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@vImage_Error",
          "text": "vImage_Error"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImageScale_ARGB8888(_:_:_:_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "vImageScale_ARGB8888"
        }
      ],
      "role": "symbol",
      "title": "vImageScale_ARGB8888(_:_:_:_:)",
      "type": "topic",
      "url": "/documentation/accelerate/vimagescale_argb8888(_:_:_:_:)"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vImageScale_Planar8(_:_:_:_:)": {
      "abstract": [
        {
          "text": "Scales an 8-bit planar image to fit a destination buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "vImageScale_Planar8"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@vImage_Buffer",
          "text": "vImage_Buffer"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@vImage_Buffer",
          "text": "vImage_Buffer"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sv",
          "text": "UnsafeMutableRawPointer"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@vImage_Flags",
          "text": "vImage_Flags"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@vImage_Error",
          "text": "vImage_Error"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImageScale_Planar8(_:_:_:_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "vImageScale_Planar8"
        }
      ],
      "role": "symbol",
      "title": "vImageScale_Planar8(_:_:_:_:)",
      "type": "topic",
      "url": "/documentation/accelerate/vimagescale_planar8(_:_:_:_:)"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vImage_CGImageFormat": {
      "abstract": [
        {
          "text": "The description of a Core Graphics image.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "vImage_CGImageFormat"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vImage_CGImageFormat",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "vImage_CGImageFormat"
        }
      ],
      "role": "symbol",
      "title": "vImage_CGImageFormat",
      "type": "topic",
      "url": "/documentation/accelerate/vimage_cgimageformat"
    },
    "doc://com.apple.accelerate/documentation/Accelerate/vimage-library": {
      "abstract": [
        {
          "text": "Manipulate large images using the CPU’s vector processor.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.accelerate/documentation/Accelerate/vimage-library",
      "kind": "article",
      "role": "collectionGroup",
      "title": "vImage",
      "type": "topic",
      "url": "/documentation/accelerate/vimage-library"
    },
    "doc://com.apple.documentation/documentation/Swift/ContinuousClock": {
      "abstract": [
        {
          "text": "A clock that measures time that always increments and does not stop incrementing while the system is asleep.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ContinuousClock"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/ContinuousClock",
      "kind": "symbol",
      "role": "symbol",
      "title": "ContinuousClock",
      "type": "topic",
      "url": "/documentation/Swift/ContinuousClock"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "media-3023512": {
      "alt": "A diagram showing how the color information for each pixel in an image is stored in interleaved and planar buffers.",
      "identifier": "media-3023512",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/9ca5720cecfccf9a40e29dcb8dfb8134/media-3023512@2x.png"
        }
      ]
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Image-Processing-Essentials",
      "generated": true,
      "identifiers": [
        "doc://com.apple.accelerate/documentation/Accelerate/converting-bitmap-data-between-core-graphics-images-and-vimage-buffers",
        "doc://com.apple.accelerate/documentation/Accelerate/creating-and-populating-buffers-from-core-graphics-images",
        "doc://com.apple.accelerate/documentation/Accelerate/creating-a-core-graphics-image-from-a-vimage-buffer",
        "doc://com.apple.accelerate/documentation/Accelerate/building-a-basic-image-processing-workflow",
        "doc://com.apple.accelerate/documentation/Accelerate/applying-geometric-transforms-to-images",
        "doc://com.apple.accelerate/documentation/Accelerate/compositing-images-with-alpha-blending",
        "doc://com.apple.accelerate/documentation/Accelerate/compositing-images-with-vimage-blend-modes",
        "doc://com.apple.accelerate/documentation/Accelerate/applying-vimage-operations-to-regions-of-interest",
        "doc://com.apple.accelerate/documentation/Accelerate/vimage-library"
      ],
      "title": "Image Processing Essentials"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImageBuffer_InitWithCGImage(_:_:_:_:_:)/title",
          "value": "vImageBuffer_InitWithCGImage"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImageBuffer_InitWithCGImage(_:_:_:_:_:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "vImageBuffer_InitWithCGImage"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImageScale_Planar8(_:_:_:_:)/title",
          "value": "vImageScale_Planar8"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImageScale_Planar8(_:_:_:_:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "vImageScale_Planar8"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImageScale_ARGB8888(_:_:_:_:)/title",
          "value": "vImageScale_ARGB8888"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImageScale_ARGB8888(_:_:_:_:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "vImageScale_ARGB8888"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImage_CGImageFormat/title",
          "value": "vImage_CGImageFormat"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImage_CGImageFormat/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "vImage_CGImageFormat"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.accelerate~1documentation~1Accelerate~1vImage_CGImageFormat/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "vImage_CGImageFormat"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
