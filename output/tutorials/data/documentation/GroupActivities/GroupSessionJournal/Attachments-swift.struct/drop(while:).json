{
  "abstract": [
    {
      "text": "Omits elements from the base asynchronous sequence until a given closure",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "returns false, after which it passes through all remaining elements.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.GroupActivities/documentation/GroupActivities",
        "doc://com.apple.GroupActivities/documentation/GroupActivities/GroupSessionJournal",
        "doc://com.apple.GroupActivities/documentation/GroupActivities/GroupSessionJournal/Attachments-swift.struct"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.GroupActivities/documentation/GroupActivities/GroupSessionJournal/Attachments-swift.struct/drop(while:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Swift",
    "externalID": "s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:15GroupActivities0A14SessionJournalC11AttachmentsV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "drop"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "while"
      },
      {
        "kind": "text",
        "text": ": ("
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sci7ElementQa",
        "text": "Element"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "async"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sb",
        "text": "Bool"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:12_Concurrency22AsyncDropWhileSequenceV",
        "text": "AsyncDropWhileSequence"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": ">"
      }
    ],
    "modules": [
      {
        "name": "Group Activities",
        "relatedModules": [
          "Swift"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "drop(while:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@preconcurrency"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "drop"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "while"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "predicate"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "@escaping"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sci7ElementQa",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sci7ElementQa",
              "text": "Element"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sb",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:12_Concurrency22AsyncDropWhileSequenceV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:12_Concurrency22AsyncDropWhileSequenceV",
              "text": "AsyncDropWhileSequence"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A closure that takes an element as a parameter and",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "returns a Boolean value indicating whether to drop the element from the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "modified sequence.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "predicate"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "An asynchronous sequence that skips over values from the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "base sequence until the provided closure returns ",
              "type": "text"
            },
            {
              "code": "false",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use ",
              "type": "text"
            },
            {
              "code": "drop(while:)",
              "type": "codeVoice"
            },
            {
              "text": " to omit elements from an asynchronous sequence until",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the element received meets a condition you specify.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In this example, an asynchronous sequence called ",
              "type": "text"
            },
            {
              "code": "Counter",
              "type": "codeVoice"
            },
            {
              "text": " produces ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "values from ",
              "type": "text"
            },
            {
              "code": "1",
              "type": "codeVoice"
            },
            {
              "text": " to ",
              "type": "text"
            },
            {
              "code": "10",
              "type": "codeVoice"
            },
            {
              "text": ". The ",
              "type": "text"
            },
            {
              "code": "drop(while:)",
              "type": "codeVoice"
            },
            {
              "text": " method causes the modified",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "sequence to ignore received values until it encounters one that is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "divisible by ",
              "type": "text"
            },
            {
              "code": "3",
              "type": "codeVoice"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let stream = Counter(howHigh: 10)",
            "    .drop { $0 % 3 != 0 }",
            "for await number in stream {",
            "    print(number, terminator: \" \")",
            "}",
            "// Prints \"3 4 5 6 7 8 9 10 \""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "After the predicate returns ",
              "type": "text"
            },
            {
              "code": "false",
              "type": "codeVoice"
            },
            {
              "text": ", the sequence never executes it again,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and from then on the sequence passes through elements from its underlying",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "sequence as-is.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.GroupActivities/documentation/GroupActivities": {
      "abstract": [
        {
          "text": "Create app-specific activities your users can share and experience together.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.GroupActivities/documentation/GroupActivities",
      "kind": "symbol",
      "role": "collection",
      "title": "Group Activities",
      "type": "topic",
      "url": "/documentation/groupactivities"
    },
    "doc://com.apple.GroupActivities/documentation/GroupActivities/GroupSessionJournal": {
      "abstract": [
        {
          "text": "An object that manages file and data transfers between participants",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "joined in a group session.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GroupSessionJournal"
        }
      ],
      "identifier": "doc://com.apple.GroupActivities/documentation/GroupActivities/GroupSessionJournal",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "GroupSessionJournal"
        }
      ],
      "role": "symbol",
      "title": "GroupSessionJournal",
      "type": "topic",
      "url": "/documentation/groupactivities/groupsessionjournal"
    },
    "doc://com.apple.GroupActivities/documentation/GroupActivities/GroupSessionJournal/Attachments-swift.struct": {
      "abstract": [
        {
          "text": "An asynchronous sequence that contains one or more incoming attachment",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "containers for you to process.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Attachments"
        }
      ],
      "identifier": "doc://com.apple.GroupActivities/documentation/GroupActivities/GroupSessionJournal/Attachments-swift.struct",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Attachments"
        }
      ],
      "role": "symbol",
      "title": "GroupSessionJournal.Attachments",
      "type": "topic",
      "url": "/documentation/groupactivities/groupsessionjournal/attachments-swift.struct"
    },
    "doc://com.apple.GroupActivities/documentation/GroupActivities/GroupSessionJournal/Attachments-swift.struct/drop(while:)": {
      "abstract": [
        {
          "text": "Omits elements from the base asynchronous sequence until a given closure",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "returns false, after which it passes through all remaining elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "drop"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "while"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sci7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12_Concurrency22AsyncDropWhileSequenceV",
          "text": "AsyncDropWhileSequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.GroupActivities/documentation/GroupActivities/GroupSessionJournal/Attachments-swift.struct/drop(while:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "drop(while:)",
      "type": "topic",
      "url": "/documentation/groupactivities/groupsessionjournal/attachments-swift.struct/drop(while:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:12_Concurrency22AsyncDropWhileSequenceV": {
      "abstract": [
        {
          "text": "An asynchronous sequence which omits elements from the base sequence until a given closure returns false, after which it passes through all remaining elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AsyncDropWhileSequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Base"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Base"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sci",
          "text": "AsyncSequence"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:12_Concurrency22AsyncDropWhileSequenceV",
      "kind": "symbol",
      "role": "symbol",
      "title": "AsyncDropWhileSequence",
      "type": "topic",
      "url": "/documentation/Swift/AsyncDropWhileSequence"
    },
    "doc://com.externally.resolved.symbol/s:Sb": {
      "abstract": [
        {
          "text": "A value type whose instances are either `true` or `false`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Sb",
      "kind": "symbol",
      "role": "symbol",
      "title": "Bool",
      "type": "topic",
      "url": "/documentation/Swift/Bool"
    },
    "doc://com.externally.resolved.symbol/s:Sci7ElementQa": {
      "abstract": [
        {
          "text": "The type of element produced by this asynchronous sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sci7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": " == "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sci13AsyncIteratorQa",
          "text": "AsyncIterator"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScI7ElementQa",
          "text": "Element"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Sci7ElementQa",
      "kind": "symbol",
      "role": "symbol",
      "title": "Element",
      "type": "topic",
      "url": "/documentation/Swift/AsyncSequence/Element"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/groupactivities/groupsessionjournal/attachments-swift.struct/drop(while:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
