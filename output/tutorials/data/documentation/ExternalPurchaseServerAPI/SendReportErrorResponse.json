{
  "abstract": [
    {
      "text": "An error response that indicates your external purchase report didnâ€™t succeed, including error details for the line items in your report.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "data",
    "url": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SendReportErrorResponse"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "data:external_purchase_server_api:SendReportErrorResponse",
    "fragments": [
      {
        "kind": "text",
        "text": "object "
      },
      {
        "kind": "identifier",
        "text": "SendReportErrorResponse"
      }
    ],
    "modules": [
      {
        "name": "External Purchase Server API"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "SendReportErrorResponse"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "introducedAt": "1.0.0",
        "name": "External Purchase Server API"
      }
    ],
    "role": "symbol",
    "roleHeading": "Object",
    "symbolKind": "dictionary",
    "title": "SendReportErrorResponse"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "data"
          ],
          "platforms": [
            "Unsupported OS: External Purchase Server API"
          ],
          "tokens": [
            {
              "kind": "text",
              "text": "object "
            },
            {
              "kind": "identifier",
              "text": "SendReportErrorResponse"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "items": [
        {
          "attributes": [
            {
              "kind": "allowedTypes",
              "values": [
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/DuplicateValueError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:DuplicateValueError",
                    "text": "DuplicateValueError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReportingCurrencyMismatchError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:ReportingCurrencyMismatchError",
                    "text": "ReportingCurrencyMismatchError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NotFoundError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:NotFoundError",
                    "text": "NotFoundError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/OmittedFieldError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:OmittedFieldError",
                    "text": "OmittedFieldError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/FieldNotAllowedError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:FieldNotAllowedError",
                    "text": "FieldNotAllowedError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/FutureDateError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:FutureDateError",
                    "text": "FutureDateError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/UnknownEnumError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:UnknownEnumError",
                    "text": "UnknownEnumError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/LineItemStatusRegressionError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:LineItemStatusRegressionError",
                    "text": "LineItemStatusRegressionError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/MissingLineItemsForStatusError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:MissingLineItemsForStatusError",
                    "text": "MissingLineItemsForStatusError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/LineItemsNotAllowedForStatusError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:LineItemsNotAllowedForStatusError",
                    "text": "LineItemsNotAllowedForStatusError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/IncorrectAmountTaxInclusiveError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:IncorrectAmountTaxInclusiveError",
                    "text": "IncorrectAmountTaxInclusiveError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/IncorrectNetAmountError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:IncorrectNetAmountError",
                    "text": "IncorrectNetAmountError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SelfReferenceError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:SelfReferenceError",
                    "text": "SelfReferenceError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferenceInvalidSubscriptionEventError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:ReferenceInvalidSubscriptionEventError",
                    "text": "ReferenceInvalidSubscriptionEventError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NegativeValueNotAllowedError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:NegativeValueNotAllowedError",
                    "text": "NegativeValueNotAllowedError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/PositiveValueRequiredError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:PositiveValueRequiredError",
                    "text": "PositiveValueRequiredError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/StartDateAfterEndDateError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:StartDateAfterEndDateError",
                    "text": "StartDateAfterEndDateError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReportingCurrencyExchangeNotAllowedError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:ReportingCurrencyExchangeNotAllowedError",
                    "text": "ReportingCurrencyExchangeNotAllowedError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/MaximumLengthExceededError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:MaximumLengthExceededError",
                    "text": "MaximumLengthExceededError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ErroneouslySubmittedNotRestatementError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:ErroneouslySubmittedNotRestatementError",
                    "text": "ErroneouslySubmittedNotRestatementError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferenceLineItemNotABuyError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:ReferenceLineItemNotABuyError",
                    "text": "ReferenceLineItemNotABuyError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ErroneousLineItemReferencedByValidLineItemError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:ErroneousLineItemReferencedByValidLineItemError",
                    "text": "ErroneousLineItemReferencedByValidLineItemError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/TaxCountryMismatchError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:TaxCountryMismatchError",
                    "text": "TaxCountryMismatchError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NetAmountMismatchError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:NetAmountMismatchError",
                    "text": "NetAmountMismatchError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ValidLineItemReferencesErroneousLineItemError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:ValidLineItemReferencesErroneousLineItemError",
                    "text": "ValidLineItemReferencesErroneousLineItemError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SimultaneousSubmissionError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:SimultaneousSubmissionError",
                    "text": "SimultaneousSubmissionError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/DateTooFarInPastError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:DateTooFarInPastError",
                    "text": "DateTooFarInPastError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/RefundReferencedByRefundError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:RefundReferencedByRefundError",
                    "text": "RefundReferencedByRefundError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NonInitialBuyReferencedByBuyError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:NonInitialBuyReferencedByBuyError",
                    "text": "NonInitialBuyReferencedByBuyError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/RepeatErroneousSubmissionError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:RepeatErroneousSubmissionError",
                    "text": "RepeatErroneousSubmissionError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferencedCreationDateIncompatibleError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:ReferencedCreationDateIncompatibleError",
                    "text": "ReferencedCreationDateIncompatibleError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/PricingCurrencyMismatchError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:PricingCurrencyMismatchError",
                    "text": "PricingCurrencyMismatchError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ExchangeRateMismatchError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:ExchangeRateMismatchError",
                    "text": "ExchangeRateMismatchError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SubscriptionStartNonZeroDaysPaidServiceError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:SubscriptionStartNonZeroDaysPaidServiceError",
                    "text": "SubscriptionStartNonZeroDaysPaidServiceError"
                  }
                ],
                [
                  {
                    "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/InvalidTaxInclusiveAmountForSubscriptionPaymentError",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "data:external_purchase_server_api:InvalidTaxInclusiveAmountForSubscriptionPaymentError",
                    "text": "InvalidTaxInclusiveAmountForSubscriptionPaymentError"
                  }
                ]
              ]
            }
          ],
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "errors",
          "required": true,
          "type": [
            {
              "kind": "text",
              "text": "[*]"
            }
          ],
          "typeDetails": []
        }
      ],
      "kind": "properties",
      "title": "Properties"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI": {
      "abstract": [
        {
          "text": "Send and manage reports you send to Apple for tokens you receive when your app provides external purchases for digital goods and services.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI",
      "kind": "symbol",
      "role": "collection",
      "title": "External Purchase Server API",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/DateTooFarInPastError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "DateTooFarInPastError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/DateTooFarInPastError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DateTooFarInPastError"
        }
      ],
      "role": "symbol",
      "title": "DateTooFarInPastError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/datetoofarinpasterror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/DuplicateValueError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "DuplicateValueError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/DuplicateValueError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DuplicateValueError"
        }
      ],
      "role": "symbol",
      "title": "DuplicateValueError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/duplicatevalueerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ErroneousLineItemReferencedByValidLineItemError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ErroneousLineItemReferencedByValidLineItemError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ErroneousLineItemReferencedByValidLineItemError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ErroneousLineItemReferencedByValidLineItemError"
        }
      ],
      "role": "symbol",
      "title": "ErroneousLineItemReferencedByValidLineItemError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/erroneouslineitemreferencedbyvalidlineitemerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ErroneouslySubmittedNotRestatementError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ErroneouslySubmittedNotRestatementError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ErroneouslySubmittedNotRestatementError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ErroneouslySubmittedNotRestatementError"
        }
      ],
      "role": "symbol",
      "title": "ErroneouslySubmittedNotRestatementError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/erroneouslysubmittednotrestatementerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ExchangeRateMismatchError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ExchangeRateMismatchError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ExchangeRateMismatchError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExchangeRateMismatchError"
        }
      ],
      "role": "symbol",
      "title": "ExchangeRateMismatchError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/exchangeratemismatcherror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ExternalPurchaseReport": {
      "abstract": [
        {
          "text": "The contents of an external purchase report for a single token.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ExternalPurchaseReport"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ExternalPurchaseReport",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExternalPurchaseReport"
        }
      ],
      "role": "symbol",
      "title": "ExternalPurchaseReport",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/externalpurchasereport"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/FieldNotAllowedError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "FieldNotAllowedError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/FieldNotAllowedError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FieldNotAllowedError"
        }
      ],
      "role": "symbol",
      "title": "FieldNotAllowedError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/fieldnotallowederror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/FutureDateError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "FutureDateError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/FutureDateError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FutureDateError"
        }
      ],
      "role": "symbol",
      "title": "FutureDateError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/futuredateerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/IncorrectAmountTaxInclusiveError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "IncorrectAmountTaxInclusiveError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/IncorrectAmountTaxInclusiveError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IncorrectAmountTaxInclusiveError"
        }
      ],
      "role": "symbol",
      "title": "IncorrectAmountTaxInclusiveError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/incorrectamounttaxinclusiveerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/IncorrectNetAmountError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "IncorrectNetAmountError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/IncorrectNetAmountError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IncorrectNetAmountError"
        }
      ],
      "role": "symbol",
      "title": "IncorrectNetAmountError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/incorrectnetamounterror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/InvalidTaxInclusiveAmountForSubscriptionPaymentError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "InvalidTaxInclusiveAmountForSubscriptionPaymentError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/InvalidTaxInclusiveAmountForSubscriptionPaymentError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "InvalidTaxInclusiveAmountForSubscriptionPaymentError"
        }
      ],
      "role": "symbol",
      "title": "InvalidTaxInclusiveAmountForSubscriptionPaymentError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/invalidtaxinclusiveamountforsubscriptionpaymenterror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/LineItemStatusRegressionError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "LineItemStatusRegressionError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/LineItemStatusRegressionError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LineItemStatusRegressionError"
        }
      ],
      "role": "symbol",
      "title": "LineItemStatusRegressionError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/lineitemstatusregressionerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/LineItemsNotAllowedForStatusError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "LineItemsNotAllowedForStatusError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/LineItemsNotAllowedForStatusError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LineItemsNotAllowedForStatusError"
        }
      ],
      "role": "symbol",
      "title": "LineItemsNotAllowedForStatusError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/lineitemsnotallowedforstatuserror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/MaximumLengthExceededError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "MaximumLengthExceededError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/MaximumLengthExceededError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MaximumLengthExceededError"
        }
      ],
      "role": "symbol",
      "title": "MaximumLengthExceededError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/maximumlengthexceedederror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/MissingLineItemsForStatusError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "MissingLineItemsForStatusError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/MissingLineItemsForStatusError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MissingLineItemsForStatusError"
        }
      ],
      "role": "symbol",
      "title": "MissingLineItemsForStatusError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/missinglineitemsforstatuserror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NegativeValueNotAllowedError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "NegativeValueNotAllowedError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NegativeValueNotAllowedError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NegativeValueNotAllowedError"
        }
      ],
      "role": "symbol",
      "title": "NegativeValueNotAllowedError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/negativevaluenotallowederror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NetAmountMismatchError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "NetAmountMismatchError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NetAmountMismatchError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NetAmountMismatchError"
        }
      ],
      "role": "symbol",
      "title": "NetAmountMismatchError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/netamountmismatcherror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NonInitialBuyReferencedByBuyError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "NonInitialBuyReferencedByBuyError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NonInitialBuyReferencedByBuyError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NonInitialBuyReferencedByBuyError"
        }
      ],
      "role": "symbol",
      "title": "NonInitialBuyReferencedByBuyError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/noninitialbuyreferencedbybuyerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NotFoundError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "NotFoundError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NotFoundError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NotFoundError"
        }
      ],
      "role": "symbol",
      "title": "NotFoundError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/notfounderror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/OmittedFieldError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "OmittedFieldError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/OmittedFieldError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "OmittedFieldError"
        }
      ],
      "role": "symbol",
      "title": "OmittedFieldError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/omittedfielderror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/PositiveValueRequiredError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "PositiveValueRequiredError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/PositiveValueRequiredError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PositiveValueRequiredError"
        }
      ],
      "role": "symbol",
      "title": "PositiveValueRequiredError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/positivevaluerequirederror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/PricingCurrencyMismatchError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "PricingCurrencyMismatchError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/PricingCurrencyMismatchError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PricingCurrencyMismatchError"
        }
      ],
      "role": "symbol",
      "title": "PricingCurrencyMismatchError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/pricingcurrencymismatcherror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferenceInvalidSubscriptionEventError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ReferenceInvalidSubscriptionEventError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferenceInvalidSubscriptionEventError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ReferenceInvalidSubscriptionEventError"
        }
      ],
      "role": "symbol",
      "title": "ReferenceInvalidSubscriptionEventError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/referenceinvalidsubscriptioneventerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferenceLineItemNotABuyError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ReferenceLineItemNotABuyError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferenceLineItemNotABuyError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ReferenceLineItemNotABuyError"
        }
      ],
      "role": "symbol",
      "title": "ReferenceLineItemNotABuyError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/referencelineitemnotabuyerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferencedCreationDateIncompatibleError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ReferencedCreationDateIncompatibleError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferencedCreationDateIncompatibleError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ReferencedCreationDateIncompatibleError"
        }
      ],
      "role": "symbol",
      "title": "ReferencedCreationDateIncompatibleError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/referencedcreationdateincompatibleerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/RefundReferencedByRefundError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "RefundReferencedByRefundError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/RefundReferencedByRefundError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RefundReferencedByRefundError"
        }
      ],
      "role": "symbol",
      "title": "RefundReferencedByRefundError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/refundreferencedbyrefunderror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/RepeatErroneousSubmissionError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "RepeatErroneousSubmissionError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/RepeatErroneousSubmissionError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RepeatErroneousSubmissionError"
        }
      ],
      "role": "symbol",
      "title": "RepeatErroneousSubmissionError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/repeaterroneoussubmissionerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReportingCurrencyExchangeNotAllowedError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ReportingCurrencyExchangeNotAllowedError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReportingCurrencyExchangeNotAllowedError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ReportingCurrencyExchangeNotAllowedError"
        }
      ],
      "role": "symbol",
      "title": "ReportingCurrencyExchangeNotAllowedError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/reportingcurrencyexchangenotallowederror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReportingCurrencyMismatchError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ReportingCurrencyMismatchError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReportingCurrencyMismatchError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ReportingCurrencyMismatchError"
        }
      ],
      "role": "symbol",
      "title": "ReportingCurrencyMismatchError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/reportingcurrencymismatcherror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SelfReferenceError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "SelfReferenceError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SelfReferenceError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SelfReferenceError"
        }
      ],
      "role": "symbol",
      "title": "SelfReferenceError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/selfreferenceerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/Send-External-Purchase-Report": {
      "abstract": [
        {
          "text": "Report required information about external purchase tokens and associated transactions.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/Send-External-Purchase-Report",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Send External Purchase Report"
        }
      ],
      "role": "symbol",
      "title": "Send External Purchase Report",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/send-external-purchase-report"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SendReportErrorResponse": {
      "abstract": [
        {
          "text": "An error response that indicates your external purchase report didnâ€™t succeed, including error details for the line items in your report.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "SendReportErrorResponse"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SendReportErrorResponse",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SendReportErrorResponse"
        }
      ],
      "role": "symbol",
      "title": "SendReportErrorResponse",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/sendreporterrorresponse"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SendReportSuccessResponse": {
      "abstract": [
        {
          "text": "A response that contains the request identifier and indicates the server successfully received your external purchase report.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "SendReportSuccessResponse"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SendReportSuccessResponse",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SendReportSuccessResponse"
        }
      ],
      "role": "symbol",
      "title": "SendReportSuccessResponse",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/sendreportsuccessresponse"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SimultaneousSubmissionError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "SimultaneousSubmissionError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SimultaneousSubmissionError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SimultaneousSubmissionError"
        }
      ],
      "role": "symbol",
      "title": "SimultaneousSubmissionError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/simultaneoussubmissionerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/StartDateAfterEndDateError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "StartDateAfterEndDateError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/StartDateAfterEndDateError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StartDateAfterEndDateError"
        }
      ],
      "role": "symbol",
      "title": "StartDateAfterEndDateError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/startdateafterenddateerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SubscriptionStartNonZeroDaysPaidServiceError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "SubscriptionStartNonZeroDaysPaidServiceError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SubscriptionStartNonZeroDaysPaidServiceError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SubscriptionStartNonZeroDaysPaidServiceError"
        }
      ],
      "role": "symbol",
      "title": "SubscriptionStartNonZeroDaysPaidServiceError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/subscriptionstartnonzerodayspaidserviceerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/TaxCountryMismatchError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "TaxCountryMismatchError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/TaxCountryMismatchError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TaxCountryMismatchError"
        }
      ],
      "role": "symbol",
      "title": "TaxCountryMismatchError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/taxcountrymismatcherror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/UnknownEnumError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "UnknownEnumError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/UnknownEnumError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnknownEnumError"
        }
      ],
      "role": "symbol",
      "title": "UnknownEnumError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/unknownenumerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ValidLineItemReferencesErroneousLineItemError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ValidLineItemReferencesErroneousLineItemError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ValidLineItemReferencesErroneousLineItemError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ValidLineItemReferencesErroneousLineItemError"
        }
      ],
      "role": "symbol",
      "title": "ValidLineItemReferencesErroneousLineItemError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/validlineitemreferenceserroneouslineitemerror"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "External-purchase-reporting",
      "generated": true,
      "identifiers": [
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/Send-External-Purchase-Report",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ExternalPurchaseReport",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SendReportSuccessResponse"
      ],
      "title": "External purchase reporting"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/externalpurchaseserverapi/sendreporterrorresponse"
      ],
      "traits": [
        {
          "interfaceLanguage": "data"
        }
      ]
    }
  ]
}
