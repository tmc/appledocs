{
  "abstract": [
    {
      "text": "Error messages and codes for reports and endpoints.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "data",
    "url": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/errorcodes"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "External Purchase Server API"
      }
    ],
    "role": "collectionGroup",
    "roleHeading": "API Collection",
    "title": "Error messages and codes"
  },
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI": {
      "abstract": [
        {
          "text": "Send and manage reports you send to Apple for tokens you receive when your app provides external purchases for digital goods and services.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI",
      "kind": "symbol",
      "role": "collection",
      "title": "External Purchase Server API",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/DateTooFarInPastError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "DateTooFarInPastError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/DateTooFarInPastError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DateTooFarInPastError"
        }
      ],
      "role": "symbol",
      "title": "DateTooFarInPastError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/datetoofarinpasterror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/DuplicateValueError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "DuplicateValueError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/DuplicateValueError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DuplicateValueError"
        }
      ],
      "role": "symbol",
      "title": "DuplicateValueError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/duplicatevalueerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ErroneousLineItemReferencedByValidLineItemError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ErroneousLineItemReferencedByValidLineItemError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ErroneousLineItemReferencedByValidLineItemError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ErroneousLineItemReferencedByValidLineItemError"
        }
      ],
      "role": "symbol",
      "title": "ErroneousLineItemReferencedByValidLineItemError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/erroneouslineitemreferencedbyvalidlineitemerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ErroneouslySubmittedNotRestatementError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ErroneouslySubmittedNotRestatementError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ErroneouslySubmittedNotRestatementError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ErroneouslySubmittedNotRestatementError"
        }
      ],
      "role": "symbol",
      "title": "ErroneouslySubmittedNotRestatementError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/erroneouslysubmittednotrestatementerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ExchangeRateMismatchError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ExchangeRateMismatchError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ExchangeRateMismatchError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExchangeRateMismatchError"
        }
      ],
      "role": "symbol",
      "title": "ExchangeRateMismatchError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/exchangeratemismatcherror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/FieldNotAllowedError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "FieldNotAllowedError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/FieldNotAllowedError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FieldNotAllowedError"
        }
      ],
      "role": "symbol",
      "title": "FieldNotAllowedError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/fieldnotallowederror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/FutureDateError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "FutureDateError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/FutureDateError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FutureDateError"
        }
      ],
      "role": "symbol",
      "title": "FutureDateError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/futuredateerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/IncorrectAmountTaxInclusiveError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "IncorrectAmountTaxInclusiveError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/IncorrectAmountTaxInclusiveError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IncorrectAmountTaxInclusiveError"
        }
      ],
      "role": "symbol",
      "title": "IncorrectAmountTaxInclusiveError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/incorrectamounttaxinclusiveerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/IncorrectNetAmountError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "IncorrectNetAmountError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/IncorrectNetAmountError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IncorrectNetAmountError"
        }
      ],
      "role": "symbol",
      "title": "IncorrectNetAmountError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/incorrectnetamounterror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/InvalidTaxInclusiveAmountForSubscriptionPaymentError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "InvalidTaxInclusiveAmountForSubscriptionPaymentError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/InvalidTaxInclusiveAmountForSubscriptionPaymentError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "InvalidTaxInclusiveAmountForSubscriptionPaymentError"
        }
      ],
      "role": "symbol",
      "title": "InvalidTaxInclusiveAmountForSubscriptionPaymentError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/invalidtaxinclusiveamountforsubscriptionpaymenterror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/LineItemStatusRegressionError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "LineItemStatusRegressionError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/LineItemStatusRegressionError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LineItemStatusRegressionError"
        }
      ],
      "role": "symbol",
      "title": "LineItemStatusRegressionError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/lineitemstatusregressionerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/LineItemsNotAllowedForStatusError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "LineItemsNotAllowedForStatusError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/LineItemsNotAllowedForStatusError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LineItemsNotAllowedForStatusError"
        }
      ],
      "role": "symbol",
      "title": "LineItemsNotAllowedForStatusError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/lineitemsnotallowedforstatuserror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/MaximumLengthExceededError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "MaximumLengthExceededError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/MaximumLengthExceededError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MaximumLengthExceededError"
        }
      ],
      "role": "symbol",
      "title": "MaximumLengthExceededError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/maximumlengthexceedederror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/MissingLineItemsForStatusError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "MissingLineItemsForStatusError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/MissingLineItemsForStatusError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MissingLineItemsForStatusError"
        }
      ],
      "role": "symbol",
      "title": "MissingLineItemsForStatusError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/missinglineitemsforstatuserror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NegativeValueNotAllowedError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "NegativeValueNotAllowedError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NegativeValueNotAllowedError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NegativeValueNotAllowedError"
        }
      ],
      "role": "symbol",
      "title": "NegativeValueNotAllowedError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/negativevaluenotallowederror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NetAmountMismatchError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "NetAmountMismatchError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NetAmountMismatchError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NetAmountMismatchError"
        }
      ],
      "role": "symbol",
      "title": "NetAmountMismatchError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/netamountmismatcherror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NonInitialBuyReferencedByBuyError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "NonInitialBuyReferencedByBuyError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NonInitialBuyReferencedByBuyError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NonInitialBuyReferencedByBuyError"
        }
      ],
      "role": "symbol",
      "title": "NonInitialBuyReferencedByBuyError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/noninitialbuyreferencedbybuyerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NotFoundError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "NotFoundError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NotFoundError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NotFoundError"
        }
      ],
      "role": "symbol",
      "title": "NotFoundError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/notfounderror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/OmittedFieldError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "OmittedFieldError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/OmittedFieldError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "OmittedFieldError"
        }
      ],
      "role": "symbol",
      "title": "OmittedFieldError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/omittedfielderror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/PositiveValueRequiredError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "PositiveValueRequiredError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/PositiveValueRequiredError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PositiveValueRequiredError"
        }
      ],
      "role": "symbol",
      "title": "PositiveValueRequiredError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/positivevaluerequirederror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/PricingCurrencyMismatchError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "PricingCurrencyMismatchError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/PricingCurrencyMismatchError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PricingCurrencyMismatchError"
        }
      ],
      "role": "symbol",
      "title": "PricingCurrencyMismatchError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/pricingcurrencymismatcherror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferenceInvalidSubscriptionEventError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ReferenceInvalidSubscriptionEventError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferenceInvalidSubscriptionEventError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ReferenceInvalidSubscriptionEventError"
        }
      ],
      "role": "symbol",
      "title": "ReferenceInvalidSubscriptionEventError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/referenceinvalidsubscriptioneventerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferenceLineItemNotABuyError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ReferenceLineItemNotABuyError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferenceLineItemNotABuyError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ReferenceLineItemNotABuyError"
        }
      ],
      "role": "symbol",
      "title": "ReferenceLineItemNotABuyError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/referencelineitemnotabuyerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferencedCreationDateIncompatibleError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ReferencedCreationDateIncompatibleError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferencedCreationDateIncompatibleError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ReferencedCreationDateIncompatibleError"
        }
      ],
      "role": "symbol",
      "title": "ReferencedCreationDateIncompatibleError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/referencedcreationdateincompatibleerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/RefundReferencedByRefundError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "RefundReferencedByRefundError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/RefundReferencedByRefundError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RefundReferencedByRefundError"
        }
      ],
      "role": "symbol",
      "title": "RefundReferencedByRefundError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/refundreferencedbyrefunderror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/RepeatErroneousSubmissionError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "RepeatErroneousSubmissionError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/RepeatErroneousSubmissionError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RepeatErroneousSubmissionError"
        }
      ],
      "role": "symbol",
      "title": "RepeatErroneousSubmissionError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/repeaterroneoussubmissionerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReportingCurrencyExchangeNotAllowedError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ReportingCurrencyExchangeNotAllowedError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReportingCurrencyExchangeNotAllowedError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ReportingCurrencyExchangeNotAllowedError"
        }
      ],
      "role": "symbol",
      "title": "ReportingCurrencyExchangeNotAllowedError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/reportingcurrencyexchangenotallowederror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReportingCurrencyMismatchError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ReportingCurrencyMismatchError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReportingCurrencyMismatchError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ReportingCurrencyMismatchError"
        }
      ],
      "role": "symbol",
      "title": "ReportingCurrencyMismatchError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/reportingcurrencymismatcherror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SelfReferenceError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "SelfReferenceError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SelfReferenceError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SelfReferenceError"
        }
      ],
      "role": "symbol",
      "title": "SelfReferenceError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/selfreferenceerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SimultaneousSubmissionError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "SimultaneousSubmissionError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SimultaneousSubmissionError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SimultaneousSubmissionError"
        }
      ],
      "role": "symbol",
      "title": "SimultaneousSubmissionError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/simultaneoussubmissionerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/StartDateAfterEndDateError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "StartDateAfterEndDateError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/StartDateAfterEndDateError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StartDateAfterEndDateError"
        }
      ],
      "role": "symbol",
      "title": "StartDateAfterEndDateError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/startdateafterenddateerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SubscriptionStartNonZeroDaysPaidServiceError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "SubscriptionStartNonZeroDaysPaidServiceError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SubscriptionStartNonZeroDaysPaidServiceError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SubscriptionStartNonZeroDaysPaidServiceError"
        }
      ],
      "role": "symbol",
      "title": "SubscriptionStartNonZeroDaysPaidServiceError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/subscriptionstartnonzerodayspaidserviceerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/TaxCountryMismatchError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "TaxCountryMismatchError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/TaxCountryMismatchError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TaxCountryMismatchError"
        }
      ],
      "role": "symbol",
      "title": "TaxCountryMismatchError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/taxcountrymismatcherror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/UnknownEnumError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "UnknownEnumError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/UnknownEnumError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnknownEnumError"
        }
      ],
      "role": "symbol",
      "title": "UnknownEnumError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/unknownenumerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ValidLineItemReferencesErroneousLineItemError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "text",
          "text": "object "
        },
        {
          "kind": "identifier",
          "text": "ValidLineItemReferencesErroneousLineItemError"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ValidLineItemReferencesErroneousLineItemError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ValidLineItemReferencesErroneousLineItemError"
        }
      ],
      "role": "symbol",
      "title": "ValidLineItemReferencesErroneousLineItemError",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/validlineitemreferenceserroneouslineitemerror"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/errorCode": {
      "abstract": [
        {
          "text": "An integer value that represents an error in the External Purchase Server API.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "type "
        },
        {
          "kind": "identifier",
          "text": "errorCode"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/errorCode",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "errorCode"
        }
      ],
      "role": "symbol",
      "title": "errorCode",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/errorcode"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/errorMessage": {
      "abstract": [
        {
          "text": "A string that describes an error.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "type "
        },
        {
          "kind": "identifier",
          "text": "errorMessage"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/errorMessage",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "errorMessage"
        }
      ],
      "role": "symbol",
      "title": "errorMessage",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/errormessage"
    },
    "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/fieldName": {
      "abstract": [
        {
          "text": "A string that names a field of a line item.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "type "
        },
        {
          "kind": "identifier",
          "text": "fieldName"
        }
      ],
      "identifier": "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/fieldName",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "fieldName"
        }
      ],
      "role": "symbol",
      "title": "fieldName",
      "type": "topic",
      "url": "/documentation/externalpurchaseserverapi/fieldname"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "topicSections": [
    {
      "anchor": "Error-objects-for-reports",
      "identifiers": [
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/DateTooFarInPastError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/DuplicateValueError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ErroneousLineItemReferencedByValidLineItemError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ErroneouslySubmittedNotRestatementError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ExchangeRateMismatchError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/FieldNotAllowedError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/FutureDateError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/IncorrectAmountTaxInclusiveError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/IncorrectNetAmountError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/InvalidTaxInclusiveAmountForSubscriptionPaymentError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/LineItemStatusRegressionError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/LineItemsNotAllowedForStatusError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/MaximumLengthExceededError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/MissingLineItemsForStatusError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NegativeValueNotAllowedError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NetAmountMismatchError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NonInitialBuyReferencedByBuyError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/NotFoundError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/OmittedFieldError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/PositiveValueRequiredError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/PricingCurrencyMismatchError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferenceInvalidSubscriptionEventError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferenceLineItemNotABuyError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReferencedCreationDateIncompatibleError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/RefundReferencedByRefundError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/RepeatErroneousSubmissionError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReportingCurrencyExchangeNotAllowedError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ReportingCurrencyMismatchError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SelfReferenceError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SimultaneousSubmissionError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/StartDateAfterEndDateError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/SubscriptionStartNonZeroDaysPaidServiceError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/TaxCountryMismatchError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/UnknownEnumError",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/ValidLineItemReferencesErroneousLineItemError"
      ],
      "title": "Error objects for reports"
    },
    {
      "anchor": "Error-types",
      "identifiers": [
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/errorCode",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/errorMessage",
        "doc://org.swift.docc.ExternalPurchaseServerAPI/documentation/ExternalPurchaseServerAPI/fieldName"
      ],
      "title": "Error types"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/externalpurchaseserverapi/errorcodes"
      ],
      "traits": [
        {
          "interfaceLanguage": "data"
        }
      ]
    }
  ]
}
