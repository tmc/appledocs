{
  "abstract": [
    {
      "text": "Create a data entry form for collecting and changing data managed by SwiftData.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftData/documentation/SwiftData"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftData/documentation/SwiftData/Adding-and-editing-persistent-data-in-your-app"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "images": [
      {
        "identifier": "Adding-and-editing-persistent-data-PageImage-card.png",
        "type": "card"
      }
    ],
    "modules": [
      {
        "name": "SwiftData"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "introducedAt": "17.0",
        "name": "iOS"
      },
      {
        "beta": false,
        "introducedAt": "17.0",
        "name": "iPadOS"
      },
      {
        "beta": false,
        "introducedAt": "14.0",
        "name": "macOS"
      },
      {
        "beta": false,
        "introducedAt": "17.0",
        "name": "tvOS"
      },
      {
        "beta": false,
        "introducedAt": "15.0",
        "name": "Xcode"
      }
    ],
    "role": "sampleCode",
    "roleHeading": "Sample Code",
    "title": "Adding and editing persistent data in your app"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Adding and editing data are fundamental features of data-driven apps, but how",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "an app provides these features is unique to the app. This sample shows one",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "approach, which is to use a data-entry form with SwiftData that lets someone",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "add, edit, and store data about animals.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Define-the-data-model",
          "level": 3,
          "text": "Define the data model",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Before SwiftData can store data from your app, the app must define the data",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "model that represents the data. SwiftData uses model classes to construct the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "schema of the data model. For example, the sample app stores data about animals,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and groups those animals into categories. To define the schema for this data",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "model, the sample defines two model classes: ",
              "type": "text"
            },
            {
              "code": "Animal",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "AnimalCategory",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "Animal",
              "type": "codeVoice"
            },
            {
              "text": " model class stores information about an animal, like its name and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "diet. To persist instances of ",
              "type": "text"
            },
            {
              "code": "Animal",
              "type": "codeVoice"
            },
            {
              "text": ", the class definition applies the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/Model()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " macro. This macro generates code at compile time that ensures the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "class conforms to the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/PersistentModel",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol and makes it possible for",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "SwiftData to save animal data to a model container.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "import SwiftData",
            "",
            "@Model",
            "final class Animal {",
            "    var name: String",
            "    var diet: Diet",
            "    var category: AnimalCategory?",
            "    ",
            "    init(name: String, diet: Diet) {",
            "        self.name = name",
            "        self.diet = diet",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "AnimalCategory",
              "type": "codeVoice"
            },
            {
              "text": " model class stores information about an animal category,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "such as mammal or reptile. As with ",
              "type": "text"
            },
            {
              "code": "Animal",
              "type": "codeVoice"
            },
            {
              "text": ", the ",
              "type": "text"
            },
            {
              "code": "AnimalCategory",
              "type": "codeVoice"
            },
            {
              "text": " definition",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "applies the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/Model()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " macro to ensure the class conforms to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/PersistentModel",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and to save the animal category data to a model container.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "import SwiftData",
            "",
            "@Model",
            "final class AnimalCategory {",
            "    @Attribute(.unique) var name: String",
            "    // `.cascade` tells SwiftData to delete all animals contained in the ",
            "    // category when deleting it.",
            "    @Relationship(deleteRule: .cascade, inverse: \\Animal.category)",
            "    var animals = [Animal]()",
            "    ",
            "    init(name: String) {",
            "        self.name = name",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The model class also has two properties:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "definition": {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "The name of the category. Each category name must be unique across all animal categories. To ensure this uniqueness, the model class applies the ",
                        "type": "text"
                      },
                      {
                        "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/Attribute(_:originalName:hashModifier:)",
                        "isActive": true,
                        "type": "reference"
                      },
                      {
                        "text": " macro to the property with the option ",
                        "type": "text"
                      },
                      {
                        "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/Schema/Attribute/Option/unique",
                        "isActive": true,
                        "type": "reference"
                      },
                      {
                        "text": ". This option ensures a property’s value is unique across all models of the same type. For a complete list of options, see ",
                        "type": "text"
                      },
                      {
                        "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/Schema/Attribute/Option",
                        "isActive": true,
                        "type": "reference"
                      },
                      {
                        "text": ".",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ]
              },
              "term": {
                "inlineContent": [
                  {
                    "code": "name",
                    "type": "codeVoice"
                  }
                ]
              }
            },
            {
              "definition": {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "The list of animals contained in the category. The model class applies the ",
                        "type": "text"
                      },
                      {
                        "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/Relationship(_:deleteRule:minimumModelCount:maximumModelCount:originalName:inverse:hashModifier:)",
                        "isActive": true,
                        "type": "reference"
                      },
                      {
                        "text": " macro to this property to form a relationship between the model classes ",
                        "type": "text"
                      },
                      {
                        "code": "AnimalCategory",
                        "type": "codeVoice"
                      },
                      {
                        "text": " and ",
                        "type": "text"
                      },
                      {
                        "code": "Animal",
                        "type": "codeVoice"
                      },
                      {
                        "text": ". To learn more about the relationship, see ",
                        "type": "text"
                      },
                      {
                        "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/Defining-data-relationships-with-enumerations-and-model-classes",
                        "isActive": true,
                        "type": "reference"
                      },
                      {
                        "text": ".",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ]
              },
              "term": {
                "inlineContent": [
                  {
                    "code": "animal",
                    "type": "codeVoice"
                  }
                ]
              }
            }
          ],
          "type": "termList"
        },
        {
          "anchor": "Design-the-data-editor",
          "level": 3,
          "text": "Design the data editor",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When deciding how people add and edit data in your app, consider the user",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "experience. The sample app, for instance, lets someone add and edit information",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "about animals using a custom data entry view, named ",
              "type": "text"
            },
            {
              "code": "AnimalEditor",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "Adding-and-editing-persistent-data-02",
                      "metadata": {
                        "deviceFrame": "iPhone14Pro"
                      },
                      "type": "image"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "title": "iOS"
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "Adding-and-editing-persistent-data-03",
                      "metadata": {
                        "deviceFrame": "iPadPro12-9"
                      },
                      "type": "image"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "title": "iPadOS"
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "Adding-and-editing-persistent-data-01",
                      "type": "image"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "title": "macOS"
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "Adding-and-editing-persistent-data-04",
                      "metadata": {
                        "deviceFrame": "tv"
                      },
                      "type": "image"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "title": "tvOS"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "The design of ",
              "type": "text"
            },
            {
              "code": "AnimalEditor",
              "type": "codeVoice"
            },
            {
              "text": " allows the app to use the same view for both",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "adding new animals and editing existing ones. To provide this behavior, the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "editor declares the ",
              "type": "text"
            },
            {
              "code": "animal",
              "type": "codeVoice"
            },
            {
              "text": " property as an optional ",
              "type": "text"
            },
            {
              "code": "Animal",
              "type": "codeVoice"
            },
            {
              "text": " type. If ",
              "type": "text"
            },
            {
              "code": "animal",
              "type": "codeVoice"
            },
            {
              "text": "",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": ", a person using the editor is adding an animal; otherwise, the person",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is editing an existing animal. The editor makes the intention obvious by",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "determining the title of the editor based on the value of ",
              "type": "text"
            },
            {
              "code": "animal",
              "type": "codeVoice"
            },
            {
              "text": " in a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "computed property.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct AnimalEditor: View {",
            "    let animal: Animal?",
            "    ",
            "    private var editorTitle: String {",
            "        animal == nil ? \"Add Animal\" : \"Edit Animal\"",
            "    }",
            "    // ...",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "To enable editing the values of a new or existing animal, the editor defines",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "state variables for each editable value. These state variables store the data",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that a person enters into the editor, separating what they enter from",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the data stored in ",
              "type": "text"
            },
            {
              "code": "animal",
              "type": "codeVoice"
            },
            {
              "text": ". This separation ensures that SwiftData doesn’t",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "save changes that a person makes until they’re ready to save those changes.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "This also gives them an opportunity to discard any changes they may have made",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to the data in the editor.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@State private var name = \"\"",
            "@State private var selectedDiet = Animal.Diet.herbivorous",
            "@State private var selectedCategory: AnimalCategory?",
            "",
            "var body: some View {",
            "    NavigationStack {",
            "        Form {",
            "            TextField(\"Name\", text: $name)",
            "            ",
            "            Picker(\"Category\", selection: $selectedCategory) {",
            "                Text(\"Select a category\").tag(nil as AnimalCategory?)",
            "                ForEach(categories) { category in",
            "                    Text(category.name).tag(category as AnimalCategory?)",
            "                }",
            "            }",
            "            ",
            "            Picker(\"Diet\", selection: $selectedDiet) {",
            "                ForEach(Animal.Diet.allCases, id: \\.self) { diet in",
            "                    Text(diet.rawValue).tag(diet)",
            "                }",
            "            }",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The sample app takes this approach because it uses the autosave feature from",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "SwiftData. The autosave feature automatically saves data changes made to model",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "class instances, such as ",
              "type": "text"
            },
            {
              "code": "animal",
              "type": "codeVoice"
            },
            {
              "text": ", instead of relying on the app to make",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "explicit calls to the model context ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/ModelContext/save()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For more information about autosave, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/ModelContext/autosaveEnabled",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Finally, to make the purpose of the editor clear to the person using it,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "AnimalEditor",
              "type": "codeVoice"
            },
            {
              "text": " uses the ",
              "type": "text"
            },
            {
              "code": "editorTitle",
              "type": "codeVoice"
            },
            {
              "text": " computed property to displays the title",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/ToolbarItemPlacement/principal",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "item section of the toolbar:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            ".toolbar {",
            "    ToolbarItem(placement: .principal) {",
            "        Text(editorTitle)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Set-default-values",
          "level": 3,
          "text": "Set default values",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "AnimalEditor",
              "type": "codeVoice"
            },
            {
              "text": " view declares its state variables with default values for a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "new animal, setting ",
              "type": "text"
            },
            {
              "code": "name",
              "type": "codeVoice"
            },
            {
              "text": " to an empty string, ",
              "type": "text"
            },
            {
              "code": "selectedDiet",
              "type": "codeVoice"
            },
            {
              "text": " to ",
              "type": "text"
            },
            {
              "code": "herbivorous",
              "type": "codeVoice"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and leaving ",
              "type": "text"
            },
            {
              "code": "selectedCategory",
              "type": "codeVoice"
            },
            {
              "text": " as ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": ". But the editor also supports editing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "an existing animal.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If someone edits an animal, the editor needs to show the values of the animal",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to edit, not the default values for the new animal. The view stores the animal",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to edit in the ",
              "type": "text"
            },
            {
              "code": "animal",
              "type": "codeVoice"
            },
            {
              "text": " property. To show the current values of that animal,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the editor applies the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/onAppear(perform:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": "",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "modifier and copies the editable values from ",
              "type": "text"
            },
            {
              "code": "animal",
              "type": "codeVoice"
            },
            {
              "text": " to the state variables:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            ".onAppear {",
            "    if let animal {",
            "        // Edit the incoming animal.",
            "        name = animal.name",
            "        selectedDiet = animal.diet",
            "        selectedCategory = animal.category",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Save-the-data-changes",
          "level": 3,
          "text": "Save the data changes",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To allow a person to save the changes they made in the editor, the editor",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "provides a Save button in the toolbar:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "ToolbarItem(placement: .confirmationAction) {",
            "    Button(\"Save\") {",
            "        withAnimation {",
            "            save()",
            "            dismiss()",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When a person clicks the Save button, it calls the editor’s ",
              "type": "text"
            },
            {
              "code": "save",
              "type": "codeVoice"
            },
            {
              "text": " method. If",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the person is editing an existing animal, ",
              "type": "text"
            },
            {
              "code": "save",
              "type": "codeVoice"
            },
            {
              "text": " copies the values from the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "state variables to the instance of ",
              "type": "text"
            },
            {
              "code": "Animal",
              "type": "codeVoice"
            },
            {
              "text": ". This directly updates the data",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that SwiftData manages, and because the app uses the autosave feature,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "SwiftData automatically saves the changes without calling the model",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "context ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/ModelContext/save()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "private func save() {",
            "    if let animal {",
            "        // Edit the animal.",
            "        animal.name = name",
            "        animal.diet = selectedDiet",
            "        animal.category = selectedCategory",
            "    } else {",
            "        // Add an animal.",
            "        // ...",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When adding a new animal, the ",
              "type": "text"
            },
            {
              "code": "save",
              "type": "codeVoice"
            },
            {
              "text": " function creates a new",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "Animal",
              "type": "codeVoice"
            },
            {
              "text": " instance, initializing it with the name and diet from the state",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "variables. Then it sets the category and inserts the animal into the model",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "context by calling the model context ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/ModelContext/insert(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "private func save() {",
            "    if let animal {",
            "        // Edit the animal.",
            "        // ...",
            "    } else {",
            "        // Add an animal.",
            "        let newAnimal = Animal(name: name, diet: selectedDiet)",
            "        newAnimal.category = selectedCategory",
            "        modelContext.insert(newAnimal)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "After saving the data, the Save button’s action closes the editor by calling",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/dismiss",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The ",
                  "type": "text"
                },
                {
                  "code": "AnimalEditor",
                  "type": "codeVoice"
                },
                {
                  "text": " view retrieves the model context from the view’s",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "environment by creating a reference to the context with",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "code": "@Environment(\\.modelContext) private var modelContext",
                  "type": "codeVoice"
                },
                {
                  "text": ". For more information,",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "see ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/modelContext",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "anchor": "Discard-the-data-changes",
          "level": 3,
          "text": "Discard the data changes",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To discard changes that someone made, the editor provides a Cancel",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "button in the toolbar:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "ToolbarItem(placement: .cancellationAction) {",
            "    Button(\"Cancel\", role: .cancel) {",
            "        dismiss()",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When a person clicks the Cancel button, the editor discards any changes made to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the data by calling ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/dismiss",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in the button’s action. This closes the editor without saving the changes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Adding-and-editing-persistent-data-01": {
      "alt": "A screenshot of the sample app running in macOS, showing the animal editor with the main window of the sample app in the background. The editor displays the label name next to a text field that shows the text Red kangaroo. Below the name label is a label with the text category, followed by a picker showing mammal as the selected item. Below the category label is a label with the text Diet, followed by a picker showing Herbivore as the selected item. Below these fields is a horizontal line, and below the line are two buttons displayed horizontally, cancel and save.",
      "identifier": "Adding-and-editing-persistent-data-01",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/087aefc5f44275e4587b8f53765b12af/Adding-and-editing-persistent-data-01@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/adfe93d02cde2f450a69416d9f8dfde2/Adding-and-editing-persistent-data-01~dark@2x.png"
        }
      ]
    },
    "Adding-and-editing-persistent-data-02": {
      "alt": "A screenshot of the sample app running in iOS, showing the animal editor. The editor displays horizontally a cancel button, followed by the title Add Animal, followed by a save button that appears along the top of the editor. Below that is a name field with the placeholder text Name. Below the name field is the category field the label Category, followed by a picker with the label Select a category. Below the Category field is the Diet field with the label Diet and a picker with the label Herbivore.",
      "identifier": "Adding-and-editing-persistent-data-02",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b97dd17997855b113fae297bf8590dba/Adding-and-editing-persistent-data-02@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/a70ef146d3af4bfb4c01035e17cfb8b8/Adding-and-editing-persistent-data-02~dark@2x.png"
        }
      ]
    },
    "Adding-and-editing-persistent-data-03": {
      "alt": "A screenshot of the sample app running in iPadOS, showing the animal editor with sample app in the background. The editor displays horizontally a cancel button, followed by the title Add Animal, followed by a save button that appears along the top of the editor. Below that is a name field with the placeholder text Name. Below the name field is the category field the label Category, followed by a picker with the label Select a category. Below the Category field is the Diet field with the label Diet and a picker with the label Herbivore.",
      "identifier": "Adding-and-editing-persistent-data-03",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/e77d365b30cfd7680e4db84f7581a61a/Adding-and-editing-persistent-data-03@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/edf200e3854c2f84804697d7437f48b2/Adding-and-editing-persistent-data-03~dark@2x.png"
        }
      ]
    },
    "Adding-and-editing-persistent-data-04": {
      "alt": "A screenshot of the sample app running in tvOS, showing the animal editor. The editor displays horizontally a cancel button, followed by the title Edit Animal, followed by a save button that appears along the top of the editor. Below that is a highlighted text field that displays the text Red kangaroo. Below the text field is a picker with the label Category and Mammal as the selected item. Below the category picker is another picker with the label Diet and Herbivore as the selected item.",
      "identifier": "Adding-and-editing-persistent-data-04",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/3676490a2b097d25d0dfcd9b92fbd346/Adding-and-editing-persistent-data-04@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/83f5d272d1e71845499bbd712043a83b/Adding-and-editing-persistent-data-04~dark@2x.png"
        }
      ]
    },
    "Adding-and-editing-persistent-data-PageImage-card.png": {
      "alt": null,
      "identifier": "Adding-and-editing-persistent-data-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/55f9d5ea6318d04e82430d30e7408e20/Adding-and-editing-persistent-data-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/2cc079c877d85ebed68522b2ec1bd0ff/Adding-and-editing-persistent-data-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftData/documentation/SwiftData": {
      "abstract": [
        {
          "text": "Write your model code declaratively to add managed persistence and efficient",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "model fetching.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftData/documentation/SwiftData",
      "images": [
        {
          "identifier": "swiftData-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftData",
      "type": "topic",
      "url": "/documentation/swiftdata"
    },
    "doc://com.apple.SwiftData/documentation/SwiftData/Attribute(_:originalName:hashModifier:)": {
      "abstract": [
        {
          "text": "Specifies the custom behavior that SwiftData applies to the annotated property",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "when managing the owning class.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Attribute"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:9SwiftData6SchemaC",
          "text": "Schema"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:9SwiftData6SchemaC9AttributeC",
          "text": "Attribute"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:9SwiftData6SchemaC9AttributeC6OptionV",
          "text": "Option"
        },
        {
          "kind": "text",
          "text": "..., "
        },
        {
          "kind": "externalParam",
          "text": "originalName"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "hashModifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/Attribute(_:originalName:hashModifier:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "Attribute(_:originalName:hashModifier:)",
      "type": "topic",
      "url": "/documentation/swiftdata/attribute(_:originalname:hashmodifier:)"
    },
    "doc://com.apple.SwiftData/documentation/SwiftData/Defining-data-relationships-with-enumerations-and-model-classes": {
      "abstract": [
        {
          "text": "Create relationships for static and dynamic data stored in your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/Defining-data-relationships-with-enumerations-and-model-classes",
      "kind": "article",
      "role": "sampleCode",
      "title": "Defining data relationships with enumerations and model classes",
      "type": "topic",
      "url": "/documentation/swiftdata/defining-data-relationships-with-enumerations-and-model-classes"
    },
    "doc://com.apple.SwiftData/documentation/SwiftData/Model()": {
      "abstract": [
        {
          "text": "Converts a Swift class into a stored model that’s managed by SwiftData.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Model"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/Model()",
      "kind": "symbol",
      "role": "symbol",
      "title": "Model()",
      "type": "topic",
      "url": "/documentation/swiftdata/model()"
    },
    "doc://com.apple.SwiftData/documentation/SwiftData/ModelContext/autosaveEnabled": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether the context should automatically save",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "any pending changes when certain events occur.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "autosaveEnabled"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/ModelContext/autosaveEnabled",
      "kind": "symbol",
      "role": "symbol",
      "title": "autosaveEnabled",
      "type": "topic",
      "url": "/documentation/swiftdata/modelcontext/autosaveenabled"
    },
    "doc://com.apple.SwiftData/documentation/SwiftData/ModelContext/insert(_:)": {
      "abstract": [
        {
          "text": "Registers the specified model with the context so it can include the model in",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the next save operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "insert"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/ModelContext/insert(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "insert(_:)",
      "type": "topic",
      "url": "/documentation/swiftdata/modelcontext/insert(_:)"
    },
    "doc://com.apple.SwiftData/documentation/SwiftData/ModelContext/save()": {
      "abstract": [
        {
          "text": "Writes any pending inserts, changes, and deletes to the persistent storage.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "save"
        },
        {
          "kind": "text",
          "text": "() "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/ModelContext/save()",
      "kind": "symbol",
      "role": "symbol",
      "title": "save()",
      "type": "topic",
      "url": "/documentation/swiftdata/modelcontext/save()"
    },
    "doc://com.apple.SwiftData/documentation/SwiftData/PersistentModel": {
      "abstract": [
        {
          "text": "An interface that enables SwiftData to manage a Swift class as a stored model.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PersistentModel"
        }
      ],
      "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/PersistentModel",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PersistentModel"
        }
      ],
      "role": "symbol",
      "title": "PersistentModel",
      "type": "topic",
      "url": "/documentation/swiftdata/persistentmodel"
    },
    "doc://com.apple.SwiftData/documentation/SwiftData/Preserving-your-apps-model-data-across-launches": {
      "abstract": [
        {
          "text": "Describe your model classes to SwiftData using the framework’s macros, and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "store instances of those models so they exist beyond the app’s runtime.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/Preserving-your-apps-model-data-across-launches",
      "kind": "article",
      "role": "article",
      "title": "Preserving your app’s model data across launches",
      "type": "topic",
      "url": "/documentation/swiftdata/preserving-your-apps-model-data-across-launches"
    },
    "doc://com.apple.SwiftData/documentation/SwiftData/Relationship(_:deleteRule:minimumModelCount:maximumModelCount:originalName:inverse:hashModifier:)": {
      "abstract": [
        {
          "text": "Specifies the options that SwiftData needs to manage the annotated property as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "a relationship between two models.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Relationship"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:9SwiftData6SchemaC",
          "text": "Schema"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:9SwiftData6SchemaC12RelationshipC",
          "text": "Relationship"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:9SwiftData6SchemaC12RelationshipC6OptionV",
          "text": "Option"
        },
        {
          "kind": "text",
          "text": "..., "
        },
        {
          "kind": "externalParam",
          "text": "deleteRule"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:9SwiftData6SchemaC",
          "text": "Schema"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:9SwiftData6SchemaC12RelationshipC",
          "text": "Relationship"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:9SwiftData6SchemaC12RelationshipC10DeleteRuleO",
          "text": "DeleteRule"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "minimumModelCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "maximumModelCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "originalName"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "inverse"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s10AnyKeyPathC",
          "text": "AnyKeyPath"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "hashModifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/Relationship(_:deleteRule:minimumModelCount:maximumModelCount:originalName:inverse:hashModifier:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "Relationship(_:deleteRule:minimumModelCount:maximumModelCount:originalName:inverse:hashModifier:)",
      "type": "topic",
      "url": "/documentation/swiftdata/relationship(_:deleterule:minimummodelcount:maximummodelcount:originalname:inverse:hashmodifier:)"
    },
    "doc://com.apple.SwiftData/documentation/SwiftData/Schema/Attribute/Option": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Option"
        }
      ],
      "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/Schema/Attribute/Option",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Option"
        }
      ],
      "role": "symbol",
      "title": "Schema.Attribute.Option",
      "type": "topic",
      "url": "/documentation/swiftdata/schema/attribute/option"
    },
    "doc://com.apple.SwiftData/documentation/SwiftData/Schema/Attribute/Option/unique": {
      "abstract": [
        {
          "text": "Ensures the property’s value is unique across all models of the same type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "unique"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:9SwiftData6SchemaC",
          "text": "Schema"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:9SwiftData6SchemaC9AttributeC",
          "text": "Attribute"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:9SwiftData6SchemaC9AttributeC6OptionV",
          "text": "Option"
        }
      ],
      "identifier": "doc://com.apple.SwiftData/documentation/SwiftData/Schema/Attribute/Option/unique",
      "kind": "symbol",
      "role": "symbol",
      "title": "unique",
      "type": "topic",
      "url": "/documentation/swiftdata/schema/attribute/option/unique"
    },
    "doc://com.apple.documentation/documentation/CoreData/adopting-swiftdata-for-a-core-data-app": {
      "abstract": [
        {
          "text": "Persist data in your app intuitively with the Swift native persistence framework.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/CoreData/adopting-swiftdata-for-a-core-data-app",
      "kind": "article",
      "role": "sampleCode",
      "title": "Adopting SwiftData for a Core Data app",
      "type": "topic",
      "url": "/documentation/CoreData/adopting-swiftdata-for-a-core-data-app"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/dismiss": {
      "abstract": [
        {
          "text": "An action that dismisses the current presentation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dismiss"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI13DismissActionV",
          "text": "DismissAction"
        },
        {
          "kind": "text",
          "text": " { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/dismiss",
      "kind": "symbol",
      "role": "symbol",
      "title": "dismiss",
      "type": "topic",
      "url": "/documentation/SwiftUI/EnvironmentValues/dismiss"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/modelContext": {
      "abstract": [
        {
          "text": "The SwiftData model context that will be used for queries and other model operations within this environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "modelContext"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:9SwiftData12ModelContextC",
          "text": "ModelContext"
        },
        {
          "kind": "text",
          "text": " { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "set"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/EnvironmentValues/modelContext",
      "kind": "symbol",
      "role": "symbol",
      "title": "modelContext",
      "type": "topic",
      "url": "/documentation/SwiftUI/EnvironmentValues/modelContext"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/ToolbarItemPlacement/principal": {
      "abstract": [
        {
          "text": "The system places the item in the principal item section.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "principal"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI20ToolbarItemPlacementV",
          "text": "ToolbarItemPlacement"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/ToolbarItemPlacement/principal",
      "kind": "symbol",
      "role": "symbol",
      "title": "principal",
      "type": "topic",
      "url": "/documentation/SwiftUI/ToolbarItemPlacement/principal"
    },
    "doc://com.apple.documentation/documentation/SwiftUI/View/onAppear(perform:)": {
      "abstract": [
        {
          "text": "Adds an action to perform before this view appears.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "nonisolated"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "onAppear"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "perform"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "action"
        },
        {
          "kind": "text",
          "text": ": (() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")? = nil) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        },
        {
          "kind": "text",
          "text": "\n"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/SwiftUI/View/onAppear(perform:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "onAppear(perform:)",
      "type": "topic",
      "url": "/documentation/SwiftUI/View/onAppear(perform:)"
    },
    "doc://com.apple.documentation/documentation/Updates/SwiftData": {
      "abstract": [
        {
          "text": "Learn about important changes to SwiftData.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Updates/SwiftData",
      "kind": "article",
      "role": "article",
      "title": "SwiftData updates",
      "type": "topic",
      "url": "/documentation/Updates/SwiftData"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "f84bac78ac34/SwiftDataAnimals.zip": {
      "checksum": "f84bac78ac34101864c1da49ccd531f9b0769fe6b9447e44392d450dd43367cdce7c614a177b34e183106bfd560a1d48cdd416f581a865c301dffe9c1fa789a9",
      "identifier": "f84bac78ac34/SwiftDataAnimals.zip",
      "type": "download",
      "url": "https://docs-assets.developer.apple.com/published/f84bac78ac34/SwiftDataAnimals.zip"
    },
    "swiftData-PageImage-card.png": {
      "alt": "A gray and white Swift logo on a swirly blue background.",
      "identifier": "swiftData-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/8f347b5f4b93bb57bf95423987e9a6c9/swiftData-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/f0a5e8a43bc94c93e07c48dc59f884ed/swiftData-PageImage-card~dark@2x.png"
        }
      ]
    }
  },
  "sampleCodeDownload": {
    "action": {
      "identifier": "f84bac78ac34/SwiftDataAnimals.zip",
      "isActive": true,
      "overridingTitle": "Download",
      "type": "reference"
    },
    "kind": "sampleDownload"
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Essentials",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftData/documentation/SwiftData/Preserving-your-apps-model-data-across-launches",
        "doc://com.apple.documentation/documentation/CoreData/adopting-swiftdata-for-a-core-data-app",
        "doc://com.apple.documentation/documentation/Updates/SwiftData"
      ],
      "title": "Essentials"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftdata/adding-and-editing-persistent-data-in-your-app"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
