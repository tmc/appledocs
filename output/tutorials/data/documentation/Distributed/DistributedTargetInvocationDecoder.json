{
  "abstract": [
    {
      "text": "Decoder that must be provided to ",
      "type": "text"
    },
    {
      "code": "executeDistributedTarget",
      "type": "codeVoice"
    },
    {
      "text": " and is used",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "by the Swift runtime to decode arguments of the invocation.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Distributed"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:11Distributed0A23TargetInvocationDecoderP",
    "fragments": [
      {
        "kind": "keyword",
        "text": "protocol"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "DistributedTargetInvocationDecoder"
      }
    ],
    "modules": [
      {
        "name": "Distributed"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "DistributedTargetInvocationDecoder"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Protocol",
    "symbolKind": "protocol",
    "title": "DistributedTargetInvocationDecoder"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "DistributedTargetInvocationDecoder"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/SerializationRequirement",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:11Distributed0A23TargetInvocationDecoderP24SerializationRequirementQa",
              "text": "SerializationRequirement"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "Decoding-DistributedActor-arguments-using-Codable",
          "level": 3,
          "text": "Decoding DistributedActor arguments using Codable",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When using an actor system where ",
              "type": "text"
            },
            {
              "code": "ActorID",
              "type": "codeVoice"
            },
            {
              "text": " is ",
              "type": "text"
            },
            {
              "code": "Codable",
              "type": "codeVoice"
            },
            {
              "text": ", every distributed actor using that system",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is also implicitly ",
              "type": "text"
            },
            {
              "code": "Codable",
              "type": "codeVoice"
            },
            {
              "text": " (see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Distributed/DistributedActorSystem",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": "). Such distributed actors are encoded",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "as their ",
              "type": "text"
            },
            {
              "code": "ActorID",
              "type": "codeVoice"
            },
            {
              "text": " stored in an ",
              "type": "text"
            },
            {
              "code": "Encoder/singleValueContainer",
              "type": "codeVoice"
            },
            {
              "text": ". When ",
              "type": "text"
            },
            {
              "code": "Codable",
              "type": "codeVoice"
            },
            {
              "text": " is being used",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "by such a system, the ",
              "type": "text"
            },
            {
              "code": "decodeNextArgument",
              "type": "codeVoice"
            },
            {
              "text": " method will be using ",
              "type": "text"
            },
            {
              "code": "Decoder",
              "type": "codeVoice"
            },
            {
              "text": " to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "decode the incoming values, which may themselves be distributed actors.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "An actor system must be provided to the ",
              "type": "text"
            },
            {
              "code": "Decoder",
              "type": "codeVoice"
            },
            {
              "text": " in order for a distributed actor’s ",
              "type": "text"
            },
            {
              "code": "Decodable/init(from:)",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to be able to return the instance of the actor. Specifically, the decoded",
              "type": "text"
            },
            {
              "code": "ActorID",
              "type": "codeVoice"
            },
            {
              "text": " is passed to the actor system’s ",
              "type": "text"
            },
            {
              "code": "resolve(id:as:)",
              "type": "codeVoice"
            },
            {
              "text": " method in order to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "return either a local instance identified by this ID, or creating a remote actor reference.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Thus, you must set the actor system the decoding is performed for, on the decoder’s ",
              "type": "text"
            },
            {
              "code": "userInfo",
              "type": "codeVoice"
            },
            {
              "text": ", as follows:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "mutating func decodeNextArgument<Argument: SerializationRequirement>() throws -> Argument {",
            "  let argumentData: Data = /// ...",
            "  // ...",
            "  decoder.userInfo[.actorSystemKey] = self.actorSystem",
            "  return try Argument.decode(",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.Swift/documentation/Distributed": {
      "abstract": [
        {
          "text": "Build systems that run distributed code across multiple processes and devices.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Distributed",
      "kind": "symbol",
      "role": "collection",
      "title": "Distributed",
      "type": "topic",
      "url": "/documentation/distributed"
    },
    "doc://com.apple.Swift/documentation/Distributed/DistributedActorSystem": {
      "abstract": [
        {
          "text": "A distributed actor system underpins and implements all functionality of distributed actors.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DistributedActorSystem"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Distributed/DistributedActorSystem",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DistributedActorSystem"
        }
      ],
      "role": "symbol",
      "title": "DistributedActorSystem",
      "type": "topic",
      "url": "/documentation/distributed/distributedactorsystem"
    },
    "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder": {
      "abstract": [
        {
          "text": "Decoder that must be provided to ",
          "type": "text"
        },
        {
          "code": "executeDistributedTarget",
          "type": "codeVoice"
        },
        {
          "text": " and is used",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "by the Swift runtime to decode arguments of the invocation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DistributedTargetInvocationDecoder"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DistributedTargetInvocationDecoder"
        }
      ],
      "role": "symbol",
      "title": "DistributedTargetInvocationDecoder",
      "type": "topic",
      "url": "/documentation/distributed/distributedtargetinvocationdecoder"
    },
    "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/SerializationRequirement": {
      "abstract": [
        {
          "text": "The serialization requirement that the types passed to ",
          "type": "text"
        },
        {
          "code": "decodeNextArgument",
          "type": "codeVoice"
        },
        {
          "text": " are required to conform to.",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "The type returned by ",
          "type": "text"
        },
        {
          "code": "decodeReturnType",
          "type": "codeVoice"
        },
        {
          "text": " is also expected to conform to this associated type requirement.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SerializationRequirement"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/SerializationRequirement",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "SerializationRequirement",
      "type": "topic",
      "url": "/documentation/distributed/distributedtargetinvocationdecoder/serializationrequirement"
    },
    "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/decodeErrorType()": {
      "abstract": [
        {
          "text": "Decode the specific error type that the distributed invocation target has recorded.",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "Currently this effectively can only ever be ",
          "type": "text"
        },
        {
          "code": "Error.self",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "decodeErrorType"
        },
        {
          "kind": "text",
          "text": "() "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> (any "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": ".Type)?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/decodeErrorType()",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "decodeErrorType()",
      "type": "topic",
      "url": "/documentation/distributed/distributedtargetinvocationdecoder/decodeerrortype()"
    },
    "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/decodeGenericSubstitutions()": {
      "abstract": [
        {
          "text": "Decode all generic substitutions that were recorded for this invocation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "decodeGenericSubstitutions"
        },
        {
          "kind": "text",
          "text": "() "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> [any "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": ".Type]"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/decodeGenericSubstitutions()",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "decodeGenericSubstitutions()",
      "type": "topic",
      "url": "/documentation/distributed/distributedtargetinvocationdecoder/decodegenericsubstitutions()"
    },
    "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/decodeNextArgument()": {
      "abstract": [
        {
          "text": "Attempt to decode the next argument from the underlying buffers into pre-allocated storage",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "pointed at by ‘pointer’.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "decodeNextArgument"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Argument"
        },
        {
          "kind": "text",
          "text": ">() "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Argument"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/decodeNextArgument()",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "decodeNextArgument()",
      "type": "topic",
      "url": "/documentation/distributed/distributedtargetinvocationdecoder/decodenextargument()"
    },
    "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/decodeReturnType()": {
      "abstract": [
        {
          "text": "Attempt to decode the known return type of the distributed invocation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "decodeReturnType"
        },
        {
          "kind": "text",
          "text": "() "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> (any "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": ".Type)?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/decodeReturnType()",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "decodeReturnType()",
      "type": "topic",
      "url": "/documentation/distributed/distributedtargetinvocationdecoder/decodereturntype()"
    },
    "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationEncoder": {
      "abstract": [
        {
          "text": "Used to encode an invocation of a distributed target (method or computed property).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DistributedTargetInvocationEncoder"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationEncoder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DistributedTargetInvocationEncoder"
        }
      ],
      "role": "symbol",
      "title": "DistributedTargetInvocationEncoder",
      "type": "topic",
      "url": "/documentation/distributed/distributedtargetinvocationencoder"
    },
    "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationResultHandler": {
      "abstract": [
        {
          "text": "Protocol a distributed invocation execution’s result handler.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DistributedTargetInvocationResultHandler"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationResultHandler",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DistributedTargetInvocationResultHandler"
        }
      ],
      "role": "symbol",
      "title": "DistributedTargetInvocationResultHandler",
      "type": "topic",
      "url": "/documentation/distributed/distributedtargetinvocationresulthandler"
    },
    "doc://com.apple.Swift/documentation/Distributed/LocalTestingInvocationDecoder": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LocalTestingInvocationDecoder"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Distributed/LocalTestingInvocationDecoder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LocalTestingInvocationDecoder"
        }
      ],
      "role": "symbol",
      "title": "LocalTestingInvocationDecoder",
      "type": "topic",
      "url": "/documentation/distributed/localtestinginvocationdecoder"
    },
    "doc://com.apple.Swift/documentation/Distributed/RemoteCallArgument": {
      "abstract": [
        {
          "text": "Represents an argument passed to a distributed call target.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RemoteCallArgument"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Distributed/RemoteCallArgument",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RemoteCallArgument"
        }
      ],
      "role": "symbol",
      "title": "RemoteCallArgument",
      "type": "topic",
      "url": "/documentation/distributed/remotecallargument"
    },
    "doc://com.apple.Swift/documentation/Distributed/RemoteCallTarget": {
      "abstract": [
        {
          "text": "Represents a ‘target’ of a distributed call, such as a ",
          "type": "text"
        },
        {
          "code": "distributed func",
          "type": "codeVoice"
        },
        {
          "text": " or",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "distributed",
          "type": "codeVoice"
        },
        {
          "text": " computed property. Identification schemes may vary between",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "systems, and are subject to evolution.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RemoteCallTarget"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Distributed/RemoteCallTarget",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RemoteCallTarget"
        }
      ],
      "role": "symbol",
      "title": "RemoteCallTarget",
      "type": "topic",
      "url": "/documentation/distributed/remotecalltarget"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Distributed/LocalTestingInvocationDecoder"
      ],
      "kind": "relationships",
      "title": "Conforming Types",
      "type": "conformingTypes"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Remote-Calls",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Distributed/RemoteCallTarget",
        "doc://com.apple.Swift/documentation/Distributed/RemoteCallArgument",
        "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationEncoder",
        "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationResultHandler"
      ],
      "title": "Remote Calls"
    }
  ],
  "topicSections": [
    {
      "anchor": "Associated-Types",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/SerializationRequirement"
      ],
      "title": "Associated Types"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/decodeErrorType()",
        "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/decodeGenericSubstitutions()",
        "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/decodeNextArgument()",
        "doc://com.apple.Swift/documentation/Distributed/DistributedTargetInvocationDecoder/decodeReturnType()"
      ],
      "title": "Instance Methods"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/distributed/distributedtargetinvocationdecoder"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
