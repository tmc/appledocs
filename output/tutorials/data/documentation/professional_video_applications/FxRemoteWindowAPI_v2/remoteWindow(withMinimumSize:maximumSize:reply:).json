{
  "abstract": [
    {
      "text": "Requests the host application to create a window with a minimum and maximum size that displays a custom UI.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "added",
      "platform": "FxPlug",
      "versions": [
        "4.0",
        "4.2.9"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications",
        "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications/FxRemoteWindowAPI_v2"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications/FxRemoteWindowAPI_v2/remoteWindow(withMinimumSize:maximumSize:reply:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(pl)FxRemoteWindowAPI_v2(im)remoteWindowWithMinimumSize:maximumSize:reply:",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "remoteWindow"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "withMinimumSize"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "c:@S@CGSize",
        "text": "CGSize"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "maximumSize"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "c:@S@CGSize",
        "text": "CGSize"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "reply"
      },
      {
        "kind": "text",
        "text": ": (("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "c:objc(cs)NSView",
        "text": "NSView"
      },
      {
        "kind": "text",
        "text": "?, (any "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s5ErrorP",
        "text": "Error"
      },
      {
        "kind": "text",
        "text": ")?) -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s4Voida",
        "text": "Void"
      },
      {
        "kind": "text",
        "text": ")!)"
      }
    ],
    "modules": [
      {
        "name": "Professional Video Applications"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "remoteWindowWithMinimumSize:maximumSize:reply:"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "introducedAt": "4.2.3",
        "name": "FxPlug"
      }
    ],
    "required": true,
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "remoteWindow(withMinimumSize:maximumSize:reply:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "Unsupported OS: FxPlug"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "remoteWindow"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "withMinimumSize"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "minContentSize"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/c:@S@CGSize",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@S@CGSize",
              "text": "CGSize"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "maximumSize"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "maxContentSize"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/c:@S@CGSize",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@S@CGSize",
              "text": "CGSize"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "reply"
            },
            {
              "kind": "text",
              "text": ": (("
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSView",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSView",
              "text": "NSView"
            },
            {
              "kind": "text",
              "text": "?, (any "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s5ErrorP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s5ErrorP",
              "text": "Error"
            },
            {
              "kind": "text",
              "text": ")?) -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s4Voida",
              "text": "Void"
            },
            {
              "kind": "text",
              "text": ")!)"
            }
          ]
        },
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "Unsupported OS: FxPlug"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "remoteWindow"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "withMinimumSize"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "minContentSize"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/c:@S@CGSize",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@S@CGSize",
              "text": "CGSize"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "maximumSize"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "maxContentSize"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/c:@S@CGSize",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@S@CGSize",
              "text": "CGSize"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSView",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSView",
              "text": "NSView"
            },
            {
              "kind": "text",
              "text": "?"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The minimum content size for the requested window.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "minContentSize"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The maximum content size for the requested window.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "maxContentSize"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Called when the window is created or if an error occurs during window creation.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "reply"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Call this method to request that the host creates a new window where your plug-in displays custom-user interface elements. The maximum window size is limited to 80% of the host application’s main window size. The reply block returns the window for your custom view.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If there are any problems creating the window, ",
              "type": "text"
            },
            {
              "code": "parentView",
              "type": "codeVoice"
            },
            {
              "text": " is ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "error",
              "type": "codeVoice"
            },
            {
              "text": " contains an NSError that describes the problem.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Each plug-in instance is limited to a single window. If a user doesn’t close the window that contains the custom-user interface elements, subsequent calls to this method return the same parent view.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications": {
      "abstract": [
        {
          "text": "Exchange data with Final Cut Pro, and create effects plug-ins for Final Cut Pro and Motion.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications",
      "kind": "symbol",
      "role": "collection",
      "title": "Professional Video Applications",
      "type": "topic",
      "url": "/documentation/professional_video_applications"
    },
    "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications/FxRemoteWindowAPI_v2": {
      "abstract": [
        {
          "text": "A protocol that allows the plug-in to request that the host create a window with a defined minimum and maximum size.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FxRemoteWindowAPI_v2"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications/FxRemoteWindowAPI_v2",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FxRemoteWindowAPI_v2"
        }
      ],
      "role": "symbol",
      "title": "FxRemoteWindowAPI_v2",
      "type": "topic",
      "url": "/documentation/professional_video_applications/fxremotewindowapi_v2"
    },
    "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications/FxRemoteWindowAPI_v2/remoteWindow(withMinimumSize:maximumSize:reply:)": {
      "abstract": [
        {
          "text": "Requests the host application to create a window with a minimum and maximum size that displays a custom UI.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "remoteWindow"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withMinimumSize"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@CGSize",
          "text": "CGSize"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "maximumSize"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@CGSize",
          "text": "CGSize"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "reply"
        },
        {
          "kind": "text",
          "text": ": (("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSView",
          "text": "NSView"
        },
        {
          "kind": "text",
          "text": "?, (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ")?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")!)"
        }
      ],
      "identifier": "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications/FxRemoteWindowAPI_v2/remoteWindow(withMinimumSize:maximumSize:reply:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "remoteWindowWithMinimumSize:maximumSize:reply:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "remoteWindow(withMinimumSize:maximumSize:reply:)",
      "type": "topic",
      "url": "/documentation/professional_video_applications/fxremotewindowapi_v2/remotewindow(withminimumsize:maximumsize:reply:)"
    },
    "doc://com.externally.resolved.symbol/c:@S@CGSize": {
      "abstract": [
        {
          "text": "A structure that contains width and height values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "CGSize"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:@S@CGSize",
      "kind": "symbol",
      "role": "symbol",
      "title": "CGSize",
      "type": "topic",
      "url": "/documentation/corefoundation/cgsize"
    },
    "doc://com.externally.resolved.symbol/c:objc(cs)NSView": {
      "abstract": [
        {
          "text": "The infrastructure for drawing, printing, and handling events in an app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSView"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSView",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSView",
      "type": "topic",
      "url": "/documentation/AppKit/NSView"
    },
    "doc://com.externally.resolved.symbol/s:s4Voida": {
      "abstract": [
        {
          "text": "The return type of functions that don’t explicitly specify a return type, that is, an empty tuple `()`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": " = ()"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
      "kind": "symbol",
      "role": "symbol",
      "title": "Void",
      "type": "topic",
      "url": "/documentation/Swift/Void"
    },
    "doc://com.externally.resolved.symbol/s:s5ErrorP": {
      "abstract": [
        {
          "text": "A type representing an error value that can be thrown.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s8SendableP",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s5ErrorP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Error",
      "type": "topic",
      "url": "/documentation/Swift/Error"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": null
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Instance Method"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "remoteWindowWithMinimumSize:maximumSize:reply:"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "method"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "remoteWindowWithMinimumSize:maximumSize:reply:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications",
                "doc://com.apple.professionalvideoapplications/documentation/professional_video_applications/FxRemoteWindowAPI_v2"
              ]
            ]
          }
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "add",
          "path": "/relationshipsSections",
          "value": null
        },
        {
          "op": "add",
          "path": "/seeAlsoSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "Unsupported OS: FxPlug"
                ],
                "tokens": [
                  {
                    "kind": "text",
                    "text": "- ("
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:v",
                    "text": "void"
                  },
                  {
                    "kind": "text",
                    "text": ") "
                  },
                  {
                    "kind": "identifier",
                    "text": "remoteWindowWithMinimumSize:"
                  },
                  {
                    "kind": "text",
                    "text": "("
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:@S@CGSize",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:@S@CGSize",
                    "text": "CGSize"
                  },
                  {
                    "kind": "text",
                    "text": ") "
                  },
                  {
                    "kind": "internalParam",
                    "text": "minContentSize"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "maximumSize:"
                  },
                  {
                    "kind": "text",
                    "text": "("
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:@S@CGSize",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:@S@CGSize",
                    "text": "CGSize"
                  },
                  {
                    "kind": "text",
                    "text": ") "
                  },
                  {
                    "kind": "internalParam",
                    "text": "maxContentSize"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "reply:"
                  },
                  {
                    "kind": "text",
                    "text": "("
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:v",
                    "text": "void"
                  },
                  {
                    "kind": "text",
                    "text": " (^"
                  },
                  {
                    "kind": "text",
                    "text": ")("
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSView",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(cs)NSView",
                    "text": "NSView"
                  },
                  {
                    "kind": "text",
                    "text": " * "
                  },
                  {
                    "kind": "internalParam",
                    "text": "parentView"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(cs)NSError",
                    "text": "NSError"
                  },
                  {
                    "kind": "text",
                    "text": " * "
                  },
                  {
                    "kind": "internalParam",
                    "text": "error"
                  },
                  {
                    "kind": "text",
                    "text": ")) "
                  },
                  {
                    "kind": "internalParam",
                    "text": "reply"
                  },
                  {
                    "kind": "text",
                    "text": ";"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/1",
          "value": {
            "kind": "parameters",
            "parameters": [
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "The minimum content size for the requested window.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "minContentSize"
              },
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "The maximum content size for the requested window.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "maxContentSize"
              },
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "Called when the window is created or if an error occurs during window creation.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "reply"
              }
            ]
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(cs)NSView/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSView"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSResponder",
              "text": "NSResponder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.professionalvideoapplications~1documentation~1professional_video_applications~1FxRemoteWindowAPI_v2~1remoteWindow(withMinimumSize:maximumSize:reply:)/title",
          "value": "remoteWindowWithMinimumSize:maximumSize:reply:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.professionalvideoapplications~1documentation~1professional_video_applications~1FxRemoteWindowAPI_v2~1remoteWindow(withMinimumSize:maximumSize:reply:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "remoteWindowWithMinimumSize:maximumSize:reply:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.professionalvideoapplications~1documentation~1professional_video_applications~1FxRemoteWindowAPI_v2/title",
          "value": "FxRemoteWindowAPI_v2"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.professionalvideoapplications~1documentation~1professional_video_applications~1FxRemoteWindowAPI_v2/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "FxRemoteWindowAPI_v2"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.professionalvideoapplications~1documentation~1professional_video_applications~1FxRemoteWindowAPI_v2/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "FxRemoteWindowAPI_v2"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/professional_video_applications/fxremotewindowapi_v2/remotewindow(withminimumsize:maximumsize:reply:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/professional_video_applications/fxremotewindowapi_v2/remotewindow(withminimumsize:maximumsize:reply:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
