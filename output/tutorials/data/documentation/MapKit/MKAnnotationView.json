{
  "abstract": [
    {
      "text": "The visual representation of one of your annotation objects.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.mapkit/documentation/MapKit"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(cs)MKAnnotationView",
    "fragments": [
      {
        "kind": "keyword",
        "text": "class"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "MKAnnotationView"
      }
    ],
    "modules": [
      {
        "name": "MapKit"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "MKAnnotationView"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "3.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "3.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.1",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.9",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.2",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Class",
    "symbolKind": "class",
    "title": "MKAnnotationView"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:ScM",
              "kind": "attribute",
              "preciseIdentifier": "s:ScM",
              "text": "MainActor"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "class"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MKAnnotationView"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "inlineContent": [
                {
                  "text": "Annotation views",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " are loosely coupled to a corresponding ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "annotation object",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": ", which is an object that conforms to the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotation",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol. When an annotation’s coordinate point is in the map’s visible region, the map view asks its delegate to provide a corresponding annotation view. MapKit may recycle annotation views and put them into a reuse queue that the map view maintains.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The most efficient way to provide the content for an annotation view is to set its ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/image",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property. The annotation view sizes itself automatically to the image you specify and draws that image for its contents. Because it’s a view, you can also override the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/UIKit/UIView/draw(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method and draw your view’s content manually. If you choose to override ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/UIKit/UIView/draw(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " directly and you don’t specify a custom image in the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/image",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property, the annotation view sets the width and height of the annotation view’s frame to ",
              "type": "text"
            },
            {
              "code": "0",
              "type": "codeVoice"
            },
            {
              "text": " by default. Before the framework can draw your custom content, you need to set the width and height to nonzero values by modifying the view’s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/UIKit/UIView/frame",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property. In general, if your content consists entirely of static images, it’s more efficient to set the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/image",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property and change it as necessary than to draw the images yourself.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Annotation views anchor to the map at the point that their associated annotation object specifies. Although they scroll with the map contents, annotation views reside in a separate display layer and don’t scale when the size of the visible map region changes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Additionally, annotation views support the concept of a ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "selection state",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": ", which determines whether the map displays the annotation view as unselected, selected, or selected and displaying a standard callout view. The user toggles between the selection states through interactions with the annotation view. In the unselected state, the map displays the annotation view, but doesn’t highlight it. In the selected state, the framework highlights the annotation, but doesn’t display the callout. Finally, the map view can display the annotation with both a highlight and a callout. The callout view displays additional information, such as a title string and controls for viewing more information. The annotation object provides the title information, but your annotation view is responsible for providing any custom controls. For more information, see the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView#Subclassing-notes",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " section below.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Reuse-annotation-views",
          "level": 3,
          "text": "Reuse annotation views",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The design of annotation views enables their reuse as the user (or your app) changes the visible map region. The reuse of annotation views provides significant performance improvements during scrolling by avoiding the creation of new view objects during this time-critical operation. For this reason, don’t tightly couple annotation views to the contents of their associated annotation. Instead, use the properties of an annotation view (or setter methods) to configure the view for a new annotation object.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Whenever you initialize a new annotation view, specify a reuse identifier for that view. When the framework no longer needs annotation views, the map view may put them into a reuse queue. As the framework adds new annotations to the map view, the delegate object can then dequeue and reconfigure an existing view (rather than create a new one) using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKMapView/dequeueReusableAnnotationView(withIdentifier:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method of ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKMapView",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Subclassing-notes",
          "level": 3,
          "text": "Subclassing notes",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can use the ",
              "type": "text"
            },
            {
              "code": "MKAnnotationView",
              "type": "codeVoice"
            },
            {
              "text": " class as-is or subclass it to provide custom behavior as necessary. The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/image",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property of the class lets you set the appearance of the annotation view without subclassing directly. You might also create custom subclasses as a convenience and use them to put the annotation view in a known state.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "There are no special requirements for subclassing ",
              "type": "text"
            },
            {
              "code": "MKAnnotationView",
              "type": "codeVoice"
            },
            {
              "text": ". However, the following list includes some reasons you might want to subclass, and the methods to override to implement the desired behavior:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "To put the annotation view into a consistent state, provide a custom initialization method. Your custom initialization method then calls ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/init(annotation:reuseIdentifier:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " to initialize the superclass.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "To provide custom callout views, override the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/leftCalloutAccessoryView",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " method and use it to return the views.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "If you support draggable annotation views in iOS, your subclass is responsible for changing the value in the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/dragState-swift.property",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property to appropriate values at key transition points in the drag operation. For more information, see the description of that property.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/UIKit/UIView/draw(_:)": {
      "abstract": [
        {
          "text": "Draws the view’s image within the passed-in rectangle.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "draw"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "rect"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@CGRect",
          "text": "CGRect"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/UIKit/UIView/draw(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "draw(_:)",
      "type": "topic",
      "url": "/documentation/UIKit/UIView/draw(_:)"
    },
    "doc://com.apple.documentation/documentation/UIKit/UIView/frame": {
      "abstract": [
        {
          "text": "The frame rectangle, which describes the view’s location and size in its superview’s coordinate system.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "frame"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@CGRect",
          "text": "CGRect"
        },
        {
          "kind": "text",
          "text": " { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "set"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/UIKit/UIView/frame",
      "kind": "symbol",
      "role": "symbol",
      "title": "frame",
      "type": "topic",
      "url": "/documentation/UIKit/UIView/frame"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.mapkit/documentation/MapKit": {
      "abstract": [
        {
          "text": "Display map or satellite imagery within your app, call out points of interest, and determine placemark information for map coordinates.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit",
      "kind": "symbol",
      "role": "collection",
      "title": "MapKit",
      "type": "topic",
      "url": "/documentation/mapkit"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotation": {
      "abstract": [
        {
          "text": "An interface for associating your content with a specific map location.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MKAnnotation"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MKAnnotation"
        }
      ],
      "role": "symbol",
      "title": "MKAnnotation",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotation"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationCalloutInfoDidChangeNotification": {
      "abstract": [
        {
          "text": "A property to observe to determine when the title or subtitle information of an annotation object changes.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "MKAnnotationCalloutInfoDidChangeNotification"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationCalloutInfoDidChangeNotification",
      "kind": "symbol",
      "role": "symbol",
      "title": "MKAnnotationCalloutInfoDidChangeNotification",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationcalloutinfodidchangenotification"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView": {
      "abstract": [
        {
          "text": "The visual representation of one of your annotation objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MKAnnotationView"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MKAnnotationView"
        }
      ],
      "role": "symbol",
      "title": "MKAnnotationView",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView#Subclassing-notes": {
      "abstract": [],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView#Subclassing-notes",
      "kind": "section",
      "title": "Subclassing notes",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview#Subclassing-notes"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/CollisionMode-swift.enum": {
      "abstract": [
        {
          "text": "Constants that indicates how to interpret the collision frame rectangle of an annotation view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CollisionMode"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/CollisionMode-swift.enum",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CollisionMode"
        }
      ],
      "role": "symbol",
      "title": "MKAnnotationView.CollisionMode",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/collisionmode-swift.enum"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/DragState-swift.enum": {
      "abstract": [
        {
          "text": "Constants that indicate the drag state of an annotation view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DragState"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/DragState-swift.enum",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DragState"
        }
      ],
      "role": "symbol",
      "title": "MKAnnotationView.DragState",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/dragstate-swift.enum"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/accessoryOffset": {
      "abstract": [
        {
          "text": "An offset that changes the accessory’s default anchor point.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "accessoryOffset"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@CGPoint",
          "text": "CGPoint"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/accessoryOffset",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "accessoryOffset"
        }
      ],
      "role": "symbol",
      "title": "accessoryOffset",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/accessoryoffset"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/annotation": {
      "abstract": [
        {
          "text": "The annotation object associated with the view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "annotation"
        },
        {
          "kind": "text",
          "text": ": (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MKAnnotation",
          "text": "MKAnnotation"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/annotation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "annotation"
        }
      ],
      "role": "symbol",
      "title": "annotation",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/annotation"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/calloutOffset": {
      "abstract": [
        {
          "text": "The offset (in points) at which to place the callout.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "calloutOffset"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@CGPoint",
          "text": "CGPoint"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/calloutOffset",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "calloutOffset"
        }
      ],
      "role": "symbol",
      "title": "calloutOffset",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/calloutoffset"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/canShowCallout": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether the annotation view is able to display extra information in a callout.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "canShowCallout"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/canShowCallout",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "canShowCallout"
        }
      ],
      "role": "symbol",
      "title": "canShowCallout",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/canshowcallout"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/centerOffset": {
      "abstract": [
        {
          "text": "The offset (in points) at which to display the view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "centerOffset"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@CGPoint",
          "text": "CGPoint"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/centerOffset",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "centerOffset"
        }
      ],
      "role": "symbol",
      "title": "centerOffset",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/centeroffset"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/cluster": {
      "abstract": [
        {
          "text": "The clustering annotation view that replaces the annotation view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "cluster"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MKAnnotationView",
          "text": "MKAnnotationView"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/cluster",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "clusterAnnotationView"
        }
      ],
      "role": "symbol",
      "title": "cluster",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/cluster"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/clusteringIdentifier": {
      "abstract": [
        {
          "text": "An identifier that determines whether the annotation view participates in clustering.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "clusteringIdentifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/clusteringIdentifier",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "clusteringIdentifier"
        }
      ],
      "role": "symbol",
      "title": "clusteringIdentifier",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/clusteringidentifier"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/collisionMode-swift.property": {
      "abstract": [
        {
          "text": "The collision mode to use when interpreting the collision frame rectangle.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "collisionMode"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MKAnnotationView",
          "text": "MKAnnotationView"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MKAnnotationViewCollisionMode",
          "text": "CollisionMode"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/collisionMode-swift.property",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "collisionMode"
        }
      ],
      "role": "symbol",
      "title": "collisionMode",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/collisionmode-swift.property"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/detailCalloutAccessoryView": {
      "abstract": [
        {
          "text": "The detail accessory view to use in the standard callout.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "detailCalloutAccessoryView"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UIView",
          "text": "UIView"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/detailCalloutAccessoryView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "detailCalloutAccessoryView"
        }
      ],
      "role": "symbol",
      "title": "detailCalloutAccessoryView",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/detailcalloutaccessoryview"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/displayPriority": {
      "abstract": [
        {
          "text": "The display priority of the annotation view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "displayPriority"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@MKFeatureDisplayPriority",
          "text": "MKFeatureDisplayPriority"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/displayPriority",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "displayPriority"
        }
      ],
      "role": "symbol",
      "title": "displayPriority",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/displaypriority"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/dragState-swift.property": {
      "abstract": [
        {
          "text": "The drag state of the annotation view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dragState"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MKAnnotationView",
          "text": "MKAnnotationView"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MKAnnotationViewDragState",
          "text": "DragState"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/dragState-swift.property",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "dragState"
        }
      ],
      "role": "symbol",
      "title": "dragState",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/dragstate-swift.property"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/image": {
      "abstract": [
        {
          "text": "The image the annotation view displays.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "image"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UIImage",
          "text": "UIImage"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/image",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "image"
        }
      ],
      "role": "symbol",
      "title": "image",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/image"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/init(annotation:reuseIdentifier:)": {
      "abstract": [
        {
          "text": "Creates and returns a new annotation view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "annotation"
        },
        {
          "kind": "text",
          "text": ": (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MKAnnotation",
          "text": "MKAnnotation"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "reuseIdentifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/init(annotation:reuseIdentifier:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "initWithAnnotation:reuseIdentifier:"
        }
      ],
      "role": "symbol",
      "title": "init(annotation:reuseIdentifier:)",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/init(annotation:reuseidentifier:)"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/init(coder:)": {
      "abstract": [
        {
          "text": "Creates an annotation view using data from the specified unarchiver.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "coder"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSCoder",
          "text": "NSCoder"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/init(coder:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "initWithCoder:"
        }
      ],
      "role": "symbol",
      "title": "init(coder:)",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/init(coder:)"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isDraggable": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether the annotation view is draggable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isDraggable"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isDraggable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "draggable"
        }
      ],
      "role": "symbol",
      "title": "isDraggable",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/isdraggable"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isEnabled": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether the annotation is in an enabled state.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isEnabled"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isEnabled",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "enabled"
        }
      ],
      "role": "symbol",
      "title": "isEnabled",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/isenabled"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isHighlighted": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether the map view highlights the annotation view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isHighlighted"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isHighlighted",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "highlighted"
        }
      ],
      "role": "symbol",
      "title": "isHighlighted",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/ishighlighted"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isSelected": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether the annotation view is in a selected state.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isSelected"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isSelected",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "selected"
        }
      ],
      "role": "symbol",
      "title": "isSelected",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/isselected"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/leftCalloutAccessoryView": {
      "abstract": [
        {
          "text": "The view to display on the left side of the standard callout.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "leftCalloutAccessoryView"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UIView",
          "text": "UIView"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/leftCalloutAccessoryView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "leftCalloutAccessoryView"
        }
      ],
      "role": "symbol",
      "title": "leftCalloutAccessoryView",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/leftcalloutaccessoryview"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/leftCalloutOffset": {
      "abstract": [
        {
          "text": "The offset in points from the middle-left of the annotation view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "leftCalloutOffset"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@CGPoint",
          "text": "CGPoint"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/leftCalloutOffset",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "leftCalloutOffset"
        }
      ],
      "role": "symbol",
      "title": "leftCalloutOffset",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/leftcalloutoffset"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/prepareForDisplay()": {
      "abstract": [
        {
          "text": "Notifies the annotation view that the map view is about to display it.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "prepareForDisplay"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/prepareForDisplay()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "prepareForDisplay"
        }
      ],
      "role": "symbol",
      "title": "prepareForDisplay()",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/preparefordisplay()"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/prepareForReuse()": {
      "abstract": [
        {
          "text": "Calls this method when removing the view from the reuse queue.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "prepareForReuse"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/prepareForReuse()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "prepareForReuse"
        }
      ],
      "role": "symbol",
      "title": "prepareForReuse()",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/prepareforreuse()"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/reuseIdentifier": {
      "abstract": [
        {
          "text": "The string that identifies that the annotation view is reusable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "reuseIdentifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/reuseIdentifier",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "reuseIdentifier"
        }
      ],
      "role": "symbol",
      "title": "reuseIdentifier",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/reuseidentifier"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/rightCalloutAccessoryView": {
      "abstract": [
        {
          "text": "The view to display on the right side of the standard callout.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "rightCalloutAccessoryView"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)UIView",
          "text": "UIView"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/rightCalloutAccessoryView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "rightCalloutAccessoryView"
        }
      ],
      "role": "symbol",
      "title": "rightCalloutAccessoryView",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/rightcalloutaccessoryview"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/rightCalloutOffset": {
      "abstract": [
        {
          "text": "The offset in points from the middle-right of the annotation view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "rightCalloutOffset"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@CGPoint",
          "text": "CGPoint"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/rightCalloutOffset",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "rightCalloutOffset"
        }
      ],
      "role": "symbol",
      "title": "rightCalloutOffset",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/rightcalloutoffset"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/selectedZPriority": {
      "abstract": [
        {
          "text": "The relative importance of the annotation view when in a selected state with respect to its ordering along the z-axis.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "selectedZPriority"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@MKAnnotationViewZPriority",
          "text": "MKAnnotationViewZPriority"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/selectedZPriority",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "selectedZPriority"
        }
      ],
      "role": "symbol",
      "title": "selectedZPriority",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/selectedzpriority"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/setDragState(_:animated:)": {
      "abstract": [
        {
          "text": "Sets the drag state for the annotation view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setDragState"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MKAnnotationView",
          "text": "MKAnnotationView"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MKAnnotationViewDragState",
          "text": "DragState"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "animated"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/setDragState(_:animated:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setDragState:animated:"
        }
      ],
      "role": "symbol",
      "title": "setDragState(_:animated:)",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/setdragstate(_:animated:)"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/setSelected(_:animated:)": {
      "abstract": [
        {
          "text": "Sets the selection state of the annotation view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setSelected"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "animated"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/setSelected(_:animated:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setSelected:animated:"
        }
      ],
      "role": "symbol",
      "title": "setSelected(_:animated:)",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/setselected(_:animated:)"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/zPriority": {
      "abstract": [
        {
          "text": "The relative importance of the annotation view when in an unselected state with respect to its ordering along the z-axis.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "zPriority"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@MKAnnotationViewZPriority",
          "text": "MKAnnotationViewZPriority"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/zPriority",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "zPriority"
        }
      ],
      "role": "symbol",
      "title": "zPriority",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationview/zpriority"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationViewZPriority": {
      "abstract": [
        {
          "text": "Constants that indicates the priority for ordering overlapping annotation views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MKAnnotationViewZPriority"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationViewZPriority",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MKAnnotationViewZPriority"
        }
      ],
      "role": "symbol",
      "title": "MKAnnotationViewZPriority",
      "type": "topic",
      "url": "/documentation/mapkit/mkannotationviewzpriority"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKFeatureDisplayPriority": {
      "abstract": [
        {
          "text": "Constants that indicates the display priority for annotations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MKFeatureDisplayPriority"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKFeatureDisplayPriority",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MKFeatureDisplayPriority"
        }
      ],
      "role": "symbol",
      "title": "MKFeatureDisplayPriority",
      "type": "topic",
      "url": "/documentation/mapkit/mkfeaturedisplaypriority"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKMapView": {
      "abstract": [
        {
          "text": "An embeddable map interface, similar to the one that the Maps app provides.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MKMapView"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKMapView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MKMapView"
        }
      ],
      "role": "symbol",
      "title": "MKMapView",
      "type": "topic",
      "url": "/documentation/mapkit/mkmapview"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKMapView/dequeueReusableAnnotationView(withIdentifier:)": {
      "abstract": [
        {
          "text": "Returns a reusable annotation view using its identifier.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dequeueReusableAnnotationView"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withIdentifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MKAnnotationView",
          "text": "MKAnnotationView"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKMapView/dequeueReusableAnnotationView(withIdentifier:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "dequeueReusableAnnotationViewWithIdentifier:"
        }
      ],
      "role": "symbol",
      "title": "dequeueReusableAnnotationView(withIdentifier:)",
      "type": "topic",
      "url": "/documentation/mapkit/mkmapview/dequeuereusableannotationview(withidentifier:)"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKMarkerAnnotationView": {
      "abstract": [
        {
          "text": "An annotation view that displays a balloon-shaped marker at the designated location.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MKMarkerAnnotationView"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKMarkerAnnotationView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MKMarkerAnnotationView"
        }
      ],
      "role": "symbol",
      "title": "MKMarkerAnnotationView",
      "type": "topic",
      "url": "/documentation/mapkit/mkmarkerannotationview"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKPinAnnotationView": {
      "abstract": [
        {
          "text": "An annotation view that displays a pin image on the map.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MKPinAnnotationView"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKPinAnnotationView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MKPinAnnotationView"
        }
      ],
      "role": "symbol",
      "title": "MKPinAnnotationView",
      "type": "topic",
      "url": "/documentation/mapkit/mkpinannotationview"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKPlacemark": {
      "abstract": [
        {
          "text": "A user-friendly description of a location on the map.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MKPlacemark"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKPlacemark",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MKPlacemark"
        }
      ],
      "role": "symbol",
      "title": "MKPlacemark",
      "type": "topic",
      "url": "/documentation/mapkit/mkplacemark"
    },
    "doc://com.apple.mapkit/documentation/MapKit/MKUserLocationView": {
      "abstract": [
        {
          "text": "A configurable annotation that shows the user’s location using the default MapKit style.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MKUserLocationView"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/MKUserLocationView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MKUserLocationView"
        }
      ],
      "role": "symbol",
      "title": "MKUserLocationView",
      "type": "topic",
      "url": "/documentation/mapkit/mkuserlocationview"
    },
    "doc://com.apple.mapkit/documentation/MapKit/decluttering-a-map-with-mapkit-annotation-clustering": {
      "abstract": [
        {
          "text": "Enhance the readability of a map by replacing overlapping annotations with a clustering annotation view.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.mapkit/documentation/MapKit/decluttering-a-map-with-mapkit-annotation-clustering",
      "kind": "article",
      "role": "sampleCode",
      "title": "Decluttering a Map with MapKit Annotation Clustering",
      "type": "topic",
      "url": "/documentation/mapkit/decluttering-a-map-with-mapkit-annotation-clustering"
    },
    "doc://com.externally.resolved.symbol/c:objc(cs)NSView": {
      "abstract": [
        {
          "text": "The infrastructure for drawing, printing, and handling events in an app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSView"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSView",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSView",
      "type": "topic",
      "url": "/documentation/AppKit/NSView"
    },
    "doc://com.externally.resolved.symbol/c:objc(cs)UIView": {
      "abstract": [
        {
          "text": "An object that manages the content for a rectangular area on the screen.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIView"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)UIView",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIView",
      "type": "topic",
      "url": "/documentation/UIKit/UIView"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)CALayerDelegate": {
      "abstract": [
        {
          "text": "Methods your app can implement to respond to layer-related events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CALayerDelegate"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)CALayerDelegate",
      "kind": "symbol",
      "role": "symbol",
      "title": "CALayerDelegate",
      "type": "topic",
      "url": "/documentation/QuartzCore/CALayerDelegate"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSAccessibility": {
      "abstract": [
        {
          "text": "The complete list of properties and methods for accessible elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSAccessibilityProtocol"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSAccessibility",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSAccessibilityProtocol",
      "type": "topic",
      "url": "/documentation/AppKit/NSAccessibilityProtocol"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSAccessibilityElement": {
      "abstract": [
        {
          "text": "A role-based protocol that declares the minimum interface necessary to interact with an assistive app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSAccessibilityElementProtocol"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSAccessibilityElement",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSAccessibilityElementProtocol",
      "type": "topic",
      "url": "/documentation/AppKit/NSAccessibilityElementProtocol"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSAnimatablePropertyContainer": {
      "abstract": [
        {
          "text": "A set of methods that defines a way to add animation to an existing class with a minimum of API impact.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSAnimatablePropertyContainer"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSAnimatablePropertyContainer",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSAnimatablePropertyContainer",
      "type": "topic",
      "url": "/documentation/AppKit/NSAnimatablePropertyContainer"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSAppearanceCustomization": {
      "abstract": [
        {
          "text": "A set of methods for getting and setting the appearance attributes of a view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSAppearanceCustomization"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSAppearanceCustomization",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSAppearanceCustomization",
      "type": "topic",
      "url": "/documentation/AppKit/NSAppearanceCustomization"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding": {
      "abstract": [
        {
          "text": "A protocol that enables an object to be encoded and decoded for archiving and distribution.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSCoding"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSCoding",
      "type": "topic",
      "url": "/documentation/foundation/nscoding"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSDraggingDestination": {
      "abstract": [
        {
          "text": "A set of methods that the destination object (or recipient) of a dragged image must implement.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSDraggingDestination"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSDraggingDestination",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSDraggingDestination",
      "type": "topic",
      "url": "/documentation/AppKit/NSDraggingDestination"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSObject": {
      "abstract": [
        {
          "text": "The group of methods that are fundamental to all Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObjectProtocol",
      "type": "topic",
      "url": "/documentation/objectivec/nsobjectprotocol"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSStandardKeyBindingResponding": {
      "abstract": [
        {
          "text": "Methods that responder subclasses implement to support key binding commands, such as inserting tabs and newlines, or moving the insertion point.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSStandardKeyBindingResponding"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSStandardKeyBindingResponding",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSStandardKeyBindingResponding",
      "type": "topic",
      "url": "/documentation/AppKit/NSStandardKeyBindingResponding"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSTouchBarProvider": {
      "abstract": [
        {
          "text": "A protocol that an object adopts to create a bar object in your app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSTouchBarProvider"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSTouchBarProvider",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSTouchBarProvider",
      "type": "topic",
      "url": "/documentation/AppKit/NSTouchBarProvider"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSUserActivityRestoring": {
      "abstract": [
        {
          "text": "A protocol that marks classes to restore the state of your app to continue a user activity.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSUserActivityRestoring"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSUserActivityRestoring",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSUserActivityRestoring",
      "type": "topic",
      "url": "/documentation/AppKit/NSUserActivityRestoring"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSUserInterfaceItemIdentification": {
      "abstract": [
        {
          "text": "A set of methods used to associate a unique identifier with objects in your user interface.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSUserInterfaceItemIdentification"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSUserInterfaceItemIdentification",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSUserInterfaceItemIdentification",
      "type": "topic",
      "url": "/documentation/AppKit/NSUserInterfaceItemIdentification"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UIAccessibilityIdentification": {
      "abstract": [
        {
          "text": "Methods that associate a unique identifier with elements in your user interface.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIAccessibilityIdentification"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UIAccessibilityIdentification",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIAccessibilityIdentification",
      "type": "topic",
      "url": "/documentation/UIKit/UIAccessibilityIdentification"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UIActivityItemsConfigurationProviding": {
      "abstract": [
        {
          "text": "An interface that provides a source for shareable content to fulfill user requests to share current content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIActivityItemsConfigurationProviding"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UIActivityItemsConfigurationProviding",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIActivityItemsConfigurationProviding",
      "type": "topic",
      "url": "/documentation/UIKit/UIActivityItemsConfigurationProviding"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UIAppearance": {
      "abstract": [
        {
          "text": "A collection of methods that gives you access to the appearance proxy for a class.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIAppearance"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UIAppearance",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIAppearance",
      "type": "topic",
      "url": "/documentation/UIKit/UIAppearance"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UIAppearanceContainer": {
      "abstract": [
        {
          "text": "A protocol that a class must adopt to allow appearance customization using the [`UIAppearance`](doc://com.apple.uikit/documentation/UIKit/UIAppearance) API.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIAppearanceContainer"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UIAppearanceContainer",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIAppearanceContainer",
      "type": "topic",
      "url": "/documentation/UIKit/UIAppearanceContainer"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UICoordinateSpace": {
      "abstract": [
        {
          "text": "A set of methods for converting between different frames of reference on a screen.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UICoordinateSpace"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UICoordinateSpace",
      "kind": "symbol",
      "role": "symbol",
      "title": "UICoordinateSpace",
      "type": "topic",
      "url": "/documentation/UIKit/UICoordinateSpace"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UIDynamicItem": {
      "abstract": [
        {
          "text": "A set of methods that can make a custom object eligible to participate in UIKit Dynamics.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIDynamicItem"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UIDynamicItem",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIDynamicItem",
      "type": "topic",
      "url": "/documentation/UIKit/UIDynamicItem"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UIFocusEnvironment": {
      "abstract": [
        {
          "text": "A set of methods that define the focus behavior for a branch of the view hierarchy.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIFocusEnvironment"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UIFocusEnvironment",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIFocusEnvironment",
      "type": "topic",
      "url": "/documentation/UIKit/UIFocusEnvironment"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UIFocusItem": {
      "abstract": [
        {
          "text": "An object that can become focused.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIFocusItem"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)UIFocusEnvironment",
          "text": "UIFocusEnvironment"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UIFocusItem",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIFocusItem",
      "type": "topic",
      "url": "/documentation/UIKit/UIFocusItem"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UIFocusItemContainer": {
      "abstract": [
        {
          "text": "The container responsible for providing geometric context to focus items within a given focus environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIFocusItemContainer"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UIFocusItemContainer",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIFocusItemContainer",
      "type": "topic",
      "url": "/documentation/UIKit/UIFocusItemContainer"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UILargeContentViewerItem": {
      "abstract": [
        {
          "text": "Methods that provide details about how to display your custom content in the large content viewer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UILargeContentViewerItem"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UILargeContentViewerItem",
      "kind": "symbol",
      "role": "symbol",
      "title": "UILargeContentViewerItem",
      "type": "topic",
      "url": "/documentation/UIKit/UILargeContentViewerItem"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UIPasteConfigurationSupporting": {
      "abstract": [
        {
          "text": "The interface that determines whether a responder object supports paste configuration.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIPasteConfigurationSupporting"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UIPasteConfigurationSupporting",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIPasteConfigurationSupporting",
      "type": "topic",
      "url": "/documentation/UIKit/UIPasteConfigurationSupporting"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UIPopoverPresentationControllerSourceItem": {
      "abstract": [
        {
          "text": "A type that can be an anchor for a popover presentation controller.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIPopoverPresentationControllerSourceItem"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UIPopoverPresentationControllerSourceItem",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIPopoverPresentationControllerSourceItem",
      "type": "topic",
      "url": "/documentation/UIKit/UIPopoverPresentationControllerSourceItem"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UIResponderStandardEditActions": {
      "abstract": [
        {
          "text": "A set of standard methods that apps can adopt to support editing.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIResponderStandardEditActions"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UIResponderStandardEditActions",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIResponderStandardEditActions",
      "type": "topic",
      "url": "/documentation/UIKit/UIResponderStandardEditActions"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UITraitEnvironment": {
      "abstract": [
        {
          "text": "A set of methods that makes the iOS interface environment available to your app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UITraitEnvironment"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UITraitEnvironment",
      "kind": "symbol",
      "role": "symbol",
      "title": "UITraitEnvironment",
      "type": "topic",
      "url": "/documentation/UIKit/UITraitEnvironment"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)UIUserActivityRestoring": {
      "abstract": [
        {
          "text": "The protocol you adopt to restore an object’s state from a user activity.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIUserActivityRestoring"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)UIUserActivityRestoring",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIUserActivityRestoring",
      "type": "topic",
      "url": "/documentation/UIKit/UIUserActivityRestoring"
    },
    "doc://com.externally.resolved.symbol/s:5UIKit23UITraitChangeObservableP": {
      "abstract": [
        {
          "text": "A type that calls your code in reaction to changes in the trait environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UITraitChangeObservable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:5UIKit23UITraitChangeObservableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "UITraitChangeObservable",
      "type": "topic",
      "url": "/documentation/UIKit/UITraitChangeObservable-67e94"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:ScM": {
      "abstract": [
        {
          "text": "A singleton actor whose executor is equivalent to the main dispatch queue.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@globalActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "final"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "actor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MainActor"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:ScM",
      "kind": "symbol",
      "role": "symbol",
      "title": "MainActor",
      "type": "topic",
      "url": "/documentation/Swift/MainActor"
    },
    "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomDebugStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s7CVarArgP": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as elements of a C `va_list`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s7CVarArgP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/Swift/CVarArg"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/c:objc(cs)NSView",
        "doc://com.externally.resolved.symbol/c:objc(cs)UIView"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    },
    {
      "identifiers": [
        "doc://com.apple.mapkit/documentation/MapKit/MKMarkerAnnotationView",
        "doc://com.apple.mapkit/documentation/MapKit/MKPinAnnotationView",
        "doc://com.apple.mapkit/documentation/MapKit/MKUserLocationView"
      ],
      "kind": "relationships",
      "title": "Inherited By",
      "type": "inheritedBy"
    },
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/c:objc(pl)CALayerDelegate",
        "doc://com.externally.resolved.symbol/s:s7CVarArgP",
        "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSAccessibilityElement",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSAccessibility",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSAnimatablePropertyContainer",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSAppearanceCustomization",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSDraggingDestination",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSStandardKeyBindingResponding",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSTouchBarProvider",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSUserActivityRestoring",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSUserInterfaceItemIdentification",
        "doc://com.externally.resolved.symbol/c:objc(pl)UIAccessibilityIdentification",
        "doc://com.externally.resolved.symbol/c:objc(pl)UIActivityItemsConfigurationProviding",
        "doc://com.externally.resolved.symbol/c:objc(pl)UIAppearance",
        "doc://com.externally.resolved.symbol/c:objc(pl)UIAppearanceContainer",
        "doc://com.externally.resolved.symbol/c:objc(pl)UICoordinateSpace",
        "doc://com.externally.resolved.symbol/c:objc(pl)UIDynamicItem",
        "doc://com.externally.resolved.symbol/c:objc(pl)UIFocusEnvironment",
        "doc://com.externally.resolved.symbol/c:objc(pl)UIFocusItem",
        "doc://com.externally.resolved.symbol/c:objc(pl)UIFocusItemContainer",
        "doc://com.externally.resolved.symbol/c:objc(pl)UILargeContentViewerItem",
        "doc://com.externally.resolved.symbol/c:objc(pl)UIPasteConfigurationSupporting",
        "doc://com.externally.resolved.symbol/c:objc(pl)UIPopoverPresentationControllerSourceItem",
        "doc://com.externally.resolved.symbol/c:objc(pl)UIResponderStandardEditActions",
        "doc://com.externally.resolved.symbol/s:5UIKit23UITraitChangeObservableP",
        "doc://com.externally.resolved.symbol/c:objc(pl)UITraitEnvironment",
        "doc://com.externally.resolved.symbol/c:objc(pl)UIUserActivityRestoring"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Shared-behavior",
      "generated": true,
      "identifiers": [
        "doc://com.apple.mapkit/documentation/MapKit/MKPlacemark",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotation"
      ],
      "title": "Shared behavior"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-and-preparing-an-annotation-view",
      "identifiers": [
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/init(annotation:reuseIdentifier:)",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/init(coder:)",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/prepareForReuse()",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/prepareForDisplay()"
      ],
      "title": "Creating and preparing an annotation view"
    },
    {
      "anchor": "Setting-the-priority-for-display",
      "identifiers": [
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/displayPriority",
        "doc://com.apple.mapkit/documentation/MapKit/MKFeatureDisplayPriority",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/zPriority",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/selectedZPriority",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationViewZPriority"
      ],
      "title": "Setting the priority for display"
    },
    {
      "anchor": "Getting-and-setting-attributes",
      "identifiers": [
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isEnabled",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/image",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isHighlighted",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/annotation",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/centerOffset",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/calloutOffset",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/reuseIdentifier"
      ],
      "title": "Getting and setting attributes"
    },
    {
      "anchor": "Managing-the-selection-state",
      "identifiers": [
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/setSelected(_:animated:)",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isSelected"
      ],
      "title": "Managing the selection state"
    },
    {
      "anchor": "Managing-callout-views",
      "identifiers": [
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/accessoryOffset",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/canShowCallout",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/leftCalloutAccessoryView",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/rightCalloutAccessoryView",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/detailCalloutAccessoryView",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/leftCalloutOffset",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/rightCalloutOffset"
      ],
      "title": "Managing callout views"
    },
    {
      "anchor": "Supporting-drag-operations",
      "identifiers": [
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isDraggable",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/setDragState(_:animated:)",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/dragState-swift.property"
      ],
      "title": "Supporting drag operations"
    },
    {
      "anchor": "Managing-collisions-between-annotation-views",
      "identifiers": [
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/collisionMode-swift.property",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/CollisionMode-swift.enum"
      ],
      "title": "Managing collisions between annotation views"
    },
    {
      "anchor": "Clustering-annotation-views",
      "identifiers": [
        "doc://com.apple.mapkit/documentation/MapKit/decluttering-a-map-with-mapkit-annotation-clustering",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/clusteringIdentifier",
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/cluster"
      ],
      "title": "Clustering annotation views"
    },
    {
      "anchor": "Constants",
      "identifiers": [
        "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/DragState-swift.enum"
      ],
      "title": "Constants"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "3.0",
              "name": "iOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "3.0",
              "name": "iPadOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "13.1",
              "name": "Mac Catalyst",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.9",
              "name": "macOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "9.2",
              "name": "tvOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "1.0",
              "name": "visionOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Class"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "MKAnnotationView"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "class"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MKAnnotationView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MKAnnotationView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.mapkit/documentation/MapKit"
              ]
            ]
          }
        },
        {
          "op": "replace",
          "path": "/topicSections",
          "value": [
            {
              "anchor": "Creating-and-preparing-an-annotation-view",
              "identifiers": [
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/init(annotation:reuseIdentifier:)",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/init(coder:)",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/prepareForReuse()",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/prepareForDisplay()"
              ],
              "title": "Creating and preparing an annotation view"
            },
            {
              "anchor": "Setting-the-priority-for-display",
              "identifiers": [
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/displayPriority",
                "doc://com.apple.mapkit/documentation/MapKit/MKFeatureDisplayPriority",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/zPriority",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/selectedZPriority",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationViewZPriority"
              ],
              "title": "Setting the priority for display"
            },
            {
              "anchor": "Getting-and-setting-attributes",
              "identifiers": [
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isEnabled",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/image",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isHighlighted",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/annotation",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/centerOffset",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/calloutOffset",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/reuseIdentifier"
              ],
              "title": "Getting and setting attributes"
            },
            {
              "anchor": "Managing-the-selection-state",
              "identifiers": [
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/setSelected(_:animated:)",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isSelected"
              ],
              "title": "Managing the selection state"
            },
            {
              "anchor": "Managing-callout-views",
              "identifiers": [
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/accessoryOffset",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/canShowCallout",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/leftCalloutAccessoryView",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/rightCalloutAccessoryView",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/detailCalloutAccessoryView",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/leftCalloutOffset",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/rightCalloutOffset"
              ],
              "title": "Managing callout views"
            },
            {
              "anchor": "Supporting-drag-operations",
              "identifiers": [
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/isDraggable",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/setDragState(_:animated:)",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/dragState-swift.property"
              ],
              "title": "Supporting drag operations"
            },
            {
              "anchor": "Managing-collisions-between-annotation-views",
              "identifiers": [
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/collisionMode-swift.property",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/CollisionMode-swift.enum"
              ],
              "title": "Managing collisions between annotation views"
            },
            {
              "anchor": "Clustering-annotation-views",
              "identifiers": [
                "doc://com.apple.mapkit/documentation/MapKit/decluttering-a-map-with-mapkit-annotation-clustering",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/clusteringIdentifier",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/cluster"
              ],
              "title": "Clustering annotation views"
            },
            {
              "anchor": "Constants",
              "identifiers": [
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationView/DragState-swift.enum"
              ],
              "title": "Constants"
            },
            {
              "anchor": "Notifications",
              "identifiers": [
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotationCalloutInfoDidChangeNotification"
              ],
              "title": "Notifications"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/relationshipsSections",
          "value": [
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(cs)NSView",
                "doc://com.externally.resolved.symbol/c:objc(cs)UIView"
              ],
              "kind": "relationships",
              "title": "Inherits From",
              "type": "inheritsFrom"
            },
            {
              "identifiers": [
                "doc://com.apple.mapkit/documentation/MapKit/MKMarkerAnnotationView",
                "doc://com.apple.mapkit/documentation/MapKit/MKPinAnnotationView",
                "doc://com.apple.mapkit/documentation/MapKit/MKUserLocationView"
              ],
              "kind": "relationships",
              "title": "Inherited By",
              "type": "inheritedBy"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Shared-behavior",
              "generated": true,
              "identifiers": [
                "doc://com.apple.mapkit/documentation/MapKit/MKPlacemark",
                "doc://com.apple.mapkit/documentation/MapKit/MKAnnotation"
              ],
              "title": "Shared behavior"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "iOS",
                  "iPadOS",
                  "Mac Catalyst",
                  "tvOS",
                  "visionOS"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "@interface"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "MKAnnotationView"
                  },
                  {
                    "kind": "text",
                    "text": " : "
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)UIView",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(cs)UIView",
                    "text": "UIView"
                  }
                ]
              },
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "macOS"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "@interface"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "MKAnnotationView"
                  },
                  {
                    "kind": "text",
                    "text": " : "
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSView",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(cs)NSView",
                    "text": "NSView"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKMapView~1dequeueReusableAnnotationView(withIdentifier:)/title",
          "value": "dequeueReusableAnnotationViewWithIdentifier:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKMapView~1dequeueReusableAnnotationView(withIdentifier:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "dequeueReusableAnnotationViewWithIdentifier:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSAnimatablePropertyContainer/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSAnimatablePropertyContainer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSUserInterfaceItemIdentification/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSUserInterfaceItemIdentification"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1cluster/title",
          "value": "clusterAnnotationView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1cluster/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "clusterAnnotationView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1displayPriority/title",
          "value": "displayPriority"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1displayPriority/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "displayPriority"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1UIKit~1UIView~1frame/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@property"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "kind": "keyword",
              "text": "nonatomic"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@S@CGRect",
              "text": "CGRect"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "frame"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1reuseIdentifier/title",
          "value": "reuseIdentifier"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1reuseIdentifier/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "reuseIdentifier"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UIFocusEnvironment/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIFocusEnvironment"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UIFocusItemContainer/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIFocusItemContainer"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1init(annotation:reuseIdentifier:)/title",
          "value": "initWithAnnotation:reuseIdentifier:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1init(annotation:reuseIdentifier:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "initWithAnnotation:reuseIdentifier:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1rightCalloutAccessoryView/title",
          "value": "rightCalloutAccessoryView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1rightCalloutAccessoryView/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "rightCalloutAccessoryView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(cs)NSView/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSView"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSResponder",
              "text": "NSResponder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1image/title",
          "value": "image"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1image/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "image"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UIFocusItem/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIFocusItem"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)UIFocusEnvironment",
              "text": "UIFocusEnvironment"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UIActivityItemsConfigurationProviding/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIActivityItemsConfigurationProviding"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UIResponderStandardEditActions/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIResponderStandardEditActions"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1dragState-swift.property/title",
          "value": "dragState"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1dragState-swift.property/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "dragState"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UIPasteConfigurationSupporting/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIPasteConfigurationSupporting"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UIDynamicItem/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIDynamicItem"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UIPopoverPresentationControllerSourceItem/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIPopoverPresentationControllerSourceItem"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotation/title",
          "value": "MKAnnotation"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotation/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MKAnnotation"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotation/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MKAnnotation"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UILargeContentViewerItem/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UILargeContentViewerItem"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1leftCalloutOffset/title",
          "value": "leftCalloutOffset"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1leftCalloutOffset/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "leftCalloutOffset"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView/title",
          "value": "MKAnnotationView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MKAnnotationView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MKAnnotationView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UIAccessibilityIdentification/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIAccessibilityIdentification"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1annotation/title",
          "value": "annotation"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1annotation/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "annotation"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationViewZPriority/title",
          "value": "MKAnnotationViewZPriority"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationViewZPriority/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MKAnnotationViewZPriority"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationViewZPriority/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MKAnnotationViewZPriority"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKUserLocationView/title",
          "value": "MKUserLocationView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKUserLocationView/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MKUserLocationView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKUserLocationView/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MKUserLocationView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1isHighlighted/title",
          "value": "highlighted"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1isHighlighted/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "highlighted"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKMarkerAnnotationView/title",
          "value": "MKMarkerAnnotationView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKMarkerAnnotationView/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MKMarkerAnnotationView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKMarkerAnnotationView/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MKMarkerAnnotationView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKMapView/title",
          "value": "MKMapView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKMapView/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MKMapView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKMapView/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MKMapView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1isSelected/title",
          "value": "selected"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1isSelected/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "selected"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSAppearanceCustomization/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSAppearanceCustomization"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UIAppearance/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIAppearance"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1CollisionMode-swift.enum/title",
          "value": "MKAnnotationViewCollisionMode"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1CollisionMode-swift.enum/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MKAnnotationViewCollisionMode"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1CollisionMode-swift.enum/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MKAnnotationViewCollisionMode"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKPinAnnotationView/title",
          "value": "MKPinAnnotationView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKPinAnnotationView/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MKPinAnnotationView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKPinAnnotationView/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MKPinAnnotationView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1setSelected(_:animated:)/title",
          "value": "setSelected:animated:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1setSelected(_:animated:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setSelected:animated:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSStandardKeyBindingResponding/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSStandardKeyBindingResponding"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSObject/title",
          "value": "NSObject"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1rightCalloutOffset/title",
          "value": "rightCalloutOffset"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1rightCalloutOffset/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "rightCalloutOffset"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1isDraggable/title",
          "value": "draggable"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1isDraggable/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "draggable"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UICoordinateSpace/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UICoordinateSpace"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UIUserActivityRestoring/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIUserActivityRestoring"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UIAppearanceContainer/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIAppearanceContainer"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1collisionMode-swift.property/title",
          "value": "collisionMode"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1collisionMode-swift.property/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "collisionMode"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKPlacemark/title",
          "value": "MKPlacemark"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKPlacemark/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MKPlacemark"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKPlacemark/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MKPlacemark"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)CALayerDelegate/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "CALayerDelegate"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1selectedZPriority/title",
          "value": "selectedZPriority"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1selectedZPriority/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "selectedZPriority"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(cs)UIView/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UIView"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)UIResponder",
              "text": "UIResponder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1accessoryOffset/title",
          "value": "accessoryOffset"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1accessoryOffset/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "accessoryOffset"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSAccessibilityElement/title",
          "value": "NSAccessibilityElement"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSAccessibilityElement/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSAccessibilityElement"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1canShowCallout/title",
          "value": "canShowCallout"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1canShowCallout/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "canShowCallout"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1detailCalloutAccessoryView/title",
          "value": "detailCalloutAccessoryView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1detailCalloutAccessoryView/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "detailCalloutAccessoryView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1prepareForDisplay()/title",
          "value": "prepareForDisplay"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1prepareForDisplay()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "prepareForDisplay"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1clusteringIdentifier/title",
          "value": "clusteringIdentifier"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1clusteringIdentifier/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "clusteringIdentifier"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1isEnabled/title",
          "value": "enabled"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1isEnabled/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "enabled"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1calloutOffset/title",
          "value": "calloutOffset"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1calloutOffset/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "calloutOffset"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSAccessibility/title",
          "value": "NSAccessibility"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSAccessibility/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSAccessibility"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKFeatureDisplayPriority/title",
          "value": "MKFeatureDisplayPriority"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKFeatureDisplayPriority/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MKFeatureDisplayPriority"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKFeatureDisplayPriority/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MKFeatureDisplayPriority"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1setDragState(_:animated:)/title",
          "value": "setDragState:animated:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1setDragState(_:animated:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setDragState:animated:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1DragState-swift.enum/title",
          "value": "MKAnnotationViewDragState"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1DragState-swift.enum/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MKAnnotationViewDragState"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1DragState-swift.enum/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MKAnnotationViewDragState"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1UIKit~1UIView~1draw(_:)/title",
          "value": "drawRect:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1UIKit~1UIView~1draw(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "drawRect:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@S@CGRect",
              "text": "CGRect"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "internalParam",
              "text": "rect"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSDraggingDestination/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSDraggingDestination"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSUserActivityRestoring/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSUserActivityRestoring"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1leftCalloutAccessoryView/title",
          "value": "leftCalloutAccessoryView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1leftCalloutAccessoryView/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "leftCalloutAccessoryView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1centerOffset/title",
          "value": "centerOffset"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1centerOffset/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "centerOffset"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1prepareForReuse()/title",
          "value": "prepareForReuse"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1prepareForReuse()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "prepareForReuse"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1init(coder:)/title",
          "value": "initWithCoder:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1init(coder:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "initWithCoder:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSTouchBarProvider/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSTouchBarProvider"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1zPriority/title",
          "value": "zPriority"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mapkit~1documentation~1MapKit~1MKAnnotationView~1zPriority/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "zPriority"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)UITraitEnvironment/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UITraitEnvironment"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/mapkit/mkannotationview"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/mapkit/mkannotationview"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
