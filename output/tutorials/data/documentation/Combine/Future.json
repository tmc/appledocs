{
  "abstract": [
    {
      "text": "A publisher that eventually produces a single value and then finishes or fails.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    },
    "minor": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.2",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Combine/documentation/Combine"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Combine/documentation/Combine/Future"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7Combine6FutureC",
    "fragments": [
      {
        "kind": "keyword",
        "text": "class"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Future"
      }
    ],
    "modules": [
      {
        "name": "Combine"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Future"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Class",
    "symbolKind": "class",
    "title": "Future"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "final"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "class"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Future"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Output"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "Failure"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Failure"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s5ErrorP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s5ErrorP",
              "text": "Error"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.Combine/documentation/Combine/using-combine-for-your-app-s-asynchronous-code"
      ]
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use a future to perform some work and then asynchronously publish a single element. You initialize the future with a closure that takes a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Combine/documentation/Combine/Future/Promise",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": "; the closure calls the promise with a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/Result",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " that indicates either success or failure. In the success case, the futureâ€™s downstream subscriber receives the element prior to the publishing stream finishing normally. If the result is an error, publishing terminates with that error.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The following example shows a method that uses a future to asynchronously publish a random number after a brief delay:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func generateAsyncRandomNumberFromFuture() -> Future <Int, Never> {",
            "    return Future() { promise in",
            "        DispatchQueue.main.asyncAfter(deadline: .now() + 2) {",
            "            let number = Int.random(in: 1...10)",
            "            promise(Result.success(number))",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "To receive the published value, you use any Combine subscriber, such as a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Combine/documentation/Combine/Subscribers/Sink",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", like this:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "cancellable = generateAsyncRandomNumberFromFuture()",
            "    .sink { number in print(\"Got random number \\(number).\") }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Integrating-with-Swift-Concurrency",
          "level": 3,
          "text": "Integrating with Swift Concurrency",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To integrate with the ",
              "type": "text"
            },
            {
              "code": "async",
              "type": "codeVoice"
            },
            {
              "text": "-",
              "type": "text"
            },
            {
              "code": "await",
              "type": "codeVoice"
            },
            {
              "text": " syntax in Swift 5.5, ",
              "type": "text"
            },
            {
              "code": "Future",
              "type": "codeVoice"
            },
            {
              "text": " can provide its value to an awaiting caller. This is particularly useful because unlike other types that conform to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Combine/documentation/Combine/Publisher",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and potentially publish many elements, a ",
              "type": "text"
            },
            {
              "code": "Future",
              "type": "codeVoice"
            },
            {
              "text": " only publishes one element (or fails). By using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Combine/documentation/Combine/Future/value-9iwjz",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property, the above call point looks like this:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let number = await generateAsyncRandomNumberFromFuture().value",
            "print(\"Got random number \\(number).\")"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Alternatives-to-Futures",
          "level": 3,
          "text": "Alternatives to Futures",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "async",
              "type": "codeVoice"
            },
            {
              "text": "-",
              "type": "text"
            },
            {
              "code": "await",
              "type": "codeVoice"
            },
            {
              "text": " syntax in Swift can also replace the use of a future entirely, for the case where you want to perform some operation after an asynchronous task completes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You do this with the function ",
              "type": "text"
            },
            {
              "text": "doc://com.apple.documentation/documentation/swift/withCheckedContinuation(function:_:)",
              "type": "text"
            },
            {
              "text": " and its throwing equivalent, ",
              "type": "text"
            },
            {
              "text": "doc://com.apple.documentation/documentation/swift/swift/withCheckedThrowingContinuation(function:_:)",
              "type": "text"
            },
            {
              "text": ". The following example performs the same asynchronous random number generation as the ",
              "type": "text"
            },
            {
              "code": "Future",
              "type": "codeVoice"
            },
            {
              "text": " example above, but as an ",
              "type": "text"
            },
            {
              "code": "async",
              "type": "codeVoice"
            },
            {
              "text": " method:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func generateAsyncRandomNumberFromContinuation() async -> Int {",
            "    return await withCheckedContinuation { continuation in",
            "        DispatchQueue.main.asyncAfter(deadline: .now() + 2) {",
            "            let number = Int.random(in: 1...10)",
            "            continuation.resume(returning: number)",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The call point for this method doesnâ€™t use a closure like the futureâ€™s sink subscriber does; it simply awaits and assigns the result:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let asyncRandom = await generateAsyncRandomNumberFromContinuation()"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "For more information on continuations, see the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/concurrency",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " topic in the Swift standard library.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Combine-PageImage-card.png": {
      "alt": "The Swift language logo, overlaid by a graph of interconnected lines and points.",
      "identifier": "Combine-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/ba2aa5f2e9d9ae5b196c642a6cf121dd/Combine-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/8df9b2bdcd94118827dd29f28f3915d7/Combine-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Combine/documentation/Combine": {
      "abstract": [
        {
          "text": "Customize handling of asynchronous events by combining event-processing operators.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine",
      "images": [
        {
          "identifier": "Combine-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Combine",
      "type": "topic",
      "url": "/documentation/combine"
    },
    "doc://com.apple.Combine/documentation/Combine/Deferred": {
      "abstract": [
        {
          "text": "A publisher that awaits subscription before running the supplied closure to create a publisher for the new subscriber.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Deferred"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/Deferred",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Deferred"
        }
      ],
      "role": "symbol",
      "title": "Deferred",
      "type": "topic",
      "url": "/documentation/combine/deferred"
    },
    "doc://com.apple.Combine/documentation/Combine/Empty": {
      "abstract": [
        {
          "text": "A publisher that never publishes any values, and optionally finishes immediately.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Empty"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/Empty",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Empty"
        }
      ],
      "role": "symbol",
      "title": "Empty",
      "type": "topic",
      "url": "/documentation/combine/empty"
    },
    "doc://com.apple.Combine/documentation/Combine/Fail": {
      "abstract": [
        {
          "text": "A publisher that immediately terminates with the specified error.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Fail"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/Fail",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Fail"
        }
      ],
      "role": "symbol",
      "title": "Fail",
      "type": "topic",
      "url": "/documentation/combine/fail"
    },
    "doc://com.apple.Combine/documentation/Combine/Future": {
      "abstract": [
        {
          "text": "A publisher that eventually produces a single value and then finishes or fails.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Future"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/Future",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Future"
        }
      ],
      "role": "symbol",
      "title": "Future",
      "type": "topic",
      "url": "/documentation/combine/future"
    },
    "doc://com.apple.Combine/documentation/Combine/Future-Publisher-Operators": {
      "abstract": [
        {
          "text": "Methods that create downstream publishers or subscribers to act on the elements they receive.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/Future-Publisher-Operators",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Publisher Operators",
      "type": "topic",
      "url": "/documentation/combine/future-publisher-operators"
    },
    "doc://com.apple.Combine/documentation/Combine/Future/Promise": {
      "abstract": [
        {
          "text": "A type that represents a closure to invoke in the future, when an element or error is available.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Promise"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/Future/Promise",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Promise"
        }
      ],
      "role": "symbol",
      "title": "Future.Promise",
      "type": "topic",
      "url": "/documentation/combine/future/promise"
    },
    "doc://com.apple.Combine/documentation/Combine/Future/Publisher-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Combine/documentation/Combine/Future/Publisher-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Publisher Implementations",
      "type": "topic",
      "url": "/documentation/combine/future/publisher-implementations"
    },
    "doc://com.apple.Combine/documentation/Combine/Future/init(_:)": {
      "abstract": [
        {
          "text": "Creates a publisher that invokes a promise closure when the publisher emits an element.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "(("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine6FutureC",
          "text": "Future"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Output"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Failure"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine6FutureC7Promisea",
          "text": "Promise"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/Future/init(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/combine/future/init(_:)"
    },
    "doc://com.apple.Combine/documentation/Combine/Future/value-5iprp": {
      "abstract": [
        {
          "text": "The published value of the future or an error, delivered asynchronously.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Failure",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Error",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Output"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/Future/value-5iprp",
      "kind": "symbol",
      "role": "symbol",
      "title": "value",
      "type": "topic",
      "url": "/documentation/combine/future/value-5iprp"
    },
    "doc://com.apple.Combine/documentation/Combine/Future/value-9iwjz": {
      "abstract": [
        {
          "text": "The published value of the future, delivered asynchronously.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Failure",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Never",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Output"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/Future/value-9iwjz",
      "kind": "symbol",
      "role": "symbol",
      "title": "value",
      "type": "topic",
      "url": "/documentation/combine/future/value-9iwjz"
    },
    "doc://com.apple.Combine/documentation/Combine/Just": {
      "abstract": [
        {
          "text": "A publisher that emits an output to each subscriber just once, and then finishes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Just"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/Just",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Just"
        }
      ],
      "role": "symbol",
      "title": "Just",
      "type": "topic",
      "url": "/documentation/combine/just"
    },
    "doc://com.apple.Combine/documentation/Combine/Publisher": {
      "abstract": [
        {
          "text": "Declares that a type can transmit a sequence of values over time.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Publisher"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/Publisher",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Publisher"
        }
      ],
      "role": "symbol",
      "title": "Publisher",
      "type": "topic",
      "url": "/documentation/combine/publisher"
    },
    "doc://com.apple.Combine/documentation/Combine/Record": {
      "abstract": [
        {
          "text": "A publisher that allows for recording a series of inputs and a completion, for later playback to each subscriber.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Record"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/Record",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Record"
        }
      ],
      "role": "symbol",
      "title": "Record",
      "type": "topic",
      "url": "/documentation/combine/record"
    },
    "doc://com.apple.Combine/documentation/Combine/Subscribers/Sink": {
      "abstract": [
        {
          "text": "A simple subscriber that requests an unlimited number of values upon subscription.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sink"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/Subscribers/Sink",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sink"
        }
      ],
      "role": "symbol",
      "title": "Subscribers.Sink",
      "type": "topic",
      "url": "/documentation/combine/subscribers/sink"
    },
    "doc://com.apple.Combine/documentation/Combine/using-combine-for-your-app-s-asynchronous-code": {
      "abstract": [
        {
          "text": "Apply common patterns to migrate your closure-based, event-handling code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/using-combine-for-your-app-s-asynchronous-code",
      "kind": "article",
      "role": "article",
      "title": "Using Combine for Your Appâ€™s Asynchronous Code",
      "type": "topic",
      "url": "/documentation/combine/using-combine-for-your-app-s-asynchronous-code"
    },
    "doc://com.apple.documentation/documentation/Swift/Result": {
      "abstract": [
        {
          "text": "A value that represents either a success or a failure, including an associated value in each case.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Success"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Failure"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Failure"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Success"
        },
        {
          "kind": "text",
          "text": " : ~Copyable"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/Result",
      "kind": "symbol",
      "role": "symbol",
      "title": "Result",
      "type": "topic",
      "url": "/documentation/Swift/Result"
    },
    "doc://com.apple.documentation/documentation/Swift/concurrency": {
      "abstract": [
        {
          "text": "Perform asynchronous and parallel operations.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/concurrency",
      "kind": "article",
      "role": "article",
      "title": "Concurrency",
      "type": "topic",
      "url": "/documentation/Swift/concurrency"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:s5ErrorP": {
      "abstract": [
        {
          "text": "A type representing an error value that can be thrown.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s8SendableP",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s5ErrorP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Error",
      "type": "topic",
      "url": "/documentation/Swift/Error"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Combine/documentation/Combine/Publisher"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Convenience-Publishers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Combine/documentation/Combine/Just",
        "doc://com.apple.Combine/documentation/Combine/Deferred",
        "doc://com.apple.Combine/documentation/Combine/Empty",
        "doc://com.apple.Combine/documentation/Combine/Fail",
        "doc://com.apple.Combine/documentation/Combine/Record"
      ],
      "title": "Convenience Publishers"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-Future",
      "identifiers": [
        "doc://com.apple.Combine/documentation/Combine/Future/init(_:)",
        "doc://com.apple.Combine/documentation/Combine/Future/Promise"
      ],
      "title": "Creating a Future"
    },
    {
      "anchor": "Accessing-the-Value-Asynchronously",
      "identifiers": [
        "doc://com.apple.Combine/documentation/Combine/Future/value-9iwjz",
        "doc://com.apple.Combine/documentation/Combine/Future/value-5iprp"
      ],
      "title": "Accessing the Value Asynchronously"
    },
    {
      "anchor": "Applying-Operators",
      "identifiers": [
        "doc://com.apple.Combine/documentation/Combine/Future-Publisher-Operators"
      ],
      "title": "Applying Operators"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Combine/documentation/Combine/Future/Publisher-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/combine/future"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
