{
  "abstract": [
    {
      "text": "Creates an asynchronous sequence that maps an error-throwing closure over",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "the base sequence’s elements, omitting results that don’t return a value.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Combine/documentation/Combine",
        "doc://com.apple.Combine/documentation/Combine/AsyncPublisher"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Combine/documentation/Combine/AsyncPublisher/compactMap(_:)-84zwc"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Swift",
    "externalID": "s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:7Combine14AsyncPublisherV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "compactMap"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "ElementOfResult"
      },
      {
        "kind": "text",
        "text": ">(("
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sci7ElementQa",
        "text": "Element"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "async"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "ElementOfResult"
      },
      {
        "kind": "text",
        "text": "?) -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:12_Concurrency31AsyncThrowingCompactMapSequenceV",
        "text": "AsyncThrowingCompactMapSequence"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "typeIdentifier",
        "text": "ElementOfResult"
      },
      {
        "kind": "text",
        "text": ">"
      }
    ],
    "modules": [
      {
        "name": "Combine",
        "relatedModules": [
          "Swift"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "compactMap(_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@preconcurrency"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "compactMap"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "ElementOfResult"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "transform"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "@escaping"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sci7ElementQa",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sci7ElementQa",
              "text": "Element"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "ElementOfResult"
            },
            {
              "kind": "text",
              "text": "?) -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:12_Concurrency31AsyncThrowingCompactMapSequenceV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:12_Concurrency31AsyncThrowingCompactMapSequenceV",
              "text": "AsyncThrowingCompactMapSequence"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "ElementOfResult"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "An error-throwing mapping closure. ",
                  "type": "text"
                },
                {
                  "code": "transform",
                  "type": "codeVoice"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "accepts an element of this sequence as its parameter and returns a",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "transformed value of the same or of a different type. If ",
                  "type": "text"
                },
                {
                  "code": "transform",
                  "type": "codeVoice"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "throws an error, the sequence ends.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "transform"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "An asynchronous sequence that contains, in order, the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "non-",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " elements produced by the ",
              "type": "text"
            },
            {
              "code": "transform",
              "type": "codeVoice"
            },
            {
              "text": " closure. The sequence",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "ends either when the base sequence ends or when ",
              "type": "text"
            },
            {
              "code": "transform",
              "type": "codeVoice"
            },
            {
              "text": " throws an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "error.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "code": "compactMap(_:)",
              "type": "codeVoice"
            },
            {
              "text": " method to transform every element received from",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a base asynchronous sequence, while also discarding any ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " results",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "from the closure. Typically, you use this to transform from one type of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "element to another.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In this example, an asynchronous sequence called ",
              "type": "text"
            },
            {
              "code": "Counter",
              "type": "codeVoice"
            },
            {
              "text": " produces ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "values from ",
              "type": "text"
            },
            {
              "code": "1",
              "type": "codeVoice"
            },
            {
              "text": " to ",
              "type": "text"
            },
            {
              "code": "5",
              "type": "codeVoice"
            },
            {
              "text": ". The closure provided to the ",
              "type": "text"
            },
            {
              "code": "compactMap(_:)",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method takes each ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": " and looks up a corresponding ",
              "type": "text"
            },
            {
              "code": "String",
              "type": "codeVoice"
            },
            {
              "text": " from a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "romanNumeralDict",
              "type": "codeVoice"
            },
            {
              "text": " dictionary. Since there is no key for ",
              "type": "text"
            },
            {
              "code": "4",
              "type": "codeVoice"
            },
            {
              "text": ", the closure",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "returns ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " in this case, which ",
              "type": "text"
            },
            {
              "code": "compactMap(_:)",
              "type": "codeVoice"
            },
            {
              "text": " omits from the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "transformed asynchronous sequence. When the value is ",
              "type": "text"
            },
            {
              "code": "5",
              "type": "codeVoice"
            },
            {
              "text": ", the closure",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "throws ",
              "type": "text"
            },
            {
              "code": "MyError",
              "type": "codeVoice"
            },
            {
              "text": ", terminating the sequence.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let romanNumeralDict: [Int: String] =",
            "    [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]",
            "",
            "do {",
            "    let stream = Counter(howHigh: 5)",
            "        .compactMap { (value) throws -> String? in",
            "            if value == 5 {",
            "                throw MyError()",
            "            }",
            "            return romanNumeralDict[value]",
            "        }",
            "    for try await numeral in stream {",
            "        print(numeral, terminator: \" \")",
            "    }",
            "} catch {",
            "    print(\"Error: \\(error)\")",
            "}",
            "// Prints \"I II III Error: MyError() \""
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Combine-PageImage-card.png": {
      "alt": "The Swift language logo, overlaid by a graph of interconnected lines and points.",
      "identifier": "Combine-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/ba2aa5f2e9d9ae5b196c642a6cf121dd/Combine-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/8df9b2bdcd94118827dd29f28f3915d7/Combine-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Combine/documentation/Combine": {
      "abstract": [
        {
          "text": "Customize handling of asynchronous events by combining event-processing operators.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine",
      "images": [
        {
          "identifier": "Combine-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Combine",
      "type": "topic",
      "url": "/documentation/combine"
    },
    "doc://com.apple.Combine/documentation/Combine/AsyncPublisher": {
      "abstract": [
        {
          "text": "A publisher that exposes its elements as an asynchronous sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AsyncPublisher"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/AsyncPublisher",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AsyncPublisher"
        }
      ],
      "role": "symbol",
      "title": "AsyncPublisher",
      "type": "topic",
      "url": "/documentation/combine/asyncpublisher"
    },
    "doc://com.apple.Combine/documentation/Combine/AsyncPublisher/compactMap(_:)-84zwc": {
      "abstract": [
        {
          "text": "Creates an asynchronous sequence that maps an error-throwing closure over",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the base sequence’s elements, omitting results that don’t return a value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "compactMap"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sci7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12_Concurrency31AsyncThrowingCompactMapSequenceV",
          "text": "AsyncThrowingCompactMapSequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Combine/documentation/Combine/AsyncPublisher/compactMap(_:)-84zwc",
      "kind": "symbol",
      "role": "symbol",
      "title": "compactMap(_:)",
      "type": "topic",
      "url": "/documentation/combine/asyncpublisher/compactmap(_:)-84zwc"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:12_Concurrency31AsyncThrowingCompactMapSequenceV": {
      "abstract": [
        {
          "text": "An asynchronous sequence that maps an error-throwing closure over the base sequence’s elements, omitting results that don’t return a value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AsyncThrowingCompactMapSequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Base"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Base"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sci",
          "text": "AsyncSequence"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:12_Concurrency31AsyncThrowingCompactMapSequenceV",
      "kind": "symbol",
      "role": "symbol",
      "title": "AsyncThrowingCompactMapSequence",
      "type": "topic",
      "url": "/documentation/Swift/AsyncThrowingCompactMapSequence"
    },
    "doc://com.externally.resolved.symbol/s:Sci7ElementQa": {
      "abstract": [
        {
          "text": "The type of element produced by this asynchronous sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sci7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": " == "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sci13AsyncIteratorQa",
          "text": "AsyncIterator"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScI7ElementQa",
          "text": "Element"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Sci7ElementQa",
      "kind": "symbol",
      "role": "symbol",
      "title": "Element",
      "type": "topic",
      "url": "/documentation/Swift/AsyncSequence/Element"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/combine/asyncpublisher/compactmap(_:)-84zwc"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
