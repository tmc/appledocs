{
  "abstract": [
    {
      "text": "Events produced by a credential session, such as connectivity events and errors.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "added",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    },
    "minor": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.2",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://SecureElementCredential/documentation/SecureElementCredential",
        "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:23SecureElementCredential0C7SessionC5EventO",
    "fragments": [
      {
        "kind": "keyword",
        "text": "enum"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Event"
      }
    ],
    "modules": [
      {
        "name": "SecureElementCredential"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Event"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.1",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.1",
        "name": "iPadOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Enumeration",
    "symbolKind": "enum",
    "title": "CredentialSession.Event"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "enum"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Event"
            }
          ]
        }
      ],
      "kind": "declarations"
    }
  ],
  "references": {
    "doc://SecureElementCredential/documentation/SecureElementCredential": {
      "abstract": [
        {
          "text": "Allow access to credentials inside the Secure Element on device.",
          "type": "text"
        }
      ],
      "identifier": "doc://SecureElementCredential/documentation/SecureElementCredential",
      "kind": "symbol",
      "role": "collection",
      "title": "SecureElementCredential",
      "type": "topic",
      "url": "/documentation/secureelementcredential"
    },
    "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession": {
      "abstract": [
        {
          "text": "A class for performing actions on a credential stored in the Secure Element.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "actor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CredentialSession"
        }
      ],
      "identifier": "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CredentialSession"
        }
      ],
      "role": "symbol",
      "title": "CredentialSession",
      "type": "topic",
      "url": "/documentation/secureelementcredential/credentialsession"
    },
    "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/ConnectivityEvent": {
      "abstract": [
        {
          "text": "An event that a credential receives during card emulation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ConnectivityEvent"
        }
      ],
      "identifier": "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/ConnectivityEvent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ConnectivityEvent"
        }
      ],
      "role": "symbol",
      "title": "CredentialSession.ConnectivityEvent",
      "type": "topic",
      "url": "/documentation/secureelementcredential/credentialsession/connectivityevent"
    },
    "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Credential": {
      "abstract": [
        {
          "text": "Information about a credential that a credential session retrieves from the Secure Element.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Credential"
        }
      ],
      "identifier": "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Credential",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Credential"
        }
      ],
      "role": "symbol",
      "title": "CredentialSession.Credential",
      "type": "topic",
      "url": "/documentation/secureelementcredential/credentialsession/credential"
    },
    "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/ErrorCode": {
      "abstract": [
        {
          "text": "An error encountered by a credential session.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ErrorCode"
        }
      ],
      "identifier": "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/ErrorCode",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ErrorCode"
        }
      ],
      "role": "symbol",
      "title": "CredentialSession.ErrorCode",
      "type": "topic",
      "url": "/documentation/secureelementcredential/credentialsession/errorcode"
    },
    "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event": {
      "abstract": [
        {
          "text": "Events produced by a credential session, such as connectivity events and errors.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Event"
        }
      ],
      "identifier": "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Event"
        }
      ],
      "role": "symbol",
      "title": "CredentialSession.Event",
      "type": "topic",
      "url": "/documentation/secureelementcredential/credentialsession/event"
    },
    "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/cardEmulationTimeout": {
      "abstract": [
        {
          "text": "The sessionâ€™s card emulation timer expired.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "cardEmulationTimeout"
        }
      ],
      "identifier": "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/cardEmulationTimeout",
      "kind": "symbol",
      "role": "symbol",
      "title": "CredentialSession.Event.cardEmulationTimeout",
      "type": "topic",
      "url": "/documentation/secureelementcredential/credentialsession/event/cardemulationtimeout"
    },
    "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/connectivityEvent(_:)": {
      "abstract": [
        {
          "text": "A credential received a connectivity event during card emulation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "connectivityEvent"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:23SecureElementCredential0C7SessionC",
          "text": "CredentialSession"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:23SecureElementCredential0C7SessionC17ConnectivityEventV",
          "text": "ConnectivityEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/connectivityEvent(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "CredentialSession.Event.connectivityEvent(_:)",
      "type": "topic",
      "url": "/documentation/secureelementcredential/credentialsession/event/connectivityevent(_:)"
    },
    "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/credentialFinishedInstalling(credential:)": {
      "abstract": [
        {
          "text": "The session finished installing a credential.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "credentialFinishedInstalling"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "credential"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:23SecureElementCredential0C7SessionC",
          "text": "CredentialSession"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:23SecureElementCredential0C7SessionC0C0V",
          "text": "Credential"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/credentialFinishedInstalling(credential:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "CredentialSession.Event.credentialFinishedInstalling(credential:)",
      "type": "topic",
      "url": "/documentation/secureelementcredential/credentialsession/event/credentialfinishedinstalling(credential:)"
    },
    "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/fieldStateChanged(info:)": {
      "abstract": [
        {
          "text": "The state of the NFC RF field changed during card emulation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "fieldStateChanged"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "info"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:23SecureElementCredential0C7SessionC",
          "text": "CredentialSession"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:23SecureElementCredential0C7SessionC19NFCFieldInformationO",
          "text": "NFCFieldInformation"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/fieldStateChanged(info:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "CredentialSession.Event.fieldStateChanged(info:)",
      "type": "topic",
      "url": "/documentation/secureelementcredential/credentialsession/event/fieldstatechanged(info:)"
    },
    "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/presentmentIntentAssertionTimeout": {
      "abstract": [
        {
          "text": "The sessionâ€™s presentment intent assertion timed out.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "presentmentIntentAssertionTimeout"
        }
      ],
      "identifier": "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/presentmentIntentAssertionTimeout",
      "kind": "symbol",
      "role": "symbol",
      "title": "CredentialSession.Event.presentmentIntentAssertionTimeout",
      "type": "topic",
      "url": "/documentation/secureelementcredential/credentialsession/event/presentmentintentassertiontimeout"
    },
    "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/sessionInvalidated(reason:)": {
      "abstract": [
        {
          "text": "The session became invalidated.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sessionInvalidated"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "reason"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:23SecureElementCredential0C7SessionC",
          "text": "CredentialSession"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:23SecureElementCredential0C7SessionC9ErrorCodeO",
          "text": "ErrorCode"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/sessionInvalidated(reason:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "CredentialSession.Event.sessionInvalidated(reason:)",
      "type": "topic",
      "url": "/documentation/secureelementcredential/credentialsession/event/sessioninvalidated(reason:)"
    },
    "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/NFCFieldInformation": {
      "abstract": [
        {
          "text": "The state of an NFC RF field.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NFCFieldInformation"
        }
      ],
      "identifier": "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/NFCFieldInformation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NFCFieldInformation"
        }
      ],
      "role": "symbol",
      "title": "CredentialSession.NFCFieldInformation",
      "type": "topic",
      "url": "/documentation/secureelementcredential/credentialsession/nfcfieldinformation"
    },
    "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/eventStream": {
      "abstract": [
        {
          "text": "An asynchronous stream of session events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "eventStream"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScS",
          "text": "AsyncStream"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:23SecureElementCredential0C7SessionC",
          "text": "CredentialSession"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:23SecureElementCredential0C7SessionC5EventO",
          "text": "Event"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/eventStream",
      "kind": "symbol",
      "role": "symbol",
      "title": "eventStream",
      "type": "topic",
      "url": "/documentation/secureelementcredential/credentialsession/eventstream"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s8SendableP"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Handling-session-events",
      "generated": true,
      "identifiers": [
        "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/eventStream"
      ],
      "title": "Handling session events"
    }
  ],
  "topicSections": [
    {
      "anchor": "Credential-events",
      "identifiers": [
        "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/credentialFinishedInstalling(credential:)",
        "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Credential"
      ],
      "title": "Credential events"
    },
    {
      "anchor": "Card-emulation-events",
      "identifiers": [
        "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/connectivityEvent(_:)",
        "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/ConnectivityEvent"
      ],
      "title": "Card emulation events"
    },
    {
      "anchor": "NFC-field-events",
      "identifiers": [
        "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/fieldStateChanged(info:)",
        "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/NFCFieldInformation"
      ],
      "title": "NFC field events"
    },
    {
      "anchor": "Invalidation-events",
      "identifiers": [
        "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/sessionInvalidated(reason:)",
        "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/ErrorCode"
      ],
      "title": "Invalidation events"
    },
    {
      "anchor": "Timeout-events",
      "identifiers": [
        "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/cardEmulationTimeout",
        "doc://SecureElementCredential/documentation/SecureElementCredential/CredentialSession/Event/presentmentIntentAssertionTimeout"
      ],
      "title": "Timeout events"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/secureelementcredential/credentialsession/event"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
