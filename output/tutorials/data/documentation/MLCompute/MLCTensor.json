{
  "abstract": [
    {
      "text": "The data object you use throughout the framework.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.mlcompute/documentation/MLCompute"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(cs)MLCTensor",
    "fragments": [
      {
        "kind": "keyword",
        "text": "class"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "MLCTensor"
      }
    ],
    "modules": [
      {
        "name": "ML Compute"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "MLCTensor"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "deprecatedAt": "17.4",
        "introducedAt": "14.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "deprecatedAt": "17.4",
        "introducedAt": "14.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "deprecatedAt": "17.4",
        "introducedAt": "14.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "deprecatedAt": "14.3",
        "introducedAt": "11.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "deprecatedAt": "17.4",
        "introducedAt": "14.0",
        "name": "tvOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Class",
    "symbolKind": "class",
    "title": "MLCTensor"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "class"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MLCTensor"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Create a tensor with or without data. For example, create a tensor with data for weights used by convolution or mean, variance, beta, and gamma parameters with batch normalization. Create a tensor without data to use as an input tensor when you build a graph.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute": {
      "abstract": [
        {
          "text": "Accelerate training and validation of neural networks across the CPU and one or more GPUs.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute",
      "kind": "symbol",
      "role": "collection",
      "title": "ML Compute",
      "type": "topic",
      "url": "/documentation/mlcompute"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCDataType": {
      "abstract": [
        {
          "text": "A tensor data type.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MLCDataType"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCDataType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MLCDataType"
        }
      ],
      "role": "symbol",
      "title": "MLCDataType",
      "type": "topic",
      "url": "/documentation/mlcompute/mlcdatatype"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCPlatform": {
      "abstract": [
        {
          "text": "A utility class for setting global properties in the framework.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MLCPlatform"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCPlatform",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MLCPlatform"
        }
      ],
      "role": "symbol",
      "title": "MLCPlatform",
      "type": "topic",
      "url": "/documentation/mlcompute/mlcplatform"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCRandomInitializerType": {
      "abstract": [
        {
          "text": "An initializer type you use to create a tensor with random data.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MLCRandomInitializerType"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCRandomInitializerType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MLCRandomInitializerType"
        }
      ],
      "role": "symbol",
      "title": "MLCRandomInitializerType",
      "type": "topic",
      "url": "/documentation/mlcompute/mlcrandominitializertype"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor": {
      "abstract": [
        {
          "text": "The data object you use throughout the framework.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MLCTensor"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MLCTensor"
        }
      ],
      "role": "symbol",
      "title": "MLCTensor",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/bindAndWriteData(_:to:)": {
      "abstract": [
        {
          "text": "Associates the given data to the tensor, and if the device is a GPU, also copies the data to the device memory.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bindAndWriteData"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorData",
          "text": "MLCTensorData"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCDevice",
          "text": "MLCDevice"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/bindAndWriteData(_:to:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "bindAndWriteData:toDevice:"
        }
      ],
      "role": "symbol",
      "title": "bindAndWriteData(_:to:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/bindandwritedata(_:to:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/bindOptimizerData(_:deviceData:)": {
      "abstract": [
        {
          "text": "Associates the optimizer and device data buffers you specify to the tensor.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bindOptimizerData"
        },
        {
          "kind": "text",
          "text": "(["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorData",
          "text": "MLCTensorData"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "deviceData"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorOptimizerDeviceData",
          "text": "MLCTensorOptimizerDeviceData"
        },
        {
          "kind": "text",
          "text": "]?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/bindOptimizerData(_:deviceData:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "bindOptimizerData:deviceData:"
        }
      ],
      "role": "symbol",
      "title": "bindOptimizerData(_:deviceData:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/bindoptimizerdata(_:devicedata:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/copyDataFromDeviceMemory(toBytes:length:synchronizeWithDevice:)": {
      "abstract": [
        {
          "text": "Copies tensor data from device memory to user-specified memory.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "copyDataFromDeviceMemory"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "toBytes"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sv",
          "text": "UnsafeMutableRawPointer"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "length"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "synchronizeWithDevice"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/copyDataFromDeviceMemory(toBytes:length:synchronizeWithDevice:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "copyDataFromDeviceMemoryToBytes:length:synchronizeWithDevice:"
        }
      ],
      "role": "symbol",
      "title": "copyDataFromDeviceMemory(toBytes:length:synchronizeWithDevice:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/copydatafromdevicememory(tobytes:length:synchronizewithdevice:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/data": {
      "abstract": [
        {
          "text": "The tensor data.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "data"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DataV",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/data",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "data"
        }
      ],
      "role": "symbol",
      "title": "data",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/data"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/dequantized(to:scale:bias:axis:)": {
      "abstract": [
        {
          "text": "Converts a tensor you quantize to a 32-bit floating-point tensor.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dequantized"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MLCDataType",
          "text": "MLCDataType"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "scale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensor",
          "text": "MLCTensor"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "bias"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensor",
          "text": "MLCTensor"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "axis"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensor",
          "text": "MLCTensor"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/dequantized(to:scale:bias:axis:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorByDequantizingToType:scale:bias:axis:"
        }
      ],
      "role": "symbol",
      "title": "dequantized(to:scale:bias:axis:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/dequantized(to:scale:bias:axis:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/dequantized(to:scale:zeroPoint:)": {
      "abstract": [
        {
          "text": "Converts a tensor you quantize to a 32-bit floating-point tensor.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dequantized"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MLCDataType",
          "text": "MLCDataType"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "scale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensor",
          "text": "MLCTensor"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "zeroPoint"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensor",
          "text": "MLCTensor"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensor",
          "text": "MLCTensor"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/dequantized(to:scale:zeroPoint:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorByDequantizingToType:scale:bias:"
        }
      ],
      "role": "symbol",
      "title": "dequantized(to:scale:zeroPoint:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/dequantized(to:scale:zeropoint:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/descriptor": {
      "abstract": [
        {
          "text": "The configuration object you use to create a tensor.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "descriptor"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorDescriptor",
          "text": "MLCTensorDescriptor"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/descriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "descriptor"
        }
      ],
      "role": "symbol",
      "title": "descriptor",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/descriptor"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/device": {
      "abstract": [
        {
          "text": "The device associated with this tensor.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "device"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCDevice",
          "text": "MLCDevice"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/device",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "device"
        }
      ],
      "role": "symbol",
      "title": "device",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/device"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/hasValidNumerics": {
      "abstract": [
        {
          "text": "A Boolean that indicates whether a tensor contains NaN or INF values.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hasValidNumerics"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/hasValidNumerics",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "hasValidNumerics"
        }
      ],
      "role": "symbol",
      "title": "hasValidNumerics",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/hasvalidnumerics"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:)": {
      "abstract": [
        {
          "text": "Creates a tensor without data, using the descriptor you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "descriptor"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorDescriptor",
          "text": "MLCTensorDescriptor"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithDescriptor:"
        }
      ],
      "role": "symbol",
      "title": "init(descriptor:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(descriptor:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:data:)": {
      "abstract": [
        {
          "text": "Creates a tensor with the descriptor and data you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "descriptor"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorDescriptor",
          "text": "MLCTensorDescriptor"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "data"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorData",
          "text": "MLCTensorData"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:data:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithDescriptor:data:"
        }
      ],
      "role": "symbol",
      "title": "init(descriptor:data:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(descriptor:data:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:fillWithData:)": {
      "abstract": [
        {
          "text": "Creates a tensor with the descriptor and scalar value you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "descriptor"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorDescriptor",
          "text": "MLCTensorDescriptor"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "fillWithData"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSNumber",
          "text": "NSNumber"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:fillWithData:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithDescriptor:fillWithData:"
        }
      ],
      "role": "symbol",
      "title": "init(descriptor:fillWithData:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(descriptor:fillwithdata:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:randomInitializerType:)": {
      "abstract": [
        {
          "text": "Creates a tensor with the descriptor and random initializer type you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "descriptor"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorDescriptor",
          "text": "MLCTensorDescriptor"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "randomInitializerType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MLCRandomInitializerType",
          "text": "MLCRandomInitializerType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:randomInitializerType:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithDescriptor:randomInitializerType:"
        }
      ],
      "role": "symbol",
      "title": "init(descriptor:randomInitializerType:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(descriptor:randominitializertype:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLength:featureChannelCount:batchSize:)": {
      "abstract": [
        {
          "text": "Creates a tensor without data, with the sequence length, number of feature channels, and batch size you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "sequenceLength"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "featureChannelCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "batchSize"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLength:featureChannelCount:batchSize:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithSequenceLength:featureChannelCount:batchSize:"
        }
      ],
      "role": "symbol",
      "title": "init(sequenceLength:featureChannelCount:batchSize:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(sequencelength:featurechannelcount:batchsize:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLength:featureChannelCount:batchSize:data:)": {
      "abstract": [
        {
          "text": "Creates a tensor with the sequence length, number of feature channels, batch size, and data you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "sequenceLength"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "featureChannelCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "batchSize"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "data"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorData",
          "text": "MLCTensorData"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLength:featureChannelCount:batchSize:data:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithSequenceLength:featureChannelCount:batchSize:data:"
        }
      ],
      "role": "symbol",
      "title": "init(sequenceLength:featureChannelCount:batchSize:data:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(sequencelength:featurechannelcount:batchsize:data:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLength:featureChannelCount:batchSize:randomInitializerType:)": {
      "abstract": [
        {
          "text": "Creates a tensor with the sequence length, number of feature channels, batch size, and random initializer type you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "sequenceLength"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "featureChannelCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "batchSize"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "randomInitializerType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MLCRandomInitializerType",
          "text": "MLCRandomInitializerType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLength:featureChannelCount:batchSize:randomInitializerType:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithSequenceLength:featureChannelCount:batchSize:randomInitializerType:"
        }
      ],
      "role": "symbol",
      "title": "init(sequenceLength:featureChannelCount:batchSize:randomInitializerType:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(sequencelength:featurechannelcount:batchsize:randominitializertype:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLengths:sortedSequences:featureChannelCount:batchSize:data:)": {
      "abstract": [
        {
          "text": "Creates a tensor with the sequence lengths, sorting indicator, number of feature channels, batch size, and data you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "sequenceLengths"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "sortedSequences"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "featureChannelCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "batchSize"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "data"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorData",
          "text": "MLCTensorData"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLengths:sortedSequences:featureChannelCount:batchSize:data:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(sequenceLengths:sortedSequences:featureChannelCount:batchSize:data:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(sequencelengths:sortedsequences:featurechannelcount:batchsize:data:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLengths:sortedSequences:featureChannelCount:batchSize:randomInitializerType:)": {
      "abstract": [
        {
          "text": "Creates a tensor with the sequence lengths, sorting indicator, number of feature channels, batch size, and random initializer type you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "sequenceLengths"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "sortedSequences"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "featureChannelCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "batchSize"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "randomInitializerType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MLCRandomInitializerType",
          "text": "MLCRandomInitializerType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLengths:sortedSequences:featureChannelCount:batchSize:randomInitializerType:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(sequenceLengths:sortedSequences:featureChannelCount:batchSize:randomInitializerType:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(sequencelengths:sortedsequences:featurechannelcount:batchsize:randominitializertype:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(shape:)": {
      "abstract": [
        {
          "text": "Creates a tensor without data, with the shape you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "shape"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(shape:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(shape:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(shape:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(shape:data:dataType:)": {
      "abstract": [
        {
          "text": "Creates a tensor with the shape, data, and data type you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "shape"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "data"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorData",
          "text": "MLCTensorData"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "dataType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MLCDataType",
          "text": "MLCDataType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(shape:data:dataType:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(shape:data:dataType:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(shape:data:datatype:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(shape:dataType:)": {
      "abstract": [
        {
          "text": "Creates a tensor without data, with the shape and data type you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "shape"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "dataType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MLCDataType",
          "text": "MLCDataType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(shape:dataType:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(shape:dataType:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(shape:datatype:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(shape:fillWithData:dataType:)": {
      "abstract": [
        {
          "text": "Creates a tensor with the shape, scalar value, and data type you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "shape"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "fillWithData"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSNumber",
          "text": "NSNumber"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "dataType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MLCDataType",
          "text": "MLCDataType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(shape:fillWithData:dataType:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(shape:fillWithData:dataType:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(shape:fillwithdata:datatype:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(shape:randomInitializerType:)": {
      "abstract": [
        {
          "text": "Creates a tensor with the shape and random initializer type you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "shape"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "randomInitializerType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MLCRandomInitializerType",
          "text": "MLCRandomInitializerType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(shape:randomInitializerType:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(shape:randomInitializerType:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(shape:randominitializertype:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:)": {
      "abstract": [
        {
          "text": "Creates a tensor without data, with the sizes and number of feature channels you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "width"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "height"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "featureChannelCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "batchSize"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithWidth:height:featureChannelCount:batchSize:"
        }
      ],
      "role": "symbol",
      "title": "init(width:height:featureChannelCount:batchSize:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(width:height:featurechannelcount:batchsize:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:data:)": {
      "abstract": [
        {
          "text": "Creates a tensor with the sizes, number of feature channels, and data you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "width"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "height"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "featureChannelCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "batchSize"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "data"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorData",
          "text": "MLCTensorData"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:data:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithWidth:height:featureChannelCount:batchSize:data:"
        }
      ],
      "role": "symbol",
      "title": "init(width:height:featureChannelCount:batchSize:data:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(width:height:featurechannelcount:batchsize:data:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:data:dataType:)": {
      "abstract": [
        {
          "text": "Creates a tensor with the sizes, number of feature channels, data, and data type you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "width"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "height"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "featureChannelCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "batchSize"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "data"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorData",
          "text": "MLCTensorData"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "dataType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MLCDataType",
          "text": "MLCDataType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:data:dataType:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithWidth:height:featureChannelCount:batchSize:data:dataType:"
        }
      ],
      "role": "symbol",
      "title": "init(width:height:featureChannelCount:batchSize:data:dataType:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(width:height:featurechannelcount:batchsize:data:datatype:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:fillWithData:dataType:)": {
      "abstract": [
        {
          "text": "Creates a tensor with the sizes and number of feature channels, and filled with the data and type you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "width"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "height"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "featureChannelCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "batchSize"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "fillWithData"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sf",
          "text": "Float"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "dataType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MLCDataType",
          "text": "MLCDataType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:fillWithData:dataType:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithWidth:height:featureChannelCount:batchSize:fillWithData:dataType:"
        }
      ],
      "role": "symbol",
      "title": "init(width:height:featureChannelCount:batchSize:fillWithData:dataType:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(width:height:featurechannelcount:batchsize:fillwithdata:datatype:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:randomInitializerType:)": {
      "abstract": [
        {
          "text": "Creates a tensor with the sizes, number of feature channels, and random data using the random initializer type you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "width"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "height"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "featureChannelCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "batchSize"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "randomInitializerType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MLCRandomInitializerType",
          "text": "MLCRandomInitializerType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:randomInitializerType:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithWidth:height:featureChannelCount:batchSize:randomInitializerType:"
        }
      ],
      "role": "symbol",
      "title": "init(width:height:featureChannelCount:batchSize:randomInitializerType:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/init(width:height:featurechannelcount:batchsize:randominitializertype:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/label": {
      "abstract": [
        {
          "text": "A string that identifes this tensor.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/label",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "label"
        }
      ],
      "role": "symbol",
      "title": "label",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/label"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/optimizerData": {
      "abstract": [
        {
          "text": "An array that contains optimizer buffers you specify when you create a tensor parameter.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "optimizerData"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorData",
          "text": "MLCTensorData"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/optimizerData",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "optimizerData"
        }
      ],
      "role": "symbol",
      "title": "optimizerData",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/optimizerdata"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/optimizerDeviceData": {
      "abstract": [
        {
          "text": "An array that contains the device optimizer buffers you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "optimizerDeviceData"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensorOptimizerDeviceData",
          "text": "MLCTensorOptimizerDeviceData"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/optimizerDeviceData",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "optimizerDeviceData"
        }
      ],
      "role": "symbol",
      "title": "optimizerDeviceData",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/optimizerdevicedata"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/quantized(to:scale:bias:)": {
      "abstract": [
        {
          "text": "Converts a 32-bit floating-point tensor with the scale and bias you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "quantized"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MLCDataType",
          "text": "MLCDataType"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "scale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sf",
          "text": "Float"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "bias"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensor",
          "text": "MLCTensor"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/quantized(to:scale:bias:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorByQuantizingToType:scale:bias:"
        }
      ],
      "role": "symbol",
      "title": "quantized(to:scale:bias:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/quantized(to:scale:bias:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/quantized(to:scale:bias:axis:)": {
      "abstract": [
        {
          "text": "Converts a 32-bit floating-point tensor with the scale and bias you specify.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "quantized"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MLCDataType",
          "text": "MLCDataType"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "scale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensor",
          "text": "MLCTensor"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "bias"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensor",
          "text": "MLCTensor"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "axis"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MLCTensor",
          "text": "MLCTensor"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/quantized(to:scale:bias:axis:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorByQuantizingToType:scale:bias:axis:"
        }
      ],
      "role": "symbol",
      "title": "quantized(to:scale:bias:axis:)",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/quantized(to:scale:bias:axis:)"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/synchronizeData()": {
      "abstract": [
        {
          "text": "Synchronizes the data in host memory.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "synchronizeData"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/synchronizeData()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "synchronizeData"
        }
      ],
      "role": "symbol",
      "title": "synchronizeData()",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/synchronizedata()"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/synchronizeOptimizerData()": {
      "abstract": [
        {
          "text": "Synchronizes the optimizer data in host memory.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "synchronizeOptimizerData"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/synchronizeOptimizerData()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "synchronizeOptimizerData"
        }
      ],
      "role": "symbol",
      "title": "synchronizeOptimizerData()",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/synchronizeoptimizerdata()"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorID": {
      "abstract": [
        {
          "text": "A number that uniquely identifies the tensor, which the framework assigns when it creates a tensor.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "tensorID"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorID",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorID"
        }
      ],
      "role": "symbol",
      "title": "tensorID",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/tensorid"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:data:": {
      "abstract": [
        {
          "text": "Creates a tensor with the sequence lengths, sorting indicator, number of feature channels, batch size, and data you specify.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "+ "
        },
        {
          "kind": "identifier",
          "text": "tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:data:"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:data:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:data:"
        }
      ],
      "role": "symbol",
      "title": "tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:data:",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/tensorwithsequencelengths:sortedsequences:featurechannelcount:batchsize:data:"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:randomInitializerType:": {
      "abstract": [
        {
          "text": "Creates a tensor with the sequence lengths, sorting indicator, number of feature channels, batch size, and random initializer type you specify.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "+ "
        },
        {
          "kind": "identifier",
          "text": "tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:randomInitializerType:"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:randomInitializerType:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:randomInitializerType:"
        }
      ],
      "role": "symbol",
      "title": "tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:randomInitializerType:",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/tensorwithsequencelengths:sortedsequences:featurechannelcount:batchsize:randominitializertype:"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:": {
      "abstract": [
        {
          "text": "Creates a tensor without data, with the shape you specify.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "+ "
        },
        {
          "kind": "identifier",
          "text": "tensorWithShape:"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithShape:"
        }
      ],
      "role": "symbol",
      "title": "tensorWithShape:",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/tensorwithshape:"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:data:dataType:": {
      "abstract": [
        {
          "text": "Creates a tensor with the shape, data, and data type you specify.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "+ "
        },
        {
          "kind": "identifier",
          "text": "tensorWithShape:data:dataType:"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:data:dataType:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithShape:data:dataType:"
        }
      ],
      "role": "symbol",
      "title": "tensorWithShape:data:dataType:",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/tensorwithshape:data:datatype:"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:dataType:": {
      "abstract": [
        {
          "text": "Creates a tensor without data, with the shape and data type you specify.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "+ "
        },
        {
          "kind": "identifier",
          "text": "tensorWithShape:dataType:"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:dataType:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithShape:dataType:"
        }
      ],
      "role": "symbol",
      "title": "tensorWithShape:dataType:",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/tensorwithshape:datatype:"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:fillWithData:dataType:": {
      "abstract": [
        {
          "text": "Creates a tensor with the shape, scalar value, and data type you specify.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "+ "
        },
        {
          "kind": "identifier",
          "text": "tensorWithShape:fillWithData:dataType:"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:fillWithData:dataType:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithShape:fillWithData:dataType:"
        }
      ],
      "role": "symbol",
      "title": "tensorWithShape:fillWithData:dataType:",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/tensorwithshape:fillwithdata:datatype:"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:randomInitializerType:": {
      "abstract": [
        {
          "text": "Creates a tensor with the shape and random initializer type you specify.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "+ "
        },
        {
          "kind": "identifier",
          "text": "tensorWithShape:randomInitializerType:"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:randomInitializerType:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithShape:randomInitializerType:"
        }
      ],
      "role": "symbol",
      "title": "tensorWithShape:randomInitializerType:",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/tensorwithshape:randominitializertype:"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:randomInitializerType:dataType:": {
      "abstract": [
        {
          "text": "Creates a tensor with the shape, random initializer, and data type you specify.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "+ "
        },
        {
          "kind": "identifier",
          "text": "tensorWithShape:randomInitializerType:dataType:"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:randomInitializerType:dataType:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tensorWithShape:randomInitializerType:dataType:"
        }
      ],
      "role": "symbol",
      "title": "tensorWithShape:randomInitializerType:dataType:",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensor/tensorwithshape:randominitializertype:datatype:"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensorData": {
      "abstract": [
        {
          "text": "An encapsulation of the memory that tensor data uses.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MLCTensorData"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensorData",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MLCTensorData"
        }
      ],
      "role": "symbol",
      "title": "MLCTensorData",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensordata"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensorDescriptor": {
      "abstract": [
        {
          "text": "A configuration object you use to create a tensor.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MLCTensorDescriptor"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensorDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MLCTensorDescriptor"
        }
      ],
      "role": "symbol",
      "title": "MLCTensorDescriptor",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensordescriptor"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensorOptimizerDeviceData": {
      "abstract": [
        {
          "text": "An encapsulation of the device memory associated with a tensor that an optimizer uses.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MLCTensorOptimizerDeviceData"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensorOptimizerDeviceData",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MLCTensorOptimizerDeviceData"
        }
      ],
      "role": "symbol",
      "title": "MLCTensorOptimizerDeviceData",
      "type": "topic",
      "url": "/documentation/mlcompute/mlctensoroptimizerdevicedata"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/layers": {
      "abstract": [
        {
          "text": "Create and inspect layers that encapsulate operations and configuration details to receive, process, and output tensors.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/layers",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Layers",
      "type": "topic",
      "url": "/documentation/mlcompute/layers"
    },
    "doc://com.apple.mlcompute/documentation/MLCompute/training-and-validation": {
      "abstract": [
        {
          "text": "Create, train, and validate a graph to produce acceptable prediction results.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.mlcompute/documentation/MLCompute/training-and-validation",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Training and Validation",
      "type": "topic",
      "url": "/documentation/mlcompute/training-and-validation"
    },
    "doc://com.externally.resolved.symbol/c:objc(cs)NSObject": {
      "abstract": [
        {
          "text": "The root class of most Objective-C class hierarchies, from which subclasses inherit a basic interface to the runtime system and the ability to behave as Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSObject"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObject",
      "type": "topic",
      "url": "/documentation/objectivec/nsobject"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSCopying": {
      "abstract": [
        {
          "text": "A protocol that objects adopt to provide functional copies of themselves.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSCopying"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSCopying",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSCopying",
      "type": "topic",
      "url": "/documentation/foundation/nscopying"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSObject": {
      "abstract": [
        {
          "text": "The group of methods that are fundamental to all Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObjectProtocol",
      "type": "topic",
      "url": "/documentation/objectivec/nsobjectprotocol"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomDebugStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s7CVarArgP": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as elements of a C `va_list`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s7CVarArgP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/Swift/CVarArg"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    },
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s7CVarArgP",
        "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSCopying",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSObject"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Components",
      "generated": true,
      "identifiers": [
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCPlatform",
        "doc://com.apple.mlcompute/documentation/MLCompute/layers",
        "doc://com.apple.mlcompute/documentation/MLCompute/training-and-validation"
      ],
      "title": "Components"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-Tensors-with-Descriptors",
      "identifiers": [
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:data:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:fillWithData:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:randomInitializerType:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensorDescriptor",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCDataType",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensorData",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCRandomInitializerType"
      ],
      "title": "Creating Tensors with Descriptors"
    },
    {
      "anchor": "Creating-Tensors-by-Specifying-Shape",
      "identifiers": [
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(shape:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(shape:dataType:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(shape:data:dataType:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(shape:fillWithData:dataType:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(shape:randomInitializerType:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:data:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:data:dataType:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:fillWithData:dataType:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:randomInitializerType:)"
      ],
      "title": "Creating Tensors by Specifying Shape"
    },
    {
      "anchor": "Creating-Tensors-by-Specifying-Sequence-Lengths",
      "identifiers": [
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLength:featureChannelCount:batchSize:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLength:featureChannelCount:batchSize:data:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLengths:sortedSequences:featureChannelCount:batchSize:data:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLength:featureChannelCount:batchSize:randomInitializerType:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLengths:sortedSequences:featureChannelCount:batchSize:randomInitializerType:)"
      ],
      "title": "Creating Tensors by Specifying Sequence Lengths"
    },
    {
      "anchor": "Inspecting-Tensors",
      "identifiers": [
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorID",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/descriptor",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/data",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/label",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/device",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/optimizerData",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/optimizerDeviceData",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/hasValidNumerics",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensorOptimizerDeviceData"
      ],
      "title": "Inspecting Tensors"
    },
    {
      "anchor": "Converting-Tensors",
      "identifiers": [
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/quantized(to:scale:bias:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/quantized(to:scale:bias:axis:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/dequantized(to:scale:zeroPoint:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/dequantized(to:scale:bias:axis:)"
      ],
      "title": "Converting Tensors"
    },
    {
      "anchor": "Managing-Tensor-Data",
      "identifiers": [
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/synchronizeData()",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/synchronizeOptimizerData()",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/copyDataFromDeviceMemory(toBytes:length:synchronizeWithDevice:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/bindAndWriteData(_:to:)",
        "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/bindOptimizerData(_:deviceData:)"
      ],
      "title": "Managing Tensor Data"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "deprecatedAt": "17.4",
              "introducedAt": "14.0",
              "name": "iOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "deprecatedAt": "17.4",
              "introducedAt": "14.0",
              "name": "iPadOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "deprecatedAt": "17.4",
              "introducedAt": "14.0",
              "name": "Mac Catalyst",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "deprecatedAt": "14.3",
              "introducedAt": "11.0",
              "name": "macOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "deprecatedAt": "17.4",
              "introducedAt": "14.0",
              "name": "tvOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Class"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "MLCTensor"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "class"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCTensor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCTensor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.mlcompute/documentation/MLCompute"
              ]
            ]
          }
        },
        {
          "op": "replace",
          "path": "/topicSections",
          "value": [
            {
              "anchor": "Creating-Tensors-with-Descriptors",
              "identifiers": [
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:data:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:fillWithData:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(descriptor:randomInitializerType:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensorDescriptor",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCDataType",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensorData",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCRandomInitializerType"
              ],
              "title": "Creating Tensors with Descriptors"
            },
            {
              "anchor": "Creating-Tensors-by-Specifying-Shape",
              "identifiers": [
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:dataType:",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:data:dataType:",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:fillWithData:dataType:",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:randomInitializerType:",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithShape:randomInitializerType:dataType:",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:data:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:data:dataType:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:fillWithData:dataType:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(width:height:featureChannelCount:batchSize:randomInitializerType:)"
              ],
              "title": "Creating Tensors by Specifying Shape"
            },
            {
              "anchor": "Creating-Tensors-by-Specifying-Sequence-Lengths",
              "identifiers": [
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLength:featureChannelCount:batchSize:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLength:featureChannelCount:batchSize:data:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:data:",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/init(sequenceLength:featureChannelCount:batchSize:randomInitializerType:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:randomInitializerType:"
              ],
              "title": "Creating Tensors by Specifying Sequence Lengths"
            },
            {
              "anchor": "Inspecting-Tensors",
              "identifiers": [
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/tensorID",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/descriptor",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/data",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/label",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/device",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/optimizerData",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/optimizerDeviceData",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/hasValidNumerics",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensorOptimizerDeviceData"
              ],
              "title": "Inspecting Tensors"
            },
            {
              "anchor": "Converting-Tensors",
              "identifiers": [
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/quantized(to:scale:bias:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/quantized(to:scale:bias:axis:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/dequantized(to:scale:zeroPoint:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/dequantized(to:scale:bias:axis:)"
              ],
              "title": "Converting Tensors"
            },
            {
              "anchor": "Managing-Tensor-Data",
              "identifiers": [
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/synchronizeData()",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/synchronizeOptimizerData()",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/copyDataFromDeviceMemory(toBytes:length:synchronizeWithDevice:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/bindAndWriteData(_:to:)",
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCTensor/bindOptimizerData(_:deviceData:)"
              ],
              "title": "Managing Tensor Data"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/relationshipsSections",
          "value": [
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
              ],
              "kind": "relationships",
              "title": "Inherits From",
              "type": "inheritsFrom"
            },
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(pl)NSCopying"
              ],
              "kind": "relationships",
              "title": "Conforms To",
              "type": "conformsTo"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Components",
              "generated": true,
              "identifiers": [
                "doc://com.apple.mlcompute/documentation/MLCompute/MLCPlatform",
                "doc://com.apple.mlcompute/documentation/MLCompute/layers",
                "doc://com.apple.mlcompute/documentation/MLCompute/training-and-validation"
              ],
              "title": "Components"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "iOS",
                  "iPadOS",
                  "Mac Catalyst",
                  "macOS",
                  "tvOS"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "@interface"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "MLCTensor"
                  },
                  {
                    "kind": "text",
                    "text": " : "
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(cs)NSObject",
                    "text": "NSObject"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1device/title",
          "value": "device"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1device/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "device"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensorDescriptor/title",
          "value": "MLCTensorDescriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensorDescriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCTensorDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensorDescriptor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCTensorDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1dequantized(to:scale:bias:axis:)/title",
          "value": "tensorByDequantizingToType:scale:bias:axis:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1dequantized(to:scale:bias:axis:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "tensorByDequantizingToType:scale:bias:axis:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1bindOptimizerData(_:deviceData:)/title",
          "value": "bindOptimizerData:deviceData:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1bindOptimizerData(_:deviceData:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "bindOptimizerData:deviceData:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCDataType/title",
          "value": "MLCDataType"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCDataType/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCDataType"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCDataType/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCDataType"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(width:height:featureChannelCount:batchSize:data:)/title",
          "value": "tensorWithWidth:height:featureChannelCount:batchSize:data:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(width:height:featureChannelCount:batchSize:data:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "tensorWithWidth:height:featureChannelCount:batchSize:data:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1quantized(to:scale:bias:axis:)/title",
          "value": "tensorByQuantizingToType:scale:bias:axis:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1quantized(to:scale:bias:axis:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "tensorByQuantizingToType:scale:bias:axis:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor/title",
          "value": "MLCTensor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCTensor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCTensor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensorOptimizerDeviceData/title",
          "value": "MLCTensorOptimizerDeviceData"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensorOptimizerDeviceData/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCTensorOptimizerDeviceData"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensorOptimizerDeviceData/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCTensorOptimizerDeviceData"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(width:height:featureChannelCount:batchSize:)/title",
          "value": "tensorWithWidth:height:featureChannelCount:batchSize:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(width:height:featureChannelCount:batchSize:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "tensorWithWidth:height:featureChannelCount:batchSize:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCRandomInitializerType/title",
          "value": "MLCRandomInitializerType"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCRandomInitializerType/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCRandomInitializerType"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCRandomInitializerType/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCRandomInitializerType"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1synchronizeData()/title",
          "value": "synchronizeData"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1synchronizeData()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "synchronizeData"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(width:height:featureChannelCount:batchSize:fillWithData:dataType:)/title",
          "value": "tensorWithWidth:height:featureChannelCount:batchSize:fillWithData:dataType:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(width:height:featureChannelCount:batchSize:fillWithData:dataType:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "tensorWithWidth:height:featureChannelCount:batchSize:fillWithData:dataType:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1descriptor/title",
          "value": "descriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1descriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "descriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(descriptor:)/title",
          "value": "tensorWithDescriptor:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(descriptor:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "tensorWithDescriptor:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(descriptor:fillWithData:)/title",
          "value": "tensorWithDescriptor:fillWithData:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(descriptor:fillWithData:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "tensorWithDescriptor:fillWithData:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(descriptor:randomInitializerType:)/title",
          "value": "tensorWithDescriptor:randomInitializerType:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(descriptor:randomInitializerType:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "tensorWithDescriptor:randomInitializerType:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1bindAndWriteData(_:to:)/title",
          "value": "bindAndWriteData:toDevice:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1bindAndWriteData(_:to:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "bindAndWriteData:toDevice:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(width:height:featureChannelCount:batchSize:data:dataType:)/title",
          "value": "tensorWithWidth:height:featureChannelCount:batchSize:data:dataType:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(width:height:featureChannelCount:batchSize:data:dataType:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "tensorWithWidth:height:featureChannelCount:batchSize:data:dataType:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1label/title",
          "value": "label"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1label/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "label"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1copyDataFromDeviceMemory(toBytes:length:synchronizeWithDevice:)/title",
          "value": "copyDataFromDeviceMemoryToBytes:length:synchronizeWithDevice:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1copyDataFromDeviceMemory(toBytes:length:synchronizeWithDevice:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "copyDataFromDeviceMemoryToBytes:length:synchronizeWithDevice:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1optimizerData/title",
          "value": "optimizerData"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1optimizerData/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "optimizerData"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1tensorID/title",
          "value": "tensorID"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1tensorID/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "tensorID"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1quantized(to:scale:bias:)/title",
          "value": "tensorByQuantizingToType:scale:bias:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1quantized(to:scale:bias:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "tensorByQuantizingToType:scale:bias:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCPlatform/title",
          "value": "MLCPlatform"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCPlatform/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCPlatform"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCPlatform/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCPlatform"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensorData/title",
          "value": "MLCTensorData"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensorData/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCTensorData"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensorData/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MLCTensorData"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(descriptor:data:)/title",
          "value": "tensorWithDescriptor:data:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(descriptor:data:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "tensorWithDescriptor:data:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSObject/title",
          "value": "NSObject"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(sequenceLength:featureChannelCount:batchSize:data:)/title",
          "value": "tensorWithSequenceLength:featureChannelCount:batchSize:data:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(sequenceLength:featureChannelCount:batchSize:data:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "tensorWithSequenceLength:featureChannelCount:batchSize:data:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(width:height:featureChannelCount:batchSize:randomInitializerType:)/title",
          "value": "tensorWithWidth:height:featureChannelCount:batchSize:randomInitializerType:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(width:height:featureChannelCount:batchSize:randomInitializerType:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "tensorWithWidth:height:featureChannelCount:batchSize:randomInitializerType:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1data/title",
          "value": "data"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1data/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "data"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(sequenceLength:featureChannelCount:batchSize:)/title",
          "value": "tensorWithSequenceLength:featureChannelCount:batchSize:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(sequenceLength:featureChannelCount:batchSize:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "tensorWithSequenceLength:featureChannelCount:batchSize:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1dequantized(to:scale:zeroPoint:)/title",
          "value": "tensorByDequantizingToType:scale:bias:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1dequantized(to:scale:zeroPoint:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "tensorByDequantizingToType:scale:bias:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1synchronizeOptimizerData()/title",
          "value": "synchronizeOptimizerData"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1synchronizeOptimizerData()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "synchronizeOptimizerData"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1hasValidNumerics/title",
          "value": "hasValidNumerics"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1hasValidNumerics/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "hasValidNumerics"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1optimizerDeviceData/title",
          "value": "optimizerDeviceData"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1optimizerDeviceData/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "optimizerDeviceData"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(sequenceLength:featureChannelCount:batchSize:randomInitializerType:)/title",
          "value": "tensorWithSequenceLength:featureChannelCount:batchSize:randomInitializerType:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.mlcompute~1documentation~1MLCompute~1MLCTensor~1init(sequenceLength:featureChannelCount:batchSize:randomInitializerType:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "tensorWithSequenceLength:featureChannelCount:batchSize:randomInitializerType:"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/mlcompute/mlctensor"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/mlcompute/mlctensor"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
