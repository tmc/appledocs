{
  "abstract": [
    {
      "text": "Programmatically detect and dismiss a search field.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Search"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/Managing-search-interface-activation"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Managing search interface activation"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "People activate a search field in your app by tapping or clicking it, after",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "which they can enter search terms. In many cases, your app only needs to react",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to the corresponding changes in the search text values, which the interface",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "updates through the binding that you provide, as described in",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Performing-a-search-operation",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "However, SwiftUI also provides controls that enable you to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "programmatically manage the search interface. In particular, you can:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Activate or deactivate the interface using a binding that you provide",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "to the searchable modifier.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Detect whether the interface is active by reading an environment value.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Dismiss the interface by calling an action stored in the environment.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Wait for a search submission event before starting to search.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Control-activation-through-a-binding",
          "level": 3,
          "text": "Control activation through a binding",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can control search interface activation programmatically by providing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the searchable modifier’s ",
              "type": "text"
            },
            {
              "code": "isPresented",
              "type": "codeVoice"
            },
            {
              "text": " parameter with a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Binding",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Boolean value. For example, to present a sheet that appears with the search",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "interface already active, create a binding that starts as true:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct SheetView: View {",
            "    @State private var isPresented = true",
            "    @State private var text = \"\"",
            "  ",
            "    var body: some View {",
            "        NavigationStack {",
            "            SheetContent()",
            "                .searchable(text: $text, isPresented: $isPresented)",
            "        }",
            "    }",
            "}   "
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "On iOS and macOS, SwiftUI focuses the search field when presenting search and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "unfocuses the search field when dismissing search. The search field can also",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "lose focus while the search interface remains presented. For example, if your",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "search interface contains a list of text fields, someone might move focus to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "one of the text fields without dismissing the interface.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Detect-search-activation",
          "level": 3,
          "text": "Detect search activation",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If you need to know when the search interface is active, you can query the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "environment’s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/isSearching",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property using the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property wrapper. The following example shows a view that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "updates the text it displays based on the state of the property:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct SearchingExample: View {",
            "    @State private var searchText = \"\"",
            "",
            "    var body: some View {",
            "        NavigationStack {",
            "            SearchedView()",
            "                .searchable(text: $searchText)",
            "        }",
            "    }",
            "}",
            "",
            "struct SearchedView: View {",
            "    @Environment(\\.isSearching) private var isSearching",
            "",
            "    var body: some View {",
            "        Text(isSearching ? \"Searching\" : \"Not searching\")",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When someone first taps or clicks in a search field, the ",
              "type": "text"
            },
            {
              "code": "isSearching",
              "type": "codeVoice"
            },
            {
              "text": " property",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "becomes ",
              "type": "text"
            },
            {
              "code": "true",
              "type": "codeVoice"
            },
            {
              "text": ". When they cancel the search operation, the property becomes",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "false",
              "type": "codeVoice"
            },
            {
              "text": ". It also becomes ",
              "type": "text"
            },
            {
              "code": "false",
              "type": "codeVoice"
            },
            {
              "text": " if you programmatically dismiss the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "interface, as the next section describes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Be sure to read the property from inside a view that’s wrapped, either directly",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or indirectly, by one of the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchable(text:placement:prompt:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "view modifiers, like ",
              "type": "text"
            },
            {
              "code": "SearchedView",
              "type": "codeVoice"
            },
            {
              "text": " in the above example. You won’t detect any",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "change in the property value if you read it from outside of that context, like",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "if you put it in the ",
              "type": "text"
            },
            {
              "code": "SearchingExample",
              "type": "codeVoice"
            },
            {
              "text": " view.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Dismiss-the-search-interface",
          "level": 3,
          "text": "Dismiss the search interface",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can programmatically deactivate the interface using the environment’s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/dismissSearch",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " action. For example, consider a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "view with a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Button",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " that presents more information about the first matching",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "item from a collection:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ContentView: View {",
            "    @State private var searchText = \"\"",
            "",
            "    var body: some View {",
            "        NavigationStack {",
            "            SearchedView(searchText: searchText)",
            "                .searchable(text: $searchText)",
            "        }",
            "    }",
            "}",
            "",
            "private struct SearchedView: View {",
            "    var searchText: String",
            "",
            "    let items = [\"a\", \"b\", \"c\"]",
            "    var filteredItems: [String] { items.filter { $0 == searchText.lowercased() } }",
            "",
            "    @State private var isPresented = false",
            "    @Environment(\\.dismissSearch) private var dismissSearch",
            "",
            "    var body: some View {",
            "        if let item = filteredItems.first {",
            "            Button(\"Details about \\(item)\") {",
            "                isPresented = true",
            "            }",
            "            .sheet(isPresented: $isPresented) {",
            "                NavigationStack {",
            "                    DetailView(item: item, dismissSearch: dismissSearch)",
            "                }",
            "            }",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The button becomes visible only after someone enters search text that produces",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a match. The button’s action shows a sheet that provides more information about",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the item, including an Add button for adding the item to a stored list of items:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "private struct DetailView: View {",
            "    var item: String",
            "    var dismissSearch: DismissSearchAction",
            "",
            "    @Environment(\\.dismiss) private var dismiss",
            "",
            "    var body: some View {",
            "        Text(\"Information about \\(item).\")",
            "            .toolbar {",
            "                Button(\"Add\") {",
            "                    // Store the item here...",
            "",
            "                    dismiss()",
            "                    dismissSearch()",
            "                }",
            "            }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "People can dismiss the sheet by dragging it down, effectively canceling the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "operation, leaving the in-progress search interaction intact. Alternatively,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "They can tap the Add button to store the item. Because people are likely",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "done with both the detail view and the search interaction at this point,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the button’s closure uses the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/dismiss",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "dismiss the sheet, and the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/dismissSearch",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "reset the search field.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "As with the ",
              "type": "text"
            },
            {
              "code": "isSearching",
              "type": "codeVoice"
            },
            {
              "text": " property, be sure to only read ",
              "type": "text"
            },
            {
              "code": "dismissSearch",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "from within the hierarchy of a searchable view modifier. Calling the action has",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "no effect if you read it from the environment outside of that context. The",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "above example reads the action from ",
              "type": "text"
            },
            {
              "code": "SearchedView",
              "type": "codeVoice"
            },
            {
              "text": ", and passes that into the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "sheet, because the sheet has its own environment. The action also has no effect",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "if the search interface isn’t active.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "React-to-search-submission",
          "level": 3,
          "text": "React to search submission",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To specify an action that SwiftUI invokes when someone submits the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "search query (by pressing the Return key), add the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/onSubmit(of:_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "modifier:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "SearchedView()",
            "    .searchable(text: $searchText)",
            "    .onSubmit(of: .search) {",
            "        submitCurrentSearchQuery()",
            "    }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Depending your app’s structure, you can use search submission in different",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "ways. For example, you can take that opportunity to look for substrings",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "among the search query string that you can convert into tokens. Alternatively,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "for a search operation that’s very slow, perhaps because it requires a network",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "access, you can wait for a submission event before performing a search.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Binding": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value owned by a source of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "truth.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Binding"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Binding",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Binding"
        }
      ],
      "role": "symbol",
      "title": "Binding",
      "type": "topic",
      "url": "/documentation/swiftui/binding"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Button": {
      "abstract": [
        {
          "text": "A control that initiates an action.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Button"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Button",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Button"
        }
      ],
      "role": "symbol",
      "title": "Button",
      "type": "topic",
      "url": "/documentation/swiftui/button"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/DismissSearchAction": {
      "abstract": [
        {
          "text": "An action that can end a search interaction.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DismissSearchAction"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/DismissSearchAction",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DismissSearchAction"
        }
      ],
      "role": "symbol",
      "title": "DismissSearchAction",
      "type": "topic",
      "url": "/documentation/swiftui/dismisssearchaction"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment": {
      "abstract": [
        {
          "text": "A property wrapper that reads a value from a view’s environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Environment"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Environment"
        }
      ],
      "role": "symbol",
      "title": "Environment",
      "type": "topic",
      "url": "/documentation/swiftui/environment"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/dismiss": {
      "abstract": [
        {
          "text": "An action that dismisses the current presentation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dismiss"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI13DismissActionV",
          "text": "DismissAction"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/dismiss",
      "kind": "symbol",
      "role": "symbol",
      "title": "dismiss",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues/dismiss"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/dismissSearch": {
      "abstract": [
        {
          "text": "An action that ends the current search interaction.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dismissSearch"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI19DismissSearchActionV",
          "text": "DismissSearchAction"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/dismissSearch",
      "kind": "symbol",
      "role": "symbol",
      "title": "dismissSearch",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues/dismisssearch"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/isSearching": {
      "abstract": [
        {
          "text": "A Boolean value that indicates when the user is searching.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isSearching"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/isSearching",
      "kind": "symbol",
      "role": "symbol",
      "title": "isSearching",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues/issearching"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Performing-a-search-operation": {
      "abstract": [
        {
          "text": "Update search results based on search text and optional tokens that you store.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Performing-a-search-operation",
      "kind": "article",
      "role": "article",
      "title": "Performing a search operation",
      "type": "topic",
      "url": "/documentation/swiftui/performing-a-search-operation"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Search": {
      "abstract": [
        {
          "text": "Enable people to search for text or other content within your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Search",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Search",
      "type": "topic",
      "url": "/documentation/swiftui/search"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/onSubmit(of:_:)": {
      "abstract": [
        {
          "text": "Adds an action to perform when the user submits a value to this view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "onSubmit"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI14SubmitTriggersV",
          "text": "SubmitTriggers"
        },
        {
          "kind": "text",
          "text": ", () -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/onSubmit(of:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "onSubmit(of:_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/onsubmit(of:_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchable(text:editableTokens:isPresented:placement:prompt:token:)": {
      "abstract": [
        {
          "text": "Marks this view as searchable, which configures the display of a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "search field.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "searchable"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "text"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "editableTokens"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "isPresented"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "placement"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "prompt"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "token"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchable(text:editableTokens:isPresented:placement:prompt:token:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "searchable(text:editableTokens:isPresented:placement:prompt:token:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/searchable(text:editabletokens:ispresented:placement:prompt:token:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchable(text:isPresented:placement:prompt:)": {
      "abstract": [
        {
          "text": "Marks this view as searchable with programmatic presentation of the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "search field.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "searchable"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "text"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "isPresented"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "placement"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "prompt"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchable(text:isPresented:placement:prompt:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "searchable(text:isPresented:placement:prompt:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/searchable(text:ispresented:placement:prompt:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchable(text:placement:prompt:)": {
      "abstract": [
        {
          "text": "Marks this view as searchable, which configures the display of a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "search field.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "searchable"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "text"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "placement"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "prompt"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchable(text:placement:prompt:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "searchable(text:placement:prompt:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/searchable(text:placement:prompt:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchable(text:tokens:isPresented:placement:prompt:token:)": {
      "abstract": [
        {
          "text": "Marks this view as searchable with text and tokens, as well as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "programmatic presentation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "searchable"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "text"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "tokens"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "isPresented"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "placement"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "prompt"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "token"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchable(text:tokens:isPresented:placement:prompt:token:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "searchable(text:tokens:isPresented:placement:prompt:token:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/searchable(text:tokens:ispresented:placement:prompt:token:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchable(text:tokens:suggestedTokens:isPresented:placement:prompt:token:)": {
      "abstract": [
        {
          "text": "Marks this view as searchable with text, tokens, and suggestions, as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "well as programmatic presentation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "searchable"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "text"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "tokens"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "suggestedTokens"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "isPresented"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "placement"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "prompt"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "token"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchable(text:tokens:suggestedTokens:isPresented:placement:prompt:token:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "searchable(text:tokens:suggestedTokens:isPresented:placement:prompt:token:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Detecting-activating-and-dismissing-search",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/isSearching",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/dismissSearch",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/DismissSearchAction",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchable(text:isPresented:placement:prompt:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchable(text:tokens:isPresented:placement:prompt:token:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchable(text:editableTokens:isPresented:placement:prompt:token:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchable(text:tokens:suggestedTokens:isPresented:placement:prompt:token:)"
      ],
      "title": "Detecting, activating, and dismissing search"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/managing-search-interface-activation"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
