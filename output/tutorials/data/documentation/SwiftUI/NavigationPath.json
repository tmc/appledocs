{
  "abstract": [
    {
      "text": "A type-erased list of data representing the content of a navigation stack.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI14NavigationPathV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "NavigationPath"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "NavigationPath"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "NavigationPath"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NavigationPath"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Migrating-to-New-Navigation-Types"
      ]
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can manage the state of a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " by initializing the stack",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "with a binding to a collection of data. The stack stores data items in the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "collection for each view on the stack. You also can read and write the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "collection to observe and alter the stack’s state.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When a stack displays views that rely on only one kind of data, you can use",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a standard collection, like an array, to hold the data. If you need to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "present different kinds of data in a single stack, use a navigation path",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instead. The path uses type erasure so you can manage a collection of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "heterogeneous elements. The path also provides the usual collection",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "controls for adding, counting, and removing data elements.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Serialize-the-path",
          "level": 3,
          "text": "Serialize the path",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When the values you present on the navigation stack conform to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/Codable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you can use the path’s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/codable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property to get a serializable",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "representation of the path. Use that representation to save and restore",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the contents of the stack. For example, you can define an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Combine/ObservableObject",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that handles serializing and deserializing the path:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "class MyModelObject: ObservableObject {",
            "    @Published var path: NavigationPath",
            "",
            "    static func readSerializedData() -> Data? {",
            "        // Read data representing the path from app's persistent storage.",
            "    }",
            "",
            "    static func writeSerializedData(_ data: Data) {",
            "        // Write data representing the path to app's persistent storage.",
            "    }",
            "",
            "    init() {",
            "        if let data = Self.readSerializedData() {",
            "            do {",
            "                let representation = try JSONDecoder().decode(",
            "                    NavigationPath.CodableRepresentation.self,",
            "                    from: data)",
            "                self.path = NavigationPath(representation)",
            "            } catch {",
            "                self.path = NavigationPath()",
            "            }",
            "        } else {",
            "            self.path = NavigationPath()",
            "        }",
            "    }",
            "",
            "    func save() {",
            "        guard let representation = path.codable else { return }",
            "        do {",
            "            let encoder = JSONEncoder()",
            "            let data = try encoder.encode(representation)",
            "            Self.writeSerializedData(data)",
            "        } catch {",
            "            // Handle error.",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Then, using that object in your view, you can save the state of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the navigation path when the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " enters the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ScenePhase/background",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "state:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@StateObject private var pathState = MyModelObject()",
            "@Environment(\\.scenePhase) private var scenePhase",
            "",
            "var body: some View {",
            "    NavigationStack(path: $pathState.path) {",
            "        // Add a root view here.",
            "    }",
            "    .onChange(of: scenePhase) { phase in",
            "        if phase == .background {",
            "            pathState.save()",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Migrating-to-New-Navigation-Types": {
      "abstract": [
        {
          "text": "Improve navigation behavior in your app by replacing navigation views",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "with navigation stacks and navigation split views.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Migrating-to-New-Navigation-Types",
      "kind": "article",
      "role": "article",
      "title": "Migrating to new navigation types",
      "type": "topic",
      "url": "/documentation/swiftui/migrating-to-new-navigation-types"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath": {
      "abstract": [
        {
          "text": "A type-erased list of data representing the content of a navigation stack.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NavigationPath"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NavigationPath"
        }
      ],
      "role": "symbol",
      "title": "NavigationPath",
      "type": "topic",
      "url": "/documentation/swiftui/navigationpath"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/CodableRepresentation": {
      "abstract": [
        {
          "text": "A serializable representation of a navigation path.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CodableRepresentation"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/CodableRepresentation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CodableRepresentation"
        }
      ],
      "role": "symbol",
      "title": "NavigationPath.CodableRepresentation",
      "type": "topic",
      "url": "/documentation/swiftui/navigationpath/codablerepresentation"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/append(_:)": {
      "abstract": [
        {
          "text": "Appends a new codable value to the end of this path.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "append"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/append(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "append(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/navigationpath/append(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/codable": {
      "abstract": [
        {
          "text": "A value that describes the contents of this path in a serializable",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "format.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "codable"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI14NavigationPathV",
          "text": "NavigationPath"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI14NavigationPathV21CodableRepresentationV",
          "text": "CodableRepresentation"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/codable",
      "kind": "symbol",
      "role": "symbol",
      "title": "codable",
      "type": "topic",
      "url": "/documentation/swiftui/navigationpath/codable"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/count": {
      "abstract": [
        {
          "text": "The number of elements in this path.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "count"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/count",
      "kind": "symbol",
      "role": "symbol",
      "title": "count",
      "type": "topic",
      "url": "/documentation/swiftui/navigationpath/count"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/init()": {
      "abstract": [
        {
          "text": "Creates a new, empty navigation path.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/init()",
      "kind": "symbol",
      "role": "symbol",
      "title": "init()",
      "type": "topic",
      "url": "/documentation/swiftui/navigationpath/init()"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/init(_:)": {
      "abstract": [
        {
          "text": "Creates a new navigation path from a serializable version.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/init(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/navigationpath/init(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/isEmpty": {
      "abstract": [
        {
          "text": "A Boolean that indicates whether this path is empty.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isEmpty"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/isEmpty",
      "kind": "symbol",
      "role": "symbol",
      "title": "isEmpty",
      "type": "topic",
      "url": "/documentation/swiftui/navigationpath/isempty"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/removeLast(_:)": {
      "abstract": [
        {
          "text": "Removes values from the end of this path.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeLast"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/removeLast(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "removeLast(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/navigationpath/removelast(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack": {
      "abstract": [
        {
          "text": "A view that displays a root view and enables you to present additional",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "views over the root view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NavigationStack"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NavigationStack"
        }
      ],
      "role": "symbol",
      "title": "NavigationStack",
      "type": "topic",
      "url": "/documentation/swiftui/navigationstack"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene": {
      "abstract": [
        {
          "text": "A part of an app’s user interface with a life cycle managed by the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "system.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Scene"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Scene"
        }
      ],
      "role": "symbol",
      "title": "Scene",
      "type": "topic",
      "url": "/documentation/swiftui/scene"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ScenePhase/background": {
      "abstract": [
        {
          "text": "The scene isn’t currently visible in the UI.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "background"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ScenePhase/background",
      "kind": "symbol",
      "role": "symbol",
      "title": "ScenePhase.background",
      "type": "topic",
      "url": "/documentation/swiftui/scenephase/background"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(for:destination:)": {
      "abstract": [
        {
          "text": "Associates a destination view with a presented data type for use within",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "a navigation stack.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "navigationDestination"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "destination"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(for:destination:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "navigationDestination(for:destination:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/navigationdestination(for:destination:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(isPresented:destination:)": {
      "abstract": [
        {
          "text": "Associates a destination view with a binding that can be used to push",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the view onto a ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "navigationDestination"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "isPresented"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "destination"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(isPresented:destination:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "navigationDestination(isPresented:destination:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/navigationdestination(ispresented:destination:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(item:destination:)": {
      "abstract": [
        {
          "text": "Associates a destination view with a bound value for use within a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "navigation stack or navigation split view",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "navigationDestination"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "item"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sq",
          "text": "Optional"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ">>, "
        },
        {
          "kind": "externalParam",
          "text": "destination"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(item:destination:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "navigationDestination(item:destination:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/navigationdestination(item:destination:)"
    },
    "doc://com.apple.documentation/documentation/Combine/ObservableObject": {
      "abstract": [
        {
          "text": "A type of object with a publisher that emits before the object has changed.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ObservableObject"
        },
        {
          "kind": "text",
          "text": " : AnyObject"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Combine/ObservableObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "ObservableObject",
      "type": "topic",
      "url": "/documentation/Combine/ObservableObject"
    },
    "doc://com.apple.documentation/documentation/Swift/Codable": {
      "abstract": [
        {
          "text": "A type that can convert itself into and out of an external representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Codable"
        },
        {
          "kind": "text",
          "text": " = "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Se",
          "text": "Decodable"
        },
        {
          "kind": "text",
          "text": " & "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SE",
          "text": "Encodable"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/Codable",
      "kind": "symbol",
      "role": "symbol",
      "title": "Codable",
      "type": "topic",
      "url": "/documentation/Swift/Codable"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:s8CopyableP": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8CopyableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/Swift/Copyable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s8CopyableP",
        "doc://com.externally.resolved.symbol/s:SQ"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Stacking-views-in-one-column",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(for:destination:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(isPresented:destination:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(item:destination:)"
      ],
      "title": "Stacking views in one column"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-navigation-path",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/init()",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/init(_:)"
      ],
      "title": "Creating a navigation path"
    },
    {
      "anchor": "Managing-path-contents",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/isEmpty",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/count",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/append(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/removeLast(_:)"
      ],
      "title": "Managing path contents"
    },
    {
      "anchor": "Encoding-a-path",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/codable",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath/CodableRepresentation"
      ],
      "title": "Encoding a path"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/navigationpath"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
