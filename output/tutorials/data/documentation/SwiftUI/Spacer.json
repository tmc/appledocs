{
  "abstract": [
    {
      "text": "A flexible space that expands along the major axis of its containing stack",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "layout, or on both axes if not contained in a stack.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/Spacer"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI6SpacerV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Spacer"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Spacer"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "Spacer"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:ScM",
              "kind": "attribute",
              "preciseIdentifier": "s:ScM",
              "text": "MainActor"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "attribute",
              "text": "@preconcurrency"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Spacer"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Building-Layouts-with-Stack-Views",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picking-Container-Views-for-Your-Content",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Adding-a-Background-to-Your-View"
      ]
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A spacer creates an adaptive view with no content that expands as much as",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "it can. For example, when placed within an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/HStack",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", a spacer expands",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "horizontally as much as the stack allows, moving sibling views out of the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "way, within the limits of the stack’s size.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "SwiftUI sizes a stack that doesn’t contain a spacer up to the combined",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "ideal widths of the content of the stack’s child views.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The following example provides a simple checklist row to illustrate how you",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "can use a spacer:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ChecklistRow: View {",
            "    let name: String",
            "",
            "    var body: some View {",
            "        HStack {",
            "            Image(systemName: \"checkmark\")",
            "            Text(name)",
            "        }",
            "        .border(Color.blue)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "Spacer-1.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Adding a spacer before the image creates an adaptive view with no content",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that expands to push the image and text to the right side of the stack.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The stack also now expands to take as much space as the parent view allows,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "shown by the blue border that indicates the boundary of the stack:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ChecklistRow: View {",
            "    let name: String",
            "",
            "    var body: some View {",
            "        HStack {",
            "            Spacer()",
            "            Image(systemName: \"checkmark\")",
            "            Text(name)",
            "        }",
            "        .border(Color.blue)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "Spacer-2.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Moving the spacer between the image and the name pushes those elements to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the left and right sides of the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/HStack",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", respectively. Because the stack",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "contains the spacer, it expands to take as much horizontal space as the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "parent view allows; the blue border indicates its size:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ChecklistRow: View {",
            "    let name: String",
            "",
            "    var body: some View {",
            "        HStack {",
            "            Image(systemName: \"checkmark\")",
            "            Spacer()",
            "            Text(name)",
            "        }",
            "        .border(Color.blue)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "Spacer-3.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Adding two spacer views on the outside of the stack leaves the image and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "text together, while the stack expands to take as much horizontal space",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "as the parent view allows:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ChecklistRow: View {",
            "    let name: String",
            "",
            "    var body: some View {",
            "        HStack {",
            "            Spacer()",
            "            Image(systemName: \"checkmark\")",
            "            Text(name)",
            "            Spacer()",
            "        }",
            "        .border(Color.blue)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "Spacer-4.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Spacer-1.png": {
      "alt": "A figure of a blue rectangular border that marks the boundary of an",
      "identifier": "Spacer-1.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/9df8ab78b8a87386da85f8d288f52f82/Spacer-1@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/40d869e902d8bc234a659dfd05d7ff32/Spacer-1~dark@2x.png"
        }
      ]
    },
    "Spacer-2.png": {
      "alt": "A figure of a blue rectangular border that marks the boundary of an",
      "identifier": "Spacer-2.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/2d8b3cd23072e1610a707d4f205e9c63/Spacer-2@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/ef8abe6c5040cec6797eff2d801eeb20/Spacer-2~dark@2x.png"
        }
      ]
    },
    "Spacer-3.png": {
      "alt": "A figure of a blue rectangular border that marks the boundary of an",
      "identifier": "Spacer-3.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/2eb4db02232cd37f4fa9dbfc8a0baa36/Spacer-3@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/5269b7a7cdbf3391878c3df7ec18f7f3/Spacer-3~dark@2x.png"
        }
      ]
    },
    "Spacer-4.png": {
      "alt": "A figure of a blue rectangular border marks the boundary of an HStack,",
      "identifier": "Spacer-4.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/d046a0aef1a9b759f52414ff6b385341/Spacer-4@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/84e1f1d1e23fb20f251379a608a529b2/Spacer-4~dark@2x.png"
        }
      ]
    },
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Adding-a-Background-to-Your-View": {
      "abstract": [
        {
          "text": "Compose a background behind your view and extend it beyond the safe area insets.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Adding-a-Background-to-Your-View",
      "kind": "article",
      "role": "article",
      "title": "Adding a background to your view",
      "type": "topic",
      "url": "/documentation/swiftui/adding-a-background-to-your-view"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Building-Layouts-with-Stack-Views": {
      "abstract": [
        {
          "text": "Compose complex layouts from primitive container views.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Building-Layouts-with-Stack-Views",
      "kind": "article",
      "role": "article",
      "title": "Building layouts with stack views",
      "type": "topic",
      "url": "/documentation/swiftui/building-layouts-with-stack-views"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Divider": {
      "abstract": [
        {
          "text": "A visual element that can be used to separate other content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Divider"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Divider",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Divider"
        }
      ],
      "role": "symbol",
      "title": "Divider",
      "type": "topic",
      "url": "/documentation/swiftui/divider"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/HStack": {
      "abstract": [
        {
          "text": "A view that arranges its subviews in a horizontal line.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "HStack"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/HStack",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "HStack"
        }
      ],
      "role": "symbol",
      "title": "HStack",
      "type": "topic",
      "url": "/documentation/swiftui/hstack"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picking-Container-Views-for-Your-Content": {
      "abstract": [
        {
          "text": "Build flexible user interfaces by using stacks, grids, lists, and forms.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picking-Container-Views-for-Your-Content",
      "kind": "article",
      "role": "article",
      "title": "Picking container views for your content",
      "type": "topic",
      "url": "/documentation/swiftui/picking-container-views-for-your-content"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Spacer": {
      "abstract": [
        {
          "text": "A flexible space that expands along the major axis of its containing stack",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "layout, or on both axes if not contained in a stack.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Spacer"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Spacer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Spacer"
        }
      ],
      "role": "symbol",
      "title": "Spacer",
      "type": "topic",
      "url": "/documentation/swiftui/spacer"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Spacer/init(minLength:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "minLength"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14CoreFoundation7CGFloatV",
          "text": "CGFloat"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Spacer/init(minLength:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(minLength:)",
      "type": "topic",
      "url": "/documentation/swiftui/spacer/init(minlength:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Spacer/minLength": {
      "abstract": [
        {
          "text": "The minimum length this spacer can be shrunk to, along the axis or axes",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "of expansion.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "minLength"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14CoreFoundation7CGFloatV",
          "text": "CGFloat"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Spacer/minLength",
      "kind": "symbol",
      "role": "symbol",
      "title": "minLength",
      "type": "topic",
      "url": "/documentation/swiftui/spacer/minlength"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/swiftui/view"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:ScM": {
      "abstract": [
        {
          "text": "A singleton actor whose executor is equivalent to the main dispatch queue.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@globalActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "final"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "actor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MainActor"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:ScM",
      "kind": "symbol",
      "role": "symbol",
      "title": "MainActor",
      "type": "topic",
      "url": "/documentation/Swift/MainActor"
    },
    "doc://com.externally.resolved.symbol/s:s15BitwiseCopyableP": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        },
        {
          "kind": "text",
          "text": " : ~Escapable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s15BitwiseCopyableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "BitwiseCopyable",
      "type": "topic",
      "url": "/documentation/Swift/BitwiseCopyable"
    },
    "doc://com.externally.resolved.symbol/s:s8CopyableP": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8CopyableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/Swift/Copyable"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s15BitwiseCopyableP",
        "doc://com.externally.resolved.symbol/s:s8CopyableP",
        "doc://com.externally.resolved.symbol/s:s8SendableP",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Separators",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Divider"
      ],
      "title": "Separators"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-spacer",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Spacer/init(minLength:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Spacer/minLength"
      ],
      "title": "Creating a spacer"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/spacer"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
