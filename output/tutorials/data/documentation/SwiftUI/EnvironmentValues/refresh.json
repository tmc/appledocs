{
  "abstract": [
    {
      "text": "A refresh action stored in a view’s environment.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/refresh"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI17EnvironmentValuesV7refreshAA13RefreshActionVSgvp",
    "fragments": [
      {
        "kind": "keyword",
        "text": "var"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "refresh"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI13RefreshActionV",
        "text": "RefreshAction"
      },
      {
        "kind": "text",
        "text": "?"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "12.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Property",
    "symbolKind": "property",
    "title": "refresh"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "var"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "refresh"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/RefreshAction",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI13RefreshActionV",
              "text": "RefreshAction"
            },
            {
              "kind": "text",
              "text": "? { "
            },
            {
              "kind": "keyword",
              "text": "get"
            },
            {
              "kind": "text",
              "text": " }"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When this environment value contains an instance of the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/RefreshAction",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " structure, certain built-in views in the corresponding",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " begin offering a refresh capability. They apply the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instance’s handler to any refresh operation that the user initiates.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "By default, the environment value is ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": ", but you can use the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/refreshable(action:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " modifier to create and store a new",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "refresh action that uses the handler that you specify:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "List(mailbox.conversations) { conversation in",
            "    ConversationCell(conversation)",
            "}",
            ".refreshable {",
            "    await mailbox.fetch()",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "On iOS and iPadOS, the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " in the example above offers a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "pull to refresh gesture because it detects the refresh action. When",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the user drags the list down and releases, the list calls the action’s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "handler. Because SwiftUI declares the handler as asynchronous, it can",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "safely make long-running asynchronous calls, like fetching network data.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Refreshing-custom-views",
          "level": 3,
          "text": "Refreshing custom views",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can also offer refresh capability in your custom views.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Read the ",
              "type": "text"
            },
            {
              "code": "refresh",
              "type": "codeVoice"
            },
            {
              "text": " environment value to get the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/RefreshAction",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instance for a given ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". If you find",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a non-",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " value, change your view’s appearance or behavior to offer",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the refresh to the user, and call the instance to conduct the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "refresh. You can call the refresh instance directly because it defines",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/RefreshAction/callAsFunction()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method that Swift calls",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "when you call the instance:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct RefreshableView: View {",
            "    @Environment(\\.refresh) private var refresh",
            "",
            "    var body: some View {",
            "        Button(\"Refresh\") {",
            "            Task {",
            "                await refresh?()",
            "            }",
            "        }",
            "        .disabled(refresh == nil)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Be sure to call the handler asynchronously by preceding it",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "with ",
              "type": "text"
            },
            {
              "code": "await",
              "type": "codeVoice"
            },
            {
              "text": ". Because the call is asynchronous, you can use",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "its lifetime to indicate progress to the user. For example,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you can reveal an indeterminate ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " before",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "calling the handler, and hide it when the handler completes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If your code isn’t already in an asynchronous context, create a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/Task",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " for the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method to run in. If you do this, consider adding a way for the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "user to cancel the task. For more information, see",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "The Swift Programming Language",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment": {
      "abstract": [
        {
          "text": "A property wrapper that reads a value from a view’s environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Environment"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Environment"
        }
      ],
      "role": "symbol",
      "title": "Environment",
      "type": "topic",
      "url": "/documentation/swiftui/environment"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues": {
      "abstract": [
        {
          "text": "A collection of environment values propagated through a view hierarchy.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EnvironmentValues"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EnvironmentValues"
        }
      ],
      "role": "symbol",
      "title": "EnvironmentValues",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/refresh": {
      "abstract": [
        {
          "text": "A refresh action stored in a view’s environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "refresh"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI13RefreshActionV",
          "text": "RefreshAction"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/refresh",
      "kind": "symbol",
      "role": "symbol",
      "title": "refresh",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues/refresh"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List": {
      "abstract": [
        {
          "text": "A container that presents rows of data arranged in a single column,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "optionally providing the ability to select one or more members.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "List"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "List"
        }
      ],
      "role": "symbol",
      "title": "List",
      "type": "topic",
      "url": "/documentation/swiftui/list"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView": {
      "abstract": [
        {
          "text": "A view that shows the progress toward completion of a task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ProgressView"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ProgressView"
        }
      ],
      "role": "symbol",
      "title": "ProgressView",
      "type": "topic",
      "url": "/documentation/swiftui/progressview"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/RefreshAction": {
      "abstract": [
        {
          "text": "An action that initiates a refresh operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RefreshAction"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/RefreshAction",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RefreshAction"
        }
      ],
      "role": "symbol",
      "title": "RefreshAction",
      "type": "topic",
      "url": "/documentation/swiftui/refreshaction"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/RefreshAction/callAsFunction()": {
      "abstract": [
        {
          "text": "Initiates a refresh action.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "callAsFunction"
        },
        {
          "kind": "text",
          "text": "() "
        },
        {
          "kind": "keyword",
          "text": "async"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/RefreshAction/callAsFunction()",
      "kind": "symbol",
      "role": "symbol",
      "title": "callAsFunction()",
      "type": "topic",
      "url": "/documentation/swiftui/refreshaction/callasfunction()"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/refreshable(action:)": {
      "abstract": [
        {
          "text": "Marks this view as refreshable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "refreshable"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "action"
        },
        {
          "kind": "text",
          "text": ": () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/refreshable(action:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "refreshable(action:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/refreshable(action:)"
    },
    "doc://com.apple.documentation/documentation/Swift/Task": {
      "abstract": [
        {
          "text": "A unit of asynchronous work.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Task"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Success"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Failure"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Success"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s8SendableP",
          "text": "Sendable"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Failure"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/Task",
      "kind": "symbol",
      "role": "symbol",
      "title": "Task",
      "type": "topic",
      "url": "/documentation/Swift/Task"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html": {
      "identifier": "https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html",
      "title": "Concurrency",
      "titleInlineContent": [
        {
          "text": "Concurrency",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Refreshing-a-lists-content",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/refreshable(action:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/RefreshAction"
      ],
      "title": "Refreshing a list’s content"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/environmentvalues/refresh"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
