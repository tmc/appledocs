{
  "abstract": [
    {
      "text": "A property wrapper type that can read and write a value that SwiftUI updates",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "as the focus of any active accessibility technology, such as VoiceOver,",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "changes.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI23AccessibilityFocusStateV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "AccessibilityFocusState"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "AccessibilityFocusState"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "12.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "AccessibilityFocusState"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@propertyWrapper"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AccessibilityFocusState"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Value"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Value"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:SH",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SH",
              "text": "Hashable"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use this capability to request that VoiceOver or other accessibility",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "technologies programmatically focus on a specific element, or to determine",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "whether VoiceOver or other accessibility technologies are focused on",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "particular elements. Use ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/accessibilityFocused(_:equals:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " or",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/accessibilityFocused(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " in conjunction with this property",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "wrapper to identify accessibility elements for which you want to get",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or set accessibility focus. When accessibility focus enters the modified accessibility element,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the framework updates the wrapped value of this property to match a given",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "prototype value. When accessibility focus leaves, SwiftUI resets the wrapped value",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of an optional property to ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " or the wrapped value of a Boolean property to ",
              "type": "text"
            },
            {
              "code": "false",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Setting the property’s value programmatically has the reverse effect, causing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "accessibility focus to move to whichever accessibility element is associated with the updated value.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In the example below, when ",
              "type": "text"
            },
            {
              "code": "notification",
              "type": "codeVoice"
            },
            {
              "text": " changes, and its  ",
              "type": "text"
            },
            {
              "code": "isPriority",
              "type": "codeVoice"
            },
            {
              "text": " property",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is ",
              "type": "text"
            },
            {
              "code": "true",
              "type": "codeVoice"
            },
            {
              "text": ", the accessibility focus moves to the notification ",
              "type": "text"
            },
            {
              "code": "Text",
              "type": "codeVoice"
            },
            {
              "text": " element above the rest of the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "view’s content:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct CustomNotification: Equatable {",
            "    var text: String",
            "    var isPriority: Bool",
            "}",
            "",
            "struct ContentView: View {",
            "    @Binding var notification: CustomNotification?",
            "    @AccessibilityFocusState var isNotificationFocused: Bool",
            "",
            "    var body: some View {",
            "        VStack {",
            "            if let notification = self.notification {",
            "                Text(notification.text)",
            "                    .accessibilityFocused($isNotificationFocused)",
            "            }",
            "            Text(\"The main content for this view.\")",
            "        }",
            "        .onChange(of: notification) { notification in",
            "            if (notification?.isPriority == true)  {",
            "                isNotificationFocused = true",
            "            }",
            "        }",
            "",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "To allow for cases where accessibility focus is completely absent from the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "tree of accessibility elements, or accessibility technologies are not",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "active, the wrapped value must be either optional or Boolean.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Some initializers of ",
              "type": "text"
            },
            {
              "code": "AccessibilityFocusState",
              "type": "codeVoice"
            },
            {
              "text": " also allow specifying",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "accessibility technologies, determining to which types of accessibility",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "focus this binding applies. If you specify no accessibility technologies,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "SwiftUI uses an aggregate of any and all active accessibility technologies.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value that SwiftUI updates",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "as the focus of any active accessibility technology, such as VoiceOver,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AccessibilityFocusState"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AccessibilityFocusState"
        }
      ],
      "role": "symbol",
      "title": "AccessibilityFocusState",
      "type": "topic",
      "url": "/documentation/swiftui/accessibilityfocusstate"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState/Binding": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Binding"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState/Binding",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Binding"
        }
      ],
      "role": "symbol",
      "title": "AccessibilityFocusState.Binding",
      "type": "topic",
      "url": "/documentation/swiftui/accessibilityfocusstate/binding"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState/init()": {
      "abstract": [
        {
          "text": "Creates a new accessibility focus state for a Boolean value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState/init()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "role": "symbol",
      "title": "init()",
      "type": "topic",
      "url": "/documentation/swiftui/accessibilityfocusstate/init()"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState/init(for:)": {
      "abstract": [
        {
          "text": "Creates a new accessibility focus state for a Boolean value, using the accessibility",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "technologies you specify.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState/init(for:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(for:)",
      "type": "topic",
      "url": "/documentation/swiftui/accessibilityfocusstate/init(for:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState/projectedValue": {
      "abstract": [
        {
          "text": "A projection of the state value that can be used to establish bindings between view content",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and accessibility focus placement.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "projectedValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI23AccessibilityFocusStateV",
          "text": "AccessibilityFocusState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI23AccessibilityFocusStateV7BindingV",
          "text": "Binding"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState/projectedValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "projectedValue",
      "type": "topic",
      "url": "/documentation/swiftui/accessibilityfocusstate/projectedvalue"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState/wrappedValue": {
      "abstract": [
        {
          "text": "The current state value, taking into account whatever bindings might be",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "in effect due to the current location of focus.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "wrappedValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState/wrappedValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "wrappedValue",
      "type": "topic",
      "url": "/documentation/swiftui/accessibilityfocusstate/wrappedvalue"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/DynamicProperty": {
      "abstract": [
        {
          "text": "An interface for a stored variable that updates an external property of a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DynamicProperty"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/DynamicProperty",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DynamicProperty"
        }
      ],
      "role": "symbol",
      "title": "DynamicProperty",
      "type": "topic",
      "url": "/documentation/swiftui/dynamicproperty"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/accessibilityFocused(_:)": {
      "abstract": [
        {
          "text": "Modifies this view by binding its accessibility element’s focus state",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "to the given boolean state value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "accessibilityFocused"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI23AccessibilityFocusStateV",
          "text": "AccessibilityFocusState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI23AccessibilityFocusStateV7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/accessibilityFocused(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "accessibilityFocused(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/accessibilityfocused(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/accessibilityFocused(_:equals:)": {
      "abstract": [
        {
          "text": "Modifies this view by binding its accessibility element’s focus state to",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the given state value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "accessibilityFocused"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI23AccessibilityFocusStateV",
          "text": "AccessibilityFocusState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI23AccessibilityFocusStateV7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "equals"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/accessibilityFocused(_:equals:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "accessibilityFocused(_:equals:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/accessibilityfocused(_:equals:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/DynamicProperty",
        "doc://com.externally.resolved.symbol/s:s8SendableP"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Controlling-focus",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/accessibilityFocused(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/accessibilityFocused(_:equals:)"
      ],
      "title": "Controlling focus"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-focus-state",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState/init()",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState/init(for:)"
      ],
      "title": "Creating a focus state"
    },
    {
      "anchor": "Getting-the-state",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState/projectedValue",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState/wrappedValue",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState/Binding"
      ],
      "title": "Getting the state"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/accessibilityfocusstate"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
