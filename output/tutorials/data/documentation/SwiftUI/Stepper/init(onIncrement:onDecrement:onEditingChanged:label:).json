{
  "abstract": [
    {
      "text": "Creates a stepper instance that performs the closures you provide when",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "the user increments or decrements the stepper.",
      "type": "text"
    }
  ],
  "deprecationSummary": [
    {
      "inlineContent": [
        {
          "text": "Use ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Stepper/init(label:onIncrement:onDecrement:onEditingChanged:)",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " instead.",
          "type": "text"
        }
      ],
      "type": "paragraph"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    },
    "minor": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.2",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Stepper"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/Stepper/init(onIncrement:onDecrement:onEditingChanged:label:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "conformance": {
      "availabilityPrefix": [
        {
          "text": "Available when",
          "type": "text"
        }
      ],
      "conformancePrefix": [
        {
          "text": "Conforms when",
          "type": "text"
        }
      ],
      "constraints": [
        {
          "code": "Label",
          "type": "codeVoice"
        },
        {
          "text": " conforms to ",
          "type": "text"
        },
        {
          "code": "View",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ]
    },
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI7StepperV11onIncrement0D9Decrement0D14EditingChanged5labelACyxGyycSg_AIySbcxyXEtcfc",
    "fragments": [
      {
        "kind": "identifier",
        "text": "init"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "onIncrement"
      },
      {
        "kind": "text",
        "text": ": (() -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s4Voida",
        "text": "Void"
      },
      {
        "kind": "text",
        "text": ")?, "
      },
      {
        "kind": "externalParam",
        "text": "onDecrement"
      },
      {
        "kind": "text",
        "text": ": (() -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s4Voida",
        "text": "Void"
      },
      {
        "kind": "text",
        "text": ")?, "
      },
      {
        "kind": "externalParam",
        "text": "onEditingChanged"
      },
      {
        "kind": "text",
        "text": ": ("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sb",
        "text": "Bool"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s4Voida",
        "text": "Void"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "label"
      },
      {
        "kind": "text",
        "text": ": () -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "Label"
      },
      {
        "kind": "text",
        "text": ")"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "deprecatedAt": "18.4",
        "introducedAt": "13.0",
        "name": "iOS",
        "renamed": "Stepper(label:onIncrement:onDecrement:onEditingChanged:)",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "deprecatedAt": "18.4",
        "introducedAt": "13.0",
        "name": "iPadOS",
        "renamed": "Stepper(label:onIncrement:onDecrement:onEditingChanged:)",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "deprecatedAt": "18.4",
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "renamed": "Stepper(label:onIncrement:onDecrement:onEditingChanged:)",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "deprecatedAt": "15.4",
        "introducedAt": "10.15",
        "name": "macOS",
        "renamed": "Stepper(label:onIncrement:onDecrement:onEditingChanged:)",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "deprecatedAt": "2.4",
        "introducedAt": "1.0",
        "name": "visionOS",
        "renamed": "Stepper(label:onIncrement:onDecrement:onEditingChanged:)",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "deprecatedAt": "11.4",
        "introducedAt": "9.0",
        "name": "watchOS",
        "renamed": "Stepper(label:onIncrement:onDecrement:onEditingChanged:)",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Initializer",
    "symbolKind": "init",
    "title": "init(onIncrement:onDecrement:onEditingChanged:label:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "nonisolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "init"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "onIncrement"
            },
            {
              "kind": "text",
              "text": ": (() -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s4Voida",
              "text": "Void"
            },
            {
              "kind": "text",
              "text": ")?, "
            },
            {
              "kind": "externalParam",
              "text": "onDecrement"
            },
            {
              "kind": "text",
              "text": ": (() -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s4Voida",
              "text": "Void"
            },
            {
              "kind": "text",
              "text": ")?, "
            },
            {
              "kind": "externalParam",
              "text": "onEditingChanged"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "@escaping"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sb",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s4Voida",
              "text": "Void"
            },
            {
              "kind": "text",
              "text": " = { _ in }, "
            },
            {
              "kind": "attribute",
              "text": "@"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder",
              "kind": "attribute",
              "preciseIdentifier": "s:7SwiftUI11ViewBuilderV",
              "text": "ViewBuilder"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "externalParam",
              "text": "label"
            },
            {
              "kind": "text",
              "text": ": () -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "Label"
            },
            {
              "kind": "text",
              "text": ")"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The closure to execute when the user clicks or taps",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "the controlâ€™s plus button.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "onIncrement"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The closure to execute when the user clicks or taps",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "the controlâ€™s minus button.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "onDecrement"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A closure called when editing begins and ends.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "For example, on iOS, the user may touch and hold the increment",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "or decrement buttons on a ",
                  "type": "text"
                },
                {
                  "code": "Stepper",
                  "type": "codeVoice"
                },
                {
                  "text": " which causes the execution",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "of the ",
                  "type": "text"
                },
                {
                  "code": "onEditingChanged",
                  "type": "codeVoice"
                },
                {
                  "text": " closure at the start and end of",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "the gesture.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "onEditingChanged"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A view describing the purpose of this stepper.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "label"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use this initializer to create a control with a custom title that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "executes closures you provide when the user clicks or taps the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "stepperâ€™s increment or decrement buttons.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The example below uses an array that holds a number of ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Color",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " values,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a local state variable, ",
              "type": "text"
            },
            {
              "code": "value",
              "type": "codeVoice"
            },
            {
              "text": ", to set the controlâ€™s background",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "color, and title label. When the user clicks or taps on the stepperâ€™s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "increment or decrement buttons SwiftUI executes the relevant",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "closure that updates ",
              "type": "text"
            },
            {
              "code": "value",
              "type": "codeVoice"
            },
            {
              "text": ", wrapping the ",
              "type": "text"
            },
            {
              "code": "value",
              "type": "codeVoice"
            },
            {
              "text": " to prevent overflow.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "SwiftUI then re-renders the view, updating the text and background",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "color to match the current index:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct StepperView: View {",
            "    @State private var value = 0",
            "    let colors: [Color] = [.orange, .red, .gray, .blue, .green,",
            "                           .purple, .pink]",
            "",
            "    func incrementStep() {",
            "        value += 1",
            "        if value >= colors.count { value = 0 }",
            "    }",
            "",
            "    func decrementStep() {",
            "        value -= 1",
            "        if value < 0 { value = colors.count - 1 }",
            "    }",
            "",
            "    var body: some View {",
            "        Stepper(onIncrement: incrementStep,",
            "            onDecrement: decrementStep) {",
            "            Text(\"Value: \\(value) Color: \\(colors[value].description)\")",
            "        }",
            "        .padding(5)",
            "        .background(colors[value])",
            "    }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "}",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "SwiftUI-Stepper-increment-decrement-closures.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "SwiftUI-Stepper-increment-decrement-closures.png": {
      "alt": "A view displaying a stepper that uses a text view for stepperâ€™s title and that changes the background color of its view when incremented or decremented. The view selects the new background color from a predefined array of colors using the stepperâ€™s value as the index.",
      "identifier": "SwiftUI-Stepper-increment-decrement-closures.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/454b319c800c954fe79070014aaa7d83/SwiftUI-Stepper-increment-decrement-closures@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/eb2fb49f894d2aa08793d07f87290bde/SwiftUI-Stepper-increment-decrement-closures~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Color": {
      "abstract": [
        {
          "text": "A representation of a color that adapts to a given context.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Color"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Color",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Color"
        }
      ],
      "role": "symbol",
      "title": "Color",
      "type": "topic",
      "url": "/documentation/swiftui/color"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Stepper": {
      "abstract": [
        {
          "text": "A control that performs increment and decrement actions.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Stepper"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Stepper",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Stepper"
        }
      ],
      "role": "symbol",
      "title": "Stepper",
      "type": "topic",
      "url": "/documentation/swiftui/stepper"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Stepper/init(label:onIncrement:onDecrement:onEditingChanged:)": {
      "abstract": [
        {
          "text": "Creates a stepper instance that performs the closures you provide when",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the user increments or decrements the stepper.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "onIncrement"
        },
        {
          "kind": "text",
          "text": ": (() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "onDecrement"
        },
        {
          "kind": "text",
          "text": ": (() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "onEditingChanged"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Stepper/init(label:onIncrement:onDecrement:onEditingChanged:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(label:onIncrement:onDecrement:onEditingChanged:)",
      "type": "topic",
      "url": "/documentation/swiftui/stepper/init(label:onincrement:ondecrement:oneditingchanged:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Stepper/init(onIncrement:onDecrement:onEditingChanged:label:)": {
      "abstract": [
        {
          "text": "Creates a stepper instance that performs the closures you provide when",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the user increments or decrements the stepper.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "onIncrement"
        },
        {
          "kind": "text",
          "text": ": (() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "onDecrement"
        },
        {
          "kind": "text",
          "text": ": (() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "onEditingChanged"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Stepper/init(onIncrement:onDecrement:onEditingChanged:label:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(onIncrement:onDecrement:onEditingChanged:label:)",
      "type": "topic",
      "url": "/documentation/swiftui/stepper/init(onincrement:ondecrement:oneditingchanged:label:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Stepper/init(value:in:step:onEditingChanged:label:)": {
      "abstract": [
        {
          "text": "Creates a stepper configured to increment or decrement a binding to a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value using a step value and within a range of values you provide.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "in"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SN",
          "text": "ClosedRange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "step"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sx6StrideQa",
          "text": "Stride"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "onEditingChanged"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Stepper/init(value:in:step:onEditingChanged:label:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(value:in:step:onEditingChanged:label:)",
      "type": "topic",
      "url": "/documentation/swiftui/stepper/init(value:in:step:oneditingchanged:label:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Stepper/init(value:step:onEditingChanged:label:)": {
      "abstract": [
        {
          "text": "Creates a stepper configured to increment or decrement a binding to a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value using a step value you provide.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "step"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sx6StrideQa",
          "text": "Stride"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "onEditingChanged"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Stepper/init(value:step:onEditingChanged:label:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(value:step:onEditingChanged:label:)",
      "type": "topic",
      "url": "/documentation/swiftui/stepper/init(value:step:oneditingchanged:label:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder": {
      "abstract": [
        {
          "text": "A custom parameter attribute that constructs views from closures.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ViewBuilder"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ViewBuilder"
        }
      ],
      "role": "symbol",
      "title": "ViewBuilder",
      "type": "topic",
      "url": "/documentation/swiftui/viewbuilder"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:Sb": {
      "abstract": [
        {
          "text": "A value type whose instances are either `true` or `false`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Sb",
      "kind": "symbol",
      "role": "symbol",
      "title": "Bool",
      "type": "topic",
      "url": "/documentation/Swift/Bool"
    },
    "doc://com.externally.resolved.symbol/s:s4Voida": {
      "abstract": [
        {
          "text": "The return type of functions that donâ€™t explicitly specify a return type, that is, an empty tuple `()`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": " = ()"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
      "kind": "symbol",
      "role": "symbol",
      "title": "Void",
      "type": "topic",
      "url": "/documentation/Swift/Void"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Deprecated-initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Stepper/init(value:step:onEditingChanged:label:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Stepper/init(value:in:step:onEditingChanged:label:)"
      ],
      "title": "Deprecated initializers"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/stepper/init(onincrement:ondecrement:oneditingchanged:label:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
