{
  "abstract": [
    {
      "text": "Contextual values that a custom animation can use to manage state and",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "access a view’s environment.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI16AnimationContextV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "AnimationContext"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "AnimationContext"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "AnimationContext"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AnimationContext"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Value"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Value"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/VectorArithmetic",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI16VectorArithmeticP",
              "text": "VectorArithmetic"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The system provides an ",
              "type": "text"
            },
            {
              "code": "AnimationContext",
              "type": "codeVoice"
            },
            {
              "text": " to a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/CustomAnimation",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " instance",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "so that the animation can store and retrieve values in an instance of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationState",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". To access these values, use the context’s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/state",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For more convenient access to state, create an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationStateKey",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "extend ",
              "type": "text"
            },
            {
              "code": "AnimationContext",
              "type": "codeVoice"
            },
            {
              "text": " to include a computed property that gets and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "sets the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationState",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " value. Then use this property instead of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/state",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to retrieve the state of a custom animation. For",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "example, the following code creates an animation state key named",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "PausableState",
              "type": "codeVoice"
            },
            {
              "text": ". Then the code extends ",
              "type": "text"
            },
            {
              "code": "AnimationContext",
              "type": "codeVoice"
            },
            {
              "text": " to include the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "pausableState",
              "type": "codeVoice"
            },
            {
              "text": " property:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "private struct PausableState<Value: VectorArithmetic>: AnimationStateKey {",
            "    var paused = false",
            "    var pauseTime: TimeInterval = 0.0",
            "",
            "    static var defaultValue: Self { .init() }",
            "}",
            "",
            "extension AnimationContext {",
            "    fileprivate var pausableState: PausableState<Value> {",
            "        get { state[PausableState<Value>.self] }",
            "        set { state[PausableState<Value>.self] = newValue }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "To access the pausable state, the custom animation ",
              "type": "text"
            },
            {
              "code": "PausableAnimation",
              "type": "codeVoice"
            },
            {
              "text": " uses",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the ",
              "type": "text"
            },
            {
              "code": "pausableState",
              "type": "codeVoice"
            },
            {
              "text": " property instead of the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/state",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "property:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct PausableAnimation: CustomAnimation {",
            "    let base: Animation",
            "",
            "    func animate<V>(value: V, time: TimeInterval, context: inout AnimationContext<V>) -> V? where V : VectorArithmetic {",
            "        let paused = context.environment.animationPaused",
            "",
            "        let pausableState = context.pausableState",
            "        var pauseTime = pausableState.pauseTime",
            "        if pausableState.paused != paused {",
            "            pauseTime = time - pauseTime",
            "            context.pausableState = PausableState(paused: paused, pauseTime: pauseTime)",
            "        }",
            "",
            "        let effectiveTime = paused ? pauseTime : time - pauseTime",
            "        let result = base.animate(value: value, time: effectiveTime, context: &context)",
            "        return result",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The animation can also retrieve environment values of the view that created",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the animation. To retrieve a view’s environment value, use the context’s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/environment",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property. For instance, the following code",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "creates a custom ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property named ",
              "type": "text"
            },
            {
              "code": "animationPaused",
              "type": "codeVoice"
            },
            {
              "text": ", and the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "view ",
              "type": "text"
            },
            {
              "code": "PausableAnimationView",
              "type": "codeVoice"
            },
            {
              "text": " uses the property to store the paused state:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "extension EnvironmentValues {",
            "    @Entry var animationPaused: Bool = false",
            "}",
            "",
            "struct PausableAnimationView: View {",
            "    @State private var paused = false",
            "",
            "    var body: some View {",
            "        VStack {",
            "            ...",
            "        }",
            "        .environment(\\.animationPaused, paused)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Then the custom animation ",
              "type": "text"
            },
            {
              "code": "PausableAnimation",
              "type": "codeVoice"
            },
            {
              "text": " retrieves the paused state",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "from the view’s environment using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/environment",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "property:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct PausableAnimation: CustomAnimation {",
            "    func animate<V>(value: V, time: TimeInterval, context: inout AnimationContext<V>) -> V? where V : VectorArithmetic {",
            "        let paused = context.environment.animationPaused",
            "        ...",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext": {
      "abstract": [
        {
          "text": "Contextual values that a custom animation can use to manage state and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "access a view’s environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AnimationContext"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AnimationContext"
        }
      ],
      "role": "symbol",
      "title": "AnimationContext",
      "type": "topic",
      "url": "/documentation/swiftui/animationcontext"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/environment": {
      "abstract": [
        {
          "text": "The current environment of the view that created the custom animation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "environment"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI17EnvironmentValuesV",
          "text": "EnvironmentValues"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/environment",
      "kind": "symbol",
      "role": "symbol",
      "title": "environment",
      "type": "topic",
      "url": "/documentation/swiftui/animationcontext/environment"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/isLogicallyComplete": {
      "abstract": [
        {
          "text": "Set this to ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": " to indicate that an animation is logically complete.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isLogicallyComplete"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/isLogicallyComplete",
      "kind": "symbol",
      "role": "symbol",
      "title": "isLogicallyComplete",
      "type": "topic",
      "url": "/documentation/swiftui/animationcontext/islogicallycomplete"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/state": {
      "abstract": [
        {
          "text": "The current state of a custom animation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "state"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI14AnimationStateV",
          "text": "AnimationState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/state",
      "kind": "symbol",
      "role": "symbol",
      "title": "state",
      "type": "topic",
      "url": "/documentation/swiftui/animationcontext/state"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/withState(_:)": {
      "abstract": [
        {
          "text": "Creates a new context from another one with a state that you provide.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI14AnimationStateV",
          "text": "AnimationState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI16AnimationContextV",
          "text": "AnimationContext"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/withState(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withState(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/animationcontext/withstate(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationState": {
      "abstract": [
        {
          "text": "A container that stores the state for a custom animation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AnimationState"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationState",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AnimationState"
        }
      ],
      "role": "symbol",
      "title": "AnimationState",
      "type": "topic",
      "url": "/documentation/swiftui/animationstate"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationStateKey": {
      "abstract": [
        {
          "text": "A key for accessing animation state values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AnimationStateKey"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationStateKey",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AnimationStateKey"
        }
      ],
      "role": "symbol",
      "title": "AnimationStateKey",
      "type": "topic",
      "url": "/documentation/swiftui/animationstatekey"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/CustomAnimation": {
      "abstract": [
        {
          "text": "A type that defines how an animatable value changes over time.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomAnimation"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/CustomAnimation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomAnimation"
        }
      ],
      "role": "symbol",
      "title": "CustomAnimation",
      "type": "topic",
      "url": "/documentation/swiftui/customanimation"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues": {
      "abstract": [
        {
          "text": "A collection of environment values propagated through a view hierarchy.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EnvironmentValues"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EnvironmentValues"
        }
      ],
      "role": "symbol",
      "title": "EnvironmentValues",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Spring": {
      "abstract": [
        {
          "text": "A representation of a spring’s motion.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Spring"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Spring",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Spring"
        }
      ],
      "role": "symbol",
      "title": "Spring",
      "type": "topic",
      "url": "/documentation/swiftui/spring"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/UnitCurve": {
      "abstract": [
        {
          "text": "A  function defined by a two-dimensional curve that maps an input",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "progress in the range [0,1] to an output progress that is also in the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "range [0,1]. By changing the shape of the curve, the effective speed",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "of an animation or other interpolation can be changed.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnitCurve"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/UnitCurve",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnitCurve"
        }
      ],
      "role": "symbol",
      "title": "UnitCurve",
      "type": "topic",
      "url": "/documentation/swiftui/unitcurve"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/VectorArithmetic": {
      "abstract": [
        {
          "text": "A type that can serve as the animatable data of an animatable type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "VectorArithmetic"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/VectorArithmetic",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "VectorArithmetic"
        }
      ],
      "role": "symbol",
      "title": "VectorArithmetic",
      "type": "topic",
      "url": "/documentation/swiftui/vectorarithmetic"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Creating-custom-animations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/CustomAnimation",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationState",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationStateKey",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/UnitCurve",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Spring"
      ],
      "title": "Creating custom animations"
    }
  ],
  "topicSections": [
    {
      "anchor": "Managing-state",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/state"
      ],
      "title": "Managing state"
    },
    {
      "anchor": "Retrieving-view-environment-values",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/environment"
      ],
      "title": "Retrieving view environment values"
    },
    {
      "anchor": "Creating-context",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/withState(_:)"
      ],
      "title": "Creating context"
    },
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/AnimationContext/isLogicallyComplete"
      ],
      "title": "Instance Properties"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/animationcontext"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
