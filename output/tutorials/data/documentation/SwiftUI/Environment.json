{
  "abstract": [
    {
      "text": "A property wrapper that reads a value from a view’s environment.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI11EnvironmentV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Environment"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Environment"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "Environment"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "attribute",
              "text": "@propertyWrapper"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Environment"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Value"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Migrating-to-the-SwiftUI-life-cycle",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Managing-search-interface-activation"
      ]
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "code": "Environment",
              "type": "codeVoice"
            },
            {
              "text": " property wrapper to read a value",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "stored in a view’s environment. Indicate the value to read using an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " key path in the property declaration. For example, you",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "can create a property that reads the color scheme of the current",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "view using the key path of the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/colorScheme",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "property:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Environment(\\.colorScheme) var colorScheme: ColorScheme"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "You can condition a view’s content on the associated value, which",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you read from the declared property’s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment/wrappedValue",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". As with any property",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "wrapper, you access the wrapped value by directly referring to the property:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "if colorScheme == .dark { // Checks the wrapped value.",
            "    DarkContent()",
            "} else {",
            "    LightContent()",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "If the value changes, SwiftUI updates any parts of your view that depend on",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the value. For example, that might happen in the above example if the user",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "changes the Appearance settings.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You can use this property wrapper to read — but not set — an environment",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "value. SwiftUI updates some environment values automatically based on system",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "settings and provides reasonable defaults for others. You can override some",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of these, as well as set custom environment values that you define,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/environment(_:_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " view modifier.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For the complete list of environment values SwiftUI provides, see the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "properties of the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " structure. For information about",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "creating custom environment values, see the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Entry()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " macro.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Get-an-observable-object",
          "level": 3,
          "text": "Get an observable object",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can also use ",
              "type": "text"
            },
            {
              "code": "Environment",
              "type": "codeVoice"
            },
            {
              "text": " to get an observable object from a view’s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "environment. The observable object must conform to the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Observation/Observable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "protocol, and your app must set the object in the environment using the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the object itself or a key path.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To set the object in the environment using the object itself, use the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/environment(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " modifier:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Observable",
            "class Library {",
            "    var books: [Book] = [Book(), Book(), Book()]",
            "",
            "    var availableBooksCount: Int {",
            "        books.filter(\\.isAvailable).count",
            "    }",
            "}",
            "",
            "@main",
            "struct BookReaderApp: App {",
            "    @State private var library = Library()",
            "",
            "    var body: some Scene {",
            "        WindowGroup {",
            "            LibraryView()",
            "                .environment(library)",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "To get the observable object using its type, create a property and provide",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the ",
              "type": "text"
            },
            {
              "code": "Environment",
              "type": "codeVoice"
            },
            {
              "text": " property wrapper the object’s type:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct LibraryView: View {",
            "    @Environment(Library.self) private var library",
            "",
            "    var body: some View {",
            "        // ...",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "By default, reading an object from the environment returns a non-optional",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "object when using the object type as the key. This default behavior assumes",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that a view in the current hierarchy previously stored a non-optional",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instance of the type using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/environment(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " modifier. If",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a view attempts to retrieve an object using its type and that object isn’t",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in the environment, SwiftUI throws an exception.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In cases where there is no guarantee that an object is in the environment,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "retrieve an optional version of the object as shown in the following code.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If the object isn’t available the environment, SwiftUI returns ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instead of throwing an exception.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Environment(Library.self) private var library: Library?"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Get-an-observable-object-using-a-key-path",
          "level": 3,
          "text": "Get an observable object using a key path",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To set the object with a key path, use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/environment(_:_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "modifier:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Observable",
            "class Library {",
            "    var books: [Book] = [Book(), Book(), Book()]",
            "",
            "    var availableBooksCount: Int {",
            "        books.filter(\\.isAvailable).count",
            "    }",
            "}",
            "",
            "@main",
            "struct BookReaderApp: App {",
            "    @State private var library = Library()",
            "",
            "    var body: some Scene {",
            "        WindowGroup {",
            "            LibraryView()",
            "                .environment(\\.library, library)",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "To get the object, create a property and specify the key path:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct LibraryView: View {",
            "    @Environment(\\.library) private var library",
            "",
            "    var body: some View {",
            "        // ...",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/DynamicProperty": {
      "abstract": [
        {
          "text": "An interface for a stored variable that updates an external property of a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DynamicProperty"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/DynamicProperty",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DynamicProperty"
        }
      ],
      "role": "symbol",
      "title": "DynamicProperty",
      "type": "topic",
      "url": "/documentation/swiftui/dynamicproperty"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Entry()": {
      "abstract": [
        {
          "text": "Creates an environment values, transaction, container values,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "or focused values entry.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Entry"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Entry()",
      "kind": "symbol",
      "role": "symbol",
      "title": "Entry()",
      "type": "topic",
      "url": "/documentation/swiftui/entry()"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment": {
      "abstract": [
        {
          "text": "A property wrapper that reads a value from a view’s environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Environment"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Environment"
        }
      ],
      "role": "symbol",
      "title": "Environment",
      "type": "topic",
      "url": "/documentation/swiftui/environment"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment/init(_:)": {
      "abstract": [
        {
          "text": "Creates an environment property to read the specified key path.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment/init(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/environment/init(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment/wrappedValue": {
      "abstract": [
        {
          "text": "The current value of the environment property.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "wrappedValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment/wrappedValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "wrappedValue",
      "type": "topic",
      "url": "/documentation/swiftui/environment/wrappedvalue"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues": {
      "abstract": [
        {
          "text": "A collection of environment values propagated through a view hierarchy.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EnvironmentValues"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EnvironmentValues"
        }
      ],
      "role": "symbol",
      "title": "EnvironmentValues",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/colorScheme": {
      "abstract": [
        {
          "text": "The color scheme of this environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "colorScheme"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI11ColorSchemeO",
          "text": "ColorScheme"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/colorScheme",
      "kind": "symbol",
      "role": "symbol",
      "title": "colorScheme",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues/colorscheme"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Managing-search-interface-activation": {
      "abstract": [
        {
          "text": "Programmatically detect and dismiss a search field.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Managing-search-interface-activation",
      "kind": "article",
      "role": "article",
      "title": "Managing search interface activation",
      "type": "topic",
      "url": "/documentation/swiftui/managing-search-interface-activation"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Migrating-to-the-SwiftUI-life-cycle": {
      "abstract": [
        {
          "text": "Use a scene-based life cycle in SwiftUI while keeping your existing codebase.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Migrating-to-the-SwiftUI-life-cycle",
      "kind": "article",
      "role": "article",
      "title": "Migrating to the SwiftUI life cycle",
      "type": "topic",
      "url": "/documentation/swiftui/migrating-to-the-swiftui-life-cycle"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/environment(_:)": {
      "abstract": [
        {
          "text": "Places an observable object in the view’s environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "environment"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/environment(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "environment(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/environment(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/environment(_:_:)": {
      "abstract": [
        {
          "text": "Sets the environment value of the specified key path to the given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "environment"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s15WritableKeyPathC",
          "text": "WritableKeyPath"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI17EnvironmentValuesV",
          "text": "EnvironmentValues"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/environment(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "environment(_:_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/environment(_:_:)"
    },
    "doc://com.apple.documentation/documentation/Observation/Observable": {
      "abstract": [
        {
          "text": "A type that emits notifications to observers when underlying data changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Observable"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Observation/Observable",
      "kind": "symbol",
      "role": "symbol",
      "title": "Observable",
      "type": "topic",
      "url": "/documentation/Observation/Observable"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/DynamicProperty",
        "doc://com.externally.resolved.symbol/s:s8SendableP"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Accessing-environment-values",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues"
      ],
      "title": "Accessing environment values"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-an-environment-instance",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment/init(_:)"
      ],
      "title": "Creating an environment instance"
    },
    {
      "anchor": "Getting-the-value",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment/wrappedValue"
      ],
      "title": "Getting the value"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/environment"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
