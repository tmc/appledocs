{
  "abstract": [
    {
      "text": "A scene that presents a group of identically structured windows.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI11WindowGroupV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "WindowGroup"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "WindowGroup"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "11.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "7.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "WindowGroup"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "WindowGroup"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Content"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Content"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use a ",
              "type": "text"
            },
            {
              "code": "WindowGroup",
              "type": "codeVoice"
            },
            {
              "text": " as a container for a view hierarchy that your app",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "presents. The hierarchy that you declare as the group’s content serves as a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "template for each window that the app creates from that group:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@main",
            "struct Mail: App {",
            "    var body: some Scene {",
            "        WindowGroup {",
            "            MailViewer() // Define a view hierarchy for the window.",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "SwiftUI takes care of certain platform-specific behaviors. For example,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "on platforms that support it, like macOS and iPadOS, people can open more",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "than one window from the group simultaneously. In macOS, people",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "can gather open windows together in a tabbed interface. Also in macOS,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "window groups automatically provide commands for standard window",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "management.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "To enable an iPadOS app to simultaneously display multiple",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "windows, be sure to include the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest/UIApplicationSupportsMultipleScenes",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "key with a value of ",
                  "type": "text"
                },
                {
                  "code": "true",
                  "type": "codeVoice"
                },
                {
                  "text": " in the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "dictionary of your app’s Information Property List.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "Every window in the group maintains independent state. For example, the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "system allocates new storage for any ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/State",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/StateObject",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " variables",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instantiated by the scene’s view hierarchy for each window that it creates.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For document-based apps, use ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/DocumentGroup",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to define windows instead.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Open-windows-programmatically",
          "level": 3,
          "text": "Open windows programmatically",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If you initialize a window group with an identifier, a presentation type,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or both, you can programmatically open a window from the group. For example,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you can give the mail viewer scene from the previous example an identifier:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "WindowGroup(id: \"mail-viewer\") { // Identify the window group.",
            "    MailViewer()",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Elsewhere in your code, you can use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/openWindow",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "action from the environment to create a new window from the group:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct NewViewerButton: View {",
            "    @Environment(\\.openWindow) private var openWindow",
            "",
            "    var body: some View {",
            "        Button(\"Open new mail viewer\") {",
            "            openWindow(id: \"mail-viewer\") // Match the group's identifier.",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Be sure to use unique strings for identifiers that you apply to window",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "groups in your app.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Present-data-in-a-window",
          "level": 3,
          "text": "Present data in a window",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If you initialize a window group with a presentation type, you can pass",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "data of that type to the window when you open it. For example, you can",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "define a second window group for the Mail app that displays a specified",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "message:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@main",
            "struct Mail: App {",
            "    var body: some Scene {",
            "        WindowGroup {",
            "            MailViewer(id: \"mail-viewer\")",
            "        }",
            "",
            "        // A window group that displays messages.",
            "        WindowGroup(for: Message.ID.self) { $messageID in",
            "            MessageDetail(messageID: messageID)",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When you call the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/openWindow",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " action with a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "value, SwiftUI finds the window group with the matching type",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and passes a binding to the value into the window group’s content closure.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For example, you can define a button that opens a message by passing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the message’s identifier:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct NewMessageButton: View {",
            "    var message: Message",
            "    @Environment(\\.openWindow) private var openWindow",
            "",
            "    var body: some View {",
            "        Button(\"Open message\") {",
            "            openWindow(value: message.id)",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Be sure that the type you present conforms to both the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/Hashable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/Codable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocols.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Also, prefer lightweight data for the presentation value.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For model values that conform to the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/Identifiable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the value’s identifier works well as a presentation type, as the above",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "example demonstrates.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If a window with a binding to the same value that you pass to the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "openWindow",
              "type": "codeVoice"
            },
            {
              "text": " action already appears in the user interface, the system",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "brings the existing window to the front rather than opening a new window.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If SwiftUI doesn’t have a value to provide — for example, when someone",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "opens a window by choosing File > New Window from the macOS menu bar —",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "SwiftUI passes a binding to a ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " value instead. To avoid receiving a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " value, you can optionally specify a default value in your window",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "group initializer. For example, for the message viewer, you can present",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a new empty message:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "WindowGroup(for: Message.ID.self) { $messageID in",
            "    MessageDetail(messageID: messageID)",
            "} defaultValue: {",
            "    model.makeNewMessage().id // A new message that your model stores.",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "SwiftUI persists the value of the binding for the purposes of state",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "restoration, and reapplies the same value when restoring the window. If the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "restoration process results in an error, SwiftUI sets the binding to the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "default value if you provide one, or ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " otherwise.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Title-your-apps-windows",
          "level": 3,
          "text": "Title your app’s windows",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To help people distinguish among windows from different groups,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "include a title as the first parameter in the group’s initializer:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "WindowGroup(\"Message\", for: Message.ID.self) { $messageID in",
            "    MessageDetail(messageID: messageID)",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "SwiftUI uses this title when referring to the window in:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The list of new windows that someone can open using the File > New menu.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The window’s title bar.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The list of open windows that the Window menu displays.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "If you don’t provide a title for a window, the system refers to the window",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "using the app’s name instead.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "You can override the title that SwiftUI uses for a window in the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "window’s title bar and the menu’s list of open windows by adding one of",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "the ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationTitle(_:)",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " modifiers to the window’s content.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "This enables you to customize and dynamically update the title for each",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "individual window instance.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "anchor": "Distinguish-windows-that-present-like-data",
          "level": 3,
          "text": "Distinguish windows that present like data",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To programmatically distinguish between windows that present the same type",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of data, like when you use a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/uuid",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "as the identifier for more than one model type, add the ",
              "type": "text"
            },
            {
              "code": "id",
              "type": "codeVoice"
            },
            {
              "text": " parameter",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to the group’s initializer to provide a unique string identifier:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "WindowGroup(\"Message\", id: \"message\", for: UUID.self) { $uuid in",
            "    MessageDetail(uuid: uuid)",
            "}",
            "WindowGroup(\"Account\", id: \"account-info\", for: UUID.self) { $uuid in",
            "    AccountDetail(uuid: uuid)",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Then use both the identifer and a value to open the window:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ActionButtons: View {",
            "    var messageID: UUID",
            "    var accountID: UUID",
            "",
            "    @Environment(\\.openWindow) private var openWindow",
            "",
            "    var body: some View {",
            "        HStack {",
            "            Button(\"Open message\") {",
            "                openWindow(id: \"message\", value: messageID)",
            "            }",
            "            Button(\"Edit account information\") {",
            "                openWindow(id: \"account-info\", value: accountID)",
            "            }",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Dismiss-a-window-programmatically",
          "level": 3,
          "text": "Dismiss a window programmatically",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The system provides people with platform-appropriate controls to dismiss a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "window. You can also dismiss windows programmatically by calling the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/dismiss",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " action from within the window’s view",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "hierarchy. For example, you can include a button in the account detail",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "view from the previous example that dismisses the view:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct AccountDetail: View {",
            "    var uuid: UUID?",
            "    @Environment(\\.dismiss) private var dismiss",
            "",
            "    var body: some View {",
            "        VStack {",
            "            // ...",
            "",
            "            Button(\"Dismiss\") {",
            "                dismiss()",
            "            }",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The dismiss action doesn’t close the window if you call it from a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "modal — like a sheet or a popover — that you present",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "from the window. In that case, the action dismisses the modal presentation",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instead.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/DocumentGroup": {
      "abstract": [
        {
          "text": "A scene that enables support for opening, creating, and saving documents.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DocumentGroup"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/DocumentGroup",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DocumentGroup"
        }
      ],
      "role": "symbol",
      "title": "DocumentGroup",
      "type": "topic",
      "url": "/documentation/swiftui/documentgroup"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/dismiss": {
      "abstract": [
        {
          "text": "An action that dismisses the current presentation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dismiss"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI13DismissActionV",
          "text": "DismissAction"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/dismiss",
      "kind": "symbol",
      "role": "symbol",
      "title": "dismiss",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues/dismiss"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/openWindow": {
      "abstract": [
        {
          "text": "A window presentation action stored in a view’s environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "openWindow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI16OpenWindowActionV",
          "text": "OpenWindowAction"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/openWindow",
      "kind": "symbol",
      "role": "symbol",
      "title": "openWindow",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues/openwindow"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/PresentedWindowContent": {
      "abstract": [
        {
          "text": "A view that represents the content of a presented window.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PresentedWindowContent"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/PresentedWindowContent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PresentedWindowContent"
        }
      ],
      "role": "symbol",
      "title": "PresentedWindowContent",
      "type": "topic",
      "url": "/documentation/swiftui/presentedwindowcontent"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene": {
      "abstract": [
        {
          "text": "A part of an app’s user interface with a life cycle managed by the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "system.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Scene"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Scene"
        }
      ],
      "role": "symbol",
      "title": "Scene",
      "type": "topic",
      "url": "/documentation/swiftui/scene"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene/windowStyle(_:)": {
      "abstract": [
        {
          "text": "Sets the style for windows created by this scene.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "windowStyle"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI5SceneP",
          "text": "Scene"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene/windowStyle(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "windowStyle(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/scene/windowstyle(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/State": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value managed by SwiftUI.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "State"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/State",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "State"
        }
      ],
      "role": "symbol",
      "title": "State",
      "type": "topic",
      "url": "/documentation/swiftui/state"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/StateObject": {
      "abstract": [
        {
          "text": "A property wrapper type that instantiates an observable object.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "StateObject"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/StateObject",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StateObject"
        }
      ],
      "role": "symbol",
      "title": "StateObject",
      "type": "topic",
      "url": "/documentation/swiftui/stateobject"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/UtilityWindow": {
      "abstract": [
        {
          "text": "A specialized window scene that provides secondary utility to the content",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "of the main scenes of an application.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UtilityWindow"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/UtilityWindow",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UtilityWindow"
        }
      ],
      "role": "symbol",
      "title": "UtilityWindow",
      "type": "topic",
      "url": "/documentation/swiftui/utilitywindow"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/swiftui/view"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationTitle(_:)": {
      "abstract": [
        {
          "text": "Configures the view’s title for purposes of navigation, using a string",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "binding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "navigationTitle"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationTitle(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "navigationTitle(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/navigationtitle(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Window": {
      "abstract": [
        {
          "text": "A scene that presents its content in a single, unique window.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Window"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Window",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Window"
        }
      ],
      "role": "symbol",
      "title": "Window",
      "type": "topic",
      "url": "/documentation/swiftui/window"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup": {
      "abstract": [
        {
          "text": "A scene that presents a group of identically structured windows.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "WindowGroup"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "WindowGroup"
        }
      ],
      "role": "symbol",
      "title": "WindowGroup",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:content:)": {
      "abstract": [
        {
          "text": "Creates a window group with a text view title.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:content:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(_:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:for:content:)": {
      "abstract": [
        {
          "text": "Creates a data-presenting window group with a text view title.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:for:content:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:for:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(_:for:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:for:content:defaultValue:)": {
      "abstract": [
        {
          "text": "Creates a data-presenting window group with a text view title and a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "default value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "defaultValue"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:for:content:defaultValue:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "defaultValue"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:for:content:defaultValue:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(_:for:content:defaultvalue:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:id:content:)": {
      "abstract": [
        {
          "text": "Creates a window group with a text view title and an identifier.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:id:content:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:id:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(_:id:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:id:for:content:)": {
      "abstract": [
        {
          "text": "Creates a data-presenting window group with a text view title and an",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "identifier.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:id:for:content:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:id:for:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(_:id:for:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:id:for:content:defaultValue:)": {
      "abstract": [
        {
          "text": "Creates a data-presenting window group with a text view title, an",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "identifier, and a default value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "defaultValue"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:id:for:content:defaultValue:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "defaultValue"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:id:for:content:defaultValue:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(_:id:for:content:defaultvalue:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:id:makeContent:)": {
      "abstract": [
        {
          "text": "Creates a window group with a text view title and an identifier.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "makeContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:id:makeContent:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "makeContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:id:makeContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(_:id:makecontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:makeContent:)": {
      "abstract": [
        {
          "text": "Creates a window group with a text view title.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "makeContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:makeContent:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "makeContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:makeContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(_:makecontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(content:)": {
      "abstract": [
        {
          "text": "Creates a window group.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(content:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(content:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(for:content:)": {
      "abstract": [
        {
          "text": "Creates a data-presenting window group.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": "?>) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(for:content:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(for:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(for:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(for:content:defaultValue:)": {
      "abstract": [
        {
          "text": "Creates a data-presenting window group with a default value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "defaultValue"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(for:content:defaultValue:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(for:content:defaultValue:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(for:content:defaultvalue:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(id:content:)": {
      "abstract": [
        {
          "text": "Creates a window group with an identifier.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(id:content:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(id:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(id:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(id:for:content:)": {
      "abstract": [
        {
          "text": "Creates a data-presenting window group with an identifier.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": "?>) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(id:for:content:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(id:for:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(id:for:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(id:for:content:defaultValue:)": {
      "abstract": [
        {
          "text": "Creates a data-presenting window group with an identifier and a default",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "defaultValue"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(id:for:content:defaultValue:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(id:for:content:defaultValue:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(id:for:content:defaultvalue:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(id:makeContent:)": {
      "abstract": [
        {
          "text": "Creates a window group with an identifier.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "makeContent"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(id:makeContent:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(id:makeContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(id:makecontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(makeContent:)": {
      "abstract": [
        {
          "text": "Creates a window group.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "makeContent"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(makeContent:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(makeContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup/init(makecontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowStyle": {
      "abstract": [
        {
          "text": "A specification for the appearance and interaction of a window.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "WindowStyle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowStyle",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "WindowStyle"
        }
      ],
      "role": "symbol",
      "title": "WindowStyle",
      "type": "topic",
      "url": "/documentation/swiftui/windowstyle"
    },
    "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest": {
      "abstract": [
        {
          "text": "The information about the app’s scene-based life-cycle support.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIApplicationSceneManifest",
      "type": "topic",
      "url": "/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest"
    },
    "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest/UIApplicationSupportsMultipleScenes": {
      "abstract": [
        {
          "text": "A Boolean value indicating whether the app supports two or more scenes simultaneously.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest/UIApplicationSupportsMultipleScenes",
      "kind": "symbol",
      "role": "symbol",
      "title": "UIApplicationSupportsMultipleScenes",
      "type": "topic",
      "url": "/documentation/BundleResources/Information-Property-List/UIApplicationSceneManifest/UIApplicationSupportsMultipleScenes"
    },
    "doc://com.apple.documentation/documentation/Swift/Codable": {
      "abstract": [
        {
          "text": "A type that can convert itself into and out of an external representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Codable"
        },
        {
          "kind": "text",
          "text": " = "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Se",
          "text": "Decodable"
        },
        {
          "kind": "text",
          "text": " & "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SE",
          "text": "Encodable"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/Codable",
      "kind": "symbol",
      "role": "symbol",
      "title": "Codable",
      "type": "topic",
      "url": "/documentation/Swift/Codable"
    },
    "doc://com.apple.documentation/documentation/Swift/Hashable": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/Hashable",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.apple.documentation/documentation/Swift/Identifiable": {
      "abstract": [
        {
          "text": "A class of types whose instances hold the value of an entity with stable identity.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Identifiable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12IdentifiableP2IDQa",
          "text": "ID"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/Identifiable",
      "kind": "symbol",
      "role": "symbol",
      "title": "Identifiable",
      "type": "topic",
      "url": "/documentation/Swift/Identifiable"
    },
    "doc://com.apple.documentation/documentation/foundation/uuid": {
      "abstract": [
        {
          "text": "A universally unique value to identify types, interfaces, and other items.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "UUID"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/uuid",
      "kind": "symbol",
      "role": "symbol",
      "title": "UUID",
      "type": "topic",
      "url": "/documentation/foundation/uuid"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Creating-windows",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Window",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/UtilityWindow",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowStyle",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene/windowStyle(_:)"
      ],
      "title": "Creating windows"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-window-group",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(content:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:content:)"
      ],
      "title": "Creating a window group"
    },
    {
      "anchor": "Identifying-a-window-group",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(id:content:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:id:content:)"
      ],
      "title": "Identifying a window group"
    },
    {
      "anchor": "Creating-a-data-driven-window-group",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(for:content:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:for:content:)"
      ],
      "title": "Creating a data-driven window group"
    },
    {
      "anchor": "Providing-default-data-to-a-window-group",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(for:content:defaultValue:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:for:content:defaultValue:)"
      ],
      "title": "Providing default data to a window group"
    },
    {
      "anchor": "Identifying-a-data-driven-window-group",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(id:for:content:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:id:for:content:)"
      ],
      "title": "Identifying a data-driven window group"
    },
    {
      "anchor": "Identifying-a-window-group-that-has-default-data",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(id:for:content:defaultValue:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:id:for:content:defaultValue:)"
      ],
      "title": "Identifying a window group that has default data"
    },
    {
      "anchor": "Supporting-types",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/PresentedWindowContent"
      ],
      "title": "Supporting types"
    },
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:id:makeContent:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(_:makeContent:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(id:makeContent:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup/init(makeContent:)"
      ],
      "title": "Initializers"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/windowgroup"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
