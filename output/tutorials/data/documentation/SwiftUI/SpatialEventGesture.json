{
  "abstract": [
    {
      "text": "A gesture that provides information about ongoing spatial events like",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "clicks and touches.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventGesture"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI19SpatialEventGestureV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "SpatialEventGesture"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "SpatialEventGesture"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "11.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "SpatialEventGesture"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "SpatialEventGesture"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use a gesture of this type to track multiple simultaneous spatial events",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and gain access to detailed information about each. For example, you can",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "place a particle emitter at every location in a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Canvas",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " that has an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "ongoing spatial event:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ParticlePlayground: View {",
            "    @State var model = ParticlesModel()",
            "",
            "    var body: some View {",
            "        Canvas { context, size in",
            "            for particle in model.particles {",
            "                context.fill(Path(ellipseIn: particle.frame),",
            "                             with: .color(particle.color))",
            "            }",
            "        }",
            "        .gesture(",
            "            SpatialEventGesture()",
            "                .onChanged { events in",
            "                    for event in events {",
            "                        if event.phase == .active {",
            "                            // Update particle emitters.",
            "                            model.emitters[event.id] = ParticlesModel.Emitter(",
            "                                location: event.location",
            "                            )",
            "                        } else {",
            "                            // Remove emitters when no longer active.",
            "                            model.emitters[event.id] = nil",
            "                        }",
            "                    }",
            "                }",
            "                .onEnded { events in",
            "                    for event in events {",
            "                        // Remove emitters when no longer active.",
            "                        model.emitters[event.id] = nil",
            "                    }",
            "                }",
            "        )",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The gesture provides a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventCollection",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " structure when it detects",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "changes. The collection contains ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventCollection/Event",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " values",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that represent ongoing spatial events. Each event contains a stable, unique",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "identifier so that you can track how the event changes over time. The event",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "also indicates its current location, a timestamp, the pose of the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "input device that creates it, and other useful information.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The phase of events in the collection can change",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventCollection/Event/Phase-swift.enum/ended",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " or",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventCollection/Event/Phase-swift.enum/cancelled",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " while the gesture itself",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "remains active. Individually track state for each event inside",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gesture/onChanged(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gesture/updating(_:body:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and clean up all",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "state in ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gesture/onEnded(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Only use a spatial event gesture if you need to access low-level",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "event information, like when you create a complex multi-touch experience.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "For most use cases, it’s better to rely on gestures that recognize",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "targeted interactions, like a ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialTapGesture",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ", ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/MagnifyGesture",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ",",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "or ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/DragGesture",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Tip",
          "style": "tip",
          "type": "aside"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Canvas": {
      "abstract": [
        {
          "text": "A view type that supports immediate mode drawing.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Canvas"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Canvas",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Canvas"
        }
      ],
      "role": "symbol",
      "title": "Canvas",
      "type": "topic",
      "url": "/documentation/swiftui/canvas"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Chirality": {
      "abstract": [
        {
          "text": "The chirality, or handedness, of a pose.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Chirality"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Chirality",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Chirality"
        }
      ],
      "role": "symbol",
      "title": "Chirality",
      "type": "topic",
      "url": "/documentation/swiftui/chirality"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/DragGesture": {
      "abstract": [
        {
          "text": "A dragging motion that invokes an action as the drag-event sequence changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DragGesture"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/DragGesture",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DragGesture"
        }
      ],
      "role": "symbol",
      "title": "DragGesture",
      "type": "topic",
      "url": "/documentation/swiftui/draggesture"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Gesture": {
      "abstract": [
        {
          "text": "An instance that matches a sequence of events to a gesture, and returns a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "stream of values for each of its states.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Gesture"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gesture",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Gesture"
        }
      ],
      "role": "symbol",
      "title": "Gesture",
      "type": "topic",
      "url": "/documentation/swiftui/gesture"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Gesture/onChanged(_:)": {
      "abstract": [
        {
          "text": "Adds an action to perform when the gesture’s value changes.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Value",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Equatable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "onChanged"
        },
        {
          "kind": "text",
          "text": "(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7GestureP5ValueQa",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "_ChangedGesture"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gesture/onChanged(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "onChanged(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/gesture/onchanged(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Gesture/onEnded(_:)": {
      "abstract": [
        {
          "text": "Adds an action to perform when the gesture ends.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "onEnded"
        },
        {
          "kind": "text",
          "text": "(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7GestureP5ValueQa",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "_EndedGesture"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gesture/onEnded(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "onEnded(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/gesture/onended(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Gesture/updating(_:body:)": {
      "abstract": [
        {
          "text": "Updates the provided gesture state property as the gesture’s value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "updating"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "State"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI12GestureStateV",
          "text": "GestureState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "State"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "body"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7GestureP5ValueQa",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "State"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI11TransactionV",
          "text": "Transaction"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI012GestureStateC0V",
          "text": "GestureStateGesture"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "State"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gesture/updating(_:body:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "updating(_:body:)",
      "type": "topic",
      "url": "/documentation/swiftui/gesture/updating(_:body:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/MagnifyGesture": {
      "abstract": [
        {
          "text": "A gesture that recognizes a magnification motion and tracks the amount of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "magnification.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MagnifyGesture"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/MagnifyGesture",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MagnifyGesture"
        }
      ],
      "role": "symbol",
      "title": "MagnifyGesture",
      "type": "topic",
      "url": "/documentation/swiftui/magnifygesture"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventCollection": {
      "abstract": [
        {
          "text": "A collection of spatial input events that target a specific view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SpatialEventCollection"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventCollection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SpatialEventCollection"
        }
      ],
      "role": "symbol",
      "title": "SpatialEventCollection",
      "type": "topic",
      "url": "/documentation/swiftui/spatialeventcollection"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventCollection/Event": {
      "abstract": [
        {
          "text": "A spatial event generated from an input like a touch or click",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "that can drive gestures in the system.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Event"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventCollection/Event",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Event"
        }
      ],
      "role": "symbol",
      "title": "SpatialEventCollection.Event",
      "type": "topic",
      "url": "/documentation/swiftui/spatialeventcollection/event"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventCollection/Event/Phase-swift.enum/cancelled": {
      "abstract": [
        {
          "text": "The state associated with this phase was canceled",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and won’t produce any more updates.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "cancelled"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventCollection/Event/Phase-swift.enum/cancelled",
      "kind": "symbol",
      "role": "symbol",
      "title": "SpatialEventCollection.Event.Phase.cancelled",
      "type": "topic",
      "url": "/documentation/swiftui/spatialeventcollection/event/phase-swift.enum/cancelled"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventCollection/Event/Phase-swift.enum/ended": {
      "abstract": [
        {
          "text": "The state associated with this phase ended normally",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and won’t produce any more updates.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ended"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventCollection/Event/Phase-swift.enum/ended",
      "kind": "symbol",
      "role": "symbol",
      "title": "SpatialEventCollection.Event.Phase.ended",
      "type": "topic",
      "url": "/documentation/swiftui/spatialeventcollection/event/phase-swift.enum/ended"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventGesture": {
      "abstract": [
        {
          "text": "A gesture that provides information about ongoing spatial events like",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "clicks and touches.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SpatialEventGesture"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventGesture",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SpatialEventGesture"
        }
      ],
      "role": "symbol",
      "title": "SpatialEventGesture",
      "type": "topic",
      "url": "/documentation/swiftui/spatialeventgesture"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventGesture/coordinateSpace": {
      "abstract": [
        {
          "text": "The coordinate space of the gesture.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "coordinateSpace"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI15CoordinateSpaceO",
          "text": "CoordinateSpace"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventGesture/coordinateSpace",
      "kind": "symbol",
      "role": "symbol",
      "title": "coordinateSpace",
      "type": "topic",
      "url": "/documentation/swiftui/spatialeventgesture/coordinatespace"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventGesture/init(coordinateSpace:)": {
      "abstract": [
        {
          "text": "Creates the gesture with a desired coordinate space.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "coordinateSpace"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI23CoordinateSpaceProtocolP",
          "text": "CoordinateSpaceProtocol"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventGesture/init(coordinateSpace:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(coordinateSpace:)",
      "type": "topic",
      "url": "/documentation/swiftui/spatialeventgesture/init(coordinatespace:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialTapGesture": {
      "abstract": [
        {
          "text": "A gesture that recognizes one or more taps and reports their location.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SpatialTapGesture"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialTapGesture",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SpatialTapGesture"
        }
      ],
      "role": "symbol",
      "title": "SpatialTapGesture",
      "type": "topic",
      "url": "/documentation/swiftui/spatialtapgesture"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Gesture"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Recognizing-spatial-events",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventCollection",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Chirality"
      ],
      "title": "Recognizing spatial events"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-spatial-event-gesture",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventGesture/init(coordinateSpace:)"
      ],
      "title": "Creating a spatial event gesture"
    },
    {
      "anchor": "Getting-gesture-properties",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/SpatialEventGesture/coordinateSpace"
      ],
      "title": "Getting gesture properties"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/spatialeventgesture"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
