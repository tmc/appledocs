{
  "abstract": [
    {
      "text": "A custom parameter attribute that constructs views from closures.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI11ViewBuilderV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "ViewBuilder"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "ViewBuilder"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "ViewBuilder"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@resultBuilder"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "ViewBuilder"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Declaring-a-Custom-View"
      ]
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You typically use ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " as a parameter attribute for child",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "view-producing closure parameters, allowing those closures to provide",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "multiple child views. For example, the following ",
              "type": "text"
            },
            {
              "code": "contextMenu",
              "type": "codeVoice"
            },
            {
              "text": " function",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "accepts a closure that produces one or more views via the view builder.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func contextMenu<MenuItems: View>(",
            "    @ViewBuilder menuItems: () -> MenuItems",
            ") -> some View"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Clients of this function can use multiple-statement closures to provide",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "several child views, as shown in the following example:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "myView.contextMenu {",
            "    Text(\"Cut\")",
            "    Text(\"Copy\")",
            "    Text(\"Paste\")",
            "    if isSymbol {",
            "        Text(\"Jump to Definition\")",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Declaring-a-Custom-View": {
      "abstract": [
        {
          "text": "Define views and assemble them into a view hierarchy.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Declaring-a-Custom-View",
      "kind": "article",
      "role": "article",
      "title": "Declaring a custom view",
      "type": "topic",
      "url": "/documentation/swiftui/declaring-a-custom-view"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View": {
      "abstract": [
        {
          "text": "A type that represents part of your appâ€™s user interface and provides",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/swiftui/view"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder": {
      "abstract": [
        {
          "text": "A custom parameter attribute that constructs views from closures.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ViewBuilder"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ViewBuilder"
        }
      ],
      "role": "symbol",
      "title": "ViewBuilder",
      "type": "topic",
      "url": "/documentation/swiftui/viewbuilder"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildBlock()": {
      "abstract": [
        {
          "text": "Builds an empty view from a block containing no statements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "buildBlock"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI9EmptyViewV",
          "text": "EmptyView"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildBlock()",
      "kind": "symbol",
      "role": "symbol",
      "title": "buildBlock()",
      "type": "topic",
      "url": "/documentation/swiftui/viewbuilder/buildblock()"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildBlock(_:)": {
      "abstract": [
        {
          "text": "Passes a single view written as a child view through unmodified.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "buildBlock"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildBlock(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "buildBlock(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/viewbuilder/buildblock(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildEither(first:)": {
      "abstract": [
        {
          "text": "Produces content for a conditional statement in a multi-statement closure",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "when the condition is true.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "buildEither"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "TrueContent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "FalseContent"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "first"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "TrueContent"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "_ConditionalContent"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "TrueContent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "FalseContent"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildEither(first:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "buildEither(first:)",
      "type": "topic",
      "url": "/documentation/swiftui/viewbuilder/buildeither(first:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildEither(second:)": {
      "abstract": [
        {
          "text": "Produces content for a conditional statement in a multi-statement closure",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "when the condition is false.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "buildEither"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "TrueContent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "FalseContent"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "second"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "FalseContent"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "_ConditionalContent"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "TrueContent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "FalseContent"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildEither(second:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "buildEither(second:)",
      "type": "topic",
      "url": "/documentation/swiftui/viewbuilder/buildeither(second:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildExpression(_:)": {
      "abstract": [
        {
          "text": "Builds an expression within the builder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "buildExpression"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildExpression(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "buildExpression(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/viewbuilder/buildexpression(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildIf(_:)": {
      "abstract": [
        {
          "text": "Produces an optional view for conditional statements in multi-statement",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "closures thatâ€™s only visible when the condition evaluates to true.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "buildIf"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildIf(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "buildIf(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/viewbuilder/buildif(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildLimitedAvailability(_:)": {
      "abstract": [
        {
          "text": "Processes view content for a conditional compiler-control",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "statement that performs an availability check.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "buildLimitedAvailability"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7AnyViewV",
          "text": "AnyView"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildLimitedAvailability(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "buildLimitedAvailability(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/viewbuilder/buildlimitedavailability(_:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Creating-a-view",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Declaring-a-Custom-View",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View"
      ],
      "title": "Creating a view"
    }
  ],
  "topicSections": [
    {
      "anchor": "Building-content",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildBlock()",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildBlock(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildExpression(_:)"
      ],
      "title": "Building content"
    },
    {
      "anchor": "Conditionally-building-content",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildEither(first:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildEither(second:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildIf(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder/buildLimitedAvailability(_:)"
      ],
      "title": "Conditionally building content"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/viewbuilder"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
