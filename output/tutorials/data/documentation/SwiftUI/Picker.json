{
  "abstract": [
    {
      "text": "A control for selecting from a set of mutually exclusive values.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    },
    "minor": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.2",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI6PickerV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Picker"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Picker"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "Picker"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Picker"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Label"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "SelectionValue"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "Content"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Label"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "SelectionValue"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:SH",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SH",
              "text": "Hashable"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "Content"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picking-Container-Views-for-Your-Content",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Scoping-a-search-operation",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Performing-a-search-operation"
      ]
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You create a picker by providing a selection binding, a label, and the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "content for the picker to display. Set the ",
              "type": "text"
            },
            {
              "code": "selection",
              "type": "codeVoice"
            },
            {
              "text": " parameter to a bound",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "property that provides the value to display as the current selection. Set",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the label to a view that visually describes the purpose of selecting content",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in the picker, and then provide the content for the picker to display.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example, consider an enumeration of ice cream flavors and a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/State",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "variable to hold the selected flavor:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "enum Flavor: String, CaseIterable, Identifiable {",
            "    case chocolate, vanilla, strawberry",
            "    var id: Self { self }",
            "}",
            "",
            "@State private var selectedFlavor: Flavor = .chocolate"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "You can create a picker to select among the values by providing a label, a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "binding to the current selection, and a collection of views for the pickerâ€™s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "content. Append a tag to each of these content views using the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "View/tag(_:)",
              "type": "codeVoice"
            },
            {
              "text": " view modifier so that the type of each selection matches",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the type of the bound state variable:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "List {",
            "    Picker(\"Flavor\", selection: $selectedFlavor) {",
            "        Text(\"Chocolate\").tag(Flavor.chocolate)",
            "        Text(\"Vanilla\").tag(Flavor.vanilla)",
            "        Text(\"Strawberry\").tag(Flavor.strawberry)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "If you provide a string label for the picker, as the example above does,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the picker uses it to initialize a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Text",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " view as a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "label. Alternatively, you can use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(selection:content:label:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "initializer to compose the label from other views. The exact appearance",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of the picker depends on the context. If you use a picker in a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in iOS, it appears in a row with the label and selected value, and a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "chevron to indicate that you can tap the row to select a new value:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "Picker-1-iOS",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For cases where adding a subtitle to the label is desired, use a view",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "builder that creates multiple ",
              "type": "text"
            },
            {
              "code": "Text",
              "type": "codeVoice"
            },
            {
              "text": " views where the first text represents",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the title and the second text represents the subtitle:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "List {",
            "    Picker(selection: $selectedFlavor) {",
            "        Text(\"Chocolate\").tag(Flavor.chocolate)",
            "        Text(\"Vanilla\").tag(Flavor.vanilla)",
            "        Text(\"Strawberry\").tag(Flavor.strawberry)",
            "    } label: {",
            "        Text(\"Flavor\")",
            "        Text(\"Choose your favorite flavor\")",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Iterating-over-a-pickers-options",
          "level": 3,
          "text": "Iterating over a pickerâ€™s options",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To provide selection values for the ",
              "type": "text"
            },
            {
              "code": "Picker",
              "type": "codeVoice"
            },
            {
              "text": " without explicitly listing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "each option, you can create the picker with a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ForEach",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "Picker(\"Flavor\", selection: $selectedFlavor) {",
            "    ForEach(Flavor.allCases) { flavor in",
            "        Text(flavor.rawValue.capitalized)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ForEach",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " automatically assigns a tag to the selection views using",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "each optionâ€™s ",
              "type": "text"
            },
            {
              "code": "id",
              "type": "codeVoice"
            },
            {
              "text": ". This is possible because ",
              "type": "text"
            },
            {
              "code": "Flavor",
              "type": "codeVoice"
            },
            {
              "text": " conforms to the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/Identifiable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "protocol.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The example above relies on the fact that ",
              "type": "text"
            },
            {
              "code": "Flavor",
              "type": "codeVoice"
            },
            {
              "text": " defines the type of its",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "id",
              "type": "codeVoice"
            },
            {
              "text": " parameter to exactly match the selection type. If thatâ€™s not the case,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you need to override the tag. For example, consider a ",
              "type": "text"
            },
            {
              "code": "Topping",
              "type": "codeVoice"
            },
            {
              "text": " type",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and a suggested topping for each flavor:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "enum Topping: String, CaseIterable, Identifiable {",
            "    case nuts, cookies, blueberries",
            "    var id: Self { self }",
            "}",
            "",
            "extension Flavor {",
            "    var suggestedTopping: Topping {",
            "        switch self {",
            "        case .chocolate: return .nuts",
            "        case .vanilla: return .cookies",
            "        case .strawberry: return .blueberries",
            "        }",
            "    }",
            "}",
            "",
            "@State private var suggestedTopping: Topping = .nuts"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The following example shows a picker thatâ€™s bound to a ",
              "type": "text"
            },
            {
              "code": "Topping",
              "type": "codeVoice"
            },
            {
              "text": " type,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "while the options are all ",
              "type": "text"
            },
            {
              "code": "Flavor",
              "type": "codeVoice"
            },
            {
              "text": " instances. Each option uses the tag",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "modifier to associate the suggested topping with the flavor it displays:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "List {",
            "    Picker(\"Flavor\", selection: $suggestedTopping) {",
            "        ForEach(Flavor.allCases) { flavor in",
            "            Text(flavor.rawValue.capitalized)",
            "                .tag(flavor.suggestedTopping)",
            "        }",
            "    }",
            "    HStack {",
            "        Text(\"Suggested Topping\")",
            "        Spacer()",
            "        Text(suggestedTopping.rawValue.capitalized)",
            "            .foregroundStyle(.secondary)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When the user selects chocolate, the picker sets ",
              "type": "text"
            },
            {
              "code": "suggestedTopping",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to the value in the associated tag:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "Picker-2-iOS",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Another example of when the views in a pickerâ€™s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ForEach",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " need an explicit",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "tag modifier is when you select over the cases of an enumeration that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "conforms to the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/Identifiable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "by using anything besides ",
              "type": "text"
            },
            {
              "code": "Self",
              "type": "codeVoice"
            },
            {
              "text": " as the ",
              "type": "text"
            },
            {
              "code": "id",
              "type": "codeVoice"
            },
            {
              "text": " parameter type. For example,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a string enumeration might use the caseâ€™s ",
              "type": "text"
            },
            {
              "code": "rawValue",
              "type": "codeVoice"
            },
            {
              "text": " string as the ",
              "type": "text"
            },
            {
              "code": "id",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "That identifier type doesnâ€™t match the selection type, which is the type",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of the enumeration itself.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Styling-pickers",
          "level": 3,
          "text": "Styling pickers",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can customize the appearance and interaction of pickers using",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "styles that conform to the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/PickerStyle",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol, like",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/PickerStyle/segmented",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/PickerStyle/menu",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". To set a specific style",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "for all picker instances within a view, use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/pickerStyle(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "modifier. The following example applies the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/PickerStyle/segmented",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "style to two pickers that independently select a flavor and a topping:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "VStack {",
            "    Picker(\"Flavor\", selection: $selectedFlavor) {",
            "        ForEach(Flavor.allCases) { flavor in",
            "            Text(flavor.rawValue.capitalized)",
            "        }",
            "    }",
            "    Picker(\"Topping\", selection: $selectedTopping) {",
            "        ForEach(Topping.allCases) { topping in",
            "            Text(topping.rawValue.capitalized)",
            "        }",
            "    }",
            "}",
            ".pickerStyle(.segmented)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "Picker-3-iOS",
              "type": "image"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Picker-1-iOS": {
      "alt": "A screenshot of a list row that has the string Flavor on the left side,",
      "identifier": "Picker-1-iOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4a351f4089665205b3b245871dac02b4/Picker-1-iOS@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/88be6c1125d9463cd93a82decb8381f3/Picker-1-iOS~dark@2x.png"
        }
      ]
    },
    "Picker-2-iOS": {
      "alt": "A screenshot of two list rows. The first has the string Flavor on the left",
      "identifier": "Picker-2-iOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/8fa91ba9fd3404ee7c37adcf43ed6ebc/Picker-2-iOS@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/c8109840c7755f03b0621269607768eb/Picker-2-iOS~dark@2x.png"
        }
      ]
    },
    "Picker-3-iOS": {
      "alt": "A screenshot of two segmented controls. The first has segments labeled",
      "identifier": "Picker-3-iOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/f82eb86c61133e4ffae038339d47ff3b/Picker-3-iOS@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/98a60cede646d5cd2342c8d68c01b1b3/Picker-3-iOS~dark@2x.png"
        }
      ]
    },
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/defaultWheelPickerItemHeight": {
      "abstract": [
        {
          "text": "The default height of an item in a wheel-style picker, such as a date",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "picker.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "defaultWheelPickerItemHeight"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14CoreFoundation7CGFloatV",
          "text": "CGFloat"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/defaultWheelPickerItemHeight",
      "kind": "symbol",
      "role": "symbol",
      "title": "defaultWheelPickerItemHeight",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues/defaultwheelpickeritemheight"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ForEach": {
      "abstract": [
        {
          "text": "A structure that computes views on demand from an underlying collection of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "identified data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ForEach"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ForEach",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ForEach"
        }
      ],
      "role": "symbol",
      "title": "ForEach",
      "type": "topic",
      "url": "/documentation/swiftui/foreach"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List": {
      "abstract": [
        {
          "text": "A container that presents rows of data arranged in a single column,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "optionally providing the ability to select one or more members.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "List"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "List"
        }
      ],
      "role": "symbol",
      "title": "List",
      "type": "topic",
      "url": "/documentation/swiftui/list"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/PaletteSelectionEffect": {
      "abstract": [
        {
          "text": "The selection effect to apply to a palette item.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PaletteSelectionEffect"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/PaletteSelectionEffect",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PaletteSelectionEffect"
        }
      ],
      "role": "symbol",
      "title": "PaletteSelectionEffect",
      "type": "topic",
      "url": "/documentation/swiftui/paletteselectioneffect"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Performing-a-search-operation": {
      "abstract": [
        {
          "text": "Update search results based on search text and optional tokens that you store.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Performing-a-search-operation",
      "kind": "article",
      "role": "article",
      "title": "Performing a search operation",
      "type": "topic",
      "url": "/documentation/swiftui/performing-a-search-operation"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker": {
      "abstract": [
        {
          "text": "A control for selecting from a set of mutually exclusive values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Picker"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Picker"
        }
      ],
      "role": "symbol",
      "title": "Picker",
      "type": "topic",
      "url": "/documentation/swiftui/picker"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:image:selection:content:)": {
      "abstract": [
        {
          "text": "Creates a picker that generates its label from a localized string key",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and image resource",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Label<Text, Image>",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "image"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:image:selection:content:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "image"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:image:selection:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(_:image:selection:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:image:selection:content:currentValueLabel:)": {
      "abstract": [
        {
          "text": "Creates a picker that accepts a custom current value label and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "generates its label from a localized string key and image resource",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Label<Text, Image>",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "image"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:image:selection:content:currentValueLabel:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "image"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:image:selection:content:currentValueLabel:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(_:image:selection:content:currentvaluelabel:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:image:sources:selection:content:)": {
      "abstract": [
        {
          "text": "Creates a picker bound to a collection of bindings that generates its",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "label from a string and image resource.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Label<Text, Image>",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "image"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:image:sources:selection:content:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "image"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:image:sources:selection:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(_:image:sources:selection:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:image:sources:selection:content:currentValueLabel:)": {
      "abstract": [
        {
          "text": "Creates a picker bound to a collection of bindings that accepts a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "custom current value label and generates its label from a string and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "image resource.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Label<Text, Image>",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "image"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:image:sources:selection:content:currentValueLabel:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "image"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:image:sources:selection:content:currentValueLabel:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(_:image:sources:selection:content:currentvaluelabel:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:selection:content:)": {
      "abstract": [
        {
          "text": "Creates a picker that generates its label from a localized string key.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Text",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:selection:content:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:selection:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(_:selection:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:selection:content:currentValueLabel:)": {
      "abstract": [
        {
          "text": "Creates a picker that generates its label from a localized string key",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and accepts a custom current value label.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Text",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:selection:content:currentValueLabel:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:selection:content:currentValueLabel:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(_:selection:content:currentvaluelabel:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:sources:selection:content:)": {
      "abstract": [
        {
          "text": "Creates a picker bound to a collection of bindings that generates its",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "label from a string.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Text",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:sources:selection:content:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:sources:selection:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(_:sources:selection:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:sources:selection:content:currentValueLabel:)": {
      "abstract": [
        {
          "text": "Creates a picker bound to a collection of bindings that generates its",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "label from a string and accepts a custom current value label.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Text",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:sources:selection:content:currentValueLabel:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:sources:selection:content:currentValueLabel:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(_:sources:selection:content:currentvaluelabel:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:systemImage:selection:content:)": {
      "abstract": [
        {
          "text": "Creates a picker that generates its label from a localized string key",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and system image.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Label<Text, Image>",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "systemImage"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:systemImage:selection:content:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "systemImage"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:systemImage:selection:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(_:systemimage:selection:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:systemImage:selection:content:currentValueLabel:)": {
      "abstract": [
        {
          "text": "Creates a picker that accepts a custom current value label and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "generates its label from a localized string key and system image.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Label<Text, Image>",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "systemImage"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:systemImage:selection:content:currentValueLabel:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "systemImage"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:systemImage:selection:content:currentValueLabel:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(_:systemimage:selection:content:currentvaluelabel:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:systemImage:sources:selection:content:)": {
      "abstract": [
        {
          "text": "Creates a picker bound to a collection of bindings that generates its",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "label from a string.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Label<Text, Image>",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "systemImage"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:systemImage:sources:selection:content:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "systemImage"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:systemImage:sources:selection:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(_:systemimage:sources:selection:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:systemImage:sources:selection:content:currentValueLabel:)": {
      "abstract": [
        {
          "text": "Creates a picker bound to a collection of bindings that accepts a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "custom current value label and generates its label from a string.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Label<Text, Image>",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "systemImage"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:systemImage:sources:selection:content:currentValueLabel:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "systemImage"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:systemImage:sources:selection:content:currentValueLabel:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(_:systemimage:sources:selection:content:currentvaluelabel:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(selection:content:label:)": {
      "abstract": [
        {
          "text": "Creates a picker that displays a custom label.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "SelectionValue"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(selection:content:label:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(selection:content:label:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(selection:content:label:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(selection:content:label:currentValueLabel:)": {
      "abstract": [
        {
          "text": "Creates a picker that displays a custom label and a custom value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "label where applicable.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "SelectionValue"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(selection:content:label:currentValueLabel:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(selection:content:label:currentValueLabel:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(selection:content:label:currentvaluelabel:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(selection:label:content:)": {
      "abstract": [
        {
          "text": "Creates a picker that displays a custom label.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "SelectionValue"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(selection:label:content:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(selection:label:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(selection:label:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(sources:selection:content:label:)": {
      "abstract": [
        {
          "text": "Creates a picker that displays a custom label.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7KeyPathC",
          "text": "KeyPath"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "SelectionValue"
        },
        {
          "kind": "text",
          "text": ">>, "
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(sources:selection:content:label:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(sources:selection:content:label:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(sources:selection:content:label:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(sources:selection:content:label:currentValueLabel:)": {
      "abstract": [
        {
          "text": "Creates a picker that displays a custom label and current value label",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "where applicable.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7KeyPathC",
          "text": "KeyPath"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "SelectionValue"
        },
        {
          "kind": "text",
          "text": ">>, "
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(sources:selection:content:label:currentValueLabel:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(sources:selection:content:label:currentValueLabel:)",
      "type": "topic",
      "url": "/documentation/swiftui/picker/init(sources:selection:content:label:currentvaluelabel:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/PickerStyle": {
      "abstract": [
        {
          "text": "A type that specifies the appearance and interaction of all pickers within",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "a view hierarchy.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PickerStyle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/PickerStyle",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PickerStyle"
        }
      ],
      "role": "symbol",
      "title": "PickerStyle",
      "type": "topic",
      "url": "/documentation/swiftui/pickerstyle"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/PickerStyle/menu": {
      "abstract": [
        {
          "text": "A picker style that presents the options as a menu when the user presses a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "button, or as a submenu when nested within a larger menu.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "MenuPickerStyle",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "menu"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI15MenuPickerStyleV",
          "text": "MenuPickerStyle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/PickerStyle/menu",
      "kind": "symbol",
      "role": "symbol",
      "title": "menu",
      "type": "topic",
      "url": "/documentation/swiftui/pickerstyle/menu"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/PickerStyle/segmented": {
      "abstract": [
        {
          "text": "A picker style that presents the options in a segmented control.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "SegmentedPickerStyle",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "segmented"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI20SegmentedPickerStyleV",
          "text": "SegmentedPickerStyle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/PickerStyle/segmented",
      "kind": "symbol",
      "role": "symbol",
      "title": "segmented",
      "type": "topic",
      "url": "/documentation/swiftui/pickerstyle/segmented"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picking-Container-Views-for-Your-Content": {
      "abstract": [
        {
          "text": "Build flexible user interfaces by using stacks, grids, lists, and forms.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picking-Container-Views-for-Your-Content",
      "kind": "article",
      "role": "article",
      "title": "Picking container views for your content",
      "type": "topic",
      "url": "/documentation/swiftui/picking-container-views-for-your-content"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Scoping-a-search-operation": {
      "abstract": [
        {
          "text": "Divide the search space into a few broad categories.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Scoping-a-search-operation",
      "kind": "article",
      "role": "article",
      "title": "Scoping a search operation",
      "type": "topic",
      "url": "/documentation/swiftui/scoping-a-search-operation"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/State": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value managed by SwiftUI.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "State"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/State",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "State"
        }
      ],
      "role": "symbol",
      "title": "State",
      "type": "topic",
      "url": "/documentation/swiftui/state"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Text": {
      "abstract": [
        {
          "text": "A view that displays one or more lines of read-only text.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Text",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Text"
        }
      ],
      "role": "symbol",
      "title": "Text",
      "type": "topic",
      "url": "/documentation/swiftui/text"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View": {
      "abstract": [
        {
          "text": "A type that represents part of your appâ€™s user interface and provides",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/swiftui/view"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/defaultWheelPickerItemHeight(_:)": {
      "abstract": [
        {
          "text": "Sets the default wheel-style picker item height.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "defaultWheelPickerItemHeight"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14CoreFoundation7CGFloatV",
          "text": "CGFloat"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/defaultWheelPickerItemHeight(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "defaultWheelPickerItemHeight(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/defaultwheelpickeritemheight(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/horizontalRadioGroupLayout()": {
      "abstract": [
        {
          "text": "Sets the style for radio group style pickers within this view to be",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "horizontally positioned with the radio buttons inside the layout.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "horizontalRadioGroupLayout"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/horizontalRadioGroupLayout()",
      "kind": "symbol",
      "role": "symbol",
      "title": "horizontalRadioGroupLayout()",
      "type": "topic",
      "url": "/documentation/swiftui/view/horizontalradiogrouplayout()"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/paletteSelectionEffect(_:)": {
      "abstract": [
        {
          "text": "Specifies the selection effect to apply to a palette item.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "paletteSelectionEffect"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI22PaletteSelectionEffectV",
          "text": "PaletteSelectionEffect"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/paletteSelectionEffect(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "paletteSelectionEffect(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/paletteselectioneffect(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/pickerStyle(_:)": {
      "abstract": [
        {
          "text": "Sets the style for pickers within this view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "pickerStyle"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/pickerStyle(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "pickerStyle(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/pickerstyle(_:)"
    },
    "doc://com.apple.documentation/documentation/Swift/Identifiable": {
      "abstract": [
        {
          "text": "A class of types whose instances hold the value of an entity with stable identity.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Identifiable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12IdentifiableP2IDQa",
          "text": "ID"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/Identifiable",
      "kind": "symbol",
      "role": "symbol",
      "title": "Identifiable",
      "type": "topic",
      "url": "/documentation/Swift/Identifiable"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Choosing-from-a-set-of-options",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/pickerStyle(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/horizontalRadioGroupLayout()",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/defaultWheelPickerItemHeight(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/defaultWheelPickerItemHeight",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/paletteSelectionEffect(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/PaletteSelectionEffect"
      ],
      "title": "Choosing from a set of options"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-picker",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:selection:content:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(selection:content:label:)"
      ],
      "title": "Creating a picker"
    },
    {
      "anchor": "Creating-a-picker-for-a-collection",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:sources:selection:content:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(sources:selection:content:label:)"
      ],
      "title": "Creating a picker for a collection"
    },
    {
      "anchor": "Creating-a-picker-with-an-image-label",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:image:selection:content:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:image:sources:selection:content:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:systemImage:selection:content:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:systemImage:sources:selection:content:)"
      ],
      "title": "Creating a picker with an image label"
    },
    {
      "anchor": "Deprecated-initializers",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(selection:label:content:)"
      ],
      "title": "Deprecated initializers"
    },
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:image:selection:content:currentValueLabel:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:image:sources:selection:content:currentValueLabel:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:selection:content:currentValueLabel:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:sources:selection:content:currentValueLabel:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:systemImage:selection:content:currentValueLabel:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(_:systemImage:sources:selection:content:currentValueLabel:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(selection:content:label:currentValueLabel:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker/init(sources:selection:content:label:currentValueLabel:)"
      ],
      "title": "Initializers"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/picker"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
