{
  "abstract": [
    {
      "text": "An interface for a stored variable that updates an external property of a",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "view.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/DynamicProperty"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI15DynamicPropertyP",
    "fragments": [
      {
        "kind": "keyword",
        "text": "protocol"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "DynamicProperty"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "DynamicProperty"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Protocol",
    "symbolKind": "protocol",
    "title": "DynamicProperty"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "DynamicProperty"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The view gives values to these properties prior to recomputing the viewâ€™s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/body-8kl5o",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value that SwiftUI updates",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "as the focus of any active accessibility technology, such as VoiceOver,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AccessibilityFocusState"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AccessibilityFocusState"
        }
      ],
      "role": "symbol",
      "title": "AccessibilityFocusState",
      "type": "topic",
      "url": "/documentation/swiftui/accessibilityfocusstate"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/AppStorage": {
      "abstract": [
        {
          "text": "A property wrapper type that reflects a value from ",
          "type": "text"
        },
        {
          "code": "UserDefaults",
          "type": "codeVoice"
        },
        {
          "text": " and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "invalidates a view on a change in value in that user default.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AppStorage"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/AppStorage",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AppStorage"
        }
      ],
      "role": "symbol",
      "title": "AppStorage",
      "type": "topic",
      "url": "/documentation/swiftui/appstorage"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Binding": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value owned by a source of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "truth.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Value",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Binding"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Binding",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Binding"
        }
      ],
      "role": "symbol",
      "title": "Binding",
      "type": "topic",
      "url": "/documentation/swiftui/binding"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/DynamicProperty": {
      "abstract": [
        {
          "text": "An interface for a stored variable that updates an external property of a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DynamicProperty"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/DynamicProperty",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DynamicProperty"
        }
      ],
      "role": "symbol",
      "title": "DynamicProperty",
      "type": "topic",
      "url": "/documentation/swiftui/dynamicproperty"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/DynamicProperty/update()": {
      "abstract": [
        {
          "text": "Updates the underlying value of the stored value.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "update"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/DynamicProperty/update()",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "update()",
      "type": "topic",
      "url": "/documentation/swiftui/dynamicproperty/update()"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment": {
      "abstract": [
        {
          "text": "A property wrapper that reads a value from a viewâ€™s environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Environment"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Environment"
        }
      ],
      "role": "symbol",
      "title": "Environment",
      "type": "topic",
      "url": "/documentation/swiftui/environment"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentObject": {
      "abstract": [
        {
          "text": "A property wrapper type for an observable object that a parent or ancestor",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "view supplies.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EnvironmentObject"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentObject",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EnvironmentObject"
        }
      ],
      "role": "symbol",
      "title": "EnvironmentObject",
      "type": "topic",
      "url": "/documentation/swiftui/environmentobject"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/FetchRequest": {
      "abstract": [
        {
          "text": "A property wrapper type that retrieves entities from a Core Data persistent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "store.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Result",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "NSFetchRequestResult",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FetchRequest"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/FetchRequest",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FetchRequest"
        }
      ],
      "role": "symbol",
      "title": "FetchRequest",
      "type": "topic",
      "url": "/documentation/swiftui/fetchrequest"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusState": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value that SwiftUI updates",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "as the placement of focus within the scene changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FocusState"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusState",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FocusState"
        }
      ],
      "role": "symbol",
      "title": "FocusState",
      "type": "topic",
      "url": "/documentation/swiftui/focusstate"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedBinding": {
      "abstract": [
        {
          "text": "A convenience property wrapper for observing and automatically unwrapping",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "state bindings from the focused view or one of its ancestors.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FocusedBinding"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedBinding",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FocusedBinding"
        }
      ],
      "role": "symbol",
      "title": "FocusedBinding",
      "type": "topic",
      "url": "/documentation/swiftui/focusedbinding"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedObject": {
      "abstract": [
        {
          "text": "A property wrapper type for an observable object supplied by the focused",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "view or one of its ancestors.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FocusedObject"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedObject",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FocusedObject"
        }
      ],
      "role": "symbol",
      "title": "FocusedObject",
      "type": "topic",
      "url": "/documentation/swiftui/focusedobject"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedValue": {
      "abstract": [
        {
          "text": "A property wrapper for observing values from the focused view or one of its",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "ancestors.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FocusedValue"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedValue",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FocusedValue"
        }
      ],
      "role": "symbol",
      "title": "FocusedValue",
      "type": "topic",
      "url": "/documentation/swiftui/focusedvalue"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState": {
      "abstract": [
        {
          "text": "A property wrapper type that updates a property while the user performs a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "gesture and resets the property back to its initial state when the gesture",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "ends.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GestureState"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "GestureState"
        }
      ],
      "role": "symbol",
      "title": "GestureState",
      "type": "topic",
      "url": "/documentation/swiftui/gesturestate"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NSApplicationDelegateAdaptor": {
      "abstract": [
        {
          "text": "A property wrapper type that you use to create an AppKit app delegate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSApplicationDelegateAdaptor"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NSApplicationDelegateAdaptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSApplicationDelegateAdaptor"
        }
      ],
      "role": "symbol",
      "title": "NSApplicationDelegateAdaptor",
      "type": "topic",
      "url": "/documentation/swiftui/nsapplicationdelegateadaptor"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Namespace": {
      "abstract": [
        {
          "text": "A dynamic property type that allows access to a namespace defined",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "by the persistent identity of the object containing the property",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "(e.g. a view).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Namespace"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Namespace",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Namespace"
        }
      ],
      "role": "symbol",
      "title": "Namespace",
      "type": "topic",
      "url": "/documentation/swiftui/namespace"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ObservedObject": {
      "abstract": [
        {
          "text": "A property wrapper type that subscribes to an observable object and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "invalidates a view whenever the observable object changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ObservedObject"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ObservedObject",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ObservedObject"
        }
      ],
      "role": "symbol",
      "title": "ObservedObject",
      "type": "topic",
      "url": "/documentation/swiftui/observedobject"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/PhysicalMetric": {
      "abstract": [
        {
          "text": "Provides access to a value in points that corresponds to the specified",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "physical measurement.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PhysicalMetric"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/PhysicalMetric",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PhysicalMetric"
        }
      ],
      "role": "symbol",
      "title": "PhysicalMetric",
      "type": "topic",
      "url": "/documentation/swiftui/physicalmetric"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ScaledMetric": {
      "abstract": [
        {
          "text": "A dynamic property that scales a numeric value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ScaledMetric"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ScaledMetric",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ScaledMetric"
        }
      ],
      "role": "symbol",
      "title": "ScaledMetric",
      "type": "topic",
      "url": "/documentation/swiftui/scaledmetric"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/SceneStorage": {
      "abstract": [
        {
          "text": "A property wrapper type that reads and writes to persisted, per-scene",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "storage.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SceneStorage"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SceneStorage",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SceneStorage"
        }
      ],
      "role": "symbol",
      "title": "SceneStorage",
      "type": "topic",
      "url": "/documentation/swiftui/scenestorage"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/SectionedFetchRequest": {
      "abstract": [
        {
          "text": "A property wrapper type that retrieves entities, grouped into sections,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "from a Core Data persistent store.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "SectionIdentifier",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Result",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "NSFetchRequestResult",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SectionedFetchRequest"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SectionedFetchRequest",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SectionedFetchRequest"
        }
      ],
      "role": "symbol",
      "title": "SectionedFetchRequest",
      "type": "topic",
      "url": "/documentation/swiftui/sectionedfetchrequest"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/State": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value managed by SwiftUI.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "State"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/State",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "State"
        }
      ],
      "role": "symbol",
      "title": "State",
      "type": "topic",
      "url": "/documentation/swiftui/state"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/StateObject": {
      "abstract": [
        {
          "text": "A property wrapper type that instantiates an observable object.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "StateObject"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/StateObject",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StateObject"
        }
      ],
      "role": "symbol",
      "title": "StateObject",
      "type": "topic",
      "url": "/documentation/swiftui/stateobject"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/UIApplicationDelegateAdaptor": {
      "abstract": [
        {
          "text": "A property wrapper type that you use to create a UIKit app delegate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UIApplicationDelegateAdaptor"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/UIApplicationDelegateAdaptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UIApplicationDelegateAdaptor"
        }
      ],
      "role": "symbol",
      "title": "UIApplicationDelegateAdaptor",
      "type": "topic",
      "url": "/documentation/swiftui/uiapplicationdelegateadaptor"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/body-8kl5o": {
      "abstract": [
        {
          "text": "The content and behavior of the view.",
          "type": "text"
        }
      ],
      "defaultImplementations": 6,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "body"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP4BodyQa",
          "text": "Body"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/body-8kl5o",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "body",
      "type": "topic",
      "url": "/documentation/swiftui/view/body-8kl5o"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WKApplicationDelegateAdaptor": {
      "abstract": [
        {
          "text": "A property wrapper that is used in ",
          "type": "text"
        },
        {
          "code": "App",
          "type": "codeVoice"
        },
        {
          "text": " to provide a delegate from",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "WatchKit.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "WKApplicationDelegateAdaptor"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WKApplicationDelegateAdaptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "WKApplicationDelegateAdaptor"
        }
      ],
      "role": "symbol",
      "title": "WKApplicationDelegateAdaptor",
      "type": "topic",
      "url": "/documentation/swiftui/wkapplicationdelegateadaptor"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WKExtensionDelegateAdaptor": {
      "abstract": [
        {
          "text": "A property wrapper type that you use to create a WatchKit extension delegate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "WKExtensionDelegateAdaptor"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WKExtensionDelegateAdaptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "WKExtensionDelegateAdaptor"
        }
      ],
      "role": "symbol",
      "title": "WKExtensionDelegateAdaptor",
      "type": "topic",
      "url": "/documentation/swiftui/wkextensiondelegateadaptor"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/AccessibilityFocusState",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/AppStorage",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Binding",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentObject",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/FetchRequest",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusState",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedBinding",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedObject",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedValue",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NSApplicationDelegateAdaptor",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Namespace",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ObservedObject",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/PhysicalMetric",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ScaledMetric",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/SceneStorage",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/SectionedFetchRequest",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/State",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/StateObject",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/UIApplicationDelegateAdaptor",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WKApplicationDelegateAdaptor",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/WKExtensionDelegateAdaptor"
      ],
      "kind": "relationships",
      "title": "Conforming Types",
      "type": "conformingTypes"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "topicSections": [
    {
      "anchor": "Updating-the-value",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/DynamicProperty/update()"
      ],
      "title": "Updating the value"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/dynamicproperty"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
