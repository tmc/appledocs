{
  "abstract": [
    {
      "text": "A view that displays a root view and enables you to present additional",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "views over the root view.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI15NavigationStackV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "NavigationStack"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "NavigationStack"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "NavigationStack"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:ScM",
              "kind": "attribute",
              "preciseIdentifier": "s:ScM",
              "text": "MainActor"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "attribute",
              "text": "@preconcurrency"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NavigationStack"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Data"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "Root"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Root"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Migrating-to-New-Navigation-Types",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Adding-a-search-interface-to-your-app"
      ]
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use a navigation stack to present a stack of views over a root view.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "People can add views to the top of the stack by clicking or tapping a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationLink",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", and remove views using built-in, platform-appropriate",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "controls, like a Back button or a swipe gesture. The stack always displays",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the most recently added view that hasn’t been removed, and doesn’t allow",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the root view to be removed.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To create navigation links, associate a view with a data type by adding a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(for:destination:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " modifier inside",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the stack’s view hierarchy. Then initialize a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationLink",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "presents an instance of the same kind of data. The following stack displays",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a ",
              "type": "text"
            },
            {
              "code": "ParkDetails",
              "type": "codeVoice"
            },
            {
              "text": " view for navigation links that present data of type ",
              "type": "text"
            },
            {
              "code": "Park",
              "type": "codeVoice"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "NavigationStack {",
            "    List(parks) { park in",
            "        NavigationLink(park.name, value: park)",
            "    }",
            "    .navigationDestination(for: Park.self) { park in",
            "        ParkDetails(park: park)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "In this example, the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " acts as the root view and is always",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "present. Selecting a navigation link from the list adds a ",
              "type": "text"
            },
            {
              "code": "ParkDetails",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "view to the stack, so that it covers the list. Navigating back removes",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the detail view and reveals the list again. The system disables backward",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "navigation controls when the stack is empty and the root view, namely",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the list, is visible.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Manage-navigation-state",
          "level": 3,
          "text": "Manage navigation state",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "By default, a navigation stack manages state to keep track of the views on",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the stack. However, your code can share control of the state by initializing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the stack with a binding to a collection of data values that you create.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The stack adds items to the collection as it adds views to the stack and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "removes items when it removes views. For example, you can create a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/State",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "property to manage the navigation for the park detail view:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@State private var presentedParks: [Park] = []"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Initializing the state as an empty array indicates a stack with no views.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Provide a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Binding",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to this state property using the dollar sign (",
              "type": "text"
            },
            {
              "code": "$",
              "type": "codeVoice"
            },
            {
              "text": ")",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "prefix when you create a stack using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack/init(path:root:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "initializer:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "NavigationStack(path: $presentedParks) {",
            "    List(parks) { park in",
            "        NavigationLink(park.name, value: park)",
            "    }",
            "    .navigationDestination(for: Park.self) { park in",
            "        ParkDetails(park: park)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Like before, when someone taps or clicks the navigation link for a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "park, the stack displays the ",
              "type": "text"
            },
            {
              "code": "ParkDetails",
              "type": "codeVoice"
            },
            {
              "text": " view using the associated park",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "data. However, now the stack also puts the park data in the ",
              "type": "text"
            },
            {
              "code": "presentedParks",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "array. Your code can observe this array to read the current stack state. It",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "can also modify the array to change the views on the stack. For example, you",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "can create a method that configures the stack with a specific set of parks:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func showParks() {",
            "    presentedParks = [Park(\"Yosemite\"), Park(\"Sequoia\")]",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "showParks",
              "type": "codeVoice"
            },
            {
              "text": " method replaces the stack’s display with a view that shows",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "details for Sequoia, the last item in the new ",
              "type": "text"
            },
            {
              "code": "presentedParks",
              "type": "codeVoice"
            },
            {
              "text": " array.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Navigating back from that view removes Sequoia from the array, which",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "reveals a view that shows details for Yosemite. Use a path to support",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "deep links, state restoration, or other kinds of programmatic navigation.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Navigate-to-different-view-types",
          "level": 3,
          "text": "Navigate to different view types",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To create a stack that can present more than one kind of view, you can add",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "multiple ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(for:destination:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " modifiers",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "inside the stack’s view hierarchy, with each modifier presenting a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "different data type. The stack matches navigation links with navigation",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "destinations based on their respective data types.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To create a path for programmatic navigation that contains more than one",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "kind of data, you can use a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " instance as the path.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Adding-a-search-interface-to-your-app": {
      "abstract": [
        {
          "text": "Present an interface that people can use to search for content in your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Adding-a-search-interface-to-your-app",
      "kind": "article",
      "role": "article",
      "title": "Adding a search interface to your app",
      "type": "topic",
      "url": "/documentation/swiftui/adding-a-search-interface-to-your-app"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Binding": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value owned by a source of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "truth.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Binding"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Binding",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Binding"
        }
      ],
      "role": "symbol",
      "title": "Binding",
      "type": "topic",
      "url": "/documentation/swiftui/binding"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List": {
      "abstract": [
        {
          "text": "A container that presents rows of data arranged in a single column,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "optionally providing the ability to select one or more members.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "List"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "List"
        }
      ],
      "role": "symbol",
      "title": "List",
      "type": "topic",
      "url": "/documentation/swiftui/list"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Migrating-to-New-Navigation-Types": {
      "abstract": [
        {
          "text": "Improve navigation behavior in your app by replacing navigation views",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "with navigation stacks and navigation split views.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Migrating-to-New-Navigation-Types",
      "kind": "article",
      "role": "article",
      "title": "Migrating to new navigation types",
      "type": "topic",
      "url": "/documentation/swiftui/migrating-to-new-navigation-types"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationLink": {
      "abstract": [
        {
          "text": "A view that controls a navigation presentation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NavigationLink"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationLink",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NavigationLink"
        }
      ],
      "role": "symbol",
      "title": "NavigationLink",
      "type": "topic",
      "url": "/documentation/swiftui/navigationlink"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath": {
      "abstract": [
        {
          "text": "A type-erased list of data representing the content of a navigation stack.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NavigationPath"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NavigationPath"
        }
      ],
      "role": "symbol",
      "title": "NavigationPath",
      "type": "topic",
      "url": "/documentation/swiftui/navigationpath"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack": {
      "abstract": [
        {
          "text": "A view that displays a root view and enables you to present additional",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "views over the root view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NavigationStack"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NavigationStack"
        }
      ],
      "role": "symbol",
      "title": "NavigationStack",
      "type": "topic",
      "url": "/documentation/swiftui/navigationstack"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack/init(path:root:)": {
      "abstract": [
        {
          "text": "Creates a navigation stack with homogeneous navigation state that you",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "can control.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "path"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "root"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack/init(path:root:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "path"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "root"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(path:root:)",
      "type": "topic",
      "url": "/documentation/swiftui/navigationstack/init(path:root:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack/init(root:)": {
      "abstract": [
        {
          "text": "Creates a navigation stack that manages its own navigation state.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "root"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Root"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack/init(root:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(root:)",
      "type": "topic",
      "url": "/documentation/swiftui/navigationstack/init(root:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/State": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value managed by SwiftUI.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "State"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/State",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "State"
        }
      ],
      "role": "symbol",
      "title": "State",
      "type": "topic",
      "url": "/documentation/swiftui/state"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/swiftui/view"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(for:destination:)": {
      "abstract": [
        {
          "text": "Associates a destination view with a presented data type for use within",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "a navigation stack.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "navigationDestination"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "destination"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(for:destination:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "navigationDestination(for:destination:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/navigationdestination(for:destination:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(isPresented:destination:)": {
      "abstract": [
        {
          "text": "Associates a destination view with a binding that can be used to push",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the view onto a ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "navigationDestination"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "isPresented"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "destination"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(isPresented:destination:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "navigationDestination(isPresented:destination:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/navigationdestination(ispresented:destination:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(item:destination:)": {
      "abstract": [
        {
          "text": "Associates a destination view with a bound value for use within a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "navigation stack or navigation split view",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "navigationDestination"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "item"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sq",
          "text": "Optional"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ">>, "
        },
        {
          "kind": "externalParam",
          "text": "destination"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(item:destination:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "navigationDestination(item:destination:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/navigationdestination(item:destination:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:ScM": {
      "abstract": [
        {
          "text": "A singleton actor whose executor is equivalent to the main dispatch queue.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@globalActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "final"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "actor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MainActor"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:ScM",
      "kind": "symbol",
      "role": "symbol",
      "title": "MainActor",
      "type": "topic",
      "url": "/documentation/Swift/MainActor"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Stacking-views-in-one-column",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationPath",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(for:destination:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(isPresented:destination:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/navigationDestination(item:destination:)"
      ],
      "title": "Stacking views in one column"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-navigation-stack",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack/init(root:)"
      ],
      "title": "Creating a navigation stack"
    },
    {
      "anchor": "Creating-a-navigation-stack-with-a-path",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationStack/init(path:root:)"
      ],
      "title": "Creating a navigation stack with a path"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/navigationstack"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
