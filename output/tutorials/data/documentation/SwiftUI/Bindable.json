{
  "abstract": [
    {
      "text": "A property wrapper type that supports creating bindings to the mutable",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "properties of observable objects.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI8BindableV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Bindable"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Bindable"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "Bindable"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@dynamicMemberLookup"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "attribute",
              "text": "@propertyWrapper"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Bindable"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Value"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use this property wrapper to create bindings to mutable properties of a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "data model object that conforms to the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Observation/Observable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "protocol. For example, the following code wraps the ",
              "type": "text"
            },
            {
              "code": "book",
              "type": "codeVoice"
            },
            {
              "text": " input with",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "@Bindable",
              "type": "codeVoice"
            },
            {
              "text": ". Then it uses a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/TextField",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to change the ",
              "type": "text"
            },
            {
              "code": "title",
              "type": "codeVoice"
            },
            {
              "text": " property of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a book, and a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Toggle",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to change the ",
              "type": "text"
            },
            {
              "code": "isAvailable",
              "type": "codeVoice"
            },
            {
              "text": " property, using the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "$",
              "type": "codeVoice"
            },
            {
              "text": " syntax to pass a binding for each property to those controls.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Observable",
            "class Book: Identifiable {",
            "    var title = \"Sample Book Title\"",
            "    var isAvailable = true",
            "}",
            "",
            "struct BookEditView: View {",
            "    @Bindable var book: Book",
            "    @Environment(\\.dismiss) private var dismiss",
            "",
            "    var body: some View {",
            "        Form {",
            "            TextField(\"Title\", text: $book.title)",
            "",
            "            Toggle(\"Book is available\", isOn: $book.isAvailable)",
            "",
            "            Button(\"Close\") {",
            "                dismiss()",
            "            }",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "You can use the ",
              "type": "text"
            },
            {
              "code": "Bindable",
              "type": "codeVoice"
            },
            {
              "text": " property wrapper on properties and variables to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Observation/Observable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "object. This includes global variables, properties that exists outside of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "SwiftUI types, or even local variables. For example, you can create a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "@Bindable",
              "type": "codeVoice"
            },
            {
              "text": " variable within a viewâ€™s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/body-8kl5o",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct LibraryView: View {",
            "    @State private var books = [Book(), Book(), Book()]",
            "",
            "    var body: some View {",
            "        List(books) { book in",
            "            @Bindable var book = book",
            "            TextField(\"Title\", text: $book.title)",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "@Bindable",
              "type": "codeVoice"
            },
            {
              "text": " variable ",
              "type": "text"
            },
            {
              "code": "book",
              "type": "codeVoice"
            },
            {
              "text": " provides a binding that connects",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/TextField",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to the ",
              "type": "text"
            },
            {
              "code": "title",
              "type": "codeVoice"
            },
            {
              "text": " property of a book so that a person can make",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "changes directly to the model data.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Use this same approach when you need a binding to a property of an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "observable object stored in a viewâ€™s environment. For example, the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "following code uses the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property wrapper to retrieve an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instance of the observable type ",
              "type": "text"
            },
            {
              "code": "Book",
              "type": "codeVoice"
            },
            {
              "text": ". Then the code creates a ",
              "type": "text"
            },
            {
              "code": "@Bindable",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "variable ",
              "type": "text"
            },
            {
              "code": "book",
              "type": "codeVoice"
            },
            {
              "text": " and passes a binding for the ",
              "type": "text"
            },
            {
              "code": "title",
              "type": "codeVoice"
            },
            {
              "text": " property to a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/TextField",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " using the ",
              "type": "text"
            },
            {
              "code": "$",
              "type": "codeVoice"
            },
            {
              "text": " syntax.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct TitleEditView: View {",
            "    @Environment(Book.self) private var book",
            "",
            "    var body: some View {",
            "        @Bindable var book = book",
            "        TextField(\"Title\", text: $book.title)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable": {
      "abstract": [
        {
          "text": "A property wrapper type that supports creating bindings to the mutable",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "properties of observable objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Bindable"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Bindable"
        }
      ],
      "role": "symbol",
      "title": "Bindable",
      "type": "topic",
      "url": "/documentation/swiftui/bindable"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/init(_:)": {
      "abstract": [
        {
          "text": "Creates a bindable object from an observable object.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Value",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Observable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/init(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/bindable/init(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/init(projectedValue:)": {
      "abstract": [
        {
          "text": "Creates a bindable from the value of another bindable.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Value",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Observable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "projectedValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI8BindableV",
          "text": "Bindable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/init(projectedValue:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(projectedValue:)",
      "type": "topic",
      "url": "/documentation/swiftui/bindable/init(projectedvalue:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/init(wrappedValue:)": {
      "abstract": [
        {
          "text": "Creates a bindable object from an observable object.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Value",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Observable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "wrappedValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/init(wrappedValue:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(wrappedValue:)",
      "type": "topic",
      "url": "/documentation/swiftui/bindable/init(wrappedvalue:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/projectedValue": {
      "abstract": [
        {
          "text": "The bindable wrapper for the object that creates bindings to its",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "properties using dynamic member lookup.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "projectedValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI8BindableV",
          "text": "Bindable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/projectedValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "projectedValue",
      "type": "topic",
      "url": "/documentation/swiftui/bindable/projectedvalue"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/subscript(dynamicMember:)": {
      "abstract": [
        {
          "text": "Returns a binding to the value of a given key path.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "subscript"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Subject"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "dynamicMember"
        },
        {
          "kind": "text",
          "text": " _: "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s24ReferenceWritableKeyPathC",
          "text": "ReferenceWritableKeyPath"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Subject"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Subject"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/subscript(dynamicMember:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "subscript(dynamicMember:)",
      "type": "topic",
      "url": "/documentation/swiftui/bindable/subscript(dynamicmember:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/wrappedValue": {
      "abstract": [
        {
          "text": "The wrapped object.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "wrappedValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/wrappedValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "wrappedValue",
      "type": "topic",
      "url": "/documentation/swiftui/bindable/wrappedvalue"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Binding": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value owned by a source of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "truth.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Binding"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Binding",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Binding"
        }
      ],
      "role": "symbol",
      "title": "Binding",
      "type": "topic",
      "url": "/documentation/swiftui/binding"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment": {
      "abstract": [
        {
          "text": "A property wrapper that reads a value from a viewâ€™s environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Environment"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Environment",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Environment"
        }
      ],
      "role": "symbol",
      "title": "Environment",
      "type": "topic",
      "url": "/documentation/swiftui/environment"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Managing-User-Interface-State": {
      "abstract": [
        {
          "text": "Encapsulate view-specific data within your appâ€™s view hierarchy to make your",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "views reusable.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Managing-User-Interface-State",
      "kind": "article",
      "role": "article",
      "title": "Managing user interface state",
      "type": "topic",
      "url": "/documentation/swiftui/managing-user-interface-state"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/State": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value managed by SwiftUI.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "State"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/State",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "State"
        }
      ],
      "role": "symbol",
      "title": "State",
      "type": "topic",
      "url": "/documentation/swiftui/state"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/TextField": {
      "abstract": [
        {
          "text": "A control that displays an editable text interface.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TextField"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/TextField",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TextField"
        }
      ],
      "role": "symbol",
      "title": "TextField",
      "type": "topic",
      "url": "/documentation/swiftui/textfield"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Toggle": {
      "abstract": [
        {
          "text": "A control that toggles between on and off states.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Toggle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Toggle",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Toggle"
        }
      ],
      "role": "symbol",
      "title": "Toggle",
      "type": "topic",
      "url": "/documentation/swiftui/toggle"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/body-8kl5o": {
      "abstract": [
        {
          "text": "The content and behavior of the view.",
          "type": "text"
        }
      ],
      "defaultImplementations": 6,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "body"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP4BodyQa",
          "text": "Body"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/body-8kl5o",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "body",
      "type": "topic",
      "url": "/documentation/swiftui/view/body-8kl5o"
    },
    "doc://com.apple.documentation/documentation/Observation/Observable": {
      "abstract": [
        {
          "text": "A type that emits notifications to observers when underlying data changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Observable"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Observation/Observable",
      "kind": "symbol",
      "role": "symbol",
      "title": "Observable",
      "type": "topic",
      "url": "/documentation/Observation/Observable"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:s12IdentifiableP": {
      "abstract": [
        {
          "text": "A class of types whose instances hold the value of an entity with stable identity.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Identifiable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12IdentifiableP2IDQa",
          "text": "ID"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s12IdentifiableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Identifiable",
      "type": "topic",
      "url": "/documentation/Swift/Identifiable"
    },
    "doc://com.externally.resolved.symbol/s:s8CopyableP": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8CopyableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/Swift/Copyable"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s8CopyableP",
        "doc://com.externally.resolved.symbol/s:s12IdentifiableP",
        "doc://com.externally.resolved.symbol/s:s8SendableP"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Creating-and-sharing-view-state",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Managing-User-Interface-State",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/State",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Binding"
      ],
      "title": "Creating and sharing view state"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-bindable-value",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/init(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/init(wrappedValue:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/init(projectedValue:)"
      ],
      "title": "Creating a bindable value"
    },
    {
      "anchor": "Getting-the-value",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/wrappedValue",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/projectedValue",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Bindable/subscript(dynamicMember:)"
      ],
      "title": "Getting the value"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/bindable"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
