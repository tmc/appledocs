{
  "abstract": [
    {
      "text": "React to system events, like opening a URL.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/System-events"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "role": "collectionGroup",
    "roleHeading": "API Collection",
    "title": "System events"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Specify view and scene modifiers to indicate how your app responds to certain",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "system events. For example, you can use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/onOpenURL(perform:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "view modifier to define an action to take when your app receives a universal",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "link, or use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene/backgroundTask(_:action:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " scene modifier to specify",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "an asynchronous task to carry out in response to a background",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "task event, like the completion of a background URL session.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "system-events-hero",
              "type": "image"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/BackgroundTask": {
      "abstract": [
        {
          "text": "The kinds of background tasks that your app or extension can handle.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BackgroundTask"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/BackgroundTask",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BackgroundTask"
        }
      ],
      "role": "symbol",
      "title": "BackgroundTask",
      "type": "topic",
      "url": "/documentation/swiftui/backgroundtask"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Clipboard": {
      "abstract": [
        {
          "text": "Enable people to move or duplicate items by issuing Copy and Paste commands.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Clipboard",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Clipboard",
      "type": "topic",
      "url": "/documentation/swiftui/clipboard"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Drag-and-drop": {
      "abstract": [
        {
          "text": "Enable people to move or duplicate items by dragging them from one location to another.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Drag-and-drop",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Drag and drop",
      "type": "topic",
      "url": "/documentation/swiftui/drag-and-drop"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/openURL": {
      "abstract": [
        {
          "text": "An action that opens a URL.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "openURL"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI13OpenURLActionV",
          "text": "OpenURLAction"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/openURL",
      "kind": "symbol",
      "role": "symbol",
      "title": "openURL",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues/openurl"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Focus": {
      "abstract": [
        {
          "text": "Identify and control which visible object responds to user interaction.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Focus",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Focus",
      "type": "topic",
      "url": "/documentation/swiftui/focus"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Gestures": {
      "abstract": [
        {
          "text": "Define interactions from taps, clicks, and swipes to fine-grained gestures.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gestures",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Gestures",
      "type": "topic",
      "url": "/documentation/swiftui/gestures"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Input-events": {
      "abstract": [
        {
          "text": "Respond to input from a hardware device, like a keyboard or a Touch Bar.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Input-events",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Input events",
      "type": "topic",
      "url": "/documentation/swiftui/input-events"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/OpenURLAction": {
      "abstract": [
        {
          "text": "An action that opens a URL.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "OpenURLAction"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/OpenURLAction",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "OpenURLAction"
        }
      ],
      "role": "symbol",
      "title": "OpenURLAction",
      "type": "topic",
      "url": "/documentation/swiftui/openurlaction"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene/backgroundTask(_:action:)": {
      "abstract": [
        {
          "text": "Runs the specified action when the system provides a background task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "backgroundTask"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI14BackgroundTaskV",
          "text": "BackgroundTask"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "action"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "D"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI5SceneP",
          "text": "Scene"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene/backgroundTask(_:action:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "backgroundTask(_:action:)",
      "type": "topic",
      "url": "/documentation/swiftui/scene/backgroundtask(_:action:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene/handlesExternalEvents(matching:)": {
      "abstract": [
        {
          "text": "Specifies the external events for which SwiftUI opens a new instance",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "of the modified scene.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "handlesExternalEvents"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "matching"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sh",
          "text": "Set"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI5SceneP",
          "text": "Scene"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene/handlesExternalEvents(matching:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "handlesExternalEvents(matching:)",
      "type": "topic",
      "url": "/documentation/swiftui/scene/handlesexternalevents(matching:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/SnapshotData": {
      "abstract": [
        {
          "text": "The associated data of a snapshot background task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SnapshotData"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SnapshotData",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SnapshotData"
        }
      ],
      "role": "symbol",
      "title": "SnapshotData",
      "type": "topic",
      "url": "/documentation/swiftui/snapshotdata"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/SnapshotResponse": {
      "abstract": [
        {
          "text": "Your appplication’s response to a snapshot background task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SnapshotResponse"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/SnapshotResponse",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SnapshotResponse"
        }
      ],
      "role": "symbol",
      "title": "SnapshotResponse",
      "type": "topic",
      "url": "/documentation/swiftui/snapshotresponse"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/exportableToServices(_:)": {
      "abstract": [
        {
          "text": "Exports items for consumption by shortcuts,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "quick actions, and services.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "exportableToServices"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "]) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/exportableToServices(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "exportableToServices(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/exportabletoservices(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/exportableToServices(_:onEdit:)": {
      "abstract": [
        {
          "text": "Exports read-write items for consumption by shortcuts,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "quick actions, and services.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "exportableToServices"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "onEdit"
        },
        {
          "kind": "text",
          "text": ": (["
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "]) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/exportableToServices(_:onEdit:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "exportableToServices(_:onEdit:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/exportabletoservices(_:onedit:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/exportsItemProviders(_:onExport:)": {
      "abstract": [
        {
          "text": "Exports a read-only item provider for consumption by shortcuts,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "quick actions, and services.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "exportsItemProviders"
        },
        {
          "kind": "text",
          "text": "(["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:22UniformTypeIdentifiers6UTTypeV",
          "text": "UTType"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "onExport"
        },
        {
          "kind": "text",
          "text": ": () -> ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSItemProvider",
          "text": "NSItemProvider"
        },
        {
          "kind": "text",
          "text": "]) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/exportsItemProviders(_:onExport:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "exportsItemProviders(_:onExport:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/exportsitemproviders(_:onexport:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/exportsItemProviders(_:onExport:onEdit:)": {
      "abstract": [
        {
          "text": "Exports a read-write item provider for consumption by shortcuts,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "quick actions, and services.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "exportsItemProviders"
        },
        {
          "kind": "text",
          "text": "(["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:22UniformTypeIdentifiers6UTTypeV",
          "text": "UTType"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "onExport"
        },
        {
          "kind": "text",
          "text": ": () -> ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSItemProvider",
          "text": "NSItemProvider"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "onEdit"
        },
        {
          "kind": "text",
          "text": ": (["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSItemProvider",
          "text": "NSItemProvider"
        },
        {
          "kind": "text",
          "text": "]) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/exportsItemProviders(_:onExport:onEdit:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "exportsItemProviders(_:onExport:onEdit:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/exportsitemproviders(_:onexport:onedit:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/handlesExternalEvents(preferring:allowing:)": {
      "abstract": [
        {
          "text": "Specifies the external events that the view’s scene handles",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "if the scene is already open.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "handlesExternalEvents"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "preferring"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sh",
          "text": "Set"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "allowing"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sh",
          "text": "Set"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/handlesExternalEvents(preferring:allowing:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "handlesExternalEvents(preferring:allowing:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/handlesexternalevents(preferring:allowing:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/importableFromServices(for:action:)": {
      "abstract": [
        {
          "text": "Enables importing items from services, such as Continuity Camera",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "on macOS.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "importableFromServices"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "action"
        },
        {
          "kind": "text",
          "text": ": (["
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "]) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/importableFromServices(for:action:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "importableFromServices(for:action:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/importablefromservices(for:action:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/importsItemProviders(_:onImport:)": {
      "abstract": [
        {
          "text": "Enables importing item providers from services, such as Continuity Camera",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "on macOS.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "importsItemProviders"
        },
        {
          "kind": "text",
          "text": "(["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:22UniformTypeIdentifiers6UTTypeV",
          "text": "UTType"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "onImport"
        },
        {
          "kind": "text",
          "text": ": (["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSItemProvider",
          "text": "NSItemProvider"
        },
        {
          "kind": "text",
          "text": "]) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/importsItemProviders(_:onImport:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "importsItemProviders(_:onImport:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/importsitemproviders(_:onimport:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/onContinueUserActivity(_:perform:)": {
      "abstract": [
        {
          "text": "Registers a handler to invoke in response to a user activity that your",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "app receives.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "onContinueUserActivity"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "perform"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSUserActivity",
          "text": "NSUserActivity"
        },
        {
          "kind": "text",
          "text": ") -> ()) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/onContinueUserActivity(_:perform:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "onContinueUserActivity(_:perform:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/oncontinueuseractivity(_:perform:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/onOpenURL(perform:)": {
      "abstract": [
        {
          "text": "Registers a handler to invoke in response to a URL that your app",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "receives.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "onOpenURL"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "perform"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": ") -> ()) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/onOpenURL(perform:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "onOpenURL(perform:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/onopenurl(perform:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/userActivity(_:element:_:)": {
      "abstract": [
        {
          "text": "Advertises a user activity type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "userActivity"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "P"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "element"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "P"
        },
        {
          "kind": "text",
          "text": "?, ("
        },
        {
          "kind": "typeIdentifier",
          "text": "P"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSUserActivity",
          "text": "NSUserActivity"
        },
        {
          "kind": "text",
          "text": ") -> ()) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/userActivity(_:element:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "userActivity(_:element:_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/useractivity(_:element:_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/userActivity(_:isActive:_:)": {
      "abstract": [
        {
          "text": "Advertises a user activity type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "userActivity"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "isActive"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSUserActivity",
          "text": "NSUserActivity"
        },
        {
          "kind": "text",
          "text": ") -> ()) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/userActivity(_:isActive:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "userActivity(_:isActive:_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/useractivity(_:isactive:_:)"
    },
    "doc://com.apple.documentation/documentation/swiftui/restoring_your_app_s_state_with_swiftui": {
      "abstract": [
        {
          "text": "Provide app continuity for users by preserving their current activities.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/swiftui/restoring_your_app_s_state_with_swiftui",
      "kind": "article",
      "role": "sampleCode",
      "title": "Restoring Your App’s State with SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui/restoring_your_app_s_state_with_swiftui"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "system-events-hero": {
      "alt": null,
      "identifier": "system-events-hero",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b70766bbbd9cc1bd02c1faddc9c01a4e/system-events-hero@2x.png"
        }
      ]
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Event-handling",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Gestures",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Input-events",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Clipboard",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Drag-and-drop",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Focus"
      ],
      "title": "Event handling"
    }
  ],
  "topicSections": [
    {
      "anchor": "Sending-and-receiving-user-activities",
      "identifiers": [
        "doc://com.apple.documentation/documentation/swiftui/restoring_your_app_s_state_with_swiftui",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/userActivity(_:element:_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/userActivity(_:isActive:_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/onContinueUserActivity(_:perform:)"
      ],
      "title": "Sending and receiving user activities"
    },
    {
      "anchor": "Sending-and-receiving-URLs",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/openURL",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/OpenURLAction",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/onOpenURL(perform:)"
      ],
      "title": "Sending and receiving URLs"
    },
    {
      "anchor": "Handling-external-events",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene/handlesExternalEvents(matching:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/handlesExternalEvents(preferring:allowing:)"
      ],
      "title": "Handling external events"
    },
    {
      "anchor": "Handling-background-tasks",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Scene/backgroundTask(_:action:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/BackgroundTask",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/SnapshotData",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/SnapshotResponse"
      ],
      "title": "Handling background tasks"
    },
    {
      "anchor": "Importing-and-exporting-transferable-items",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/importableFromServices(for:action:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/exportableToServices(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/exportableToServices(_:onEdit:)"
      ],
      "title": "Importing and exporting transferable items"
    },
    {
      "anchor": "Importing-and-exporting-using-item-providers",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/importsItemProviders(_:onImport:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/exportsItemProviders(_:onExport:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/exportsItemProviders(_:onExport:onEdit:)"
      ],
      "title": "Importing and exporting using item providers"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/system-events"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
