{
  "abstract": [
    {
      "text": "Adds an item-based context menu to a view.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/contextMenu(forSelectionType:menu:primaryAction:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI4ViewPAAE11contextMenu16forSelectionType4menu13primaryActionQrqd__m_qd_0_Shyqd__GcyAHcSgtSHRd__AaBRd_0_r0_lF",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "contextMenu"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "I"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "genericParameter",
        "text": "M"
      },
      {
        "kind": "text",
        "text": ">("
      },
      {
        "kind": "externalParam",
        "text": "forSelectionType"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "text": "I"
      },
      {
        "kind": "text",
        "text": ".Type, "
      },
      {
        "kind": "externalParam",
        "text": "menu"
      },
      {
        "kind": "text",
        "text": ": ("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sh",
        "text": "Set"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "text": "I"
      },
      {
        "kind": "text",
        "text": ">) -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "M"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "primaryAction"
      },
      {
        "kind": "text",
        "text": ": (("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sh",
        "text": "Set"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "text": "I"
      },
      {
        "kind": "text",
        "text": ">) -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s4Voida",
        "text": "Void"
      },
      {
        "kind": "text",
        "text": ")?) -> "
      },
      {
        "kind": "keyword",
        "text": "some"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4ViewP",
        "text": "View"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "contextMenu(forSelectionType:menu:primaryAction:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "nonisolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "contextMenu"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "I"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "M"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "forSelectionType"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "itemType"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "text": "I"
            },
            {
              "kind": "text",
              "text": ".Type = I.self, "
            },
            {
              "kind": "attribute",
              "text": "@"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder",
              "kind": "attribute",
              "preciseIdentifier": "s:7SwiftUI11ViewBuilderV",
              "text": "ViewBuilder"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "externalParam",
              "text": "menu"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "@escaping"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sh",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sh",
              "text": "Set"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "text": "I"
            },
            {
              "kind": "text",
              "text": ">) -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "M"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "primaryAction"
            },
            {
              "kind": "text",
              "text": ": (("
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sh",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sh",
              "text": "Set"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "text": "I"
            },
            {
              "kind": "text",
              "text": ">) -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s4Voida",
              "text": "Void"
            },
            {
              "kind": "text",
              "text": ")? = nil) -> "
            },
            {
              "kind": "keyword",
              "text": "some"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "I"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:SH",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SH",
              "text": "Hashable"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "M"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": "\n"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The identifier type of the items. Ensure that this",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "matches the container’s selection type.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "itemType"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A closure that produces the menu. A single parameter to the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "closure contains the set of items to act on. An empty set indicates",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "menu activation over the empty area of the selectable container,",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "while a non-empty set indicates menu activation over selected items.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "Use controls like ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Button",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ", ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ", and ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Toggle",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " to define",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "the menu items. You can also create submenus using ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Menu",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ", or",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "group items with ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Section",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ". You can deactivate the context menu",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "by returning nothing from the closure.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "menu"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A closure that defines the action to perform in",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "response to the primary interaction. A single parameter to the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "closure contains the set of items to act on.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "primaryAction"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A view that can display an item-based context menu.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can add an item-based context menu to a container that supports",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "selection, like a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " or a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Table",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". In the closure that you",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "use to define the menu, you receive a collection of items that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "depends on the selection state of the container and the location where",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the person clicks or taps to activate the menu. The collection contains:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The selected item or items, when people initiate the context menu",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "from any selected item.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Nothing, if people tap or click to activate the context menu from",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "an empty part of the container. This is true even when one or more",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "items is currently selected.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "You can vary the menu contents according to the number of selected",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "items. For example, the following code has a list that defines an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "empty area menu, a single item menu, and a multi-item menu:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ContextMenuItemExample: View {",
            "    var items: [Item]",
            "    @State private var selection = Set<Item.ID>()",
            "",
            "    var body: some View {",
            "        List(selection: $selection) {",
            "            ForEach(items) { item in",
            "                Text(item.name)",
            "            }",
            "        }",
            "        .contextMenu(forSelectionType: Item.ID.self) { items in",
            "            if items.isEmpty { // Empty area menu.",
            "                Button(\"New Item\") { }",
            "",
            "            } else if items.count == 1 { // Single item menu.",
            "                Button(\"Copy\") { }",
            "                Button(\"Delete\", role: .destructive) { }",
            "",
            "            } else { // Multi-item menu.",
            "                Button(\"Copy\") { }",
            "                Button(\"New Folder With Selection\") { }",
            "                Button(\"Delete Selected\", role: .destructive) { }",
            "            }",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The above example assumes that the ",
              "type": "text"
            },
            {
              "code": "Item",
              "type": "codeVoice"
            },
            {
              "text": " type conforms to the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/Identifiable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "protocol, and relies on the associated ",
              "type": "text"
            },
            {
              "code": "ID",
              "type": "codeVoice"
            },
            {
              "text": " type for both selection",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and context menu presentation.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If you add the modifier to a view hierarchy that doesn’t have a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "container that supports selection, the context menu never activates.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "To add a context menu that doesn’t depend on selection behavior, use",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/contextMenu(menuItems:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". To add a context menu to a specific",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "row in a table, use ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/TableRowContent/contextMenu(menuItems:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Add-a-primary-action",
          "level": 3,
          "text": "Add a primary action",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Optionally, you can add a custom primary action to the context menu. In",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "macOS, a single click on a row in a selectable container selects that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "row, and a double click performs the primary action. In iOS and iPadOS,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "tapping on the row activates the primary action. To select a row",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "without performing an action, either enter edit mode or hold",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "shift or command on a keyboard while tapping the row.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example, you can modify the context menu from the previous example",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "so that double clicking the row on macOS opens a new window for",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "selected items. Get the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/OpenWindowAction",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " from the environment:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Environment(\\.openWindow) private var openWindow"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Then call ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/openWindow",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " from inside the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "primaryAction",
              "type": "codeVoice"
            },
            {
              "text": " closure for each item:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            ".contextMenu(forSelectionType: Item.ID.self) { items in",
            "    // ...",
            "} primaryAction: { items in",
            "    for item in items {",
            "        openWindow(value: item)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The open window action depends on the declaration of a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scene in your ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/App",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " that responds to the ",
              "type": "text"
            },
            {
              "code": "Item",
              "type": "codeVoice"
            },
            {
              "text": " type:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "WindowGroup(\"Item Detail\", for: Item.self) { $item in",
            "    // ...",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/App": {
      "abstract": [
        {
          "text": "A type that represents the structure and behavior of an app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "App"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/App",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "App"
        }
      ],
      "role": "symbol",
      "title": "App",
      "type": "topic",
      "url": "/documentation/swiftui/app"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Button": {
      "abstract": [
        {
          "text": "A control that initiates an action.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Button"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Button",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Button"
        }
      ],
      "role": "symbol",
      "title": "Button",
      "type": "topic",
      "url": "/documentation/swiftui/button"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/openWindow": {
      "abstract": [
        {
          "text": "A window presentation action stored in a view’s environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "openWindow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI16OpenWindowActionV",
          "text": "OpenWindowAction"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/openWindow",
      "kind": "symbol",
      "role": "symbol",
      "title": "openWindow",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues/openwindow"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List": {
      "abstract": [
        {
          "text": "A container that presents rows of data arranged in a single column,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "optionally providing the ability to select one or more members.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "List"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "List"
        }
      ],
      "role": "symbol",
      "title": "List",
      "type": "topic",
      "url": "/documentation/swiftui/list"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Menu": {
      "abstract": [
        {
          "text": "A control for presenting a menu of actions.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Menu"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Menu",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Menu"
        }
      ],
      "role": "symbol",
      "title": "Menu",
      "type": "topic",
      "url": "/documentation/swiftui/menu"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/OpenWindowAction": {
      "abstract": [
        {
          "text": "An action that presents a window.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "OpenWindowAction"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/OpenWindowAction",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "OpenWindowAction"
        }
      ],
      "role": "symbol",
      "title": "OpenWindowAction",
      "type": "topic",
      "url": "/documentation/swiftui/openwindowaction"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker": {
      "abstract": [
        {
          "text": "A control for selecting from a set of mutually exclusive values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Picker"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Picker"
        }
      ],
      "role": "symbol",
      "title": "Picker",
      "type": "topic",
      "url": "/documentation/swiftui/picker"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Section": {
      "abstract": [
        {
          "text": "A container view that you can use to add hierarchy within certain views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Section"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Section",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Section"
        }
      ],
      "role": "symbol",
      "title": "Section",
      "type": "topic",
      "url": "/documentation/swiftui/section"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Table": {
      "abstract": [
        {
          "text": "A container that presents rows of data arranged in one or more columns,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "optionally providing the ability to select one or more members.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Table"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Table",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Table"
        }
      ],
      "role": "symbol",
      "title": "Table",
      "type": "topic",
      "url": "/documentation/swiftui/table"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/TableRowContent/contextMenu(menuItems:)": {
      "abstract": [
        {
          "text": "Adds a context menu to a table row.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "contextMenu"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "M"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "menuItems"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "M"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI15ModifiedContentV",
          "text": "ModifiedContent"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "_ContextMenuTableRowModifier"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "M"
        },
        {
          "kind": "text",
          "text": ">>"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/TableRowContent/contextMenu(menuItems:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "contextMenu(menuItems:)",
      "type": "topic",
      "url": "/documentation/swiftui/tablerowcontent/contextmenu(menuitems:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Toggle": {
      "abstract": [
        {
          "text": "A control that toggles between on and off states.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Toggle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Toggle",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Toggle"
        }
      ],
      "role": "symbol",
      "title": "Toggle",
      "type": "topic",
      "url": "/documentation/swiftui/toggle"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/swiftui/view"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/contextMenu(forSelectionType:menu:primaryAction:)": {
      "abstract": [
        {
          "text": "Adds an item-based context menu to a view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "contextMenu"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "I"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "M"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "forSelectionType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "I"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "menu"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sh",
          "text": "Set"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "I"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "M"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "primaryAction"
        },
        {
          "kind": "text",
          "text": ": (("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sh",
          "text": "Set"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "I"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")?) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/contextMenu(forSelectionType:menu:primaryAction:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "contextMenu(forSelectionType:menu:primaryAction:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/contextmenu(forselectiontype:menu:primaryaction:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/contextMenu(menuItems:)": {
      "abstract": [
        {
          "text": "Adds a context menu to a view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "contextMenu"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "MenuItems"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "menuItems"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "MenuItems"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/contextMenu(menuItems:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "contextMenu(menuItems:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/contextmenu(menuitems:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/contextMenu(menuItems:preview:)": {
      "abstract": [
        {
          "text": "Adds a context menu with a custom preview to a view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "contextMenu"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "M"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "P"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "menuItems"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "M"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "preview"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "P"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/contextMenu(menuItems:preview:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "contextMenu(menuItems:preview:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/contextmenu(menuitems:preview:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder": {
      "abstract": [
        {
          "text": "A custom parameter attribute that constructs views from closures.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ViewBuilder"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ViewBuilder"
        }
      ],
      "role": "symbol",
      "title": "ViewBuilder",
      "type": "topic",
      "url": "/documentation/swiftui/viewbuilder"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup": {
      "abstract": [
        {
          "text": "A scene that presents a group of identically structured windows.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "WindowGroup"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/WindowGroup",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "WindowGroup"
        }
      ],
      "role": "symbol",
      "title": "WindowGroup",
      "type": "topic",
      "url": "/documentation/swiftui/windowgroup"
    },
    "doc://com.apple.documentation/documentation/Swift/Identifiable": {
      "abstract": [
        {
          "text": "A class of types whose instances hold the value of an entity with stable identity.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Identifiable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12IdentifiableP2IDQa",
          "text": "ID"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/Identifiable",
      "kind": "symbol",
      "role": "symbol",
      "title": "Identifiable",
      "type": "topic",
      "url": "/documentation/Swift/Identifiable"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:Sh": {
      "abstract": [
        {
          "text": "An unordered collection of unique elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Set"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SH",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Sh",
      "kind": "symbol",
      "role": "symbol",
      "title": "Set",
      "type": "topic",
      "url": "/documentation/Swift/Set"
    },
    "doc://com.externally.resolved.symbol/s:s4Voida": {
      "abstract": [
        {
          "text": "The return type of functions that don’t explicitly specify a return type, that is, an empty tuple `()`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": " = ()"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
      "kind": "symbol",
      "role": "symbol",
      "title": "Void",
      "type": "topic",
      "url": "/documentation/Swift/Void"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Creating-context-menus",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/contextMenu(menuItems:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/contextMenu(menuItems:preview:)"
      ],
      "title": "Creating context menus"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/view/contextmenu(forselectiontype:menu:primaryaction:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
