{
  "abstract": [
    {
      "text": "A container that presents rows of data arranged in a single column,",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "optionally providing the ability to select one or more members.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/List"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI4ListV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "List"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "List"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "List"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:ScM",
              "kind": "attribute",
              "preciseIdentifier": "s:ScM",
              "text": "MainActor"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "attribute",
              "text": "@preconcurrency"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "List"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "SelectionValue"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "Content"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "SelectionValue"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:SH",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SH",
              "text": "Hashable"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "Content"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Picking-Container-Views-for-Your-Content",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Displaying-Data-in-Lists",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Grouping-Data-with-Lazy-Stack-Views",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Performing-a-search-operation",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Migrating-to-New-Navigation-Types",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Making-a-view-into-a-drag-source"
      ]
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "In its simplest form, a ",
              "type": "text"
            },
            {
              "code": "List",
              "type": "codeVoice"
            },
            {
              "text": " creates its contents statically, as shown in",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the following example:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var body: some View {",
            "    List {",
            "        Text(\"A List Item\")",
            "        Text(\"A Second List Item\")",
            "        Text(\"A Third List Item\")",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "List-1-iOS",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "More commonly, you create lists dynamically from an underlying collection",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of data. The following example shows how to create a simple list from an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "array of an ",
              "type": "text"
            },
            {
              "code": "Ocean",
              "type": "codeVoice"
            },
            {
              "text": " type which conforms to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/Identifiable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct Ocean: Identifiable {",
            "    let name: String",
            "    let id = UUID()",
            "}",
            "",
            "private var oceans = [",
            "    Ocean(name: \"Pacific\"),",
            "    Ocean(name: \"Atlantic\"),",
            "    Ocean(name: \"Indian\"),",
            "    Ocean(name: \"Southern\"),",
            "    Ocean(name: \"Arctic\")",
            "]",
            "",
            "var body: some View {",
            "    List(oceans) {",
            "        Text($0.name)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "List-2-iOS",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Supporting-selection-in-lists",
          "level": 3,
          "text": "Supporting selection in lists",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To make members of a list selectable, provide a binding to a selection",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "variable. Binding to a single instance of the list data’s ",
              "type": "text"
            },
            {
              "code": "Identifiable.ID",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "type creates a single-selection list. Binding to a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/Set",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " creates a list that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "supports multiple selections. The following example shows how to add",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "multiselect to the previous example:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct Ocean: Identifiable, Hashable {",
            "    let name: String",
            "    let id = UUID()",
            "}",
            "",
            "private var oceans = [",
            "    Ocean(name: \"Pacific\"),",
            "    Ocean(name: \"Atlantic\"),",
            "    Ocean(name: \"Indian\"),",
            "    Ocean(name: \"Southern\"),",
            "    Ocean(name: \"Arctic\")",
            "]",
            "",
            "@State private var multiSelection = Set<UUID>()",
            "",
            "var body: some View {",
            "    NavigationView {",
            "        List(oceans, selection: $multiSelection) {",
            "            Text($0.name)",
            "        }",
            "        .navigationTitle(\"Oceans\")",
            "        .toolbar { EditButton() }",
            "    }",
            "    Text(\"\\(multiSelection.count) selections\")",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When people make a single selection by tapping or clicking, the selected",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "cell changes its appearance to indicate the selection. To enable multiple",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "selections with tap gestures, put the list into edit mode by either",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "modifying the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/editMode",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " value, or adding an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EditButton",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to your app’s interface. When you put the list into edit",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "mode, the list shows a circle next to each list item. The circle contains",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a checkmark when the user selects the associated item. The example above",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "uses an Edit button, which changes its title to Done while in edit mode:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "List-3-iOS",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "People can make multiple selections without needing to enter edit mode on",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "devices that have a keyboard and mouse or trackpad, like Mac and iPad.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Refreshing-the-list-content",
          "level": 3,
          "text": "Refreshing the list content",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To make the content of the list refreshable using the standard refresh",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "control, use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/refreshable(action:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " modifier.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The following example shows how to add a standard refresh control to a list.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "When the user drags the top of the list downward, SwiftUI reveals the refresh",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "control and executes the specified action. Use an ",
              "type": "text"
            },
            {
              "code": "await",
              "type": "codeVoice"
            },
            {
              "text": " expression",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "inside the ",
              "type": "text"
            },
            {
              "code": "action",
              "type": "codeVoice"
            },
            {
              "text": " closure to refresh your data. The refresh indicator remains",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "visible for the duration of the awaited operation.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct Ocean: Identifiable, Hashable {",
            "     let name: String",
            "     let id = UUID()",
            "     let stats: [String: String]",
            " }",
            "",
            " class OceanStore: ObservableObject {",
            "     @Published var oceans = [Ocean]()",
            "     func loadStats() async {}",
            " }",
            "",
            " @EnvironmentObject var store: OceanStore",
            "",
            " var body: some View {",
            "     NavigationView {",
            "         List(store.oceans) { ocean in",
            "             HStack {",
            "                 Text(ocean.name)",
            "                 StatsSummary(stats: ocean.stats) // A custom view for showing statistics.",
            "             }",
            "         }",
            "         .refreshable {",
            "             await store.loadStats()",
            "         }",
            "         .navigationTitle(\"Oceans\")",
            "     }",
            " }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Supporting-multidimensional-lists",
          "level": 3,
          "text": "Supporting multidimensional lists",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To create two-dimensional lists, group items inside ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Section",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " instances.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The following example creates sections named after the world’s oceans,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "each of which has ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Text",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " views named for major seas attached to those",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "oceans. The example also allows for selection of a single list item,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "identified by the ",
              "type": "text"
            },
            {
              "code": "id",
              "type": "codeVoice"
            },
            {
              "text": " of the example’s ",
              "type": "text"
            },
            {
              "code": "Sea",
              "type": "codeVoice"
            },
            {
              "text": " type.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ContentView: View {",
            "    struct Sea: Hashable, Identifiable {",
            "        let name: String",
            "        let id = UUID()",
            "    }",
            "",
            "    struct OceanRegion: Identifiable {",
            "        let name: String",
            "        let seas: [Sea]",
            "        let id = UUID()",
            "    }",
            "",
            "    private let oceanRegions: [OceanRegion] = [",
            "        OceanRegion(name: \"Pacific\",",
            "                    seas: [Sea(name: \"Australasian Mediterranean\"),",
            "                           Sea(name: \"Philippine\"),",
            "                           Sea(name: \"Coral\"),",
            "                           Sea(name: \"South China\")]),",
            "        OceanRegion(name: \"Atlantic\",",
            "                    seas: [Sea(name: \"American Mediterranean\"),",
            "                           Sea(name: \"Sargasso\"),",
            "                           Sea(name: \"Caribbean\")]),",
            "        OceanRegion(name: \"Indian\",",
            "                    seas: [Sea(name: \"Bay of Bengal\")]),",
            "        OceanRegion(name: \"Southern\",",
            "                    seas: [Sea(name: \"Weddell\")]),",
            "        OceanRegion(name: \"Arctic\",",
            "                    seas: [Sea(name: \"Greenland\")])",
            "    ]",
            "",
            "    @State private var singleSelection: UUID?",
            "",
            "    var body: some View {",
            "        NavigationView {",
            "            List(selection: $singleSelection) {",
            "                ForEach(oceanRegions) { region in",
            "                    Section(header: Text(\"Major \\(region.name) Ocean Seas\")) {",
            "                        ForEach(region.seas) { sea in",
            "                            Text(sea.name)",
            "                        }",
            "                    }",
            "                }",
            "            }",
            "            .navigationTitle(\"Oceans and Seas\")",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Because this example uses single selection, people can make selections",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "outside of edit mode on all platforms.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "List-4-iOS",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "In iOS 15, iPadOS 15, and tvOS 15 and earlier, lists support",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "selection only in edit mode, even for single selections.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "anchor": "Creating-hierarchical-lists",
          "level": 3,
          "text": "Creating hierarchical lists",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can also create a hierarchical list of arbitrary depth by providing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "tree-structured data and a ",
              "type": "text"
            },
            {
              "code": "children",
              "type": "codeVoice"
            },
            {
              "text": " parameter that provides a key path to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "get the child nodes at any level. The following example uses a deeply-nested",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "collection of a custom ",
              "type": "text"
            },
            {
              "code": "FileItem",
              "type": "codeVoice"
            },
            {
              "text": " type to simulate the contents of a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "file system. The list created from this data uses collapsing cells to allow",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the user to navigate the tree structure.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ContentView: View {",
            "    struct FileItem: Hashable, Identifiable, CustomStringConvertible {",
            "        var id: Self { self }",
            "        var name: String",
            "        var children: [FileItem]? = nil",
            "        var description: String {",
            "            switch children {",
            "            case nil:",
            "                return \"📄 \\(name)\"",
            "            case .some(let children):",
            "                return children.isEmpty ? \"📂 \\(name)\" : \"📁 \\(name)\"",
            "            }",
            "        }",
            "    }",
            "    let fileHierarchyData: [FileItem] = [",
            "      FileItem(name: \"users\", children:",
            "        [FileItem(name: \"user1234\", children:",
            "          [FileItem(name: \"Photos\", children:",
            "            [FileItem(name: \"photo001.jpg\"),",
            "             FileItem(name: \"photo002.jpg\")]),",
            "           FileItem(name: \"Movies\", children:",
            "             [FileItem(name: \"movie001.mp4\")]),",
            "              FileItem(name: \"Documents\", children: [])",
            "          ]),",
            "         FileItem(name: \"newuser\", children:",
            "           [FileItem(name: \"Documents\", children: [])",
            "           ])",
            "        ]),",
            "        FileItem(name: \"private\", children: nil)",
            "    ]",
            "    var body: some View {",
            "        List(fileHierarchyData, children: \\.children) { item in",
            "            Text(item.description)",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "List-5-iOS",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Styling-lists",
          "level": 3,
          "text": "Styling lists",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "SwiftUI chooses a display style for a list based on the platform and the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "view type in which it appears. Use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/listStyle(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " modifier to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "apply a different ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ListStyle",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to all lists within a view. For example,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "adding ",
              "type": "text"
            },
            {
              "code": ".listStyle(.plain)",
              "type": "codeVoice"
            },
            {
              "text": " to the example shown in the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "“Creating Multidimensional Lists” topic applies the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ListStyle/plain",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " style, the following screenshot shows:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "List-6-iOS",
              "type": "image"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "List-1-iOS": {
      "alt": "A vertical list with three text views.",
      "identifier": "List-1-iOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/d78009ccd78b71238938528c05b70d1c/List-1-iOS@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/5469f3e94fd3ea3c87ec17d58f1c036b/List-1-iOS~dark@2x.png"
        }
      ]
    },
    "List-2-iOS": {
      "alt": "A vertical list with five text views, each with the name of an",
      "identifier": "List-2-iOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/a77e63fad0ed8d8fa53ef462fe01e2a6/List-2-iOS@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/27797ace64c4d634db7229ee4b78553f/List-2-iOS~dark@2x.png"
        }
      ]
    },
    "List-3-iOS": {
      "alt": "A navigation view with the title Oceans and a vertical list that contains",
      "identifier": "List-3-iOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/949b2bed10274ec967fa27a113020e9b/List-3-iOS@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4069c48dd5709d4d5da96e39d8ecdd59/List-3-iOS~dark@2x.png"
        }
      ]
    },
    "List-4-iOS": {
      "alt": "A vertical list split into sections titled Major Pacific Ocean Seas,",
      "identifier": "List-4-iOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/6bcb184683b070eed33ede7aa2775cea/List-4-iOS@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/e85cb3dbc0d2b210e1e0cf994c055907/List-4-iOS~dark@2x.png"
        }
      ]
    },
    "List-5-iOS": {
      "alt": "A list providing an expanded view of a tree structure. Some rows have a",
      "identifier": "List-5-iOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/be9c84b8dbaf63becfdaed28332a89e0/List-5-iOS@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/72dc012fc5d4964d1ab1942f744c0f05/List-5-iOS~dark@2x.png"
        }
      ]
    },
    "List-6-iOS": {
      "alt": "A vertical list split into sections titled Major Pacific Ocean Seas,",
      "identifier": "List-6-iOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/d1d46ab3e64ce8b26d1fe9a61ea3ffa5/List-6-iOS@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/c85702a11adfc2d6e1af4c825509a472/List-6-iOS~dark@2x.png"
        }
      ]
    },
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Displaying-Data-in-Lists": {
      "abstract": [
        {
          "text": "Visualize collections of data with platform-appropriate appearance.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Displaying-Data-in-Lists",
      "kind": "article",
      "role": "article",
      "title": "Displaying data in lists",
      "type": "topic",
      "url": "/documentation/swiftui/displaying-data-in-lists"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EditButton": {
      "abstract": [
        {
          "text": "A button that toggles the edit mode environment value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EditButton"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EditButton",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EditButton"
        }
      ],
      "role": "symbol",
      "title": "EditButton",
      "type": "topic",
      "url": "/documentation/swiftui/editbutton"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/editMode": {
      "abstract": [
        {
          "text": "An indication of whether the user can edit the contents of a view",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "associated with this environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "editMode"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI8EditModeO",
          "text": "EditMode"
        },
        {
          "kind": "text",
          "text": ">?"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/editMode",
      "kind": "symbol",
      "role": "symbol",
      "title": "editMode",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues/editmode"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Grouping-Data-with-Lazy-Stack-Views": {
      "abstract": [
        {
          "text": "Split content into logical sections inside lazy stack views.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Grouping-Data-with-Lazy-Stack-Views",
      "kind": "article",
      "role": "article",
      "title": "Grouping data with lazy stack views",
      "type": "topic",
      "url": "/documentation/swiftui/grouping-data-with-lazy-stack-views"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List": {
      "abstract": [
        {
          "text": "A container that presents rows of data arranged in a single column,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "optionally providing the ability to select one or more members.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "List"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "List"
        }
      ],
      "role": "symbol",
      "title": "List",
      "type": "topic",
      "url": "/documentation/swiftui/list"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List/body": {
      "abstract": [
        {
          "text": "The content of the list.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "body"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List/body",
      "kind": "symbol",
      "role": "symbol",
      "title": "body",
      "type": "topic",
      "url": "/documentation/swiftui/list/body"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:children:rowContent:)": {
      "abstract": [
        {
          "text": "Creates a hierarchical list that computes its rows on demand from a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "binding to an underlying collection of identifiable data.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Never",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "children"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:children:rowContent:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "children"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:children:rowContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/list/init(_:children:rowcontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:children:selection:rowContent:)": {
      "abstract": [
        {
          "text": "Creates a hierarchical list that computes its rows on demand from a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "binding to an underlying collection of identifiable data and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "allowing users to have exactly one row always selected.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "children"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:children:selection:rowContent:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "children"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:children:selection:rowContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/list/init(_:children:selection:rowcontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:editActions:rowContent:)": {
      "abstract": [
        {
          "text": "Creates a list that computes its rows on demand from an underlying",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "collection of identifiable data and allows to edit the collection.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Never",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "RowContent"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "editActions"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI11EditActionsV",
          "text": "EditActions"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "RowContent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:editActions:rowContent:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:editActions:rowContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/list/init(_:editactions:rowcontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:editActions:selection:rowContent:)": {
      "abstract": [
        {
          "text": "Creates a list that computes its rows on demand from an underlying",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "collection of identifiable data, allows to edit the collection,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and requires a selection of a single row.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "editActions"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:editActions:selection:rowContent:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "editActions"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:editActions:selection:rowContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/list/init(_:editactions:selection:rowcontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:children:rowContent:)": {
      "abstract": [
        {
          "text": "Creates a hierarchical list that identifies its rows based on a key path",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "to the identifier of the underlying data.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Never",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "children"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:children:rowContent:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "children"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:id:children:rowContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/list/init(_:id:children:rowcontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:children:selection:rowContent:)": {
      "abstract": [
        {
          "text": "Creates a hierarchical list that identifies its rows based on a key path",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "to the identifier of the underlying data and allowing users to have",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "exactly one row always selected.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "children"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:children:selection:rowContent:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "children"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:id:children:selection:rowContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/list/init(_:id:children:selection:rowcontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:editActions:rowContent:)": {
      "abstract": [
        {
          "text": "Creates a list that computes its rows on demand from an underlying",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "collection of identifiable data and allows to edit the collection.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Never",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "ID"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "RowContent"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7KeyPathC",
          "text": "KeyPath"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "ID"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "editActions"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI11EditActionsV",
          "text": "EditActions"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "RowContent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:editActions:rowContent:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:id:editActions:rowContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/list/init(_:id:editactions:rowcontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:editActions:selection:rowContent:)": {
      "abstract": [
        {
          "text": "Creates a list that computes its rows on demand from an underlying",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "collection of identifiable, allows to edit the collection, and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "requires a selection of a single row.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "editActions"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:editActions:selection:rowContent:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "editActions"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:id:editActions:selection:rowContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/list/init(_:id:editactions:selection:rowcontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:rowContent:)": {
      "abstract": [
        {
          "text": "Creates a list that identifies its rows based on a key path to the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "identifier of the underlying data.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Never",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:rowContent:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:id:rowContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/list/init(_:id:rowcontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:selection:rowContent:)": {
      "abstract": [
        {
          "text": "Creates a list that identifies its rows based on a key path to the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "identifier of the underlying data, optionally allowing users to select a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "single row.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:selection:rowContent:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:id:selection:rowContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/list/init(_:id:selection:rowcontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:rowContent:)": {
      "abstract": [
        {
          "text": "Creates a list that computes its rows on demand from an underlying",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "collection of identifiable data.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Never",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:rowContent:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:rowContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/list/init(_:rowcontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:selection:rowContent:)": {
      "abstract": [
        {
          "text": "Creates a list that computes its rows on demand from an underlying",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "collection of identifiable data, optionally allowing users to select a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "single row.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:selection:rowContent:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "rowContent"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:selection:rowContent:)",
      "type": "topic",
      "url": "/documentation/swiftui/list/init(_:selection:rowcontent:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(content:)": {
      "abstract": [
        {
          "text": "Creates a list with the given content.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "SelectionValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Never",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(content:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(content:)",
      "type": "topic",
      "url": "/documentation/swiftui/list/init(content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(selection:content:)": {
      "abstract": [
        {
          "text": "Creates a list with the given content that supports selecting a single",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "row that cannot be deselcted.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(selection:content:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "selection"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(selection:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/list/init(selection:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ListStyle": {
      "abstract": [
        {
          "text": "A protocol that describes the behavior and appearance of a list.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ListStyle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ListStyle",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ListStyle"
        }
      ],
      "role": "symbol",
      "title": "ListStyle",
      "type": "topic",
      "url": "/documentation/swiftui/liststyle"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ListStyle/plain": {
      "abstract": [
        {
          "text": "The list style that describes the behavior and appearance of a plain",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "list.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "PlainListStyle",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "plain"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI14PlainListStyleV",
          "text": "PlainListStyle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ListStyle/plain",
      "kind": "symbol",
      "role": "symbol",
      "title": "plain",
      "type": "topic",
      "url": "/documentation/swiftui/liststyle/plain"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Making-a-view-into-a-drag-source": {
      "abstract": [
        {
          "text": "Adopt draggable API to provide items for drag-and-drop operations.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Making-a-view-into-a-drag-source",
      "kind": "article",
      "role": "article",
      "title": "Making a view into a drag source",
      "type": "topic",
      "url": "/documentation/swiftui/making-a-view-into-a-drag-source"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Migrating-to-New-Navigation-Types": {
      "abstract": [
        {
          "text": "Improve navigation behavior in your app by replacing navigation views",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "with navigation stacks and navigation split views.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Migrating-to-New-Navigation-Types",
      "kind": "article",
      "role": "article",
      "title": "Migrating to new navigation types",
      "type": "topic",
      "url": "/documentation/swiftui/migrating-to-new-navigation-types"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Performing-a-search-operation": {
      "abstract": [
        {
          "text": "Update search results based on search text and optional tokens that you store.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Performing-a-search-operation",
      "kind": "article",
      "role": "article",
      "title": "Performing a search operation",
      "type": "topic",
      "url": "/documentation/swiftui/performing-a-search-operation"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picking-Container-Views-for-Your-Content": {
      "abstract": [
        {
          "text": "Build flexible user interfaces by using stacks, grids, lists, and forms.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picking-Container-Views-for-Your-Content",
      "kind": "article",
      "role": "article",
      "title": "Picking container views for your content",
      "type": "topic",
      "url": "/documentation/swiftui/picking-container-views-for-your-content"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Section": {
      "abstract": [
        {
          "text": "A container view that you can use to add hierarchy within certain views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Section"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Section",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Section"
        }
      ],
      "role": "symbol",
      "title": "Section",
      "type": "topic",
      "url": "/documentation/swiftui/section"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Text": {
      "abstract": [
        {
          "text": "A view that displays one or more lines of read-only text.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Text",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Text"
        }
      ],
      "role": "symbol",
      "title": "Text",
      "type": "topic",
      "url": "/documentation/swiftui/text"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/swiftui/view"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/listStyle(_:)": {
      "abstract": [
        {
          "text": "Sets the style for lists within this view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "listStyle"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/listStyle(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "listStyle(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/liststyle(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/refreshable(action:)": {
      "abstract": [
        {
          "text": "Marks this view as refreshable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "refreshable"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "action"
        },
        {
          "kind": "text",
          "text": ": () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/refreshable(action:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "refreshable(action:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/refreshable(action:)"
    },
    "doc://com.apple.documentation/documentation/Swift/Identifiable": {
      "abstract": [
        {
          "text": "A class of types whose instances hold the value of an entity with stable identity.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Identifiable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12IdentifiableP2IDQa",
          "text": "ID"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/Identifiable",
      "kind": "symbol",
      "role": "symbol",
      "title": "Identifiable",
      "type": "topic",
      "url": "/documentation/Swift/Identifiable"
    },
    "doc://com.apple.documentation/documentation/Swift/Set": {
      "abstract": [
        {
          "text": "An unordered collection of unique elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Set"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SH",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/Set",
      "kind": "symbol",
      "role": "symbol",
      "title": "Set",
      "type": "topic",
      "url": "/documentation/Swift/Set"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:ScM": {
      "abstract": [
        {
          "text": "A singleton actor whose executor is equivalent to the main dispatch queue.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@globalActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "final"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "actor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MainActor"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:ScM",
      "kind": "symbol",
      "role": "symbol",
      "title": "MainActor",
      "type": "topic",
      "url": "/documentation/Swift/MainActor"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Creating-a-list",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Displaying-Data-in-Lists",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/listStyle(_:)"
      ],
      "title": "Creating a list"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-list-from-a-set-of-views",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(content:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(selection:content:)"
      ],
      "title": "Creating a list from a set of views"
    },
    {
      "anchor": "Creating-a-list-from-enumerated-data",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:rowContent:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:selection:rowContent:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:rowContent:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:selection:rowContent:)"
      ],
      "title": "Creating a list from enumerated data"
    },
    {
      "anchor": "Creating-a-list-from-hierarchical-data",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:children:rowContent:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:children:selection:rowContent:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:children:rowContent:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:children:selection:rowContent:)"
      ],
      "title": "Creating a list from hierarchical data"
    },
    {
      "anchor": "Creating-a-list-from-editable-data",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:editActions:rowContent:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:editActions:selection:rowContent:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:editActions:rowContent:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/List/init(_:id:editActions:selection:rowContent:)"
      ],
      "title": "Creating a list from editable data"
    },
    {
      "anchor": "Supporting-types",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/List/body"
      ],
      "title": "Supporting types"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/list"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
