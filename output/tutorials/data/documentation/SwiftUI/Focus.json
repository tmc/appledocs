{
  "abstract": [
    {
      "text": "Identify and control which visible object responds to user interaction.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/Focus"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "role": "collectionGroup",
    "roleHeading": "API Collection",
    "title": "Focus"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Focus indicates which element in the display recieves the next input.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Use view modifiers to indicate which views can receive focus, to detect",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "which view has focus, and to programmatically control focus state.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "focus-hero",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For design guidance, see",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/design/Human-Interface-Guidelines/focus-and-selection",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in the Human Interface Guidelines.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Clipboard": {
      "abstract": [
        {
          "text": "Enable people to move or duplicate items by issuing Copy and Paste commands.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Clipboard",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Clipboard",
      "type": "topic",
      "url": "/documentation/swiftui/clipboard"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/DefaultFocusEvaluationPriority": {
      "abstract": [
        {
          "text": "Prioritizations for default focus preferences when evaluating where",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "to move focus in different circumstances.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DefaultFocusEvaluationPriority"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/DefaultFocusEvaluationPriority",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DefaultFocusEvaluationPriority"
        }
      ],
      "role": "symbol",
      "title": "DefaultFocusEvaluationPriority",
      "type": "topic",
      "url": "/documentation/swiftui/defaultfocusevaluationpriority"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Drag-and-drop": {
      "abstract": [
        {
          "text": "Enable people to move or duplicate items by dragging them from one location to another.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Drag-and-drop",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Drag and drop",
      "type": "topic",
      "url": "/documentation/swiftui/drag-and-drop"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Entry()": {
      "abstract": [
        {
          "text": "Creates an environment values, transaction, container values,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "or focused values entry.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Entry"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Entry()",
      "kind": "symbol",
      "role": "symbol",
      "title": "Entry()",
      "type": "topic",
      "url": "/documentation/swiftui/entry()"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/isFocusEffectEnabled": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether the view associated with this",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "environment allows focus effects to be displayed.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isFocusEffectEnabled"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/isFocusEffectEnabled",
      "kind": "symbol",
      "role": "symbol",
      "title": "isFocusEffectEnabled",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues/isfocuseffectenabled"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/isFocused": {
      "abstract": [
        {
          "text": "Returns whether the nearest focusable ancestor has focus.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isFocused"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/isFocused",
      "kind": "symbol",
      "role": "symbol",
      "title": "isFocused",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues/isfocused"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/resetFocus": {
      "abstract": [
        {
          "text": "An action that requests the focus system to reevaluate default focus.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "resetFocus"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI16ResetFocusActionV",
          "text": "ResetFocusAction"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/resetFocus",
      "kind": "symbol",
      "role": "symbol",
      "title": "resetFocus",
      "type": "topic",
      "url": "/documentation/swiftui/environmentvalues/resetfocus"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Focus-Cookbook-sample": {
      "abstract": [
        {
          "text": "Create custom focusable views with key-press handlers that accelerate keyboard input and support movement, and control focus programmatically.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Focus-Cookbook-sample",
      "kind": "article",
      "role": "sampleCode",
      "title": "Focus Cookbook: Supporting and enhancing focus-driven interactions in your SwiftUI app",
      "type": "topic",
      "url": "/documentation/swiftui/focus-cookbook-sample"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusInteractions": {
      "abstract": [
        {
          "text": "Values describe different focus interactions that a view can support.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FocusInteractions"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusInteractions",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FocusInteractions"
        }
      ],
      "role": "symbol",
      "title": "FocusInteractions",
      "type": "topic",
      "url": "/documentation/swiftui/focusinteractions"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusState": {
      "abstract": [
        {
          "text": "A property wrapper type that can read and write a value that SwiftUI updates",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "as the placement of focus within the scene changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FocusState"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusState",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FocusState"
        }
      ],
      "role": "symbol",
      "title": "FocusState",
      "type": "topic",
      "url": "/documentation/swiftui/focusstate"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedBinding": {
      "abstract": [
        {
          "text": "A convenience property wrapper for observing and automatically unwrapping",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "state bindings from the focused view or one of its ancestors.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FocusedBinding"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedBinding",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FocusedBinding"
        }
      ],
      "role": "symbol",
      "title": "FocusedBinding",
      "type": "topic",
      "url": "/documentation/swiftui/focusedbinding"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedObject": {
      "abstract": [
        {
          "text": "A property wrapper type for an observable object supplied by the focused",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "view or one of its ancestors.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FocusedObject"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedObject",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FocusedObject"
        }
      ],
      "role": "symbol",
      "title": "FocusedObject",
      "type": "topic",
      "url": "/documentation/swiftui/focusedobject"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedValue": {
      "abstract": [
        {
          "text": "A property wrapper for observing values from the focused view or one of its",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "ancestors.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FocusedValue"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedValue",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FocusedValue"
        }
      ],
      "role": "symbol",
      "title": "FocusedValue",
      "type": "topic",
      "url": "/documentation/swiftui/focusedvalue"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedValueKey": {
      "abstract": [
        {
          "text": "A protocol for identifier types used when publishing and observing focused",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FocusedValueKey"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedValueKey",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FocusedValueKey"
        }
      ],
      "role": "symbol",
      "title": "FocusedValueKey",
      "type": "topic",
      "url": "/documentation/swiftui/focusedvaluekey"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedValues": {
      "abstract": [
        {
          "text": "A collection of state exported by the focused view and its ancestors.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FocusedValues"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedValues",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FocusedValues"
        }
      ],
      "role": "symbol",
      "title": "FocusedValues",
      "type": "topic",
      "url": "/documentation/swiftui/focusedvalues"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Gestures": {
      "abstract": [
        {
          "text": "Define interactions from taps, clicks, and swipes to fine-grained gestures.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gestures",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Gestures",
      "type": "topic",
      "url": "/documentation/swiftui/gestures"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Input-events": {
      "abstract": [
        {
          "text": "Respond to input from a hardware device, like a keyboard or a Touch Bar.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Input-events",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Input events",
      "type": "topic",
      "url": "/documentation/swiftui/input-events"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ResetFocusAction": {
      "abstract": [
        {
          "text": "An environment value that provides the ability to reevaluate default",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "focus.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ResetFocusAction"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ResetFocusAction",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ResetFocusAction"
        }
      ],
      "role": "symbol",
      "title": "ResetFocusAction",
      "type": "topic",
      "url": "/documentation/swiftui/resetfocusaction"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/System-events": {
      "abstract": [
        {
          "text": "React to system events, like opening a URL.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/System-events",
      "kind": "article",
      "role": "collectionGroup",
      "title": "System events",
      "type": "topic",
      "url": "/documentation/swiftui/system-events"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/defaultFocus(_:_:priority:)": {
      "abstract": [
        {
          "text": "Defines a region of the window in which default focus is evaluated by",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "assigning a value to a given focus state binding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "defaultFocus"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10FocusStateV",
          "text": "FocusState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10FocusStateV7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "priority"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI30DefaultFocusEvaluationPriorityV",
          "text": "DefaultFocusEvaluationPriority"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/defaultFocus(_:_:priority:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "defaultFocus(_:_:priority:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/defaultfocus(_:_:priority:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusEffectDisabled(_:)": {
      "abstract": [
        {
          "text": "Adds a condition that controls whether this view can display focus",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "effects, such as a default focus ring or hover effect.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focusEffectDisabled"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusEffectDisabled(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focusEffectDisabled(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/focuseffectdisabled(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusScope(_:)": {
      "abstract": [
        {
          "text": "Creates a focus scope that SwiftUI uses to limit default focus",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "preferences.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focusScope"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI9NamespaceV",
          "text": "Namespace"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI9NamespaceV2IDV",
          "text": "ID"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusScope(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focusScope(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/focusscope(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusSection()": {
      "abstract": [
        {
          "text": "Indicates that the view’s frame and cohort of focusable descendants",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "should be used to guide focus movement.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focusSection"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusSection()",
      "kind": "symbol",
      "role": "symbol",
      "title": "focusSection()",
      "type": "topic",
      "url": "/documentation/swiftui/view/focussection()"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusable(_:)": {
      "abstract": [
        {
          "text": "Specifies if the view is focusable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focusable"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusable(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focusable(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/focusable(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusable(_:interactions:)": {
      "abstract": [
        {
          "text": "Specifies if the view is focusable, and if so, what focus-driven",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "interactions it supports.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focusable"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "interactions"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI17FocusInteractionsV",
          "text": "FocusInteractions"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusable(_:interactions:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focusable(_:interactions:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/focusable(_:interactions:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focused(_:)": {
      "abstract": [
        {
          "text": "Modifies this view by binding its focus state to the given Boolean state",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focused"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10FocusStateV",
          "text": "FocusState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10FocusStateV7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focused(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focused(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/focused(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focused(_:equals:)": {
      "abstract": [
        {
          "text": "Modifies this view by binding its focus state to the given state value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focused"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10FocusStateV",
          "text": "FocusState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10FocusStateV7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "equals"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focused(_:equals:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focused(_:equals:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/focused(_:equals:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedObject(_:)": {
      "abstract": [
        {
          "text": "Creates a new view that exposes the provided object to other views whose",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "whose state depends on the focused view hierarchy.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focusedObject"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedObject(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focusedObject(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/focusedobject(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedSceneObject(_:)": {
      "abstract": [
        {
          "text": "Creates a new view that exposes the provided object to other views whose",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "whose state depends on the active scene.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focusedSceneObject"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedSceneObject(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focusedSceneObject(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/focusedsceneobject(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedSceneValue(_:)": {
      "abstract": [
        {
          "text": "Sets the focused value for the given object type at a scene-wide scope.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focusedSceneValue"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedSceneValue(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focusedSceneValue(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/focusedscenevalue(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedSceneValue(_:_:)": {
      "abstract": [
        {
          "text": "Modifies this view by injecting a value that you provide for use by",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "other views whose state depends on the focused scene.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focusedSceneValue"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedSceneValue(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focusedSceneValue(_:_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/focusedscenevalue(_:_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedValue(_:)": {
      "abstract": [
        {
          "text": "Sets the focused value for the given object type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focusedValue"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedValue(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focusedValue(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/focusedvalue(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedValue(_:_:)": {
      "abstract": [
        {
          "text": "Modifies this view by injecting a value that you provide for use by",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "other views whose state depends on the focused view hierarchy.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focusedValue"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedValue(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focusedValue(_:_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/focusedvalue(_:_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/prefersDefaultFocus(_:in:)": {
      "abstract": [
        {
          "text": "Indicates that the view should receive focus by default for a given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "namespace.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "prefersDefaultFocus"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "in"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI9NamespaceV",
          "text": "Namespace"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI9NamespaceV2IDV",
          "text": "ID"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/prefersDefaultFocus(_:in:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "prefersDefaultFocus(_:in:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/prefersdefaultfocus(_:in:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchFocused(_:)": {
      "abstract": [
        {
          "text": "Modifies this view by binding the focus state of the search field",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "associated with the nearest searchable modifier to the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "Boolean value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "searchFocused"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10FocusStateV",
          "text": "FocusState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10FocusStateV7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchFocused(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "searchFocused(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/searchfocused(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchFocused(_:equals:)": {
      "abstract": [
        {
          "text": "Modifies this view by binding the focus state of the search field",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "associated with the nearest searchable modifier to the given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "searchFocused"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10FocusStateV",
          "text": "FocusState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI10FocusStateV7BindingV",
          "text": "Binding"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "equals"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchFocused(_:equals:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "searchFocused(_:equals:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/searchfocused(_:equals:)"
    },
    "doc://com.apple.documentation/design/Human-Interface-Guidelines/focus-and-selection": {
      "abstract": [
        {
          "text": "Focus helps people visually confirm the object that their interaction targets.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/design/Human-Interface-Guidelines/focus-and-selection",
      "images": [
        {
          "identifier": "focus-and-selection.svg",
          "type": "icon"
        },
        {
          "identifier": "inputs-focus-and-selection-thumbnail.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "article",
      "title": "Focus and selection",
      "type": "topic",
      "url": "/design/Human-Interface-Guidelines/focus-and-selection"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "focus-and-selection.svg": {
      "alt": null,
      "identifier": "focus-and-selection.svg",
      "type": "image",
      "variants": [
        {
          "svgID": "focus-and-selection",
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/999ac3c549b19a85d02800f3897e3119/focus-and-selection.svg"
        }
      ]
    },
    "focus-hero": {
      "alt": null,
      "identifier": "focus-hero",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/2639ac49d6c0d4aac51bcc00f12a5e2e/focus-hero@2x.png"
        }
      ]
    },
    "inputs-focus-and-selection-thumbnail.png": {
      "alt": null,
      "identifier": "inputs-focus-and-selection-thumbnail.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/04429a313616b4acb1104e0cbb473b09/inputs-focus-and-selection-thumbnail~dark@2x.png"
        },
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4abba7056798484aa59bdb950b89277c/inputs-focus-and-selection-thumbnail@2x.png"
        }
      ]
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Event-handling",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Gestures",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Input-events",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Clipboard",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Drag-and-drop",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/System-events"
      ],
      "title": "Event handling"
    }
  ],
  "topicSections": [
    {
      "anchor": "Essentials",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Focus-Cookbook-sample"
      ],
      "title": "Essentials"
    },
    {
      "anchor": "Indicating-that-a-view-can-receive-focus",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusable(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusable(_:interactions:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusInteractions"
      ],
      "title": "Indicating that a view can receive focus"
    },
    {
      "anchor": "Managing-focus-state",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focused(_:equals:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focused(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/isFocused",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusState",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedValue",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Entry()",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedValueKey",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedBinding",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchFocused(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/searchFocused(_:equals:)"
      ],
      "title": "Managing focus state"
    },
    {
      "anchor": "Exposing-value-types-to-focused-views",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedValue(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedValue(_:_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedSceneValue(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedSceneValue(_:_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedValues"
      ],
      "title": "Exposing value types to focused views"
    },
    {
      "anchor": "Exposing-reference-types-to-focused-views",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedObject(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusedSceneObject(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/FocusedObject"
      ],
      "title": "Exposing reference types to focused views"
    },
    {
      "anchor": "Setting-focus-scope",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusScope(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusSection()"
      ],
      "title": "Setting focus scope"
    },
    {
      "anchor": "Controlling-default-focus",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/prefersDefaultFocus(_:in:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/defaultFocus(_:_:priority:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/DefaultFocusEvaluationPriority"
      ],
      "title": "Controlling default focus"
    },
    {
      "anchor": "Resetting-focus",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/resetFocus",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ResetFocusAction"
      ],
      "title": "Resetting focus"
    },
    {
      "anchor": "Configuring-effects",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/focusEffectDisabled(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/EnvironmentValues/isFocusEffectEnabled"
      ],
      "title": "Configuring effects"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/focus"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
