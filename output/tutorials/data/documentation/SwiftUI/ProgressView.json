{
  "abstract": [
    {
      "text": "A view that shows the progress toward completion of a task.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI12ProgressViewV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "ProgressView"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "ProgressView"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "11.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "7.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "ProgressView"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "ProgressView"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Label"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "CurrentValueLabel"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Label"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "CurrentValueLabel"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Declaring-a-Custom-View"
      ]
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use a progress view to show that a task is incomplete but advancing toward",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "completion. A progress view can show both determinate (percentage complete)",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and indeterminate (progressing or not) types of progress.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Create a determinate progress view by initializing a ",
              "type": "text"
            },
            {
              "code": "ProgressView",
              "type": "codeVoice"
            },
            {
              "text": " with",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a binding to a numeric value that indicates the progress, and a ",
              "type": "text"
            },
            {
              "code": "total",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "value that represents completion of the task. By default, the progress is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "0.0",
              "type": "codeVoice"
            },
            {
              "text": " and the total is ",
              "type": "text"
            },
            {
              "code": "1.0",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The example below uses the state property ",
              "type": "text"
            },
            {
              "code": "progress",
              "type": "codeVoice"
            },
            {
              "text": " to show progress in",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a determinate ",
              "type": "text"
            },
            {
              "code": "ProgressView",
              "type": "codeVoice"
            },
            {
              "text": ". The progress view uses its default total of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "1.0",
              "type": "codeVoice"
            },
            {
              "text": ", and because ",
              "type": "text"
            },
            {
              "code": "progress",
              "type": "codeVoice"
            },
            {
              "text": " starts with an initial value of ",
              "type": "text"
            },
            {
              "code": "0.5",
              "type": "codeVoice"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the progress view begins half-complete. A “More” button below the progress",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "view allows people to increment the progress in increments of five percent:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct LinearProgressDemoView: View {",
            "    @State private var progress = 0.5",
            "",
            "    var body: some View {",
            "        VStack {",
            "            ProgressView(value: progress)",
            "            Button(\"More\") { progress += 0.05 }",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "ProgressView-1-macOS",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To create an indeterminate progress view, use an initializer that doesn’t",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "take a progress value:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var body: some View {",
            "    ProgressView()",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "ProgressView-2-macOS",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You can also create a progress view that covers a closed range of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/date",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " values. As long",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "as the current date is within the range, the progress view automatically",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "updates, filling or depleting the progress view as it nears the end of the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "range. The following example shows a five-minute timer whose start time is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that of the progress view’s initialization:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct DateRelativeProgressDemoView: View {",
            "    let workoutDateRange = Date()...Date().addingTimeInterval(5*60)",
            "",
            "    var body: some View {",
            "         ProgressView(timerInterval: workoutDateRange) {",
            "             Text(\"Workout\")",
            "         }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "ProgressView-3-macOS",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Styling-progress-views",
          "level": 3,
          "text": "Styling progress views",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can customize the appearance and interaction of progress views by",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "creating styles that conform to the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressViewStyle",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol. To set a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "specific style for all progress view instances within a view, use the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/progressViewStyle(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " modifier. In the following example, a custom",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "style adds a rounded pink border to all progress views within the enclosing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/VStack",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct BorderedProgressViews: View {",
            "    var body: some View {",
            "        VStack {",
            "            ProgressView(value: 0.25) { Text(\"25% progress\") }",
            "            ProgressView(value: 0.75) { Text(\"75% progress\") }",
            "        }",
            "        .progressViewStyle(PinkBorderedProgressViewStyle())",
            "    }",
            "}",
            "",
            "struct PinkBorderedProgressViewStyle: ProgressViewStyle {",
            "    func makeBody(configuration: Configuration) -> some View {",
            "        ProgressView(configuration)",
            "            .padding(4)",
            "            .border(.pink, width: 3)",
            "            .cornerRadius(4)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "ProgressView-4-macOS",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "SwiftUI provides two built-in progress view styles,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressViewStyle/linear",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressViewStyle/circular",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", as well as",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "an automatic style that defaults to the most appropriate style in the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "current context. The following example shows a circular progress view that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "starts at 60 percent completed.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct CircularProgressDemoView: View {",
            "    @State private var progress = 0.6",
            "",
            "    var body: some View {",
            "        VStack {",
            "            ProgressView(value: progress)",
            "                .progressViewStyle(.circular)",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "ProgressView-5-macOS",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "On platforms other than macOS, the circular style may appear as an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "indeterminate indicator instead.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "ProgressView-1-macOS": {
      "alt": "A horizontal bar that represents progress, with a More button",
      "identifier": "ProgressView-1-macOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/3456594d290f72e26be845c9f9a84d6d/ProgressView-1-macOS@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/182420f187c48d8ddf6f6d1ac3511457/ProgressView-1-macOS~dark@2x.png"
        }
      ]
    },
    "ProgressView-2-macOS": {
      "alt": "An indeterminate progress view, presented as a spinning set of gray lines",
      "identifier": "ProgressView-2-macOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/23f14adddc00728dc65bed3ebbe411e7/ProgressView-2-macOS@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/8d9467b55915c6a0e6a6c53d160af914/ProgressView-2-macOS~dark@2x.png"
        }
      ]
    },
    "ProgressView-3-macOS": {
      "alt": "A horizontal progress view that shows a bar partially filled with as it",
      "identifier": "ProgressView-3-macOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/115df9b28ca681ce09da67b5bcbb3e7d/ProgressView-3-macOS@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/454e3352a4420b559b6cc1d08f865cd4/ProgressView-3-macOS~dark@2x.png"
        }
      ]
    },
    "ProgressView-4-macOS": {
      "alt": "Two horizontal progress views, one at 25 percent complete and the other at 75 percent,",
      "identifier": "ProgressView-4-macOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/dc98a460b4d5e6b5babf527056cf7298/ProgressView-4-macOS@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/02720cecd55f3964d70b89cf6a614e5d/ProgressView-4-macOS~dark@2x.png"
        }
      ]
    },
    "ProgressView-5-macOS": {
      "alt": "A ring shape, filled to 60 percent completion with a blue",
      "identifier": "ProgressView-5-macOS",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/a8e6132e107636866628b393aeccaa93/ProgressView-5-macOS@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/196ae40c9b266b7d8e402d886e75d176/ProgressView-5-macOS~dark@2x.png"
        }
      ]
    },
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Declaring-a-Custom-View": {
      "abstract": [
        {
          "text": "Define views and assemble them into a view hierarchy.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Declaring-a-Custom-View",
      "kind": "article",
      "role": "article",
      "title": "Declaring a custom view",
      "type": "topic",
      "url": "/documentation/swiftui/declaring-a-custom-view"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/DefaultDateProgressLabel": {
      "abstract": [
        {
          "text": "The default type of the current value label when used by a date-relative",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "progress view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DefaultDateProgressLabel"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/DefaultDateProgressLabel",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DefaultDateProgressLabel"
        }
      ],
      "role": "symbol",
      "title": "DefaultDateProgressLabel",
      "type": "topic",
      "url": "/documentation/swiftui/defaultdateprogresslabel"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge": {
      "abstract": [
        {
          "text": "A view that shows a value within a range.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Gauge"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Gauge"
        }
      ],
      "role": "symbol",
      "title": "Gauge",
      "type": "topic",
      "url": "/documentation/swiftui/gauge"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView": {
      "abstract": [
        {
          "text": "A view that shows the progress toward completion of a task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ProgressView"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ProgressView"
        }
      ],
      "role": "symbol",
      "title": "ProgressView",
      "type": "topic",
      "url": "/documentation/swiftui/progressview"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init()": {
      "abstract": [
        {
          "text": "Creates a progress view for showing indeterminate progress, without a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "label.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "CurrentValueLabel",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "EmptyView",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init()",
      "kind": "symbol",
      "role": "symbol",
      "title": "init()",
      "type": "topic",
      "url": "/documentation/swiftui/progressview/init()"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(_:)": {
      "abstract": [
        {
          "text": "Creates a progress view based on a style configuration.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "CurrentValueLabel",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/progressview/init(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(_:)-3q5nf": {
      "abstract": [
        {
          "text": "Creates a progress view for showing indeterminate progress that",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "generates its label from a string.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "CurrentValueLabel",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "EmptyView",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(_:)-3q5nf",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/progressview/init(_:)-3q5nf"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(_:)-6k5se": {
      "abstract": [
        {
          "text": "Creates a progress view for showing indeterminate progress that",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "generates its label from a localized string.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "CurrentValueLabel",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "EmptyView",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI18LocalizedStringKeyV",
          "text": "LocalizedStringKey"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(_:)-6k5se",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/progressview/init(_:)-6k5se"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(_:)-l5vj": {
      "abstract": [
        {
          "text": "Creates a progress view for visualizing the given progress instance.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "CurrentValueLabel",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSProgress",
          "text": "Progress"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(_:)-l5vj",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/progressview/init(_:)-l5vj"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(_:value:total:)": {
      "abstract": [
        {
          "text": "Creates a progress view for showing determinate progress that generates",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "its label from a string.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "CurrentValueLabel",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "total"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(_:value:total:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "total"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:value:total:)",
      "type": "topic",
      "url": "/documentation/swiftui/progressview/init(_:value:total:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(label:)": {
      "abstract": [
        {
          "text": "Creates a progress view for showing indeterminate progress that displays",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "a custom label.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "CurrentValueLabel",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "EmptyView",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(label:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(label:)",
      "type": "topic",
      "url": "/documentation/swiftui/progressview/init(label:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(timerInterval:countsDown:)": {
      "abstract": [
        {
          "text": "Creates a progress view for showing continuous progress as time passes.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "EmptyView",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "CurrentValueLabel",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "DefaultDateProgressLabel",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "timerInterval"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SN",
          "text": "ClosedRange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "countsDown"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(timerInterval:countsDown:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(timerInterval:countsDown:)",
      "type": "topic",
      "url": "/documentation/swiftui/progressview/init(timerinterval:countsdown:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(timerInterval:countsDown:label:)": {
      "abstract": [
        {
          "text": "Creates a progress view for showing continuous progress as time passes,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "with a descriptive label.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "CurrentValueLabel",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "DefaultDateProgressLabel",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "timerInterval"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SN",
          "text": "ClosedRange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "countsDown"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(timerInterval:countsDown:label:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(timerInterval:countsDown:label:)",
      "type": "topic",
      "url": "/documentation/swiftui/progressview/init(timerinterval:countsdown:label:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(timerInterval:countsDown:label:currentValueLabel:)": {
      "abstract": [
        {
          "text": "Creates a progress view for showing continuous progress as time passes,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "with descriptive and current progress labels.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "CurrentValueLabel",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "timerInterval"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SN",
          "text": "ClosedRange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "countsDown"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "CurrentValueLabel"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(timerInterval:countsDown:label:currentValueLabel:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(timerInterval:countsDown:label:currentValueLabel:)",
      "type": "topic",
      "url": "/documentation/swiftui/progressview/init(timerinterval:countsdown:label:currentvaluelabel:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(value:total:)": {
      "abstract": [
        {
          "text": "Creates a progress view for showing determinate progress.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "CurrentValueLabel",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "total"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(value:total:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(value:total:)",
      "type": "topic",
      "url": "/documentation/swiftui/progressview/init(value:total:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(value:total:label:)": {
      "abstract": [
        {
          "text": "Creates a progress view for showing determinate progress, with a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "custom label.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "CurrentValueLabel",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "total"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(value:total:label:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(value:total:label:)",
      "type": "topic",
      "url": "/documentation/swiftui/progressview/init(value:total:label:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(value:total:label:currentValueLabel:)": {
      "abstract": [
        {
          "text": "Creates a progress view for showing determinate progress, with a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "custom label.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "CurrentValueLabel",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "total"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "CurrentValueLabel"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(value:total:label:currentValueLabel:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(value:total:label:currentValueLabel:)",
      "type": "topic",
      "url": "/documentation/swiftui/progressview/init(value:total:label:currentvaluelabel:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressViewStyle": {
      "abstract": [
        {
          "text": "A type that applies standard interaction behavior to all progress views",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "within a view hierarchy.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ProgressViewStyle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressViewStyle",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ProgressViewStyle"
        }
      ],
      "role": "symbol",
      "title": "ProgressViewStyle",
      "type": "topic",
      "url": "/documentation/swiftui/progressviewstyle"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressViewStyle/circular": {
      "abstract": [
        {
          "text": "The style of a progress view that uses a circular gauge to indicate the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "partial completion of an activity.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CircularProgressViewStyle",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "circular"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI25CircularProgressViewStyleV",
          "text": "CircularProgressViewStyle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressViewStyle/circular",
      "kind": "symbol",
      "role": "symbol",
      "title": "circular",
      "type": "topic",
      "url": "/documentation/swiftui/progressviewstyle/circular"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressViewStyle/linear": {
      "abstract": [
        {
          "text": "A progress view that visually indicates its progress using a horizontal",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "bar.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "LinearProgressViewStyle",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "linear"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI23LinearProgressViewStyleV",
          "text": "LinearProgressViewStyle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressViewStyle/linear",
      "kind": "symbol",
      "role": "symbol",
      "title": "linear",
      "type": "topic",
      "url": "/documentation/swiftui/progressviewstyle/linear"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/VStack": {
      "abstract": [
        {
          "text": "A view that arranges its subviews in a vertical line.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "VStack"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/VStack",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "VStack"
        }
      ],
      "role": "symbol",
      "title": "VStack",
      "type": "topic",
      "url": "/documentation/swiftui/vstack"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/swiftui/view"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/gaugeStyle(_:)": {
      "abstract": [
        {
          "text": "Sets the style for gauges within this view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "gaugeStyle"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/gaugeStyle(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "gaugeStyle(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/gaugestyle(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/progressViewStyle(_:)": {
      "abstract": [
        {
          "text": "Sets the style for progress views in this view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "progressViewStyle"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/progressViewStyle(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "progressViewStyle(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/progressviewstyle(_:)"
    },
    "doc://com.apple.documentation/documentation/foundation/date": {
      "abstract": [
        {
          "text": "A specific point in time, independent of any calendar or time zone.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "Date"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/date",
      "kind": "symbol",
      "role": "symbol",
      "title": "Date",
      "type": "topic",
      "url": "/documentation/foundation/date"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Indicating-a-value",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/gaugeStyle(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/progressViewStyle(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/DefaultDateProgressLabel"
      ],
      "title": "Indicating a value"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-an-indeterminate-progress-view",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init()",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(label:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(_:)-6k5se",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(_:)-3q5nf"
      ],
      "title": "Creating an indeterminate progress view"
    },
    {
      "anchor": "Creating-a-determinate-progress-view",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(_:)-l5vj",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(value:total:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(_:value:total:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(value:total:label:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(value:total:label:currentValueLabel:)"
      ],
      "title": "Creating a determinate progress view"
    },
    {
      "anchor": "Create-a-progress-view-spanning-a-date-range",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(timerInterval:countsDown:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(timerInterval:countsDown:label:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(timerInterval:countsDown:label:currentValueLabel:)"
      ],
      "title": "Create a progress view spanning a date range"
    },
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView/init(_:)"
      ],
      "title": "Initializers"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/progressview"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
