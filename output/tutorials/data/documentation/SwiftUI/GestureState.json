{
  "abstract": [
    {
      "text": "A property wrapper type that updates a property while the user performs a",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "gesture and resets the property back to its initial state when the gesture",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "ends.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI12GestureStateV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "GestureState"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "GestureState"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "GestureState"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@propertyWrapper"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "GestureState"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Value"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Adding-Interactivity-with-Gestures"
      ]
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Declare a property as ",
              "type": "text"
            },
            {
              "code": "@GestureState",
              "type": "codeVoice"
            },
            {
              "text": ", pass as a binding to it as a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "parameter to a gesture’s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gesture/updating(_:body:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " callback, and receive",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "updates to it. A property that’s declared as ",
              "type": "text"
            },
            {
              "code": "@GestureState",
              "type": "codeVoice"
            },
            {
              "text": " implicitly",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "resets when the gesture becomes inactive, making it suitable for tracking",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "transient state.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Add a long-press gesture to a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Circle",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", and update the interface during",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the gesture by declaring a property as ",
              "type": "text"
            },
            {
              "code": "@GestureState",
              "type": "codeVoice"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct SimpleLongPressGestureView: View {",
            "    @GestureState private var isDetectingLongPress = false",
            "",
            "    var longPress: some Gesture {",
            "        LongPressGesture(minimumDuration: 3)",
            "            .updating($isDetectingLongPress) { currentState, gestureState, transaction in",
            "                gestureState = currentState",
            "            }",
            "    }",
            "",
            "    var body: some View {",
            "        Circle()",
            "            .fill(self.isDetectingLongPress ? Color.red : Color.green)",
            "            .frame(width: 100, height: 100, alignment: .center)",
            "            .gesture(longPress)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Adding-Interactivity-with-Gestures": {
      "abstract": [
        {
          "text": "Use gesture modifiers to add interactivity to your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Adding-Interactivity-with-Gestures",
      "kind": "article",
      "role": "article",
      "title": "Adding interactivity with gestures",
      "type": "topic",
      "url": "/documentation/swiftui/adding-interactivity-with-gestures"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Circle": {
      "abstract": [
        {
          "text": "A circle centered on the frame of the view containing it.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Circle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Circle",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Circle"
        }
      ],
      "role": "symbol",
      "title": "Circle",
      "type": "topic",
      "url": "/documentation/swiftui/circle"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/DynamicProperty": {
      "abstract": [
        {
          "text": "An interface for a stored variable that updates an external property of a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DynamicProperty"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/DynamicProperty",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DynamicProperty"
        }
      ],
      "role": "symbol",
      "title": "DynamicProperty",
      "type": "topic",
      "url": "/documentation/swiftui/dynamicproperty"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Gesture/updating(_:body:)": {
      "abstract": [
        {
          "text": "Updates the provided gesture state property as the gesture’s value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "updating"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "State"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI12GestureStateV",
          "text": "GestureState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "State"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "body"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI7GestureP5ValueQa",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "State"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI11TransactionV",
          "text": "Transaction"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI012GestureStateC0V",
          "text": "GestureStateGesture"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "State"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gesture/updating(_:body:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "updating(_:body:)",
      "type": "topic",
      "url": "/documentation/swiftui/gesture/updating(_:body:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState": {
      "abstract": [
        {
          "text": "A property wrapper type that updates a property while the user performs a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "gesture and resets the property back to its initial state when the gesture",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "ends.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GestureState"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "GestureState"
        }
      ],
      "role": "symbol",
      "title": "GestureState",
      "type": "topic",
      "url": "/documentation/swiftui/gesturestate"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(initialValue:)": {
      "abstract": [
        {
          "text": "Creates a view state that’s derived from a gesture with an initial",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "initialValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(initialValue:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(initialValue:)",
      "type": "topic",
      "url": "/documentation/swiftui/gesturestate/init(initialvalue:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(initialValue:reset:)": {
      "abstract": [
        {
          "text": "Creates a view state that’s derived from a gesture with an initial state",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value and a closure that provides a transaction to reset it.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "initialValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "reset"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI11TransactionV",
          "text": "Transaction"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(initialValue:reset:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(initialValue:reset:)",
      "type": "topic",
      "url": "/documentation/swiftui/gesturestate/init(initialvalue:reset:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(initialValue:resetTransaction:)": {
      "abstract": [
        {
          "text": "Creates a view state that’s derived from a gesture with an initial state",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value and a transaction to reset it.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "initialValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "resetTransaction"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI11TransactionV",
          "text": "Transaction"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(initialValue:resetTransaction:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(initialValue:resetTransaction:)",
      "type": "topic",
      "url": "/documentation/swiftui/gesturestate/init(initialvalue:resettransaction:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(reset:)": {
      "abstract": [
        {
          "text": "Creates a view state that’s derived from a gesture with a closure that",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "provides a transaction to reset it.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Value",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "ExpressibleByNilLiteral",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "reset"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI11TransactionV",
          "text": "Transaction"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(reset:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(reset:)",
      "type": "topic",
      "url": "/documentation/swiftui/gesturestate/init(reset:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(resetTransaction:)": {
      "abstract": [
        {
          "text": "Creates a view state that’s derived from a gesture with a transaction to",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "reset it.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Value",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "ExpressibleByNilLiteral",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "resetTransaction"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI11TransactionV",
          "text": "Transaction"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(resetTransaction:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(resetTransaction:)",
      "type": "topic",
      "url": "/documentation/swiftui/gesturestate/init(resettransaction:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(wrappedValue:)": {
      "abstract": [
        {
          "text": "Creates a view state that’s derived from a gesture.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "wrappedValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(wrappedValue:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(wrappedValue:)",
      "type": "topic",
      "url": "/documentation/swiftui/gesturestate/init(wrappedvalue:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(wrappedValue:reset:)": {
      "abstract": [
        {
          "text": "Creates a view state that’s derived from a gesture with a wrapped state",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value and a closure that provides a transaction to reset it.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "wrappedValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "reset"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI11TransactionV",
          "text": "Transaction"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(wrappedValue:reset:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(wrappedValue:reset:)",
      "type": "topic",
      "url": "/documentation/swiftui/gesturestate/init(wrappedvalue:reset:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(wrappedValue:resetTransaction:)": {
      "abstract": [
        {
          "text": "Creates a view state that’s derived from a gesture with a wrapped state",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value and a transaction to reset it.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "wrappedValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "resetTransaction"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI11TransactionV",
          "text": "Transaction"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(wrappedValue:resetTransaction:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(wrappedValue:resetTransaction:)",
      "type": "topic",
      "url": "/documentation/swiftui/gesturestate/init(wrappedvalue:resettransaction:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/projectedValue": {
      "abstract": [
        {
          "text": "A binding to the gesture state property.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "projectedValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI12GestureStateV",
          "text": "GestureState"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/projectedValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "projectedValue",
      "type": "topic",
      "url": "/documentation/swiftui/gesturestate/projectedvalue"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/wrappedValue": {
      "abstract": [
        {
          "text": "The wrapped value referenced by the gesture state property.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "wrappedValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Value"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/wrappedValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "wrappedValue",
      "type": "topic",
      "url": "/documentation/swiftui/gesturestate/wrappedvalue"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureStateGesture": {
      "abstract": [
        {
          "text": "A gesture that updates the state provided by a gesture’s updating callback.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GestureStateGesture"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureStateGesture",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "GestureStateGesture"
        }
      ],
      "role": "symbol",
      "title": "GestureStateGesture",
      "type": "topic",
      "url": "/documentation/swiftui/gesturestategesture"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/DynamicProperty",
        "doc://com.externally.resolved.symbol/s:s8SendableP"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Managing-gesture-state",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureStateGesture"
      ],
      "title": "Managing gesture state"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-gesture-state",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(initialValue:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(initialValue:reset:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(initialValue:resetTransaction:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(reset:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(resetTransaction:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(wrappedValue:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(wrappedValue:reset:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/init(wrappedValue:resetTransaction:)"
      ],
      "title": "Creating a gesture state"
    },
    {
      "anchor": "Getting-the-state",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/wrappedValue",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/GestureState/projectedValue"
      ],
      "title": "Getting the state"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/gesturestate"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
