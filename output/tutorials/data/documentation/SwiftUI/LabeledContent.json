{
  "abstract": [
    {
      "text": "A container for attaching a label to a value-bearing view.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI14LabeledContentV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "LabeledContent"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "LabeledContent"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "LabeledContent"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "LabeledContent"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Label"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "Content"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The instance’s content represents a read-only or read-write value, and its",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "label identifies or describes the purpose of that value.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The resulting element has a layout that’s consistent with other framework",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "controls and automatically adapts to its container, like a form or toolbar.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Some styles of labeled content also apply styling or behaviors to the value",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "content, like making ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Text",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " views selectable.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The following example associates a label with a custom view and has",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a layout that matches the label of the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "Form {",
            "    LabeledContent(\"Custom Value\") {",
            "        MyCustomView(value: $value)",
            "    }",
            "    Picker(\"Selected Value\", selection: $selection) {",
            "        Text(\"Option 1\").tag(1)",
            "        Text(\"Option 2\").tag(2)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Custom-view-labels",
          "level": 3,
          "text": "Custom view labels",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can assemble labeled content with an explicit view for its label",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(content:label:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " initializer. For example, you can",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "rewrite the previous labeled content example using a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Text",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " view:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "LabeledContent {",
            "    MyCustomView(value: $value)",
            "} label: {",
            "    Text(\"Custom Value\")",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "label",
              "type": "codeVoice"
            },
            {
              "text": " view builder accepts any kind of view, like a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Label",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "LabeledContent {",
            "    MyCustomView(value: $value)",
            "} label: {",
            "    Label(\"Custom Value\", systemImage: \"hammer\")",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "For cases where adding a subtitle to the label is desired, use a view",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "builder that creates multiple ",
              "type": "text"
            },
            {
              "code": "Text",
              "type": "codeVoice"
            },
            {
              "text": " views where the first text represents",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the title and the second text represents the subtitle:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "LabeledContent {",
            "    MyCustomView(value: $value)",
            "} label: {",
            "    Text(\"Custom Value\")",
            "    Text(\"Custom Subtitle Value\")",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Textual-labeled-content",
          "level": 3,
          "text": "Textual labeled content",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can construct labeled content with string values or formatted values",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to create read-only displays of textual values:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "Form {",
            "    Section(\"Information\") {",
            "        LabeledContent(\"Name\", value: person.name)",
            "        LabeledContent(\"Age\", value: person.age, format: .number)",
            "        LabeledContent(\"Height\", value: person.height,",
            "            format: .measurement(width: .abbreviated))",
            "    }",
            "    if !person.pets.isEmpty {",
            "        Section(\"Pets\") {",
            "            ForEach(pet) { pet in",
            "                LabeledContent(pet.species, value: pet.name)",
            "            }",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Wherever possible, SwiftUI makes this text selectable.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Compositional-elements",
          "level": 3,
          "text": "Compositional elements",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can use labeled content as the label for other elements. For example,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationLink",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " can present a summary value for the destination it",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "links to:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "Form {",
            "    NavigationLink(value: Settings.wifiDetail) {",
            "        LabeledContent(\"Wi-Fi\", value: ssidName)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "In some cases, the styling of views used as the value content is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "specialized as well. For example, while a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Toggle",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " in an inset group",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "form on macOS is styled as a switch by default, it’s styled as a checkbox",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "when used as a value element within a surrounding ",
              "type": "text"
            },
            {
              "code": "LabeledContent",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instance:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "Form {",
            "    LabeledContent(\"Source Control\") {",
            "        Toggle(\"Refresh local status automatically\",",
            "            isOn: $refreshLocalStatus)",
            "        Toggle(\"Fetch and refresh server status automatically\",",
            "            isOn: $refreshServerStatus)",
            "        Toggle(\"Add and remove files automatically\",",
            "            isOn: $addAndRemoveFiles)",
            "        Toggle(\"Select files to commit automatically\",",
            "            isOn: $selectFiles)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Controlling-label-visibility",
          "level": 3,
          "text": "Controlling label visibility",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A label communicates the identity or purpose of the value, which is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "important for accessibility. However, you might want to hide the label",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in the display, and some controls or contexts may visually hide their label",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "by default. The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/labelsHidden()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " modifier allows controlling that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "visibility. The following example hides both labels, producing only a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "group of the two value views:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "Group {",
            "    LabeledContent(\"Custom Value\") {",
            "        MyCustomView(value: $value)",
            "    }",
            "    Picker(\"Selected Value\", selection: $selection) {",
            "        Text(\"Option 1\").tag(1)",
            "        Text(\"Option 2\").tag(2)",
            "    }",
            "}",
            ".labelsHidden()"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Styling-labeled-content",
          "level": 3,
          "text": "Styling labeled content",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can set label styles using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/labeledContentStyle(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "modifier. You can also build custom styles using ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContentStyle",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Form": {
      "abstract": [
        {
          "text": "A container for grouping controls used for data entry, such as in settings",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "or inspectors.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Form"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Form",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Form"
        }
      ],
      "role": "symbol",
      "title": "Form",
      "type": "topic",
      "url": "/documentation/swiftui/form"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Label": {
      "abstract": [
        {
          "text": "A standard label for user interface items, consisting of an icon with a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "title.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Label"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Label",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Label"
        }
      ],
      "role": "symbol",
      "title": "Label",
      "type": "topic",
      "url": "/documentation/swiftui/label"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent": {
      "abstract": [
        {
          "text": "A container for attaching a label to a value-bearing view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LabeledContent"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LabeledContent"
        }
      ],
      "role": "symbol",
      "title": "LabeledContent",
      "type": "topic",
      "url": "/documentation/swiftui/labeledcontent"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(_:)": {
      "abstract": [
        {
          "text": "Creates labeled content based on a labeled content style configuration.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "LabeledContentStyleConfiguration.Label",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "LabeledContentStyleConfiguration.Content",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI32LabeledContentStyleConfigurationV",
          "text": "LabeledContentStyleConfiguration"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/labeledcontent/init(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(_:content:)": {
      "abstract": [
        {
          "text": "Creates a labeled view that generates its label from a localized string",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "key.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Text",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(_:content:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/labeledcontent/init(_:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(_:value:)": {
      "abstract": [
        {
          "text": "Creates a labeled informational view.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Text",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Text",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(_:value:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:value:)",
      "type": "topic",
      "url": "/documentation/swiftui/labeledcontent/init(_:value:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(_:value:format:)": {
      "abstract": [
        {
          "text": "Creates a labeled informational view from a formatted value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Text",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Text",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "format"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(_:value:format:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "format"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:value:format:)",
      "type": "topic",
      "url": "/documentation/swiftui/labeledcontent/init(_:value:format:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(content:label:)": {
      "abstract": [
        {
          "text": "Creates a standard labeled element, with a view that conveys",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the value of the element and a label.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(content:label:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(content:label:)",
      "type": "topic",
      "url": "/documentation/swiftui/labeledcontent/init(content:label:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContentStyle": {
      "abstract": [
        {
          "text": "The appearance and behavior of a labeled content instance..",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LabeledContentStyle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContentStyle",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LabeledContentStyle"
        }
      ],
      "role": "symbol",
      "title": "LabeledContentStyle",
      "type": "topic",
      "url": "/documentation/swiftui/labeledcontentstyle"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationLink": {
      "abstract": [
        {
          "text": "A view that controls a navigation presentation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NavigationLink"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NavigationLink",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NavigationLink"
        }
      ],
      "role": "symbol",
      "title": "NavigationLink",
      "type": "topic",
      "url": "/documentation/swiftui/navigationlink"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker": {
      "abstract": [
        {
          "text": "A control for selecting from a set of mutually exclusive values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Picker"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Picker",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Picker"
        }
      ],
      "role": "symbol",
      "title": "Picker",
      "type": "topic",
      "url": "/documentation/swiftui/picker"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Text": {
      "abstract": [
        {
          "text": "A view that displays one or more lines of read-only text.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Text",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Text"
        }
      ],
      "role": "symbol",
      "title": "Text",
      "type": "topic",
      "url": "/documentation/swiftui/text"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Toggle": {
      "abstract": [
        {
          "text": "A control that toggles between on and off states.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Toggle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Toggle",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Toggle"
        }
      ],
      "role": "symbol",
      "title": "Toggle",
      "type": "topic",
      "url": "/documentation/swiftui/toggle"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Label",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Content",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/swiftui/view"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/formStyle(_:)": {
      "abstract": [
        {
          "text": "Sets the style for forms in a view hierarchy.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "formStyle"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/formStyle(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "formStyle(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/formstyle(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/labeledContentStyle(_:)": {
      "abstract": [
        {
          "text": "Sets a style for labeled content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "labeledContentStyle"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/labeledContentStyle(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "labeledContentStyle(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/labeledcontentstyle(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/labelsHidden()": {
      "abstract": [
        {
          "text": "Hides the labels of any controls contained within this view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "labelsHidden"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/labelsHidden()",
      "kind": "symbol",
      "role": "symbol",
      "title": "labelsHidden()",
      "type": "topic",
      "url": "/documentation/swiftui/view/labelshidden()"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:s8CopyableP": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8CopyableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/Swift/Copyable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s8CopyableP",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Grouping-inputs",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Form",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/formStyle(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/labeledContentStyle(_:)"
      ],
      "title": "Grouping inputs"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-labeled-content",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(_:content:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(content:label:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(_:value:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(_:value:format:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/LabeledContent/init(_:)"
      ],
      "title": "Creating labeled content"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/labeledcontent"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
