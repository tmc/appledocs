{
  "abstract": [
    {
      "text": "A view that shows a value within a range.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI5GaugeV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Gauge"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Gauge"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "7.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "Gauge"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Gauge"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Label"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "CurrentValueLabel"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "BoundsLabel"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "MarkedValueLabels"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Label"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "CurrentValueLabel"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "BoundsLabel"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "MarkedValueLabels"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A gauge is a view that shows a current level of a value in relation",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to a specified finite capacity, very much like a fuel gauge in an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "automobile. Gauge displays are configurable; they can show",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "any combination of the gauge’s current value, the range the gauge can",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "display, and a label describing the purpose of the gauge itself.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In its most basic form, a gauge displays a single value along the path of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the gauge mapped into a range from 0 to 100 percent. The example below sets",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the gauge’s indicator to a position 40 percent along the gauge’s path:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct SimpleGauge: View {",
            "    @State private var batteryLevel = 0.4",
            "",
            "    var body: some View {",
            "        Gauge(value: batteryLevel) {",
            "            Text(\"Battery Level\")",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "SwiftUI-Gauge-ValueLabelLinear.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You can make a gauge more descriptive by describing its purpose, showing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "its current value and its start and end values. This example shows the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "gauge variant that accepts a range and adds labels using multiple",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "trailing closures describing the current value and the minimum",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and maximum values of the gauge:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct LabeledGauge: View {",
            "    @State private var current = 67.0",
            "    @State private var minValue = 0.0",
            "    @State private var maxValue = 170.0",
            "",
            "    var body: some View {",
            "        Gauge(value: current, in: minValue...maxValue) {",
            "            Text(\"BPM\")",
            "        } currentValueLabel: {",
            "            Text(\"\\(Int(current))\")",
            "        } minimumValueLabel: {",
            "            Text(\"\\(Int(minValue))\")",
            "        } maximumValueLabel: {",
            "            Text(\"\\(Int(maxValue))\")",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "SwiftUI-Gauge-Label-CurrentValueLinear.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "As shown above, the default style for gauges is a linear, continuous bar",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "with an indicator showing the current value, and optional labels describing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the gauge’s purpose, current, minimum, and maximum values.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Some visual presentations of ",
                  "type": "text"
                },
                {
                  "code": "Gauge",
                  "type": "codeVoice"
                },
                {
                  "text": " don’t display all the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "labels required by the API. However, the accessibility system does use",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "the label content and you should use these labels to fully describe",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "the gauge for accessibility users.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "To change the style of a gauge, use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/gaugeStyle(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "view modifier and supply an initializer for a specific gauge style. For",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "example, to display the same gauge in a circular style, apply the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GaugeStyle/circular",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " style to the view:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct LabeledGauge: View {",
            "    @State private var current = 67.0",
            "    @State private var minValue = 0.0",
            "    @State private var maxValue = 170.0",
            "",
            "    var body: some View {",
            "        Gauge(value: current, in: minValue...maxValue) {",
            "            Text(\"BPM\")",
            "        } currentValueLabel: {",
            "            Text(\"\\(Int(current))\")",
            "        } minimumValueLabel: {",
            "            Text(\"\\(Int(minValue))\")",
            "        } maximumValueLabel: {",
            "            Text(\"\\(Int(maxValue))\")",
            "        }",
            "        .gaugeStyle(.circular)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "SwiftUI-Gauge-LabeledCircular.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To style elements of a gauge’s presentation, you apply view modifiers to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the elements that you want to change. In the example below, the current",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "value, minimum and maximum value labels have custom colors:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct StyledGauge: View {",
            "    @State private var current = 67.0",
            "    @State private var minValue = 50.0",
            "    @State private var maxValue = 170.0",
            "",
            "    var body: some View {",
            "        Gauge(value: current, in: minValue...maxValue) {",
            "            Image(systemName: \"heart.fill\")",
            "                .foregroundColor(.red)",
            "        } currentValueLabel: {",
            "            Text(\"\\(Int(current))\")",
            "                .foregroundColor(Color.green)",
            "        } minimumValueLabel: {",
            "            Text(\"\\(Int(minValue))\")",
            "                .foregroundColor(Color.green)",
            "        } maximumValueLabel: {",
            "            Text(\"\\(Int(maxValue))\")",
            "                .foregroundColor(Color.red)",
            "        }",
            "        .gaugeStyle(.circular)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "SwiftUI-Gauge-CircularStyled.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You can further style a gauge’s appearance by supplying a tint color or",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a gradient to the style’s initializer. The following example shows the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "effect of a gradient in the initialization of a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/CircularGaugeStyle",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "gauge with a colorful gradient across the length of the gauge:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct StyledGauge: View {",
            "    @State private var current = 67.0",
            "    @State private var minValue = 50.0",
            "    @State private var maxValue = 170.0",
            "    let gradient = Gradient(colors: [.green, .yellow, .orange, .red])",
            "",
            "    var body: some View {",
            "        Gauge(value: current, in: minValue...maxValue) {",
            "            Image(systemName: \"heart.fill\")",
            "                .foregroundColor(.red)",
            "        } currentValueLabel: {",
            "            Text(\"\\(Int(current))\")",
            "                .foregroundColor(Color.green)",
            "        } minimumValueLabel: {",
            "            Text(\"\\(Int(minValue))\")",
            "                .foregroundColor(Color.green)",
            "        } maximumValueLabel: {",
            "            Text(\"\\(Int(maxValue))\")",
            "                .foregroundColor(Color.red)",
            "        }",
            "        .gaugeStyle(CircularGaugeStyle(tint: gradient))",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "identifier": "SwiftUI-Gauge-Circular-Gradient.png",
              "type": "image"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-Gauge-Circular-Gradient.png": {
      "alt": "A screenshot showing a circular gauge with a gradient",
      "identifier": "SwiftUI-Gauge-Circular-Gradient.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/55bce9efa228cc603553c2355f36335b/SwiftUI-Gauge-Circular-Gradient@2x.png"
        }
      ]
    },
    "SwiftUI-Gauge-CircularStyled.png": {
      "alt": "A circular gauge describing heart rate in beats per minute with its",
      "identifier": "SwiftUI-Gauge-CircularStyled.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/6edbf40c27a1190d9418a36ad84d488c/SwiftUI-Gauge-CircularStyled@2x.png"
        }
      ]
    },
    "SwiftUI-Gauge-Label-CurrentValueLinear.png": {
      "alt": "A linear gauge describing heart-rate in beats per minute with its",
      "identifier": "SwiftUI-Gauge-Label-CurrentValueLinear.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/09257b8f46cdf18f05c7a7399ce3baa2/SwiftUI-Gauge-Label-CurrentValueLinear@2x.png"
        }
      ]
    },
    "SwiftUI-Gauge-LabeledCircular.png": {
      "alt": "A circular gauge describing heart rate in beats per minute with its",
      "identifier": "SwiftUI-Gauge-LabeledCircular.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/f36677c0da94cb4224de1633c1367dd7/SwiftUI-Gauge-LabeledCircular@2x.png"
        }
      ]
    },
    "SwiftUI-Gauge-ValueLabelLinear.png": {
      "alt": "A linear gauge displaying a current value set to 40 percent in a range of 0",
      "identifier": "SwiftUI-Gauge-ValueLabelLinear.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/294460fde9fad086627bca9bbcea396f/SwiftUI-Gauge-ValueLabelLinear@2x.png"
        }
      ]
    },
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/CircularGaugeStyle": {
      "abstract": [
        {
          "text": "A gauge style that displays an open ring with a marker that appears at a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "point along the ring to indicate the gauge’s current value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CircularGaugeStyle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/CircularGaugeStyle",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CircularGaugeStyle"
        }
      ],
      "role": "symbol",
      "title": "CircularGaugeStyle",
      "type": "topic",
      "url": "/documentation/swiftui/circulargaugestyle"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/DefaultDateProgressLabel": {
      "abstract": [
        {
          "text": "The default type of the current value label when used by a date-relative",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "progress view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DefaultDateProgressLabel"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/DefaultDateProgressLabel",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DefaultDateProgressLabel"
        }
      ],
      "role": "symbol",
      "title": "DefaultDateProgressLabel",
      "type": "topic",
      "url": "/documentation/swiftui/defaultdateprogresslabel"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge": {
      "abstract": [
        {
          "text": "A view that shows a value within a range.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Gauge"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Gauge"
        }
      ],
      "role": "symbol",
      "title": "Gauge",
      "type": "topic",
      "url": "/documentation/swiftui/gauge"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge/init(value:in:label:)": {
      "abstract": [
        {
          "text": "Creates a gauge showing a value within a range and describes the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "gauge’s purpose and current value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "in"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SN",
          "text": "ClosedRange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge/init(value:in:label:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(value:in:label:)",
      "type": "topic",
      "url": "/documentation/swiftui/gauge/init(value:in:label:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge/init(value:in:label:currentValueLabel:)": {
      "abstract": [
        {
          "text": "Creates a gauge showing a value within a range and that describes the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "gauge’s purpose and current value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "in"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SN",
          "text": "ClosedRange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "CurrentValueLabel"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge/init(value:in:label:currentValueLabel:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(value:in:label:currentValueLabel:)",
      "type": "topic",
      "url": "/documentation/swiftui/gauge/init(value:in:label:currentvaluelabel:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge/init(value:in:label:currentValueLabel:markedValueLabels:)": {
      "abstract": [
        {
          "text": "Creates a gauge representing a value within a range.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "in"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SN",
          "text": "ClosedRange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "CurrentValueLabel"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "markedValueLabels"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "MarkedValueLabels"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge/init(value:in:label:currentValueLabel:markedValueLabels:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(value:in:label:currentValueLabel:markedValueLabels:)",
      "type": "topic",
      "url": "/documentation/swiftui/gauge/init(value:in:label:currentvaluelabel:markedvaluelabels:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge/init(value:in:label:currentValueLabel:minimumValueLabel:maximumValueLabel:)": {
      "abstract": [
        {
          "text": "Creates a gauge showing a value within a range and describes the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "gauge’s current, minimum, and maximum values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "in"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SN",
          "text": "ClosedRange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "CurrentValueLabel"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "minimumValueLabel"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "BoundsLabel"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "maximumValueLabel"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "BoundsLabel"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge/init(value:in:label:currentValueLabel:minimumValueLabel:maximumValueLabel:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(value:in:label:currentValueLabel:minimumValueLabel:maximumValueLabel:)",
      "type": "topic",
      "url": "/documentation/swiftui/gauge/init(value:in:label:currentvaluelabel:minimumvaluelabel:maximumvaluelabel:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge/init(value:in:label:currentValueLabel:minimumValueLabel:maximumValueLabel:markedValueLabels:)": {
      "abstract": [
        {
          "text": "Creates a gauge representing a value within a range.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "in"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SN",
          "text": "ClosedRange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "V"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Label"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "currentValueLabel"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "CurrentValueLabel"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "minimumValueLabel"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "BoundsLabel"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "maximumValueLabel"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "BoundsLabel"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "markedValueLabels"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "MarkedValueLabels"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge/init(value:in:label:currentValueLabel:minimumValueLabel:maximumValueLabel:markedValueLabels:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(value:in:label:currentValueLabel:minimumValueLabel:maximumValueLabel:markedValueLabels:)",
      "type": "topic",
      "url": "/documentation/swiftui/gauge/init(value:in:label:currentvaluelabel:minimumvaluelabel:maximumvaluelabel:markedvaluelabels:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GaugeStyle/circular": {
      "abstract": [
        {
          "text": "A gauge style that displays an open ring with a marker that appears at a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "point along the ring to indicate the gauge’s current value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CircularGaugeStyle",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "circular"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI18CircularGaugeStyleV",
          "text": "CircularGaugeStyle"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GaugeStyle/circular",
      "kind": "symbol",
      "role": "symbol",
      "title": "circular",
      "type": "topic",
      "url": "/documentation/swiftui/gaugestyle/circular"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView": {
      "abstract": [
        {
          "text": "A view that shows the progress toward completion of a task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ProgressView"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ProgressView"
        }
      ],
      "role": "symbol",
      "title": "ProgressView",
      "type": "topic",
      "url": "/documentation/swiftui/progressview"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/swiftui/view"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/gaugeStyle(_:)": {
      "abstract": [
        {
          "text": "Sets the style for gauges within this view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "gaugeStyle"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/gaugeStyle(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "gaugeStyle(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/gaugestyle(_:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/progressViewStyle(_:)": {
      "abstract": [
        {
          "text": "Sets the style for progress views in this view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "progressViewStyle"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/progressViewStyle(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "progressViewStyle(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/progressviewstyle(_:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Indicating-a-value",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/gaugeStyle(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/ProgressView",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/progressViewStyle(_:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/DefaultDateProgressLabel"
      ],
      "title": "Indicating a value"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-gauge",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge/init(value:in:label:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge/init(value:in:label:currentValueLabel:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge/init(value:in:label:currentValueLabel:markedValueLabels:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge/init(value:in:label:currentValueLabel:minimumValueLabel:maximumValueLabel:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Gauge/init(value:in:label:currentValueLabel:minimumValueLabel:maximumValueLabel:markedValueLabels:)"
      ],
      "title": "Creating a gauge"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/gauge"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
