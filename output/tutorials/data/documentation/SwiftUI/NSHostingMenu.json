{
  "abstract": [
    {
      "text": "An AppKit menu with menu items that are defined by a SwiftUI View.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingMenu"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI13NSHostingMenuC",
    "fragments": [
      {
        "kind": "keyword",
        "text": "class"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "NSHostingMenu"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "NSHostingMenu"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.4",
        "name": "macOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Class",
    "symbolKind": "class",
    "title": "NSHostingMenu"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "macOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "class"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSHostingMenu"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Content"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Content"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Because ",
              "type": "text"
            },
            {
              "code": "NSHostingMenu",
              "type": "codeVoice"
            },
            {
              "text": " is an ",
              "type": "text"
            },
            {
              "code": "NSMenu",
              "type": "codeVoice"
            },
            {
              "text": " subclass, you can integrate it",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "into your existing AppKit view hierarchies that display menus.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For example, you can set a hosting menu as an AppKit view’s context menu.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "A hosting menu’s ",
              "type": "text"
            },
            {
              "code": "items",
              "type": "codeVoice"
            },
            {
              "text": " property will be updated based on the content",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of the provided ",
              "type": "text"
            },
            {
              "code": "rootView",
              "type": "codeVoice"
            },
            {
              "text": ", so direct mutations to the item array are not",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "allowed, even if done using methods like ",
              "type": "text"
            },
            {
              "code": "addItem",
              "type": "codeVoice"
            },
            {
              "text": " on the menu itself.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "SwiftUI views hosted in the menu will be styled and behave identically",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to views in a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Menu",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "code": "View/contextMenu",
              "type": "codeVoice"
            },
            {
              "text": ". Make sure to use a ",
              "type": "text"
            },
            {
              "code": "Group",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or a view with multiple subviews as your top level container instead of an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "HStack",
              "type": "codeVoice"
            },
            {
              "text": " or other container that would attempt to place all of your",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "actions in a single menu item.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "When used as the menu of an ",
                  "type": "text"
                },
                {
                  "code": "NSPopUpButton",
                  "type": "codeVoice"
                },
                {
                  "text": ", make sure",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "code": "NSPopUpButtonCell.usesItemFromMenu",
                  "type": "codeVoice"
                },
                {
                  "text": " is set to ",
                  "type": "text"
                },
                {
                  "code": "false",
                  "type": "codeVoice"
                },
                {
                  "text": ". When",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "using a hosting menu with macOS 14, do not change the value of the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "code": "delegate",
                  "type": "codeVoice"
                },
                {
                  "text": " property. (Setting the delegate is permitted on macOS 15 and",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "newer.)",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "For example, the following code would set up the first part of the Finder’s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "context menu, both in the Action button in the toolbar and as",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a context menu:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct FileOrFolderContextMenu: View {",
            "    let url: URL",
            "    var body: some View {",
            "        Section {",
            "            if url.hasDirectoryPath {",
            "                Button(\"Open in New Tab\") { ... }",
            "            } else {",
            "                Button(\"Open\") { ... }",
            "                Menu(\"Open With\") { ... }",
            "            }",
            "        }",
            "        Section {",
            "            Button(\"Move to Trash\") { ... }",
            "        }",
            "        Section {",
            "            Button(\"Get Info\") { ... }",
            "            Button(\"Rename\") { ... }",
            "            if url.pathExtension != \"zip\" {",
            "                Button(\"Compress “\\(url.lastPathComponent)”\") { ... }",
            "            }",
            "            // ...",
            "        }",
            "    }",
            "}",
            "",
            "// In the toolbar setup:",
            "let popUpButton = NSPopUpButton(frame: .zero, pullsDown: true)",
            "(popUpButton.cell as! NSPopUpButtonCell).usesItemFromMenu = false",
            "popUpButton.menu = NSHostingMenu(rootView: Group {",
            "    Button(\"New Folder\") { ... }",
            "    FileOrFolderContextMenu(url: selectedURL)",
            "})",
            "",
            "// In the column view:",
            "List(directoryContents, selection: $selection) { entry in",
            "    DirectoryEntryRow(entry: entry)",
            "        .contextMenu {",
            "            FileOrFolderContextMenu(url: entry.url)",
            "        }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "Unifying-your-app-s-animations-PageImage-card.png": {
      "alt": "A conceptual illustration of a disclosure indicator, shown animating frame by frame from its collapsed position to its expanded position.",
      "identifier": "Unifying-your-app-s-animations-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/db26bd6bfe171a450c126a68c3bd92d4/Unifying-your-app-s-animations-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/3559438f813d2163ecacac3918dbff5f/Unifying-your-app-s-animations-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Menu": {
      "abstract": [
        {
          "text": "A control for presenting a menu of actions.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Menu"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Menu",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Menu"
        }
      ],
      "role": "symbol",
      "title": "Menu",
      "type": "topic",
      "url": "/documentation/swiftui/menu"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingController": {
      "abstract": [
        {
          "text": "An AppKit view controller that hosts SwiftUI view hierarchy.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSHostingController"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingController",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSHostingController"
        }
      ],
      "role": "symbol",
      "title": "NSHostingController",
      "type": "topic",
      "url": "/documentation/swiftui/nshostingcontroller"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingMenu": {
      "abstract": [
        {
          "text": "An AppKit menu with menu items that are defined by a SwiftUI View.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSHostingMenu"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingMenu",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSHostingMenu"
        }
      ],
      "role": "symbol",
      "title": "NSHostingMenu",
      "type": "topic",
      "url": "/documentation/swiftui/nshostingmenu"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingMenu/init(rootView:)": {
      "abstract": [
        {
          "text": "Creates a hosting menu object that wraps the specified SwiftUI view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "rootView"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingMenu/init(rootView:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(rootView:)",
      "type": "topic",
      "url": "/documentation/swiftui/nshostingmenu/init(rootview:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingMenu/rootView": {
      "abstract": [
        {
          "text": "The root view of the SwiftUI view hierarchy managed by this menu.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "rootView"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Content"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingMenu/rootView",
      "kind": "symbol",
      "role": "symbol",
      "title": "rootView",
      "type": "topic",
      "url": "/documentation/swiftui/nshostingmenu/rootview"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingSceneBridgingOptions": {
      "abstract": [
        {
          "text": "Options for how hosting views and controllers manage aspects of the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "associated window.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSHostingSceneBridgingOptions"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingSceneBridgingOptions",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSHostingSceneBridgingOptions"
        }
      ],
      "role": "symbol",
      "title": "NSHostingSceneBridgingOptions",
      "type": "topic",
      "url": "/documentation/swiftui/nshostingscenebridgingoptions"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingSizingOptions": {
      "abstract": [
        {
          "text": "Options for how hosting views and controllers reflect their",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "content’s size into Auto Layout constraints.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSHostingSizingOptions"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingSizingOptions",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSHostingSizingOptions"
        }
      ],
      "role": "symbol",
      "title": "NSHostingSizingOptions",
      "type": "topic",
      "url": "/documentation/swiftui/nshostingsizingoptions"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingView": {
      "abstract": [
        {
          "text": "An AppKit view that hosts a SwiftUI view hierarchy.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSHostingView"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSHostingView"
        }
      ],
      "role": "symbol",
      "title": "NSHostingView",
      "type": "topic",
      "url": "/documentation/swiftui/nshostingview"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Unifying-your-app-s-animations": {
      "abstract": [
        {
          "text": "Create a consistent UI animation experience across SwiftUI, UIKit, and AppKit.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Unifying-your-app-s-animations",
      "images": [
        {
          "identifier": "Unifying-your-app-s-animations-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "article",
      "role": "article",
      "title": "Unifying your app’s animations",
      "type": "topic",
      "url": "/documentation/swiftui/unifying-your-app-s-animations"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/swiftui/view"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/c:objc(cs)NSMenu": {
      "abstract": [
        {
          "text": "An object that manages an app’s menus.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSMenu"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSMenu",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSMenu",
      "type": "topic",
      "url": "/documentation/AppKit/NSMenu"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSAccessibility": {
      "abstract": [
        {
          "text": "The complete list of properties and methods for accessible elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSAccessibilityProtocol"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSAccessibility",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSAccessibilityProtocol",
      "type": "topic",
      "url": "/documentation/AppKit/NSAccessibilityProtocol"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSAccessibilityElement": {
      "abstract": [
        {
          "text": "A role-based protocol that declares the minimum interface necessary to interact with an assistive app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSAccessibilityElementProtocol"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSAccessibilityElement",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSAccessibilityElementProtocol",
      "type": "topic",
      "url": "/documentation/AppKit/NSAccessibilityElementProtocol"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSAppearanceCustomization": {
      "abstract": [
        {
          "text": "A set of methods for getting and setting the appearance attributes of a view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSAppearanceCustomization"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSAppearanceCustomization",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSAppearanceCustomization",
      "type": "topic",
      "url": "/documentation/AppKit/NSAppearanceCustomization"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding": {
      "abstract": [
        {
          "text": "A protocol that enables an object to be encoded and decoded for archiving and distribution.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSCoding"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSCoding",
      "type": "topic",
      "url": "/documentation/foundation/nscoding"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSCopying": {
      "abstract": [
        {
          "text": "A protocol that objects adopt to provide functional copies of themselves.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSCopying"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSCopying",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSCopying",
      "type": "topic",
      "url": "/documentation/foundation/nscopying"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSObject": {
      "abstract": [
        {
          "text": "The group of methods that are fundamental to all Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObjectProtocol",
      "type": "topic",
      "url": "/documentation/objectivec/nsobjectprotocol"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSUserInterfaceItemIdentification": {
      "abstract": [
        {
          "text": "A set of methods used to associate a unique identifier with objects in your user interface.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSUserInterfaceItemIdentification"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSUserInterfaceItemIdentification",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSUserInterfaceItemIdentification",
      "type": "topic",
      "url": "/documentation/AppKit/NSUserInterfaceItemIdentification"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomDebugStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s7CVarArgP": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as elements of a C `va_list`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s7CVarArgP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/Swift/CVarArg"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/c:objc(cs)NSMenu"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    },
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s7CVarArgP",
        "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSAccessibilityElement",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSAccessibility",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSAppearanceCustomization",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSCopying",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSUserInterfaceItemIdentification"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Displaying-SwiftUI-views-in-AppKit",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Unifying-your-app-s-animations",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingController",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingView",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingSizingOptions",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingSceneBridgingOptions"
      ],
      "title": "Displaying SwiftUI views in AppKit"
    }
  ],
  "topicSections": [
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingMenu/init(rootView:)"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/NSHostingMenu/rootView"
      ],
      "title": "Instance Properties"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSAccessibilityElement/title",
          "value": "NSAccessibilityElement"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSAccessibilityElement/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSAccessibilityElement"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSAccessibility/title",
          "value": "NSAccessibility"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSAccessibility/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSAccessibility"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSAppearanceCustomization/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSAppearanceCustomization"
            },
            {
              "kind": "text",
              "text": " <"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObject"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSObject/title",
          "value": "NSObject"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(cs)NSMenu/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSMenu"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSUserInterfaceItemIdentification/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSUserInterfaceItemIdentification"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/nshostingmenu"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
