{
  "abstract": [
    {
      "text": "Creates and configures a canvas that you supply with renderable",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "child views.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Canvas"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/Canvas/init(opaque:colorMode:rendersAsynchronously:renderer:symbols:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI6CanvasV6opaque9colorMode21rendersAsynchronously8renderer7symbolsACyxGSb_AA014ColorRenderingF0OSbyAA15GraphicsContextVz_So6CGSizeVtcxyXEtcfc",
    "fragments": [
      {
        "kind": "identifier",
        "text": "init"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "opaque"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sb",
        "text": "Bool"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "colorMode"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI18ColorRenderingModeO",
        "text": "ColorRenderingMode"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "rendersAsynchronously"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sb",
        "text": "Bool"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "renderer"
      },
      {
        "kind": "text",
        "text": ": ("
      },
      {
        "kind": "keyword",
        "text": "inout"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI15GraphicsContextV",
        "text": "GraphicsContext"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "c:@S@CGSize",
        "text": "CGSize"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s4Voida",
        "text": "Void"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "symbols"
      },
      {
        "kind": "text",
        "text": ": () -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "Symbols"
      },
      {
        "kind": "text",
        "text": ")"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "12.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Initializer",
    "symbolKind": "init",
    "title": "init(opaque:colorMode:rendersAsynchronously:renderer:symbols:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "init"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "opaque"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sb",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": " = false, "
            },
            {
              "kind": "externalParam",
              "text": "colorMode"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ColorRenderingMode",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI18ColorRenderingModeO",
              "text": "ColorRenderingMode"
            },
            {
              "kind": "text",
              "text": " = .nonLinear, "
            },
            {
              "kind": "externalParam",
              "text": "rendersAsynchronously"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sb",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": " = false, "
            },
            {
              "kind": "externalParam",
              "text": "renderer"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "@escaping"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "kind": "keyword",
              "text": "inout"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GraphicsContext",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI15GraphicsContextV",
              "text": "GraphicsContext"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/c:@S@CGSize",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@S@CGSize",
              "text": "CGSize"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s4Voida",
              "text": "Void"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "attribute",
              "text": "@"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder",
              "kind": "attribute",
              "preciseIdentifier": "s:7SwiftUI11ViewBuilderV",
              "text": "ViewBuilder"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "externalParam",
              "text": "symbols"
            },
            {
              "kind": "text",
              "text": ": () -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "Symbols"
            },
            {
              "kind": "text",
              "text": ")"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A Boolean that indicates whether the canvas is fully",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "opaque. You might be able to improve performance by setting this",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "value to ",
                  "type": "text"
                },
                {
                  "code": "true",
                  "type": "codeVoice"
                },
                {
                  "text": ", but then drawing a non-opaque image into the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "context produces undefined results. The default is ",
                  "type": "text"
                },
                {
                  "code": "false",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "opaque"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A working color space and storage format of the canvas.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "The default is ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ColorRenderingMode/nonLinear",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "colorMode"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A Boolean that indicates whether the canvas",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "can present its contents to its parent view asynchronously. The",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "default is ",
                  "type": "text"
                },
                {
                  "code": "false",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "rendersAsynchronously"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A closure in which you conduct immediate mode drawing.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "The closure takes two inputs: a context that you use to issue",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "drawing commands and a size — representing the current",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "size of the canvas — that you can use to customize the content.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "The canvas calls the renderer any time it needs to redraw the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "content.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "renderer"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " that you use to supply SwiftUI views to",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "the canvas for use during drawing. Uniquely tag each view",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "using the ",
                  "type": "text"
                },
                {
                  "code": "View/tag(_:)",
                  "type": "codeVoice"
                },
                {
                  "text": " modifier, so that you can find them from",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "within your renderer using the ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GraphicsContext/resolveSymbol(id:)",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "method.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "symbols"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This initializer behaves like the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Canvas/init(opaque:colorMode:rendersAsynchronously:renderer:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " initializer,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "except that you also provide a collection of SwiftUI views for the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "renderer to use as drawing elements.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "SwiftUI stores a rendered version of each child view that you specify",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in the ",
              "type": "text"
            },
            {
              "code": "symbols",
              "type": "codeVoice"
            },
            {
              "text": " view builder and makes these available to the canvas.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Tag each child view so that you can retrieve it from within the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "renderer using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GraphicsContext/resolveSymbol(id:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For example, you can create a scatter plot using a passed-in child view",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "as the mark for each data point:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ScatterPlotView<Mark: View>: View {",
            "    let rects: [CGRect]",
            "    let mark: Mark",
            "",
            "    enum SymbolID: Int {",
            "        case mark",
            "    }",
            "",
            "    var body: some View {",
            "        Canvas { context, size in",
            "            if let mark = context.resolveSymbol(id: SymbolID.mark) {",
            "                for rect in rects {",
            "                    context.draw(mark, in: rect)",
            "                }",
            "            }",
            "        } symbols: {",
            "            mark.tag(SymbolID.mark)",
            "        }",
            "        .frame(width: 300, height: 200)",
            "        .border(Color.blue)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "You can use any SwiftUI view for the ",
              "type": "text"
            },
            {
              "code": "mark",
              "type": "codeVoice"
            },
            {
              "text": " input:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "ScatterPlotView(rects: rects, mark: Image(systemName: \"circle\"))"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "If the ",
              "type": "text"
            },
            {
              "code": "rects",
              "type": "codeVoice"
            },
            {
              "text": " input contains 50 randomly arranged",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/corefoundation/cgrect",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instances, SwiftUI draws a plot like this:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "Canvas-init-1",
              "type": "image"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The symbol inputs, like all other elements that you draw to the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "canvas, lack individual accessibility and interactivity, even if the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "original SwiftUI view has these attributes. However, you can add",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "accessibility and interactivity modifers to the canvas as a whole.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Canvas-init-1": {
      "alt": "A screenshot of a scatter plot inside a blue rectangle, containing",
      "identifier": "Canvas-init-1",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/c9690af16722852c643d0340841d7eb1/Canvas-init-1@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/6e9921dfb60794737cd2bc462d2a443c/Canvas-init-1~dark@2x.png"
        }
      ]
    },
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Canvas": {
      "abstract": [
        {
          "text": "A view type that supports immediate mode drawing.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Canvas"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Canvas",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Canvas"
        }
      ],
      "role": "symbol",
      "title": "Canvas",
      "type": "topic",
      "url": "/documentation/swiftui/canvas"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Canvas/init(opaque:colorMode:rendersAsynchronously:renderer:)": {
      "abstract": [
        {
          "text": "Creates and configures a canvas.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Symbols",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "EmptyView",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "opaque"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "colorMode"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI18ColorRenderingModeO",
          "text": "ColorRenderingMode"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "rendersAsynchronously"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "renderer"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI15GraphicsContextV",
          "text": "GraphicsContext"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@CGSize",
          "text": "CGSize"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Canvas/init(opaque:colorMode:rendersAsynchronously:renderer:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(opaque:colorMode:rendersAsynchronously:renderer:)",
      "type": "topic",
      "url": "/documentation/swiftui/canvas/init(opaque:colormode:rendersasynchronously:renderer:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Canvas/init(opaque:colorMode:rendersAsynchronously:renderer:symbols:)": {
      "abstract": [
        {
          "text": "Creates and configures a canvas that you supply with renderable",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "child views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "opaque"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "colorMode"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI18ColorRenderingModeO",
          "text": "ColorRenderingMode"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "rendersAsynchronously"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "renderer"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI15GraphicsContextV",
          "text": "GraphicsContext"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@CGSize",
          "text": "CGSize"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "symbols"
        },
        {
          "kind": "text",
          "text": ": () -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Symbols"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Canvas/init(opaque:colorMode:rendersAsynchronously:renderer:symbols:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(opaque:colorMode:rendersAsynchronously:renderer:symbols:)",
      "type": "topic",
      "url": "/documentation/swiftui/canvas/init(opaque:colormode:rendersasynchronously:renderer:symbols:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ColorRenderingMode": {
      "abstract": [
        {
          "text": "The set of possible working color spaces for color-compositing operations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ColorRenderingMode"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ColorRenderingMode",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ColorRenderingMode"
        }
      ],
      "role": "symbol",
      "title": "ColorRenderingMode",
      "type": "topic",
      "url": "/documentation/swiftui/colorrenderingmode"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ColorRenderingMode/nonLinear": {
      "abstract": [
        {
          "text": "The non-linear sRGB working color space.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "nonLinear"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ColorRenderingMode/nonLinear",
      "kind": "symbol",
      "role": "symbol",
      "title": "ColorRenderingMode.nonLinear",
      "type": "topic",
      "url": "/documentation/swiftui/colorrenderingmode/nonlinear"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GraphicsContext": {
      "abstract": [
        {
          "text": "An immediate mode drawing destination, and its current state.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GraphicsContext"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GraphicsContext",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "GraphicsContext"
        }
      ],
      "role": "symbol",
      "title": "GraphicsContext",
      "type": "topic",
      "url": "/documentation/swiftui/graphicscontext"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/GraphicsContext/resolveSymbol(id:)": {
      "abstract": [
        {
          "text": "Gets the identified child view as a resolved symbol, if the view exists.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "resolveSymbol"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "ID"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "ID"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI15GraphicsContextV",
          "text": "GraphicsContext"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI15GraphicsContextV14ResolvedSymbolV",
          "text": "ResolvedSymbol"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/GraphicsContext/resolveSymbol(id:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "resolveSymbol(id:)",
      "type": "topic",
      "url": "/documentation/swiftui/graphicscontext/resolvesymbol(id:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder": {
      "abstract": [
        {
          "text": "A custom parameter attribute that constructs views from closures.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ViewBuilder"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/ViewBuilder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ViewBuilder"
        }
      ],
      "role": "symbol",
      "title": "ViewBuilder",
      "type": "topic",
      "url": "/documentation/swiftui/viewbuilder"
    },
    "doc://com.apple.documentation/documentation/corefoundation/cgrect": {
      "abstract": [
        {
          "text": "A structure that contains the location and dimensions of a rectangle.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "CGRect"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/cgrect",
      "kind": "symbol",
      "role": "symbol",
      "title": "CGRect",
      "type": "topic",
      "url": "/documentation/corefoundation/cgrect"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/c:@S@CGSize": {
      "abstract": [
        {
          "text": "A structure that contains width and height values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "CGSize"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:@S@CGSize",
      "kind": "symbol",
      "role": "symbol",
      "title": "CGSize",
      "type": "topic",
      "url": "/documentation/corefoundation/cgsize"
    },
    "doc://com.externally.resolved.symbol/s:Sb": {
      "abstract": [
        {
          "text": "A value type whose instances are either `true` or `false`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Sb",
      "kind": "symbol",
      "role": "symbol",
      "title": "Bool",
      "type": "topic",
      "url": "/documentation/Swift/Bool"
    },
    "doc://com.externally.resolved.symbol/s:s4Voida": {
      "abstract": [
        {
          "text": "The return type of functions that don’t explicitly specify a return type, that is, an empty tuple `()`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": " = ()"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
      "kind": "symbol",
      "role": "symbol",
      "title": "Void",
      "type": "topic",
      "url": "/documentation/Swift/Void"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Creating-a-canvas",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Canvas/init(opaque:colorMode:rendersAsynchronously:renderer:)"
      ],
      "title": "Creating a canvas"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/canvas/init(opaque:colormode:rendersasynchronously:renderer:symbols:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
