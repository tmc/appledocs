{
  "abstract": [
    {
      "text": "A structure that computes views and disclosure groups on demand from an",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "underlying collection of tree-structured, identified data.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.SwiftUI/documentation/SwiftUI"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.SwiftUI/documentation/SwiftUI/OutlineGroup"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7SwiftUI12OutlineGroupV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "OutlineGroup"
      }
    ],
    "modules": [
      {
        "name": "SwiftUI"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "OutlineGroup"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "11.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "OutlineGroup"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "OutlineGroup"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Data"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "ID"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "Parent"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "Leaf"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "Subgroup"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Data"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sk",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sk",
              "text": "RandomAccessCollection"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "ID"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:SH",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SH",
              "text": "Hashable"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/Displaying-Data-in-Lists"
      ]
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use an outline group when you need a view that can represent a hierarchy",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of data by using disclosure views. This allows the user to navigate the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "tree structure by using the disclosure views to expand and collapse",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "branches.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In the following example, a tree structure of ",
              "type": "text"
            },
            {
              "code": "FileItem",
              "type": "codeVoice"
            },
            {
              "text": " data offers a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "simplified view of a file system. Passing the root of this tree and the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "key path of its children allows you to quickly create a visual",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "representation of the file system.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct FileItem: Hashable, Identifiable, CustomStringConvertible {",
            "    var id: Self { self }",
            "    var name: String",
            "    var children: [FileItem]? = nil",
            "    var description: String {",
            "        switch children {",
            "        case nil:",
            "            return \"üìÑ \\(name)\"",
            "        case .some(let children):",
            "            return children.isEmpty ? \"üìÇ \\(name)\" : \"üìÅ \\(name)\"",
            "        }",
            "    }",
            "}",
            "",
            "let data =",
            "  FileItem(name: \"users\", children:",
            "    [FileItem(name: \"user1234\", children:",
            "      [FileItem(name: \"Photos\", children:",
            "        [FileItem(name: \"photo001.jpg\"),",
            "         FileItem(name: \"photo002.jpg\")]),",
            "       FileItem(name: \"Movies\", children:",
            "         [FileItem(name: \"movie001.mp4\")]),",
            "          FileItem(name: \"Documents\", children: [])",
            "      ]),",
            "     FileItem(name: \"newuser\", children:",
            "       [FileItem(name: \"Documents\", children: [])",
            "       ])",
            "    ])",
            "",
            "OutlineGroup(data, children: \\.children) { item in",
            "    Text(\"\\(item.description)\")",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Type-parameters",
          "level": 3,
          "text": "Type parameters",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Five generic type constraints define a specific ",
              "type": "text"
            },
            {
              "code": "OutlineGroup",
              "type": "codeVoice"
            },
            {
              "text": " instance:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "Data",
                      "type": "codeVoice"
                    },
                    {
                      "text": ": The type of a collection containing the children of an element in",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "the tree-shaped data.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "ID",
                      "type": "codeVoice"
                    },
                    {
                      "text": ": The type of the identifier for an element.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "Parent",
                      "type": "codeVoice"
                    },
                    {
                      "text": ": The type of the visual representation of an element whose",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "children property is non-",
                      "type": "text"
                    },
                    {
                      "code": "nil",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "Leaf",
                      "type": "codeVoice"
                    },
                    {
                      "text": ": The type of the visual representation of an element whose",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "children property is ",
                      "type": "text"
                    },
                    {
                      "code": "nil",
                      "type": "codeVoice"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "Subgroup",
                      "type": "codeVoice"
                    },
                    {
                      "text": ": A type of a view that groups a parent view and a view",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "representing its children, typically with some mechanism for showing and",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "hiding the children",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "SwiftUI-PageImage-card.png": {
      "alt": "A black Swift logo on a swirly blue and purple background.",
      "identifier": "SwiftUI-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/b1de0de086f81a5d0eac3839a0af6e6f/SwiftUI-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/1450d0b30a6b024e10c148e3f31dafe9/SwiftUI-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI": {
      "abstract": [
        {
          "text": "Declare the user interface and behavior for your app on every platform.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI",
      "images": [
        {
          "identifier": "SwiftUI-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "SwiftUI",
      "type": "topic",
      "url": "/documentation/swiftui"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/DisclosureGroup": {
      "abstract": [
        {
          "text": "A view that shows or hides another content view, based on the state of a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "disclosure control.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DisclosureGroup"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/DisclosureGroup",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DisclosureGroup"
        }
      ],
      "role": "symbol",
      "title": "DisclosureGroup",
      "type": "topic",
      "url": "/documentation/swiftui/disclosuregroup"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/Displaying-Data-in-Lists": {
      "abstract": [
        {
          "text": "Visualize collections of data with platform-appropriate appearance.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/Displaying-Data-in-Lists",
      "kind": "article",
      "role": "article",
      "title": "Displaying data in lists",
      "type": "topic",
      "url": "/documentation/swiftui/displaying-data-in-lists"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/OutlineGroup": {
      "abstract": [
        {
          "text": "A structure that computes views and disclosure groups on demand from an",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "underlying collection of tree-structured, identified data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "OutlineGroup"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/OutlineGroup",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "OutlineGroup"
        }
      ],
      "role": "symbol",
      "title": "OutlineGroup",
      "type": "topic",
      "url": "/documentation/swiftui/outlinegroup"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/OutlineGroup/init(_:children:)": {
      "abstract": [
        {
          "text": "Creates an outline group from a collection of root data elements and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "a key path to element‚Äôs children.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Data",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "RandomAccessCollection",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "ID",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Data.Element.ID",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "Parent",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "TableRowContent",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "Parent",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Leaf",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "Leaf",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Subgroup",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Data.Element",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Parent.TableRowValue",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "children"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/OutlineGroup/init(_:children:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "children"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:children:)",
      "type": "topic",
      "url": "/documentation/swiftui/outlinegroup/init(_:children:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/OutlineGroup/init(_:children:content:)": {
      "abstract": [
        {
          "text": "Creates an outline group from a binding to a collection of root data",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements and a key path to its children.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Data",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "RandomAccessCollection",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "ID",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Data.Element.ID",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "Parent",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "Parent",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Leaf",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "Subgroup",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "DisclosureGroup<Parent, OutlineSubgroupChildren>",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Data.Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Identifiable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "children"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/OutlineGroup/init(_:children:content:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "children"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:children:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/outlinegroup/init(_:children:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/OutlineGroup/init(_:id:children:content:)": {
      "abstract": [
        {
          "text": "Creates an outline group from a binding to a collection of root data",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements, the key path to a data element‚Äôs identifier, and a key path to",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "its children.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Data",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "RandomAccessCollection",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "ID",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "Parent",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "Parent",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Leaf",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Subgroup",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "DisclosureGroup<Parent, OutlineSubgroupChildren>",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "children"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/OutlineGroup/init(_:id:children:content:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "children"
        },
        {
          "kind": "text",
          "text": ":"
        },
        {
          "kind": "externalParam",
          "text": "content"
        },
        {
          "kind": "text",
          "text": ":)"
        }
      ],
      "role": "symbol",
      "title": "init(_:id:children:content:)",
      "type": "topic",
      "url": "/documentation/swiftui/outlinegroup/init(_:id:children:content:)"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/OutlineSubgroupChildren": {
      "abstract": [
        {
          "text": "A type-erased view representing the children in an outline subgroup.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "OutlineSubgroupChildren"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/OutlineSubgroupChildren",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "OutlineSubgroupChildren"
        }
      ],
      "role": "symbol",
      "title": "OutlineSubgroupChildren",
      "type": "topic",
      "url": "/documentation/swiftui/outlinesubgroupchildren"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/TableRowContent": {
      "abstract": [
        {
          "text": "A type used to represent table rows.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Data",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "RandomAccessCollection",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "ID",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Data.Element.ID",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "Parent",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "TableRowContent",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "Parent",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Leaf",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "Leaf",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Subgroup",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Data.Element",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Parent.TableRowValue",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TableRowContent"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/TableRowContent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TableRowContent"
        }
      ],
      "role": "symbol",
      "title": "TableRowContent",
      "type": "topic",
      "url": "/documentation/swiftui/tablerowcontent"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View": {
      "abstract": [
        {
          "text": "A type that represents part of your app‚Äôs user interface and provides",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Data",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "RandomAccessCollection",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "ID",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "Parent",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "Leaf",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Subgroup",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "View",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/swiftui/view"
    },
    "doc://com.apple.SwiftUI/documentation/SwiftUI/View/disclosureGroupStyle(_:)": {
      "abstract": [
        {
          "text": "Sets the style for disclosure groups within this view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "disclosureGroupStyle"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.SwiftUI/documentation/SwiftUI/View/disclosureGroupStyle(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "disclosureGroupStyle(_:)",
      "type": "topic",
      "url": "/documentation/swiftui/view/disclosuregroupstyle(_:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:Sk": {
      "abstract": [
        {
          "text": "A collection that supports efficient random-access index traversal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RandomAccessCollection"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sk7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "> : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SK",
          "text": "BidirectionalCollection"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl7IndicesQa",
          "text": "Indices"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sk",
          "text": "RandomAccessCollection"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl11SubSequenceQa",
          "text": "SubSequence"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sk",
          "text": "RandomAccessCollection"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Sk",
      "kind": "symbol",
      "role": "symbol",
      "title": "RandomAccessCollection",
      "type": "topic",
      "url": "/documentation/Swift/RandomAccessCollection"
    },
    "doc://com.externally.resolved.symbol/s:s8CopyableP": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8CopyableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/Swift/Copyable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s8CopyableP",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/TableRowContent",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Disclosing-information-progressively",
      "generated": true,
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/DisclosureGroup",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/View/disclosureGroupStyle(_:)"
      ],
      "title": "Disclosing information progressively"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-an-outline-group",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/OutlineGroup/init(_:children:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/OutlineGroup/init(_:children:content:)",
        "doc://com.apple.SwiftUI/documentation/SwiftUI/OutlineGroup/init(_:id:children:content:)"
      ],
      "title": "Creating an outline group"
    },
    {
      "anchor": "Supporting-types",
      "identifiers": [
        "doc://com.apple.SwiftUI/documentation/SwiftUI/OutlineSubgroupChildren"
      ],
      "title": "Supporting types"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swiftui/outlinegroup"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
