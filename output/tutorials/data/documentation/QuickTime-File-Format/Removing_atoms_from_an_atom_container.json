{
  "abstract": [
    {
      "text": "Remove atoms from an atom container.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.qtff/documentation/quicktime-file-format",
        "doc://com.apple.qtff/documentation/QuickTime-File-Format/Storing_and_sharing_media_with_QuickTime_files",
        "doc://com.apple.qtff/documentation/QuickTime-File-Format/Creating_copying_and_disposing_of_atom_containers"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.qtff/documentation/QuickTime-File-Format/Removing_atoms_from_an_atom_container"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "QuickTime File Format"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Removing atoms from an atom container"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To remove atoms from an atom container, you can use the ",
              "type": "text"
            },
            {
              "code": "QTRemoveAtom",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "QTRemoveChildren",
              "type": "codeVoice"
            },
            {
              "text": " functions. The ",
              "type": "text"
            },
            {
              "code": "QTRemoveAtom",
              "type": "codeVoice"
            },
            {
              "text": " function removes an atom and its children, if any, from a container. The ",
              "type": "text"
            },
            {
              "code": "QTRemoveChildren",
              "type": "codeVoice"
            },
            {
              "text": " function removes an atom’s children from a container, but does not remove the atom itself. You can also use ",
              "type": "text"
            },
            {
              "code": "QTRemoveChildren",
              "type": "codeVoice"
            },
            {
              "text": " to remove all the atoms in an atom container. To do so, pass the constant ",
              "type": "text"
            },
            {
              "code": "kParentAtomIsContainer",
              "type": "codeVoice"
            },
            {
              "text": " for the ",
              "type": "text"
            },
            {
              "code": "atom",
              "type": "codeVoice"
            },
            {
              "text": " parameter.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The code sample shown in the following listing adds override samples to a sprite track to animate the sprites in the sprite track. The ",
              "type": "text"
            },
            {
              "code": "sample",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "spriteData",
              "type": "codeVoice"
            },
            {
              "text": " variables are atom containers. The ",
              "type": "text"
            },
            {
              "code": "spriteData",
              "type": "codeVoice"
            },
            {
              "text": " atom container contains atoms that describe a single sprite. The ",
              "type": "text"
            },
            {
              "code": "sample",
              "type": "codeVoice"
            },
            {
              "text": " atom container contains atoms that describe an override sample.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Each iteration of the ",
              "type": "text"
            },
            {
              "code": "for",
              "type": "codeVoice"
            },
            {
              "text": " loop calls ",
              "type": "text"
            },
            {
              "code": "QTRemoveChildren",
              "type": "codeVoice"
            },
            {
              "text": " to remove all atoms from both the ",
              "type": "text"
            },
            {
              "code": "sample",
              "type": "codeVoice"
            },
            {
              "text": " and the ",
              "type": "text"
            },
            {
              "code": "spriteData",
              "type": "codeVoice"
            },
            {
              "text": " containers. The sample code updates the index of the image to be used for the sprite and the sprite’s location and calls ",
              "type": "text"
            },
            {
              "code": "SetSpriteData",
              "type": "codeVoice"
            },
            {
              "text": ", which adds the appropriate atoms to the ",
              "type": "text"
            },
            {
              "code": "spriteData",
              "type": "codeVoice"
            },
            {
              "text": " atom container. Then, the sample code calls ",
              "type": "text"
            },
            {
              "code": "AddSpriteToSample",
              "type": "codeVoice"
            },
            {
              "text": " to add the ",
              "type": "text"
            },
            {
              "code": "spriteData",
              "type": "codeVoice"
            },
            {
              "text": " atom container to the ",
              "type": "text"
            },
            {
              "code": "sample",
              "type": "codeVoice"
            },
            {
              "text": " atom container. Finally, when all the sprites have been updated, the sample code calls ",
              "type": "text"
            },
            {
              "code": "AddSpriteSampleToMedia",
              "type": "codeVoice"
            },
            {
              "text": " to add the override sample to the sprite track.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "QTAtomContainer sample, spriteData;",
            " ",
            "// ...",
            "// Add the sprite key sample.",
            "// ...",
            " ",
            "// Add override samples to make the sprites spin and move.",
            "for (i = 1; i <= kNumOverrideSamples; i++)",
            "{",
            "    QTRemoveChildren (sample, kParentAtomIsContainer);",
            "    QTRemoveChildren (spriteData, kParentAtomIsContainer);",
            " ",
            "    // ...",
            "    // Update the sprite:",
            "    // - Update the imageIndex.",
            "    // - Update the location.",
            "    // ...",
            " ",
            "    // Add atoms to spriteData atom container.",
            "    SetSpriteData (spriteData, &location, nil, nil, &imageIndex);",
            " ",
            "    // Add the spriteData atom container to sample.",
            "    err = AddSpriteToSample (sample, spriteData, 2);",
            " ",
            "    // ...",
            "    // Update other sprites.",
            "    // ...",
            " ",
            "    // Add the sample to the media.",
            "    err = AddSpriteSampleToMedia (newMedia, sample,",
            "        kSpriteMediaFrameDuration, false);",
            "}"
          ],
          "syntax": "c",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.qtff/documentation/QuickTime-File-Format/Copying_existing_atoms": {
      "abstract": [
        {
          "text": "Copy existing atoms within an atom container.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.qtff/documentation/QuickTime-File-Format/Copying_existing_atoms",
      "kind": "article",
      "role": "article",
      "title": "Copying existing atoms",
      "type": "topic",
      "url": "/documentation/quicktime-file-format/copying_existing_atoms"
    },
    "doc://com.apple.qtff/documentation/QuickTime-File-Format/Creating_copying_and_disposing_of_atom_containers": {
      "abstract": [
        {
          "text": "Manage atoms in atom containers.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.qtff/documentation/QuickTime-File-Format/Creating_copying_and_disposing_of_atom_containers",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Creating, copying, and disposing of atom containers",
      "type": "topic",
      "url": "/documentation/quicktime-file-format/creating_copying_and_disposing_of_atom_containers"
    },
    "doc://com.apple.qtff/documentation/QuickTime-File-Format/Creating_new_atoms": {
      "abstract": [
        {
          "text": "Create new atoms and insert them in a QT atom container.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.qtff/documentation/QuickTime-File-Format/Creating_new_atoms",
      "kind": "article",
      "role": "article",
      "title": "Creating new atoms",
      "type": "topic",
      "url": "/documentation/quicktime-file-format/creating_new_atoms"
    },
    "doc://com.apple.qtff/documentation/QuickTime-File-Format/Modifying_atoms": {
      "abstract": [
        {
          "text": "Modify attributes or data associated with an atom in an atom container.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.qtff/documentation/QuickTime-File-Format/Modifying_atoms",
      "kind": "article",
      "role": "article",
      "title": "Modifying atoms",
      "type": "topic",
      "url": "/documentation/quicktime-file-format/modifying_atoms"
    },
    "doc://com.apple.qtff/documentation/QuickTime-File-Format/Retrieving_atoms_from_an_atom_container": {
      "abstract": [
        {
          "text": "Retrieve information about the types of a parent atom’s children, search for a specific atom, and retrieve a leaf atom’s data.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.qtff/documentation/QuickTime-File-Format/Retrieving_atoms_from_an_atom_container",
      "kind": "article",
      "role": "article",
      "title": "Retrieving atoms from an atom container",
      "type": "topic",
      "url": "/documentation/quicktime-file-format/retrieving_atoms_from_an_atom_container"
    },
    "doc://com.apple.qtff/documentation/QuickTime-File-Format/Storing_and_sharing_media_with_QuickTime_files": {
      "abstract": [
        {
          "text": "Build QuickTime files with atoms, QT atoms, and atom containers.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.qtff/documentation/QuickTime-File-Format/Storing_and_sharing_media_with_QuickTime_files",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Storing and sharing media with QuickTime files",
      "type": "topic",
      "url": "/documentation/quicktime-file-format/storing_and_sharing_media_with_quicktime_files"
    },
    "doc://com.apple.qtff/documentation/quicktime-file-format": {
      "abstract": [
        {
          "text": "An object-oriented file format for the storage and exchange of digital media between devices, applications, and operating systems.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.qtff/documentation/quicktime-file-format",
      "kind": "symbol",
      "role": "collection",
      "title": "QuickTime File Format",
      "type": "topic",
      "url": "/documentation/quicktime-file-format"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Managing-atoms",
      "generated": true,
      "identifiers": [
        "doc://com.apple.qtff/documentation/QuickTime-File-Format/Creating_new_atoms",
        "doc://com.apple.qtff/documentation/QuickTime-File-Format/Copying_existing_atoms",
        "doc://com.apple.qtff/documentation/QuickTime-File-Format/Retrieving_atoms_from_an_atom_container",
        "doc://com.apple.qtff/documentation/QuickTime-File-Format/Modifying_atoms"
      ],
      "title": "Managing atoms"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/quicktime-file-format/removing_atoms_from_an_atom_container"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
