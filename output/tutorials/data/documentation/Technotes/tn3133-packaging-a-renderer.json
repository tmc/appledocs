{
  "abstract": [
    {
      "text": "Distribute a Metal renderer in a Swift package.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.technotes/documentation/Technotes"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.technotes/documentation/Technotes/tn3133-packaging-a-renderer"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "role": "article",
    "roleHeading": "Article",
    "title": "TN3133: Packaging a Metal renderer"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Several individual pieces make up a Metal renderer: The CPU-side app code, the GPU-side shaders, and the structures that the app code and the shaders share.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Bundling these pieces together in a single Swift package is an excellent way to modularize a renderer for use in multiple projects.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Read this technote to discover a Swift package structure that shares C structs between Swift and Metal code, and to learn how to access the compiled Metal source as a ",
              "type": "text"
            },
            {
              "code": "MTLLibrary",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Configure-the-package-manifest",
          "level": 2,
          "text": "Configure the package manifest",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The package structure that enables you to package Swift, Metal, and shared C sources in a single Swift package requires two ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/PackageDescription/Target",
              "isActive": true,
              "overridingTitle": "Target",
              "overridingTitleInlineContent": [
                {
                  "text": "Target",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " declarations, as shown in the following example package manifest:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// swift-tools-version:5.5",
            "",
            "import PackageDescription",
            "",
            "let package = Package(",
            "    name: \"MyRenderer\",",
            "    products: [",
            "        .library(",
            "            name: \"MyRenderer\",",
            "            targets: [\"MyRenderer\"]),",
            "    ],",
            "    targets: [",
            "        // MyRenderer contains .swift and .metal files.",
            "        .target(",
            "            name: \"MyRenderer\",",
            "            dependencies: [\"MySharedTypes\"]),",
            "",
            "        // MySharedTypes contains a .h file nested inside of a folder named \"include\", and an empty .m file, specifying that the target should be compiled as an Obj-C target.",
            "        .target(name: \"MySharedTypes\")",
            "    ]",
            ")"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "MyRenderer",
              "type": "codeVoice"
            },
            {
              "text": " target contains the Swift source files, as well as the Metal source files.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "MySharedTypes",
              "type": "codeVoice"
            },
            {
              "text": " target contains the shared C structs within a header file.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Store this header in the directory specified as the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/PackageDescription/Target/publicHeadersPath",
              "isActive": true,
              "overridingTitle": "publicHeadersPath",
              "overridingTitleInlineContent": [
                {
                  "text": "publicHeadersPath",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " for this target, so that the header is accessible from the ",
              "type": "text"
            },
            {
              "code": "MyRenderer",
              "type": "codeVoice"
            },
            {
              "text": " target.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "It’s also important to have at least one Obj-C, C, or C++ implementation file in this target.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A target cannot have source files from both Swift and C-family languages, but it’s OK to have Swift and Metal sources in the same target because SwiftPM treats Metal files as resource files.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "Add the ",
              "type": "text"
            },
            {
              "code": "MySharedTypes",
              "type": "codeVoice"
            },
            {
              "text": " target as a dependency of the ",
              "type": "text"
            },
            {
              "code": "MyRenderer",
              "type": "codeVoice"
            },
            {
              "text": " target to access the shared C structs in the ",
              "type": "text"
            },
            {
              "code": "MyRenderer",
              "type": "codeVoice"
            },
            {
              "text": " target.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Here is a visual representation of the file structure described in the example above:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            ".",
            "└── MyRenderer",
            "    ├── Package.swift",
            "    ├── README.md",
            "    └── Sources",
            "        ├── MyRenderer",
            "        │   ├── Renderer.swift",
            "        │   └── Shaders.metal",
            "        └── MySharedTypes",
            "            ├── SharedTypes.m",
            "            └── include",
            "                └── SharedTypes.h"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "anchor": "Accessing-the-shared-C-structs-in-Swift",
          "level": 2,
          "text": "Accessing the shared C structs in Swift",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Swift Package Manager creates a module that contains the C structs found in the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/PackageDescription/Target/publicHeadersPath",
              "isActive": true,
              "overridingTitle": "publicHeadersPath",
              "overridingTitleInlineContent": [
                {
                  "text": "publicHeadersPath",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ", and because the Swift target is dependent on the C target, the C structs are directly accessible from Swift.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Continuing with the same naming from the example above, consider the following header located at ",
              "type": "text"
            },
            {
              "code": "MyRenderer/Sources/MySharedTypes/include/SharedTypes.h",
              "type": "codeVoice"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "#ifndef SharedTypes_h",
            "#define SharedTypes_h",
            "",
            "#import <simd/simd.h>",
            "",
            "typedef struct {",
            "    vector_float2 position;",
            "    vector_float4 color;",
            "} AAPLVertex;",
            "",
            "#endif /* SharedTypes_h */"
          ],
          "syntax": "Obj-C",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The shared types are accessible in Swift files after importing the ",
              "type": "text"
            },
            {
              "code": "MySharedTypes",
              "type": "codeVoice"
            },
            {
              "text": " module, for example:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "import MySharedTypes",
            "",
            "let vertex = AAPLVertex(position: .init(250, -250), color: .init(1, 0, 0, 1))"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Accessing-the-shared-C-structs-in-Metal",
          "level": 2,
          "text": "Accessing the shared C structs in Metal",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Using the same package structure defined above, the shared types are accessible in Metal files after importing the appropriate header file:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// A relative path to SharedTypes.h.",
            "#import \"../MySharedTypes/include/SharedTypes.h\"",
            "",
            "// Use any C types found in the imported header in this Metal file."
          ],
          "syntax": "metal",
          "type": "codeListing"
        },
        {
          "anchor": "Retrieving-the-precompiled-Metal-library",
          "level": 2,
          "text": "Retrieving the precompiled Metal library",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Swift Package Manager compiles the Metal source to a ",
              "type": "text"
            },
            {
              "code": ".metallib",
              "type": "codeVoice"
            },
            {
              "text": " and stores it in the resource bundle of the target.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "This resource bundle is accessible from Swift through the ",
              "type": "text"
            },
            {
              "code": "Bundle.module",
              "type": "codeVoice"
            },
            {
              "text": " static property.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To create a ",
              "type": "text"
            },
            {
              "code": "MTLLibrary",
              "type": "codeVoice"
            },
            {
              "text": " from this bundle in the Swift target:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "do {",
            "  // device is a `MTLDevice`.",
            "  let library = try device.makeDefaultLibrary(bundle: Bundle.module)",
            "} catch {",
            "  // Handle the error.",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "For more information about the ",
              "type": "text"
            },
            {
              "code": "Bundle.module",
              "type": "codeVoice"
            },
            {
              "text": " static property, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Xcode/bundling-resources-with-a-swift-package",
              "isActive": true,
              "overridingTitle": "Bundling Resources with a Swift Package",
              "overridingTitleInlineContent": [
                {
                  "text": "Bundling Resources with a Swift Package",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Introducing-a-custom-Metal-compilation-step",
          "level": 2,
          "text": "Introducing a custom Metal compilation step",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You might want to invoke the ",
              "type": "text"
            },
            {
              "code": "metal",
              "type": "codeVoice"
            },
            {
              "text": " command-line tool yourself, and provide it with arguments that fit your specific needs.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For example, you could compile your Metal source with debug symbols to enable shader debugging in a client app.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To introduce a custom Metal compilation step to the build process, create a Swift Package Build Tool Plugin that invokes the ",
              "type": "text"
            },
            {
              "code": "metal",
              "type": "codeVoice"
            },
            {
              "text": " command-line tool with custom arguments, precompiles a ",
              "type": "text"
            },
            {
              "code": ".metallib",
              "type": "codeVoice"
            },
            {
              "text": ", and stores it in the target’s resources directory by specifying it as an output file of the build command.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Then, apply the plugin to the target that contains your ",
              "type": "text"
            },
            {
              "code": ".metal",
              "type": "codeVoice"
            },
            {
              "text": " files.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For more information about creating and applying a Swift Package Build Tool Plugin, see ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/videos/play/wwdc2022/110401/",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Revision-History",
          "level": 2,
          "text": "Revision History",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "2022-11-08",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " First published.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/PackageDescription/Target": {
      "abstract": [
        {
          "text": "The basic building block of a Swift package.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "final"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Target"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/PackageDescription/Target",
      "kind": "symbol",
      "role": "symbol",
      "title": "Target",
      "type": "topic",
      "url": "/documentation/PackageDescription/Target"
    },
    "doc://com.apple.documentation/documentation/PackageDescription/Target/publicHeadersPath": {
      "abstract": [
        {
          "text": "The path to the directory that contains public headers of a C-family target.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "final"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "publicHeadersPath"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/PackageDescription/Target/publicHeadersPath",
      "kind": "symbol",
      "role": "symbol",
      "title": "publicHeadersPath",
      "type": "topic",
      "url": "/documentation/PackageDescription/Target/publicHeadersPath"
    },
    "doc://com.apple.documentation/documentation/Xcode/bundling-resources-with-a-swift-package": {
      "abstract": [
        {
          "text": "Add resource files to your Swift package and access them in your code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Xcode/bundling-resources-with-a-swift-package",
      "kind": "article",
      "role": "article",
      "title": "Bundling resources with a Swift package",
      "type": "topic",
      "url": "/documentation/Xcode/bundling-resources-with-a-swift-package"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.technotes/documentation/Technotes": {
      "abstract": [
        {
          "text": "Learn about specific development topics through these in-depth technical articles.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes",
      "kind": "article",
      "role": "collection",
      "title": "Technotes",
      "type": "topic",
      "url": "/documentation/technotes"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3111-ios-wifi-api-overview": {
      "abstract": [
        {
          "text": "Explore the various Wi-Fi APIs available on iOS and their expected use cases.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3111-ios-wifi-api-overview",
      "kind": "article",
      "role": "article",
      "title": "TN3111: iOS Wi-Fi API overview",
      "type": "topic",
      "url": "/documentation/technotes/tn3111-ios-wifi-api-overview"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3124-debugging-coordinate-transformations": {
      "abstract": [
        {
          "text": "Learn techniques to help debug any coordinate space issue.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3124-debugging-coordinate-transformations",
      "kind": "article",
      "role": "article",
      "title": "TN3124: Debugging coordinate space issues",
      "type": "topic",
      "url": "/documentation/technotes/tn3124-debugging-coordinate-transformations"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3168-making-your-app-clip-available-app-store": {
      "abstract": [
        {
          "text": "Learn how to configure your App Clip to prevent it from being unavailable in the App Store.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3168-making-your-app-clip-available-app-store",
      "kind": "article",
      "role": "article",
      "title": "TN3168: Making your App Clip available in the App Store",
      "type": "topic",
      "url": "/documentation/technotes/tn3168-making-your-app-clip-available-app-store"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3173-troubleshooting-issues-with-your-apple-pay-merchant-id-configuration": {
      "abstract": [
        {
          "text": "Diagnose errors due to invalid Apple Pay merchant identifier configurations by",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "identifying the underlying causes of common errors and explore their",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "potential solutions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3173-troubleshooting-issues-with-your-apple-pay-merchant-id-configuration",
      "kind": "article",
      "role": "article",
      "title": "TN3173: Troubleshooting issues with your Apple Pay merchant identifier configuration",
      "type": "topic",
      "url": "/documentation/technotes/tn3173-troubleshooting-issues-with-your-apple-pay-merchant-id-configuration"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3174-diagnosing-issues-with-the-apple-pay-payment-sheet-on-your-website": {
      "abstract": [
        {
          "text": "Diagnose errors received while presenting the Apple Pay payment sheet on",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "your website by identifying the underlying causes of common errors and explore",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "their potential solutions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3174-diagnosing-issues-with-the-apple-pay-payment-sheet-on-your-website",
      "kind": "article",
      "role": "article",
      "title": "TN3174: Diagnosing issues with the Apple Pay payment sheet on your website",
      "type": "topic",
      "url": "/documentation/technotes/tn3174-diagnosing-issues-with-the-apple-pay-payment-sheet-on-your-website"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3175-diagnosing-issues-with-displaying-the-apple-pay-button-on-your-website": {
      "abstract": [
        {
          "text": "Diagnose common errors received while displaying the Apple Pay button on your",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "website by identifying the underlying causes, and explore potential solutions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3175-diagnosing-issues-with-displaying-the-apple-pay-button-on-your-website",
      "kind": "article",
      "role": "article",
      "title": "TN3175: Diagnosing issues with displaying the Apple Pay button on your website",
      "type": "topic",
      "url": "/documentation/technotes/tn3175-diagnosing-issues-with-displaying-the-apple-pay-button-on-your-website"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3176-troubleshooting-apple-pay-payment-processing-issues": {
      "abstract": [
        {
          "text": "Diagnose errors that occur when processing Apple Pay payments,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "identify common causes, and explore potential solutions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3176-troubleshooting-apple-pay-payment-processing-issues",
      "kind": "article",
      "role": "article",
      "title": "TN3176: Troubleshooting Apple Pay payment processing issues",
      "type": "topic",
      "url": "/documentation/technotes/tn3176-troubleshooting-apple-pay-payment-processing-issues"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3177-understanding-alternate-audio-track-groups-in-movie-files": {
      "abstract": [
        {
          "text": "Learn how alternate groups collect audio tracks, and how to choose which audio track to use in your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3177-understanding-alternate-audio-track-groups-in-movie-files",
      "kind": "article",
      "role": "article",
      "title": "TN3177: Understanding alternate audio track groups in movie files",
      "type": "topic",
      "url": "/documentation/technotes/tn3177-understanding-alternate-audio-track-groups-in-movie-files"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3178-checking-for-and-resolving-build-uuid-problems": {
      "abstract": [
        {
          "text": "Ensure that every Mach-O image has a UUID, and that every distinct Mach-O image has its own unique UUID.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3178-checking-for-and-resolving-build-uuid-problems",
      "kind": "article",
      "role": "article",
      "title": "TN3178: Checking for and resolving build UUID problems",
      "type": "topic",
      "url": "/documentation/technotes/tn3178-checking-for-and-resolving-build-uuid-problems"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3179-understanding-local-network-privacy": {
      "abstract": [
        {
          "text": "Learn how local network privacy affects your software.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3179-understanding-local-network-privacy",
      "kind": "article",
      "role": "article",
      "title": "TN3179: Understanding local network privacy",
      "type": "topic",
      "url": "/documentation/technotes/tn3179-understanding-local-network-privacy"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3180-reverting-app-store-server-notifications-v1": {
      "abstract": [
        {
          "text": "Migrate from version 2 to version 1 of App Store Server Notifications using the Modify an App endpoint.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3180-reverting-app-store-server-notifications-v1",
      "kind": "article",
      "role": "article",
      "title": "TN3180: Reverting to App Store Server Notifications V1",
      "type": "topic",
      "url": "/documentation/technotes/tn3180-reverting-app-store-server-notifications-v1"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3181-debugging-invalid-privacy-manifest": {
      "abstract": [
        {
          "text": "Identify common configurations that cause unsuccessful privacy manifest validation with the App Store.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3181-debugging-invalid-privacy-manifest",
      "kind": "article",
      "role": "article",
      "title": "TN3181: Debugging an invalid privacy manifest",
      "type": "topic",
      "url": "/documentation/technotes/tn3181-debugging-invalid-privacy-manifest"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3182-adding-privacy-tracking-keys-to-your-privacy-manifest": {
      "abstract": [
        {
          "text": "Declare the tracking domains you use in your app or third-party SDK in a privacy manifest.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3182-adding-privacy-tracking-keys-to-your-privacy-manifest",
      "kind": "article",
      "role": "article",
      "title": "TN3182: Adding privacy tracking keys to your privacy manifest",
      "type": "topic",
      "url": "/documentation/technotes/tn3182-adding-privacy-tracking-keys-to-your-privacy-manifest"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3183-adding-required-reason-api-entries-to-your-privacy-manifest": {
      "abstract": [
        {
          "text": "Declare the APIs that can potentially fingerprint devices in your app or third-party SDK in a privacy manifest.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3183-adding-required-reason-api-entries-to-your-privacy-manifest",
      "kind": "article",
      "role": "article",
      "title": "TN3183: Adding required reason API entries to your privacy manifest",
      "type": "topic",
      "url": "/documentation/technotes/tn3183-adding-required-reason-api-entries-to-your-privacy-manifest"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3184-adding-data-collection-details-to-your-privacy-manifest": {
      "abstract": [
        {
          "text": "Declare the data your app or third-party SDK collects in a privacy manifest.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3184-adding-data-collection-details-to-your-privacy-manifest",
      "kind": "article",
      "role": "article",
      "title": "TN3184: Adding data collection details to your privacy manifest",
      "type": "topic",
      "url": "/documentation/technotes/tn3184-adding-data-collection-details-to-your-privacy-manifest"
    },
    "https://developer.apple.com/videos/play/wwdc2022/110401/": {
      "identifier": "https://developer.apple.com/videos/play/wwdc2022/110401/",
      "title": "Create Swift Package plugins",
      "titleInlineContent": [
        {
          "text": "Create Swift Package plugins",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/videos/play/wwdc2022/110401/"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Latest",
      "generated": true,
      "identifiers": [
        "doc://com.apple.technotes/documentation/Technotes/tn3182-adding-privacy-tracking-keys-to-your-privacy-manifest",
        "doc://com.apple.technotes/documentation/Technotes/tn3183-adding-required-reason-api-entries-to-your-privacy-manifest",
        "doc://com.apple.technotes/documentation/Technotes/tn3184-adding-data-collection-details-to-your-privacy-manifest",
        "doc://com.apple.technotes/documentation/Technotes/tn3181-debugging-invalid-privacy-manifest",
        "doc://com.apple.technotes/documentation/Technotes/tn3180-reverting-app-store-server-notifications-v1",
        "doc://com.apple.technotes/documentation/Technotes/tn3179-understanding-local-network-privacy",
        "doc://com.apple.technotes/documentation/Technotes/tn3178-checking-for-and-resolving-build-uuid-problems",
        "doc://com.apple.technotes/documentation/Technotes/tn3177-understanding-alternate-audio-track-groups-in-movie-files",
        "doc://com.apple.technotes/documentation/Technotes/tn3111-ios-wifi-api-overview",
        "doc://com.apple.technotes/documentation/Technotes/tn3176-troubleshooting-apple-pay-payment-processing-issues",
        "doc://com.apple.technotes/documentation/Technotes/tn3175-diagnosing-issues-with-displaying-the-apple-pay-button-on-your-website",
        "doc://com.apple.technotes/documentation/Technotes/tn3174-diagnosing-issues-with-the-apple-pay-payment-sheet-on-your-website",
        "doc://com.apple.technotes/documentation/Technotes/tn3173-troubleshooting-issues-with-your-apple-pay-merchant-id-configuration",
        "doc://com.apple.technotes/documentation/Technotes/tn3168-making-your-app-clip-available-app-store",
        "doc://com.apple.technotes/documentation/Technotes/tn3124-debugging-coordinate-transformations"
      ],
      "title": "Latest"
    }
  ]
}
