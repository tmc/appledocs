{
  "abstract": [
    {
      "text": "Use AVAudioConverter to perform sample rate conversions between PCM audio buffers.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.technotes/documentation/Technotes"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.technotes/documentation/Technotes/tn3136-AVAudioConverter-performing-sample-rate-conversions"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "role": "article",
    "roleHeading": "Article",
    "title": "TN3136: AVAudioConverter - performing sample rate conversions"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Using ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter",
              "isActive": true,
              "overridingTitle": "AVAudioConverter",
              "overridingTitleInlineContent": [
                {
                  "text": "AVAudioConverter",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " to perform sample rate conversions between PCM audio buffers requires making calls to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter/convert(to:error:withInputFrom:)",
              "isActive": true,
              "overridingTitle": "convert(to:error:withInputFrom:)",
              "overridingTitleInlineContent": [
                {
                  "text": "convert(to:error:withInputFrom:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ". This method takes an instance of ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioBuffer",
              "isActive": true,
              "overridingTitle": "AVAudioBuffer",
              "overridingTitleInlineContent": [
                {
                  "text": "AVAudioBuffer",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ", which stores the output of the conversion, as well as a closure that provides instances of ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioBuffer",
              "isActive": true,
              "overridingTitle": "AVAudioBuffer",
              "overridingTitleInlineContent": [
                {
                  "text": "AVAudioBuffer",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " to serve as input to the conversion.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The simpler method ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter/convert(to:from:)",
                  "isActive": true,
                  "overridingTitle": "convert(to:from:)",
                  "overridingTitleInlineContent": [
                    {
                      "text": "convert(to:from:)",
                      "type": "text"
                    }
                  ],
                  "type": "reference"
                },
                {
                  "text": " does not require callbacks to convert between PCM audio buffers, but cannot handle sample rate conversions.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "When converting between sample rates, the total number of input frames may be hard to predict. One way to cope with variable buffer sizes while providing input to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter",
              "isActive": true,
              "overridingTitle": "AVAudioConverter",
              "overridingTitleInlineContent": [
                {
                  "text": "AVAudioConverter",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " is to fill the input buffers on a sample-by-sample basis. This tech note illustrates such a mechanism using a hypothetical ",
              "type": "text"
            },
            {
              "identifier": "#Creating-a-protocol-for-providing-samples",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol that generates one sample at a time.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "#Creating-a-resampler",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " class gathers all of the components necessary for the conversion: the sample provider that conforms to ",
              "type": "text"
            },
            {
              "identifier": "#Creating-a-protocol-for-providing-samples",
              "isActive": true,
              "overridingTitle": "SampleProvider",
              "overridingTitleInlineContent": [
                {
                  "text": "SampleProvider",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ", the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter",
              "isActive": true,
              "overridingTitle": "AVAudioConverter",
              "overridingTitleInlineContent": [
                {
                  "text": "AVAudioConverter",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " instance, and the source ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioPCMBuffer",
              "isActive": true,
              "overridingTitle": "AVAudioPCMBuffer",
              "overridingTitleInlineContent": [
                {
                  "text": "AVAudioPCMBuffer",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " instance used in the call to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter/convert(to:error:withInputFrom:)",
              "isActive": true,
              "overridingTitle": "convert(to:error:withInputFrom:)",
              "overridingTitleInlineContent": [
                {
                  "text": "convert(to:error:withInputFrom:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ". While the ",
              "type": "text"
            },
            {
              "identifier": "#Creating-a-resampler",
              "isActive": true,
              "overridingTitle": "Resampler",
              "overridingTitleInlineContent": [
                {
                  "text": "Resampler",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " class is concerned with providing the output of the sample rate conversion, the ",
              "type": "text"
            },
            {
              "identifier": "#Creating-a-protocol-for-providing-samples",
              "isActive": true,
              "overridingTitle": "SampleProvider",
              "overridingTitleInlineContent": [
                {
                  "text": "SampleProvider",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " implementation is concerned with providing the input.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Defining-a-protocol-for-providing-samples",
          "level": 2,
          "text": "Defining a protocol for providing samples",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "#Creating-a-protocol-for-providing-samples",
              "isActive": true,
              "overridingTitle": "SampleProvider",
              "overridingTitleInlineContent": [
                {
                  "text": "SampleProvider",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " protocol is an example of how the ",
              "type": "text"
            },
            {
              "identifier": "#Creating-a-resampler",
              "isActive": true,
              "overridingTitle": "Resampler",
              "overridingTitleInlineContent": [
                {
                  "text": "Resampler",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " class might interface with a provider class that produces audio samples. The protocol requires a single method to achieve this behavior, which returns the next sample in time.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The mechanism used by the conforming provider class to produce audio samples is an implementation detail and therefore omitted. What is important is that an instance of ",
              "type": "text"
            },
            {
              "identifier": "#Creating-a-resampler",
              "isActive": true,
              "overridingTitle": "Resampler",
              "overridingTitleInlineContent": [
                {
                  "text": "Resampler",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " be able to ask for a number of samples at each conversion operation.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "/// A protocol that specifies requirements of a type that is capable of producing audio data on a sample-by-sample basis.",
            "protocol SampleProvider {",
            "    /// Returns the next audio sample.",
            "    func getNextSample() -> Float",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "#Creating-a-protocol-for-providing-samples",
              "isActive": true,
              "overridingTitle": "SampleProvider",
              "overridingTitleInlineContent": [
                {
                  "text": "SampleProvider",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " protocol might be implemented by a signal generator, such as the one described in ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/avfoundation/building_a_signal_generator",
              "isActive": true,
              "overridingTitle": "Building a Signal Generator",
              "overridingTitleInlineContent": [
                {
                  "text": "Building a Signal Generator",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ", by a synthesizer or by a circular buffer, for example.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Creating-a-resampler",
          "level": 2,
          "text": "Creating a resampler",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "#Creating-a-resampler",
              "isActive": true,
              "overridingTitle": "Resampler",
              "overridingTitleInlineContent": [
                {
                  "text": "Resampler",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " class takes the output of a sample provider, resamples it using ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter",
              "isActive": true,
              "overridingTitle": "AVAudioConverter",
              "overridingTitleInlineContent": [
                {
                  "text": "AVAudioConverter",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ", and copies the result to all channels of an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/CoreAudioTypes/AudioBufferList",
              "isActive": true,
              "overridingTitle": "AudioBufferList",
              "overridingTitleInlineContent": [
                {
                  "text": "AudioBufferList",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "/// A class that resamples the audio data furnished by a sample provider.",
            "class Resampler {",
            "    /// The generic class that implements the SampleProvider protocol.",
            "    let sampleProvider: SampleProvider",
            "    /// The converter that performs the resampling.",
            "    let converter: AVAudioConverter",
            "    /// The source audio buffer that stores the samples which will be fed to the converter.",
            "    let sourceBuffer: AVAudioPCMBuffer",
            "    ",
            "    /// Initializes a resampler with a source sample rate, a destination sample rate, and a sample provider.",
            "    init(sourceSampleRate: Double, destinationSampleRate: Double, provider: SampleProvider) {",
            "        self.sampleProvider = provider",
            "",
            "        /// Create source and destination formats with the source and destination sample rates.",
            "        let sourceFormat = AVAudioFormat(commonFormat: .pcmFormatFloat32, sampleRate: sourceSampleRate, channels: 1, interleaved: false)",
            "        let destinationFormat = AVAudioFormat(commonFormat: .pcmFormatFloat32, sampleRate: destinationSampleRate, channels: 2, interleaved: false)",
            "",
            "        /// Create the converter with the source and destination formats.",
            "        self.converter = AVAudioConverter(from: sourceFormat, to: destinationFormat)",
            "",
            "        /// Create the source audio buffer with the source format and enough capacity.",
            "        self.sourceBuffer = AVAudioPCMBuffer(pcmFormat: sourceFormat, frameCapacity: 4096)",
            "    }",
            "    ",
            "    func refill(inNumberOfPackets: AVAudioPacketCount) -> AVAudioPCMBuffer {",
            "        /// See code for this function below.",
            "    }",
            "",
            "    func resample(ioData: UnsafeMutablePointer<AudioBufferList>, inNumberFrames: UInt32) {",
            "        /// See code for this function below.",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The converter asks for input buffers in the closure provided to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter/convert(to:error:withInputFrom:)",
              "isActive": true,
              "overridingTitle": "convert(to:error:withInputFrom:)",
              "overridingTitleInlineContent": [
                {
                  "text": "convert(to:error:withInputFrom:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ". In order to avoid allocating audio buffers every time the converter asks for more input, the ",
              "type": "text"
            },
            {
              "identifier": "#Creating-a-resampler",
              "isActive": true,
              "overridingTitle": "Resampler",
              "overridingTitleInlineContent": [
                {
                  "text": "Resampler",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " class reuses the source buffer that is passed as input to the converter. The source buffer’s underlying memory is simply refilled with the ",
              "type": "text"
            },
            {
              "identifier": "#Creating-a-protocol-for-providing-samples",
              "isActive": true,
              "overridingTitle": "SampleProvider",
              "overridingTitleInlineContent": [
                {
                  "text": "SampleProvider",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " output for the requested number of frames and returned.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "/// Takes as input the number of frames to be refilled.",
            "/// Returns an audio buffer that references memory owned by the resampler, after refilling this memory with the output of the sample provider.",
            "func refill(numberOfFrames: AVAudioPacketCount) -> AVAudioPCMBuffer {",
            "    /// Store a pointer to the source buffer sample data.",
            "    let sourceData = sourceBuffer.floatChannelData[0]",
            "    ",
            "    /// Refill the source audio buffer with the requested number of frames.",
            "    for frameIndex in 0..<Int(numberOfFrames) {",
            "        sourceData[frameIndex] = sampleProvider.getNextSample()",
            "    }",
            "    ",
            "    /// Update the source buffer's frame length.",
            "    sourceBuffer.frameLength = numberOfFrames;",
            "    ",
            "    /// Return the refilled source buffer.",
            "    return sourceBuffer",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/CoreAudioTypes/AudioBufferList",
              "isActive": true,
              "overridingTitle": "AudioBufferList",
              "overridingTitleInlineContent": [
                {
                  "text": "AudioBufferList",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " pointer that is provided in the call to ",
              "type": "text"
            },
            {
              "code": "resample(ioData:)",
              "type": "codeVoice"
            },
            {
              "text": " is wrapped in an instance of ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioPCMBuffer",
              "isActive": true,
              "overridingTitle": "AVAudioPCMBuffer",
              "overridingTitleInlineContent": [
                {
                  "text": "AVAudioPCMBuffer",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " using the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioPCMBuffer/init(pcmFormat:bufferListNoCopy:deallocator:)",
              "isActive": true,
              "overridingTitle": "init(pcmFormat:bufferListNoCopy:deallocator:)",
              "overridingTitleInlineContent": [
                {
                  "text": "init(pcmFormat:bufferListNoCopy:deallocator:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " initializer. This buffer is passed to the converter in the call to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter/convert(to:error:withInputFrom:)",
              "isActive": true,
              "overridingTitle": "convert(to:error:withInputFrom:)",
              "overridingTitleInlineContent": [
                {
                  "text": "convert(to:error:withInputFrom:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " to store the output of the conversion. The converter calls the provided closure, passing it the input length and asking for a status flag and a returned audio buffer. The status is always ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverterInputStatus/haveData",
              "isActive": true,
              "overridingTitle": "AVAudioConverterInputStatus.haveData",
              "overridingTitleInlineContent": [
                {
                  "text": "AVAudioConverterInputStatus.haveData",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " in this case, since the sample provider can always produce an arbitrary number of samples. The returned audio buffer is the result of a call to ",
              "type": "text"
            },
            {
              "code": "refill(inNumberOfPackets:)",
              "type": "codeVoice"
            },
            {
              "text": ", using the provided input length.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "/// Takes as input an AudioBufferList pointer.",
            "/// Resamples the output of the sample provider and copies the result to the given audio buffer list.",
            "func resample(ioData: UnsafeMutablePointer<AudioBufferList>) {",
            "    /// Create the destination audio buffer with the converter output format and referencing the provided AudioBufferList pointer.",
            "    /// The buffers referred to by ioData are provided by the caller to be filled with output samples only and should not contain input samples.",
            "    guard let destinationBuffer = AVAudioPCMBuffer(pcmFormat: converter.outputFormat, bufferListNoCopy: ioData) else { return }",
            "    /// Create a local variable to hold a conversion error.",
            "    var error: NSError?",
            "    ",
            "    /// Perform a conversion operation and store the output in the destination buffer. The provided input will be the returned value of the trailing closure.",
            "    let outputStatus = converter.convert(to: destinationBuffer, error: &error) { [unowned self] numberOfFrames, inputStatus in",
            "        /// Tell the converter there is data available, since a SampleProvider can produce audio data on a sample-by-sample basis.",
            "        inputStatus.pointee = .haveData",
            "        /// Return the refilled source buffer.",
            "        return self.refill(numberOfFrames: numberOfFrames)",
            "    }",
            "    ",
            "    if outputStatus == .error {",
            "        /// If a conversion error occurred, log its localized description.",
            "        if let error = error {",
            "            print(error.localizedDescription)",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The call to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter/convert(to:error:withInputFrom:)",
              "isActive": true,
              "overridingTitle": "convert(to:error:withInputFrom:)",
              "overridingTitleInlineContent": [
                {
                  "text": "convert(to:error:withInputFrom:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " attempts to fill the output buffer to its capacity, hence a single call is made to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter/convert(to:error:withInputFrom:)",
              "isActive": true,
              "overridingTitle": "convert(to:error:withInputFrom:)",
              "overridingTitleInlineContent": [
                {
                  "text": "convert(to:error:withInputFrom:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " in ",
              "type": "text"
            },
            {
              "code": "resample(ioData:)",
              "type": "codeVoice"
            },
            {
              "text": ". Other conversion scenarios, such as audio data streamed from a file or over a network, or when the conversion involves compressed formats will often involve multiple calls to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter/convert(to:error:withInputFrom:)",
              "isActive": true,
              "overridingTitle": "convert(to:error:withInputFrom:)",
              "overridingTitleInlineContent": [
                {
                  "text": "convert(to:error:withInputFrom:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ", depending on the returned ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverterOutputStatus",
              "isActive": true,
              "overridingTitle": "AVAudioConverterOutputStatus",
              "overridingTitleInlineContent": [
                {
                  "text": "AVAudioConverterOutputStatus",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Revision-History",
          "level": 2,
          "text": "Revision History",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "2023-01-10",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " First published.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "#Creating-a-protocol-for-providing-samples": {
      "identifier": "#Creating-a-protocol-for-providing-samples",
      "title": "SampleProvider",
      "titleInlineContent": [
        {
          "text": "SampleProvider",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "#Creating-a-protocol-for-providing-samples"
    },
    "#Creating-a-resampler": {
      "identifier": "#Creating-a-resampler",
      "title": "Resampler",
      "titleInlineContent": [
        {
          "text": "Resampler",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "#Creating-a-resampler"
    },
    "doc://com.apple.documentation/documentation/AVFAudio/AVAudioBuffer": {
      "abstract": [
        {
          "text": "An object that represents a buffer of audio data with a format.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVAudioBuffer"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioBuffer",
      "kind": "symbol",
      "role": "symbol",
      "title": "AVAudioBuffer",
      "type": "topic",
      "url": "/documentation/AVFAudio/AVAudioBuffer"
    },
    "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter": {
      "abstract": [
        {
          "text": "An object that converts streams of audio between formats.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVAudioConverter"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter",
      "kind": "symbol",
      "role": "symbol",
      "title": "AVAudioConverter",
      "type": "topic",
      "url": "/documentation/AVFAudio/AVAudioConverter"
    },
    "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter/convert(to:error:withInputFrom:)": {
      "abstract": [
        {
          "text": "Performs a conversion between audio formats, if the system supports it.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "convert"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "outputBuffer"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVAudioBuffer",
          "text": "AVAudioBuffer"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "error"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "outError"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation14NSErrorPointera",
          "text": "NSErrorPointer"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "withInputFrom"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "inputBlock"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "@escaping"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@AVAudioConverterInputBlock",
          "text": "AVAudioConverterInputBlock"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@AVAudioConverterOutputStatus",
          "text": "AVAudioConverterOutputStatus"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter/convert(to:error:withInputFrom:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "convert(to:error:withInputFrom:)",
      "type": "topic",
      "url": "/documentation/AVFAudio/AVAudioConverter/convert(to:error:withInputFrom:)"
    },
    "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter/convert(to:from:)": {
      "abstract": [
        {
          "text": "Performs a basic conversion between audio formats that doesn’t involve converting codecs or sample rates.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "convert"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "outputBuffer"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVAudioPCMBuffer",
          "text": "AVAudioPCMBuffer"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "inputBuffer"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVAudioPCMBuffer",
          "text": "AVAudioPCMBuffer"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverter/convert(to:from:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "convert(to:from:)",
      "type": "topic",
      "url": "/documentation/AVFAudio/AVAudioConverter/convert(to:from:)"
    },
    "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverterInputStatus/haveData": {
      "abstract": [
        {
          "text": "A status that indicates the normal case where you supply data to the converter.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "haveData"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverterInputStatus/haveData",
      "kind": "symbol",
      "role": "symbol",
      "title": "AVAudioConverterInputStatus.haveData",
      "type": "topic",
      "url": "/documentation/AVFAudio/AVAudioConverterInputStatus/haveData"
    },
    "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverterOutputStatus": {
      "abstract": [
        {
          "text": "An option that indicates the return status of an audio converter method.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVAudioConverterOutputStatus"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioConverterOutputStatus",
      "kind": "symbol",
      "role": "symbol",
      "title": "AVAudioConverterOutputStatus",
      "type": "topic",
      "url": "/documentation/AVFAudio/AVAudioConverterOutputStatus"
    },
    "doc://com.apple.documentation/documentation/AVFAudio/AVAudioPCMBuffer": {
      "abstract": [
        {
          "text": "An object that represents an audio buffer you use with PCM audio formats.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AVAudioPCMBuffer"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioPCMBuffer",
      "kind": "symbol",
      "role": "symbol",
      "title": "AVAudioPCMBuffer",
      "type": "topic",
      "url": "/documentation/AVFAudio/AVAudioPCMBuffer"
    },
    "doc://com.apple.documentation/documentation/AVFAudio/AVAudioPCMBuffer/init(pcmFormat:bufferListNoCopy:deallocator:)": {
      "abstract": [
        {
          "text": "Creates a PCM audio buffer instance without copying samples, for PCM audio data, with a specified buffer list and a deallocator closure.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "pcmFormat"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "format"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)AVAudioFormat",
          "text": "AVAudioFormat"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "bufferListNoCopy"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "bufferList"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@AudioBufferList",
          "text": "AudioBufferList"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "deallocator"
        },
        {
          "kind": "text",
          "text": ": (("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@AudioBufferList",
          "text": "AudioBufferList"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")? = nil)"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/AVFAudio/AVAudioPCMBuffer/init(pcmFormat:bufferListNoCopy:deallocator:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(pcmFormat:bufferListNoCopy:deallocator:)",
      "type": "topic",
      "url": "/documentation/AVFAudio/AVAudioPCMBuffer/init(pcmFormat:bufferListNoCopy:deallocator:)"
    },
    "doc://com.apple.documentation/documentation/CoreAudioTypes/AudioBufferList": {
      "abstract": [
        {
          "text": "A structure that stores a variable-length array of audio buffers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AudioBufferList"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/CoreAudioTypes/AudioBufferList",
      "kind": "symbol",
      "role": "symbol",
      "title": "AudioBufferList",
      "type": "topic",
      "url": "/documentation/CoreAudioTypes/AudioBufferList"
    },
    "doc://com.apple.documentation/documentation/avfoundation/building_a_signal_generator": {
      "abstract": [
        {
          "text": "Use an audio source node and a custom render callback to generate audio signals.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/building_a_signal_generator",
      "kind": "article",
      "role": "sampleCode",
      "title": "Building a Signal Generator",
      "type": "topic",
      "url": "/documentation/avfoundation/building_a_signal_generator"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.technotes/documentation/Technotes": {
      "abstract": [
        {
          "text": "Learn about specific development topics through these in-depth technical articles.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes",
      "kind": "article",
      "role": "collection",
      "title": "Technotes",
      "type": "topic",
      "url": "/documentation/technotes"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3111-ios-wifi-api-overview": {
      "abstract": [
        {
          "text": "Explore the various Wi-Fi APIs available on iOS and their expected use cases.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3111-ios-wifi-api-overview",
      "kind": "article",
      "role": "article",
      "title": "TN3111: iOS Wi-Fi API overview",
      "type": "topic",
      "url": "/documentation/technotes/tn3111-ios-wifi-api-overview"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3124-debugging-coordinate-transformations": {
      "abstract": [
        {
          "text": "Learn techniques to help debug any coordinate space issue.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3124-debugging-coordinate-transformations",
      "kind": "article",
      "role": "article",
      "title": "TN3124: Debugging coordinate space issues",
      "type": "topic",
      "url": "/documentation/technotes/tn3124-debugging-coordinate-transformations"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3168-making-your-app-clip-available-app-store": {
      "abstract": [
        {
          "text": "Learn how to configure your App Clip to prevent it from being unavailable in the App Store.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3168-making-your-app-clip-available-app-store",
      "kind": "article",
      "role": "article",
      "title": "TN3168: Making your App Clip available in the App Store",
      "type": "topic",
      "url": "/documentation/technotes/tn3168-making-your-app-clip-available-app-store"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3173-troubleshooting-issues-with-your-apple-pay-merchant-id-configuration": {
      "abstract": [
        {
          "text": "Diagnose errors due to invalid Apple Pay merchant identifier configurations by",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "identifying the underlying causes of common errors and explore their",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "potential solutions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3173-troubleshooting-issues-with-your-apple-pay-merchant-id-configuration",
      "kind": "article",
      "role": "article",
      "title": "TN3173: Troubleshooting issues with your Apple Pay merchant identifier configuration",
      "type": "topic",
      "url": "/documentation/technotes/tn3173-troubleshooting-issues-with-your-apple-pay-merchant-id-configuration"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3174-diagnosing-issues-with-the-apple-pay-payment-sheet-on-your-website": {
      "abstract": [
        {
          "text": "Diagnose errors received while presenting the Apple Pay payment sheet on",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "your website by identifying the underlying causes of common errors and explore",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "their potential solutions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3174-diagnosing-issues-with-the-apple-pay-payment-sheet-on-your-website",
      "kind": "article",
      "role": "article",
      "title": "TN3174: Diagnosing issues with the Apple Pay payment sheet on your website",
      "type": "topic",
      "url": "/documentation/technotes/tn3174-diagnosing-issues-with-the-apple-pay-payment-sheet-on-your-website"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3175-diagnosing-issues-with-displaying-the-apple-pay-button-on-your-website": {
      "abstract": [
        {
          "text": "Diagnose common errors received while displaying the Apple Pay button on your",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "website by identifying the underlying causes, and explore potential solutions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3175-diagnosing-issues-with-displaying-the-apple-pay-button-on-your-website",
      "kind": "article",
      "role": "article",
      "title": "TN3175: Diagnosing issues with displaying the Apple Pay button on your website",
      "type": "topic",
      "url": "/documentation/technotes/tn3175-diagnosing-issues-with-displaying-the-apple-pay-button-on-your-website"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3176-troubleshooting-apple-pay-payment-processing-issues": {
      "abstract": [
        {
          "text": "Diagnose errors that occur when processing Apple Pay payments,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "identify common causes, and explore potential solutions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3176-troubleshooting-apple-pay-payment-processing-issues",
      "kind": "article",
      "role": "article",
      "title": "TN3176: Troubleshooting Apple Pay payment processing issues",
      "type": "topic",
      "url": "/documentation/technotes/tn3176-troubleshooting-apple-pay-payment-processing-issues"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3177-understanding-alternate-audio-track-groups-in-movie-files": {
      "abstract": [
        {
          "text": "Learn how alternate groups collect audio tracks, and how to choose which audio track to use in your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3177-understanding-alternate-audio-track-groups-in-movie-files",
      "kind": "article",
      "role": "article",
      "title": "TN3177: Understanding alternate audio track groups in movie files",
      "type": "topic",
      "url": "/documentation/technotes/tn3177-understanding-alternate-audio-track-groups-in-movie-files"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3178-checking-for-and-resolving-build-uuid-problems": {
      "abstract": [
        {
          "text": "Ensure that every Mach-O image has a UUID, and that every distinct Mach-O image has its own unique UUID.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3178-checking-for-and-resolving-build-uuid-problems",
      "kind": "article",
      "role": "article",
      "title": "TN3178: Checking for and resolving build UUID problems",
      "type": "topic",
      "url": "/documentation/technotes/tn3178-checking-for-and-resolving-build-uuid-problems"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3179-understanding-local-network-privacy": {
      "abstract": [
        {
          "text": "Learn how local network privacy affects your software.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3179-understanding-local-network-privacy",
      "kind": "article",
      "role": "article",
      "title": "TN3179: Understanding local network privacy",
      "type": "topic",
      "url": "/documentation/technotes/tn3179-understanding-local-network-privacy"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3180-reverting-app-store-server-notifications-v1": {
      "abstract": [
        {
          "text": "Migrate from version 2 to version 1 of App Store Server Notifications using the Modify an App endpoint.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3180-reverting-app-store-server-notifications-v1",
      "kind": "article",
      "role": "article",
      "title": "TN3180: Reverting to App Store Server Notifications V1",
      "type": "topic",
      "url": "/documentation/technotes/tn3180-reverting-app-store-server-notifications-v1"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3181-debugging-invalid-privacy-manifest": {
      "abstract": [
        {
          "text": "Identify common configurations that cause unsuccessful privacy manifest validation with the App Store.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3181-debugging-invalid-privacy-manifest",
      "kind": "article",
      "role": "article",
      "title": "TN3181: Debugging an invalid privacy manifest",
      "type": "topic",
      "url": "/documentation/technotes/tn3181-debugging-invalid-privacy-manifest"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3182-adding-privacy-tracking-keys-to-your-privacy-manifest": {
      "abstract": [
        {
          "text": "Declare the tracking domains you use in your app or third-party SDK in a privacy manifest.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3182-adding-privacy-tracking-keys-to-your-privacy-manifest",
      "kind": "article",
      "role": "article",
      "title": "TN3182: Adding privacy tracking keys to your privacy manifest",
      "type": "topic",
      "url": "/documentation/technotes/tn3182-adding-privacy-tracking-keys-to-your-privacy-manifest"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3183-adding-required-reason-api-entries-to-your-privacy-manifest": {
      "abstract": [
        {
          "text": "Declare the APIs that can potentially fingerprint devices in your app or third-party SDK in a privacy manifest.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3183-adding-required-reason-api-entries-to-your-privacy-manifest",
      "kind": "article",
      "role": "article",
      "title": "TN3183: Adding required reason API entries to your privacy manifest",
      "type": "topic",
      "url": "/documentation/technotes/tn3183-adding-required-reason-api-entries-to-your-privacy-manifest"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3184-adding-data-collection-details-to-your-privacy-manifest": {
      "abstract": [
        {
          "text": "Declare the data your app or third-party SDK collects in a privacy manifest.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3184-adding-data-collection-details-to-your-privacy-manifest",
      "kind": "article",
      "role": "article",
      "title": "TN3184: Adding data collection details to your privacy manifest",
      "type": "topic",
      "url": "/documentation/technotes/tn3184-adding-data-collection-details-to-your-privacy-manifest"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Latest",
      "generated": true,
      "identifiers": [
        "doc://com.apple.technotes/documentation/Technotes/tn3182-adding-privacy-tracking-keys-to-your-privacy-manifest",
        "doc://com.apple.technotes/documentation/Technotes/tn3183-adding-required-reason-api-entries-to-your-privacy-manifest",
        "doc://com.apple.technotes/documentation/Technotes/tn3184-adding-data-collection-details-to-your-privacy-manifest",
        "doc://com.apple.technotes/documentation/Technotes/tn3181-debugging-invalid-privacy-manifest",
        "doc://com.apple.technotes/documentation/Technotes/tn3180-reverting-app-store-server-notifications-v1",
        "doc://com.apple.technotes/documentation/Technotes/tn3179-understanding-local-network-privacy",
        "doc://com.apple.technotes/documentation/Technotes/tn3178-checking-for-and-resolving-build-uuid-problems",
        "doc://com.apple.technotes/documentation/Technotes/tn3177-understanding-alternate-audio-track-groups-in-movie-files",
        "doc://com.apple.technotes/documentation/Technotes/tn3111-ios-wifi-api-overview",
        "doc://com.apple.technotes/documentation/Technotes/tn3176-troubleshooting-apple-pay-payment-processing-issues",
        "doc://com.apple.technotes/documentation/Technotes/tn3175-diagnosing-issues-with-displaying-the-apple-pay-button-on-your-website",
        "doc://com.apple.technotes/documentation/Technotes/tn3174-diagnosing-issues-with-the-apple-pay-payment-sheet-on-your-website",
        "doc://com.apple.technotes/documentation/Technotes/tn3173-troubleshooting-issues-with-your-apple-pay-merchant-id-configuration",
        "doc://com.apple.technotes/documentation/Technotes/tn3168-making-your-app-clip-available-app-store",
        "doc://com.apple.technotes/documentation/Technotes/tn3124-debugging-coordinate-transformations"
      ],
      "title": "Latest"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFAudio~1AVAudioPCMBuffer/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AVAudioPCMBuffer"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)AVAudioBuffer",
              "text": "AVAudioBuffer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1CoreAudioTypes~1AudioBufferList/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AudioBufferList"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFAudio~1AVAudioConverterOutputStatus/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "enum"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AVAudioConverterOutputStatus"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@NSInteger",
              "text": "NSInteger"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFAudio~1AVAudioPCMBuffer~1init(pcmFormat:bufferListNoCopy:deallocator:)/title",
          "value": "initWithPCMFormat:bufferListNoCopy:deallocator:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFAudio~1AVAudioPCMBuffer~1init(pcmFormat:bufferListNoCopy:deallocator:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "keyword",
              "text": "instancetype"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "initWithPCMFormat:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)AVAudioFormat",
              "text": "AVAudioFormat"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "format"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "bufferListNoCopy:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "keyword",
              "text": "const"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@S@AudioBufferList",
              "text": "AudioBufferList"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "bufferList"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "deallocator:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": " (^)("
            },
            {
              "kind": "keyword",
              "text": "const"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@S@AudioBufferList",
              "text": "AudioBufferList"
            },
            {
              "kind": "text",
              "text": " * "
            },
            {
              "kind": "internalParam",
              "text": ""
            },
            {
              "kind": "text",
              "text": ")) "
            },
            {
              "kind": "internalParam",
              "text": "deallocator"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFAudio~1AVAudioConverterInputStatus~1haveData/title",
          "value": "AVAudioConverterInputStatus_HaveData"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFAudio~1AVAudioConverterInputStatus~1haveData/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "AVAudioConverterInputStatus_HaveData"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFAudio~1AVAudioConverter~1convert(to:from:)/title",
          "value": "convertToBuffer:fromBuffer:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFAudio~1AVAudioConverter~1convert(to:from:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "convertToBuffer:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)AVAudioPCMBuffer",
              "text": "AVAudioPCMBuffer"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "outputBuffer"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "fromBuffer:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "keyword",
              "text": "const"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)AVAudioPCMBuffer",
              "text": "AVAudioPCMBuffer"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "inputBuffer"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "error:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSError",
              "text": "NSError"
            },
            {
              "kind": "text",
              "text": " * *) "
            },
            {
              "kind": "internalParam",
              "text": "outError"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFAudio~1AVAudioBuffer/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AVAudioBuffer"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFAudio~1AVAudioConverter~1convert(to:error:withInputFrom:)/title",
          "value": "convertToBuffer:error:withInputFromBlock:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFAudio~1AVAudioConverter~1convert(to:error:withInputFrom:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@E@AVAudioConverterOutputStatus",
              "text": "AVAudioConverterOutputStatus"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "convertToBuffer:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)AVAudioBuffer",
              "text": "AVAudioBuffer"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "outputBuffer"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "error:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSError",
              "text": "NSError"
            },
            {
              "kind": "text",
              "text": " * *) "
            },
            {
              "kind": "internalParam",
              "text": "outError"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "withInputFromBlock:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@AVAudioConverterInputBlock",
              "text": "AVAudioConverterInputBlock"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "internalParam",
              "text": "inputBlock"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1AVFAudio~1AVAudioConverter/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AVAudioConverter"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
