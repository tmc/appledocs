{
  "abstract": [
    {
      "text": "Test your apps against EventKit API changes in macOS Ventura 13.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.technotes/documentation/Technotes"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.technotes/documentation/Technotes/tn3130-changes-to-eventKit-in-macOS13-ventura"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "role": "article",
    "roleHeading": "Article",
    "title": "TN3130: Changes to EventKit in macOS Ventura 13"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "In macOS Ventura 13, the EventKit framework has seen significant changes. This",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "document highlights some of the notable changes. To learn about related changes in iOS 16, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3132-changes-EventKit-and-EventKitUI-in-iOS16",
              "isActive": true,
              "overridingTitle": "TN3132: Changes to EventKit and EventKitUI in iOS 16",
              "overridingTitleInlineContent": [
                {
                  "text": "TN3132: Changes to EventKit and EventKitUI in iOS 16",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For apps running on systems prior to macOS Ventura 13, the legacy behavior remains in place when using EventKit. When you run your app on macOS Ventura 13, and have built it with Xcode 14 and linked against the macOS 13 SDK,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you may see behavior that you are unfamiliar with when using EventKit. To identify these changes in behavior, thoroughly test your",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "app for each major OS version it supports. Confirm that your implementation of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "EventKit behaves as you expect in each OS version and update your code where",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "needed. If you notice an unexpected behavior in EventKit, report it using ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/bug-reporting/",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "EKCalendar",
          "level": 2,
          "text": "EKCalendar",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The inherited initializer ",
              "type": "text"
            },
            {
              "code": "init()",
              "type": "codeVoice"
            },
            {
              "text": " throws an exception when attempting to create a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "new calendar. Use ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKCalendar/init(for:eventStore:)",
              "isActive": true,
              "overridingTitle": "init(for:eventStore:)",
              "overridingTitleInlineContent": [
                {
                  "text": "init(for:eventStore:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " instead.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let calendar = EKCalendar(for: .event, eventStore: eventStore)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "In the legacy behavior, this inherited initializer returns an unusable ",
              "type": "text"
            },
            {
              "code": "EKCalendar",
              "type": "codeVoice"
            },
            {
              "text": " object.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "EKCalendarItem",
          "level": 2,
          "text": "EKCalendarItem",
          "type": "heading"
        },
        {
          "anchor": "Fetching-recurence-rules",
          "level": 3,
          "text": "Fetching recurence rules",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKCalendarItem/recurrenceRules",
              "isActive": true,
              "overridingTitle": "recurrenceRules",
              "overridingTitleInlineContent": [
                {
                  "text": "recurrenceRules",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " property returns an empty array if the calendar item doesn’t have any recurrence rules.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In the legacy behavior, ",
              "type": "text"
            },
            {
              "code": "recurrenceRules",
              "type": "codeVoice"
            },
            {
              "text": " returns ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " if the calendar item doesn’t have any recurrence rules.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Updating-time-zones",
          "level": 3,
          "text": "Updating time zones",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Changing the time zone of an event no longer changes the absolute time at which it occurs.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "EKEvent",
          "level": 2,
          "text": "EKEvent",
          "type": "heading"
        },
        {
          "anchor": "Creating-events",
          "level": 3,
          "text": "Creating events",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The inherited initializer ",
              "type": "text"
            },
            {
              "code": "init()",
              "type": "codeVoice"
            },
            {
              "text": " throws an exception when attempting to create a new event. Use ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEvent/init(eventStore:)",
              "isActive": true,
              "overridingTitle": "init(eventStore:)",
              "overridingTitleInlineContent": [
                {
                  "text": "init(eventStore:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " to create new events.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In the legacy behavior, this inherited initializer returns an unusable ",
              "type": "text"
            },
            {
              "code": "EKEvent",
              "type": "codeVoice"
            },
            {
              "text": " object.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Event-identifiers",
          "level": 3,
          "text": "Event identifiers",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEvent/eventIdentifier",
              "isActive": true,
              "overridingTitle": "eventIdentifier",
              "overridingTitleInlineContent": [
                {
                  "text": "eventIdentifier",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " property now returns identifiers in a new format. The previous identifier format will continue to work.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "End-date-of-all-day-events",
          "level": 3,
          "text": "End date of all-day events",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEvent/endDate",
              "isActive": true,
              "overridingTitle": "end date",
              "overridingTitleInlineContent": [
                {
                  "text": "end date",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " property of all-day events returns a time of ",
              "type": "text"
            },
            {
              "code": "11:59:59 PM",
              "type": "codeVoice"
            },
            {
              "text": " on the last day of this event.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "Event title: Marathon  ",
            "Start date: June 18, 2022 at 12:00:00 AM PDT",
            "End date: June 18, 2022 at 11:59:59 PM PDT"
          ],
          "syntax": "json",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "In the legacy behavior, this property returns a time of ",
              "type": "text"
            },
            {
              "code": "12:00:00 AM",
              "type": "codeVoice"
            },
            {
              "text": " on the day after the event.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "Event title: Marathon  ",
            "Start date: June 18, 2022 at 12:00:00 AM PDT",
            "End date: June 19, 2022 at 12:00:00 AM PDT"
          ],
          "syntax": "json",
          "type": "codeListing"
        },
        {
          "anchor": "EKEventStore",
          "level": 2,
          "text": "EKEventStore",
          "type": "heading"
        },
        {
          "anchor": "Accessing-sources",
          "level": 3,
          "text": "Accessing sources",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/sources",
              "isActive": true,
              "overridingTitle": "sources",
              "overridingTitleInlineContent": [
                {
                  "text": "sources",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " property now contains delegate sources.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// Fetch all sources associated with the event store.",
            "let sources = eventStore.sources",
            "",
            "sources.forEach { source in",
            "    // Let's check whether source is a delegate event source.",
            "    let name = (source.isDelegate) ? \"Delegate Source\" : \"Source\"",
            "    print(\"\\(name): \\(source.title)\")",
            "}",
            "// Prints \"Source: iCloud\"",
            "// Prints \"Delegate Source: Calculus Office Hours\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Fetching-events",
          "level": 3,
          "text": "Fetching events",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/events(matching:)",
              "isActive": true,
              "overridingTitle": "events(matching:)",
              "overridingTitleInlineContent": [
                {
                  "text": "events(matching:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/enumerateEvents(matching:using:)",
              "isActive": true,
              "overridingTitle": "enumerateEvents(matching:using:)",
              "overridingTitleInlineContent": [
                {
                  "text": "enumerateEvents(matching:using:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " no longer necessarily return events sorted by start date.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Accessing-calendar-events",
          "level": 3,
          "text": "Accessing calendar events",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/calendarItem(withIdentifier:)",
              "isActive": true,
              "overridingTitle": "calendarItem(withIdentifier:)",
              "overridingTitleInlineContent": [
                {
                  "text": "calendarItem(withIdentifier:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/calendarItems(withExternalIdentifier:)",
              "isActive": true,
              "overridingTitle": "calendarItems(withExternalIdentifier:)",
              "overridingTitleInlineContent": [
                {
                  "text": "calendarItems(withExternalIdentifier:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ", and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/event(withIdentifier:)",
              "isActive": true,
              "overridingTitle": "event(withIdentifier:)",
              "overridingTitleInlineContent": [
                {
                  "text": "event(withIdentifier:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " methods may return different occurrences of an event or reminder with a given identifier in some cases. For instance, when the first occurrence of a recurring event was modified and the specified identifier refers to this occurrence. In this case, use the given identifier to fetch the unmodified version of the event’s first occurrence.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Committing-changes",
          "level": 3,
          "text": "Committing changes",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When you call ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/saveCalendar(_:commit:)",
              "isActive": true,
              "overridingTitle": "saveCalendar(_:commit:)",
              "overridingTitleInlineContent": [
                {
                  "text": "saveCalendar(_:commit:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/removeCalendar(_:commit:)",
              "isActive": true,
              "overridingTitle": "removeCalendar(_:commit:)",
              "overridingTitleInlineContent": [
                {
                  "text": "removeCalendar(_:commit:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/save(_:span:commit:)",
              "isActive": true,
              "overridingTitle": "save(_:span:commit:)",
              "overridingTitleInlineContent": [
                {
                  "text": "save(_:span:commit:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/remove(_:span:commit:)",
              "isActive": true,
              "overridingTitle": "remove(_:span:commit:)",
              "overridingTitleInlineContent": [
                {
                  "text": "remove(_:span:commit:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/save(_:commit:)",
              "isActive": true,
              "overridingTitle": "save(_:commit:)",
              "overridingTitleInlineContent": [
                {
                  "text": "save(_:commit:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": ", or ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/remove(_:commit:)",
              "isActive": true,
              "overridingTitle": "remove(_:commit:)",
              "overridingTitleInlineContent": [
                {
                  "text": "remove(_:commit:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " methods with the ",
              "type": "text"
            },
            {
              "code": "commit",
              "type": "codeVoice"
            },
            {
              "text": " parameter set to ",
              "type": "text"
            },
            {
              "code": "true",
              "type": "codeVoice"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore",
              "isActive": true,
              "overridingTitle": "EKEventStore",
              "overridingTitleInlineContent": [
                {
                  "text": "EKEventStore",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " attempts to immediatedly save and commit your changes to the event store. If the commit fails, ",
              "type": "text"
            },
            {
              "code": "EKEventStore",
              "type": "codeVoice"
            },
            {
              "text": " automatically rolls back all changes that been saved but aren’t yet committed to the event store.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In the legacy behavior, uncommitted objects remain saved in the event store.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "EKReminder",
          "level": 2,
          "text": "EKReminder",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The inherited initializer ",
              "type": "text"
            },
            {
              "code": "init()",
              "type": "codeVoice"
            },
            {
              "text": " throws an exception when attempting to create a new reminder. Use ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKReminder/init(eventStore:)",
              "isActive": true,
              "overridingTitle": "init(eventStore:)",
              "overridingTitleInlineContent": [
                {
                  "text": "init(eventStore:)",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " instead.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let reminder = EKReminder(eventStore: eventStore)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "In the legacy behavior, this inherited initializer returns an unusable ",
              "type": "text"
            },
            {
              "code": "EKReminder",
              "type": "codeVoice"
            },
            {
              "text": " object.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "EKSource",
          "level": 2,
          "text": "EKSource",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/EventKit/EKSource/isDelegate",
              "isActive": true,
              "overridingTitle": "isDelegate",
              "overridingTitleInlineContent": [
                {
                  "text": "isDelegate",
                  "type": "text"
                }
              ],
              "type": "reference"
            },
            {
              "text": " property indicates whether the source is an event source delegated to the user.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Revision-History",
          "level": 2,
          "text": "Revision History",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "inlineContent": [
                        {
                          "text": "2022-08-16",
                          "type": "text"
                        }
                      ],
                      "type": "strong"
                    },
                    {
                      "text": " First published.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/EventKit/EKCalendar/init(for:eventStore:)": {
      "abstract": [
        {
          "text": "Creates a new calendar that can contain the given entity type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "entityType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@EKEntityType",
          "text": "EKEntityType"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "eventStore"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKEventStore",
          "text": "EKEventStore"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKCalendar/init(for:eventStore:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(for:eventStore:)",
      "type": "topic",
      "url": "/documentation/EventKit/EKCalendar/init(for:eventStore:)"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKCalendarItem/recurrenceRules": {
      "abstract": [
        {
          "text": "The recurrence rules for the calendar item.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "recurrenceRules"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKRecurrenceRule",
          "text": "EKRecurrenceRule"
        },
        {
          "kind": "text",
          "text": "]? { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "set"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKCalendarItem/recurrenceRules",
      "kind": "symbol",
      "role": "symbol",
      "title": "recurrenceRules",
      "type": "topic",
      "url": "/documentation/EventKit/EKCalendarItem/recurrenceRules"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEvent/endDate": {
      "abstract": [
        {
          "text": "The end date for the event.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "endDate"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "! { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "set"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEvent/endDate",
      "kind": "symbol",
      "role": "symbol",
      "title": "endDate",
      "type": "topic",
      "url": "/documentation/EventKit/EKEvent/endDate"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEvent/eventIdentifier": {
      "abstract": [
        {
          "text": "A unique identifier for the event.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "eventIdentifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "! { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEvent/eventIdentifier",
      "kind": "symbol",
      "role": "symbol",
      "title": "eventIdentifier",
      "type": "topic",
      "url": "/documentation/EventKit/EKEvent/eventIdentifier"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEvent/init(eventStore:)": {
      "abstract": [
        {
          "text": "Creates and returns a new event belonging to a specified event store.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "eventStore"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKEventStore",
          "text": "EKEventStore"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEvent/init(eventStore:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(eventStore:)",
      "type": "topic",
      "url": "/documentation/EventKit/EKEvent/init(eventStore:)"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEventStore": {
      "abstract": [
        {
          "text": "An object that accesses a person’s calendar events and reminders and supports the scheduling of new events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EKEventStore"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore",
      "kind": "symbol",
      "role": "symbol",
      "title": "EKEventStore",
      "type": "topic",
      "url": "/documentation/EventKit/EKEventStore"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEventStore/calendarItem(withIdentifier:)": {
      "abstract": [
        {
          "text": "Locates a reminder or the first occurrence of an event with the specified identifier.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "calendarItem"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withIdentifier"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "identifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendarItem",
          "text": "EKCalendarItem"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/calendarItem(withIdentifier:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "calendarItem(withIdentifier:)",
      "type": "topic",
      "url": "/documentation/EventKit/EKEventStore/calendarItem(withIdentifier:)"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEventStore/calendarItems(withExternalIdentifier:)": {
      "abstract": [
        {
          "text": "Locates all reminders or the first occurrences of all events with the specified external identifier.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "calendarItems"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withExternalIdentifier"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "externalIdentifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendarItem",
          "text": "EKCalendarItem"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/calendarItems(withExternalIdentifier:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "calendarItems(withExternalIdentifier:)",
      "type": "topic",
      "url": "/documentation/EventKit/EKEventStore/calendarItems(withExternalIdentifier:)"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEventStore/enumerateEvents(matching:using:)": {
      "abstract": [
        {
          "text": "Finds all events that match a given predicate and calls a given callback for each event found.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "enumerateEvents"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "matching"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "predicate"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSPredicate",
          "text": "NSPredicate"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "using"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "block"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "@escaping"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@EKEventSearchCallback",
          "text": "EKEventSearchCallback"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/enumerateEvents(matching:using:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "enumerateEvents(matching:using:)",
      "type": "topic",
      "url": "/documentation/EventKit/EKEventStore/enumerateEvents(matching:using:)"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEventStore/event(withIdentifier:)": {
      "abstract": [
        {
          "text": "Locates the first occurrence of an event with a given identifier.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "event"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withIdentifier"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "identifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKEvent",
          "text": "EKEvent"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/event(withIdentifier:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "event(withIdentifier:)",
      "type": "topic",
      "url": "/documentation/EventKit/EKEventStore/event(withIdentifier:)"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEventStore/events(matching:)": {
      "abstract": [
        {
          "text": "Finds all events that match a given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "events"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "matching"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "predicate"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSPredicate",
          "text": "NSPredicate"
        },
        {
          "kind": "text",
          "text": ") -> ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKEvent",
          "text": "EKEvent"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/events(matching:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "events(matching:)",
      "type": "topic",
      "url": "/documentation/EventKit/EKEventStore/events(matching:)"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEventStore/remove(_:commit:)": {
      "abstract": [
        {
          "text": "Removes a reminder from the event store by either committing or batching the changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "remove"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "reminder"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKReminder",
          "text": "EKReminder"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/remove(_:commit:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "remove(_:commit:)",
      "type": "topic",
      "url": "/documentation/EventKit/EKEventStore/remove(_:commit:)"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEventStore/remove(_:span:commit:)": {
      "abstract": [
        {
          "text": "Removes an event or recurring events from the event store by either committing or batching the changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "remove"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "event"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKEvent",
          "text": "EKEvent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "span"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@EKSpan",
          "text": "EKSpan"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/remove(_:span:commit:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "remove(_:span:commit:)",
      "type": "topic",
      "url": "/documentation/EventKit/EKEventStore/remove(_:span:commit:)"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEventStore/removeCalendar(_:commit:)": {
      "abstract": [
        {
          "text": "Removes a calendar from the event store by either committing or batching the changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeCalendar"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "calendar"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendar",
          "text": "EKCalendar"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/removeCalendar(_:commit:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "removeCalendar(_:commit:)",
      "type": "topic",
      "url": "/documentation/EventKit/EKEventStore/removeCalendar(_:commit:)"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEventStore/save(_:commit:)": {
      "abstract": [
        {
          "text": "Saves changes to a reminder by either committing or batching the changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "save"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "reminder"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKReminder",
          "text": "EKReminder"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/save(_:commit:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "save(_:commit:)",
      "type": "topic",
      "url": "/documentation/EventKit/EKEventStore/save(_:commit:)"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEventStore/save(_:span:commit:)": {
      "abstract": [
        {
          "text": "Saves an event or recurring events to the event store by either committing or batching the changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "save"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "event"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKEvent",
          "text": "EKEvent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "span"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@EKSpan",
          "text": "EKSpan"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/save(_:span:commit:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "save(_:span:commit:)",
      "type": "topic",
      "url": "/documentation/EventKit/EKEventStore/save(_:span:commit:)"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEventStore/saveCalendar(_:commit:)": {
      "abstract": [
        {
          "text": "Saves a calendar to the event store by either committing or batching the changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "saveCalendar"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "calendar"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendar",
          "text": "EKCalendar"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/saveCalendar(_:commit:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "saveCalendar(_:commit:)",
      "type": "topic",
      "url": "/documentation/EventKit/EKEventStore/saveCalendar(_:commit:)"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKEventStore/sources": {
      "abstract": [
        {
          "text": "An unordered array of objects that represent accounts that contain calendars.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKSource",
          "text": "EKSource"
        },
        {
          "kind": "text",
          "text": "] { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKEventStore/sources",
      "kind": "symbol",
      "role": "symbol",
      "title": "sources",
      "type": "topic",
      "url": "/documentation/EventKit/EKEventStore/sources"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKReminder/init(eventStore:)": {
      "abstract": [
        {
          "text": "Creates and returns a new reminder in the given event store.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "eventStore"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKEventStore",
          "text": "EKEventStore"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKReminder/init(eventStore:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(eventStore:)",
      "type": "topic",
      "url": "/documentation/EventKit/EKReminder/init(eventStore:)"
    },
    "doc://com.apple.documentation/documentation/EventKit/EKSource/isDelegate": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isDelegate"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": " { "
        },
        {
          "kind": "keyword",
          "text": "get"
        },
        {
          "kind": "text",
          "text": " }"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/EventKit/EKSource/isDelegate",
      "kind": "symbol",
      "role": "symbol",
      "title": "isDelegate",
      "type": "topic",
      "url": "/documentation/EventKit/EKSource/isDelegate"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.technotes/documentation/Technotes": {
      "abstract": [
        {
          "text": "Learn about specific development topics through these in-depth technical articles.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes",
      "kind": "article",
      "role": "collection",
      "title": "Technotes",
      "type": "topic",
      "url": "/documentation/technotes"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3111-ios-wifi-api-overview": {
      "abstract": [
        {
          "text": "Explore the various Wi-Fi APIs available on iOS and their expected use cases.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3111-ios-wifi-api-overview",
      "kind": "article",
      "role": "article",
      "title": "TN3111: iOS Wi-Fi API overview",
      "type": "topic",
      "url": "/documentation/technotes/tn3111-ios-wifi-api-overview"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3124-debugging-coordinate-transformations": {
      "abstract": [
        {
          "text": "Learn techniques to help debug any coordinate space issue.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3124-debugging-coordinate-transformations",
      "kind": "article",
      "role": "article",
      "title": "TN3124: Debugging coordinate space issues",
      "type": "topic",
      "url": "/documentation/technotes/tn3124-debugging-coordinate-transformations"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3132-changes-EventKit-and-EventKitUI-in-iOS16": {
      "abstract": [
        {
          "text": "Test your apps against EventKit and EventKitUI API changes in iOS 16.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3132-changes-EventKit-and-EventKitUI-in-iOS16",
      "kind": "article",
      "role": "article",
      "title": "TN3132: Changes to EventKit and EventKitUI in iOS 16",
      "type": "topic",
      "url": "/documentation/technotes/tn3132-changes-eventkit-and-eventkitui-in-ios16"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3168-making-your-app-clip-available-app-store": {
      "abstract": [
        {
          "text": "Learn how to configure your App Clip to prevent it from being unavailable in the App Store.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3168-making-your-app-clip-available-app-store",
      "kind": "article",
      "role": "article",
      "title": "TN3168: Making your App Clip available in the App Store",
      "type": "topic",
      "url": "/documentation/technotes/tn3168-making-your-app-clip-available-app-store"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3173-troubleshooting-issues-with-your-apple-pay-merchant-id-configuration": {
      "abstract": [
        {
          "text": "Diagnose errors due to invalid Apple Pay merchant identifier configurations by",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "identifying the underlying causes of common errors and explore their",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "potential solutions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3173-troubleshooting-issues-with-your-apple-pay-merchant-id-configuration",
      "kind": "article",
      "role": "article",
      "title": "TN3173: Troubleshooting issues with your Apple Pay merchant identifier configuration",
      "type": "topic",
      "url": "/documentation/technotes/tn3173-troubleshooting-issues-with-your-apple-pay-merchant-id-configuration"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3174-diagnosing-issues-with-the-apple-pay-payment-sheet-on-your-website": {
      "abstract": [
        {
          "text": "Diagnose errors received while presenting the Apple Pay payment sheet on",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "your website by identifying the underlying causes of common errors and explore",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "their potential solutions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3174-diagnosing-issues-with-the-apple-pay-payment-sheet-on-your-website",
      "kind": "article",
      "role": "article",
      "title": "TN3174: Diagnosing issues with the Apple Pay payment sheet on your website",
      "type": "topic",
      "url": "/documentation/technotes/tn3174-diagnosing-issues-with-the-apple-pay-payment-sheet-on-your-website"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3175-diagnosing-issues-with-displaying-the-apple-pay-button-on-your-website": {
      "abstract": [
        {
          "text": "Diagnose common errors received while displaying the Apple Pay button on your",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "website by identifying the underlying causes, and explore potential solutions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3175-diagnosing-issues-with-displaying-the-apple-pay-button-on-your-website",
      "kind": "article",
      "role": "article",
      "title": "TN3175: Diagnosing issues with displaying the Apple Pay button on your website",
      "type": "topic",
      "url": "/documentation/technotes/tn3175-diagnosing-issues-with-displaying-the-apple-pay-button-on-your-website"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3176-troubleshooting-apple-pay-payment-processing-issues": {
      "abstract": [
        {
          "text": "Diagnose errors that occur when processing Apple Pay payments,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "identify common causes, and explore potential solutions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3176-troubleshooting-apple-pay-payment-processing-issues",
      "kind": "article",
      "role": "article",
      "title": "TN3176: Troubleshooting Apple Pay payment processing issues",
      "type": "topic",
      "url": "/documentation/technotes/tn3176-troubleshooting-apple-pay-payment-processing-issues"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3177-understanding-alternate-audio-track-groups-in-movie-files": {
      "abstract": [
        {
          "text": "Learn how alternate groups collect audio tracks, and how to choose which audio track to use in your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3177-understanding-alternate-audio-track-groups-in-movie-files",
      "kind": "article",
      "role": "article",
      "title": "TN3177: Understanding alternate audio track groups in movie files",
      "type": "topic",
      "url": "/documentation/technotes/tn3177-understanding-alternate-audio-track-groups-in-movie-files"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3178-checking-for-and-resolving-build-uuid-problems": {
      "abstract": [
        {
          "text": "Ensure that every Mach-O image has a UUID, and that every distinct Mach-O image has its own unique UUID.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3178-checking-for-and-resolving-build-uuid-problems",
      "kind": "article",
      "role": "article",
      "title": "TN3178: Checking for and resolving build UUID problems",
      "type": "topic",
      "url": "/documentation/technotes/tn3178-checking-for-and-resolving-build-uuid-problems"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3179-understanding-local-network-privacy": {
      "abstract": [
        {
          "text": "Learn how local network privacy affects your software.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3179-understanding-local-network-privacy",
      "kind": "article",
      "role": "article",
      "title": "TN3179: Understanding local network privacy",
      "type": "topic",
      "url": "/documentation/technotes/tn3179-understanding-local-network-privacy"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3180-reverting-app-store-server-notifications-v1": {
      "abstract": [
        {
          "text": "Migrate from version 2 to version 1 of App Store Server Notifications using the Modify an App endpoint.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3180-reverting-app-store-server-notifications-v1",
      "kind": "article",
      "role": "article",
      "title": "TN3180: Reverting to App Store Server Notifications V1",
      "type": "topic",
      "url": "/documentation/technotes/tn3180-reverting-app-store-server-notifications-v1"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3181-debugging-invalid-privacy-manifest": {
      "abstract": [
        {
          "text": "Identify common configurations that cause unsuccessful privacy manifest validation with the App Store.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3181-debugging-invalid-privacy-manifest",
      "kind": "article",
      "role": "article",
      "title": "TN3181: Debugging an invalid privacy manifest",
      "type": "topic",
      "url": "/documentation/technotes/tn3181-debugging-invalid-privacy-manifest"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3182-adding-privacy-tracking-keys-to-your-privacy-manifest": {
      "abstract": [
        {
          "text": "Declare the tracking domains you use in your app or third-party SDK in a privacy manifest.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3182-adding-privacy-tracking-keys-to-your-privacy-manifest",
      "kind": "article",
      "role": "article",
      "title": "TN3182: Adding privacy tracking keys to your privacy manifest",
      "type": "topic",
      "url": "/documentation/technotes/tn3182-adding-privacy-tracking-keys-to-your-privacy-manifest"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3183-adding-required-reason-api-entries-to-your-privacy-manifest": {
      "abstract": [
        {
          "text": "Declare the APIs that can potentially fingerprint devices in your app or third-party SDK in a privacy manifest.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3183-adding-required-reason-api-entries-to-your-privacy-manifest",
      "kind": "article",
      "role": "article",
      "title": "TN3183: Adding required reason API entries to your privacy manifest",
      "type": "topic",
      "url": "/documentation/technotes/tn3183-adding-required-reason-api-entries-to-your-privacy-manifest"
    },
    "doc://com.apple.technotes/documentation/Technotes/tn3184-adding-data-collection-details-to-your-privacy-manifest": {
      "abstract": [
        {
          "text": "Declare the data your app or third-party SDK collects in a privacy manifest.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.technotes/documentation/Technotes/tn3184-adding-data-collection-details-to-your-privacy-manifest",
      "kind": "article",
      "role": "article",
      "title": "TN3184: Adding data collection details to your privacy manifest",
      "type": "topic",
      "url": "/documentation/technotes/tn3184-adding-data-collection-details-to-your-privacy-manifest"
    },
    "https://developer.apple.com/bug-reporting/": {
      "identifier": "https://developer.apple.com/bug-reporting/",
      "title": "Feedback Assistant",
      "titleInlineContent": [
        {
          "text": "Feedback Assistant",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/bug-reporting/"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Latest",
      "generated": true,
      "identifiers": [
        "doc://com.apple.technotes/documentation/Technotes/tn3182-adding-privacy-tracking-keys-to-your-privacy-manifest",
        "doc://com.apple.technotes/documentation/Technotes/tn3183-adding-required-reason-api-entries-to-your-privacy-manifest",
        "doc://com.apple.technotes/documentation/Technotes/tn3184-adding-data-collection-details-to-your-privacy-manifest",
        "doc://com.apple.technotes/documentation/Technotes/tn3181-debugging-invalid-privacy-manifest",
        "doc://com.apple.technotes/documentation/Technotes/tn3180-reverting-app-store-server-notifications-v1",
        "doc://com.apple.technotes/documentation/Technotes/tn3179-understanding-local-network-privacy",
        "doc://com.apple.technotes/documentation/Technotes/tn3178-checking-for-and-resolving-build-uuid-problems",
        "doc://com.apple.technotes/documentation/Technotes/tn3177-understanding-alternate-audio-track-groups-in-movie-files",
        "doc://com.apple.technotes/documentation/Technotes/tn3111-ios-wifi-api-overview",
        "doc://com.apple.technotes/documentation/Technotes/tn3176-troubleshooting-apple-pay-payment-processing-issues",
        "doc://com.apple.technotes/documentation/Technotes/tn3175-diagnosing-issues-with-displaying-the-apple-pay-button-on-your-website",
        "doc://com.apple.technotes/documentation/Technotes/tn3174-diagnosing-issues-with-the-apple-pay-payment-sheet-on-your-website",
        "doc://com.apple.technotes/documentation/Technotes/tn3173-troubleshooting-issues-with-your-apple-pay-merchant-id-configuration",
        "doc://com.apple.technotes/documentation/Technotes/tn3168-making-your-app-clip-available-app-store",
        "doc://com.apple.technotes/documentation/Technotes/tn3124-debugging-coordinate-transformations"
      ],
      "title": "Latest"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEvent~1init(eventStore:)/title",
          "value": "eventWithEventStore:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEvent~1init(eventStore:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)EKEvent",
              "text": "EKEvent"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "identifier",
              "text": "eventWithEventStore:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)EKEventStore",
              "text": "EKEventStore"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "eventStore"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "EKEventStore"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1save(_:span:commit:)/title",
          "value": "saveEvent:span:commit:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1save(_:span:commit:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "saveEvent:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)EKEvent",
              "text": "EKEvent"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "event"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "span:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@E@EKSpan",
              "text": "EKSpan"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "internalParam",
              "text": "span"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "commit:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "internalParam",
              "text": "commit"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "error:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSError",
              "text": "NSError"
            },
            {
              "kind": "text",
              "text": " * *) "
            },
            {
              "kind": "internalParam",
              "text": "error"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1sources/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@property"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "kind": "keyword",
              "text": "nonatomic"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "keyword",
              "text": "readonly"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:Q$objc(cs)NSArray",
              "text": "NSArray<EKSource *>"
            },
            {
              "kind": "text",
              "text": " * "
            },
            {
              "kind": "identifier",
              "text": "sources"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1saveCalendar(_:commit:)/title",
          "value": "saveCalendar:commit:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1saveCalendar(_:commit:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "saveCalendar:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)EKCalendar",
              "text": "EKCalendar"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "calendar"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "commit:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "internalParam",
              "text": "commit"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "error:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSError",
              "text": "NSError"
            },
            {
              "kind": "text",
              "text": " * *) "
            },
            {
              "kind": "internalParam",
              "text": "error"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKSource~1isDelegate/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@property"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "kind": "keyword",
              "text": "nonatomic"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "keyword",
              "text": "assign"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "keyword",
              "text": "readonly"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "isDelegate"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEvent~1eventIdentifier/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@property"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "kind": "keyword",
              "text": "nonatomic"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "keyword",
              "text": "readonly"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSString",
              "text": "NSString"
            },
            {
              "kind": "text",
              "text": " * "
            },
            {
              "kind": "identifier",
              "text": "eventIdentifier"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1remove(_:commit:)/title",
          "value": "removeReminder:commit:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1remove(_:commit:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "removeReminder:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)EKReminder",
              "text": "EKReminder"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "reminder"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "commit:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "internalParam",
              "text": "commit"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "error:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSError",
              "text": "NSError"
            },
            {
              "kind": "text",
              "text": " * *) "
            },
            {
              "kind": "internalParam",
              "text": "error"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1events(matching:)/title",
          "value": "eventsMatchingPredicate:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1events(matching:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:Q$objc(cs)NSArray",
              "text": "NSArray<EKEvent *>"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "identifier",
              "text": "eventsMatchingPredicate:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSPredicate",
              "text": "NSPredicate"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "predicate"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1event(withIdentifier:)/title",
          "value": "eventWithIdentifier:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1event(withIdentifier:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)EKEvent",
              "text": "EKEvent"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "identifier",
              "text": "eventWithIdentifier:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSString",
              "text": "NSString"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "identifier"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1enumerateEvents(matching:using:)/title",
          "value": "enumerateEventsMatchingPredicate:usingBlock:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1enumerateEvents(matching:using:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "enumerateEventsMatchingPredicate:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSPredicate",
              "text": "NSPredicate"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "predicate"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "usingBlock:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@EKEventSearchCallback",
              "text": "EKEventSearchCallback"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "internalParam",
              "text": "block"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1remove(_:span:commit:)/title",
          "value": "removeEvent:span:commit:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1remove(_:span:commit:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "removeEvent:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)EKEvent",
              "text": "EKEvent"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "event"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "span:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@E@EKSpan",
              "text": "EKSpan"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "internalParam",
              "text": "span"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "commit:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "internalParam",
              "text": "commit"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "error:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSError",
              "text": "NSError"
            },
            {
              "kind": "text",
              "text": " * *) "
            },
            {
              "kind": "internalParam",
              "text": "error"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1removeCalendar(_:commit:)/title",
          "value": "removeCalendar:commit:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1removeCalendar(_:commit:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "removeCalendar:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)EKCalendar",
              "text": "EKCalendar"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "calendar"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "commit:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "internalParam",
              "text": "commit"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "error:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSError",
              "text": "NSError"
            },
            {
              "kind": "text",
              "text": " * *) "
            },
            {
              "kind": "internalParam",
              "text": "error"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1calendarItem(withIdentifier:)/title",
          "value": "calendarItemWithIdentifier:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1calendarItem(withIdentifier:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)EKCalendarItem",
              "text": "EKCalendarItem"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "identifier",
              "text": "calendarItemWithIdentifier:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSString",
              "text": "NSString"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "identifier"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1save(_:commit:)/title",
          "value": "saveReminder:commit:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1save(_:commit:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "saveReminder:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)EKReminder",
              "text": "EKReminder"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "reminder"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "commit:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "internalParam",
              "text": "commit"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "error:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSError",
              "text": "NSError"
            },
            {
              "kind": "text",
              "text": " * *) "
            },
            {
              "kind": "internalParam",
              "text": "error"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKCalendarItem~1recurrenceRules/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@property"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "kind": "keyword",
              "text": "nonatomic"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "keyword",
              "text": "copy"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:Q$objc(cs)NSArray",
              "text": "NSArray<EKRecurrenceRule *>"
            },
            {
              "kind": "text",
              "text": " * "
            },
            {
              "kind": "identifier",
              "text": "recurrenceRules"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1calendarItems(withExternalIdentifier:)/title",
          "value": "calendarItemsWithExternalIdentifier:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEventStore~1calendarItems(withExternalIdentifier:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:Q$objc(cs)NSArray",
              "text": "NSArray<EKCalendarItem *>"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "identifier",
              "text": "calendarItemsWithExternalIdentifier:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSString",
              "text": "NSString"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "externalIdentifier"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKCalendar~1init(for:eventStore:)/title",
          "value": "calendarForEntityType:eventStore:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKCalendar~1init(for:eventStore:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)EKCalendar",
              "text": "EKCalendar"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "identifier",
              "text": "calendarForEntityType:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@E@EKEntityType",
              "text": "EKEntityType"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "internalParam",
              "text": "entityType"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "eventStore:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)EKEventStore",
              "text": "EKEventStore"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "eventStore"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKReminder~1init(eventStore:)/title",
          "value": "reminderWithEventStore:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKReminder~1init(eventStore:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)EKReminder",
              "text": "EKReminder"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "identifier",
              "text": "reminderWithEventStore:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)EKEventStore",
              "text": "EKEventStore"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "eventStore"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1EventKit~1EKEvent~1endDate/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@property"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "kind": "keyword",
              "text": "nonatomic"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "keyword",
              "text": "copy"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSDate",
              "text": "NSDate"
            },
            {
              "kind": "text",
              "text": " * "
            },
            {
              "kind": "identifier",
              "text": "endDate"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
