{
  "abstract": [
    {
      "text": "Returns the offset of an inline stored property within a typeâ€™s in-memory",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "representation.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/MemoryLayout"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/MemoryLayout/offset(of:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Swift",
    "externalID": "s:s12MemoryLayoutO6offset2ofSiSgs14PartialKeyPathCyxG_tFZ",
    "fragments": [
      {
        "kind": "keyword",
        "text": "static"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "offset"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "of"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s14PartialKeyPathC",
        "text": "PartialKeyPath"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "text": "T"
      },
      {
        "kind": "text",
        "text": ">) -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Si",
        "text": "Int"
      },
      {
        "kind": "text",
        "text": "?"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Type Method",
    "symbolKind": "method",
    "title": "offset(of:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "static"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "offset"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "of"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "key"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/PartialKeyPath",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s14PartialKeyPathC",
              "text": "PartialKeyPath"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "text": "T"
            },
            {
              "kind": "text",
              "text": ">) -> "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Int",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Si",
              "text": "Int"
            },
            {
              "kind": "text",
              "text": "?"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A key path referring to storage that can be accessed",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "through a value of type ",
                  "type": "text"
                },
                {
                  "code": "T",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "key"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The offset in bytes from a pointer to a value of type ",
              "type": "text"
            },
            {
              "code": "T",
              "type": "codeVoice"
            },
            {
              "text": " to a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "pointer to the storage referenced by ",
              "type": "text"
            },
            {
              "code": "key",
              "type": "codeVoice"
            },
            {
              "text": ", or ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " if no such offset",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is available for the storage referenced by ",
              "type": "text"
            },
            {
              "code": "key",
              "type": "codeVoice"
            },
            {
              "text": ". If the value is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": ", it can be because ",
              "type": "text"
            },
            {
              "code": "key",
              "type": "codeVoice"
            },
            {
              "text": " is computed, has observers, requires",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "reabstraction, or overlaps storage with other properties.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can use this method to find the distance in bytes that can be added",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to a pointer of type ",
              "type": "text"
            },
            {
              "code": "T",
              "type": "codeVoice"
            },
            {
              "text": " to get a pointer to the property referenced by",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "key",
              "type": "codeVoice"
            },
            {
              "text": ". The offset is available only if the given key refers to inline,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "directly addressable storage within the in-memory representation of ",
              "type": "text"
            },
            {
              "code": "T",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If the return value of this method is non-",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": ", then accessing the value",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "by key path or by an offset pointer are equivalent. For example, for a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "variable ",
              "type": "text"
            },
            {
              "code": "root",
              "type": "codeVoice"
            },
            {
              "text": " of type ",
              "type": "text"
            },
            {
              "code": "T",
              "type": "codeVoice"
            },
            {
              "text": ", a key path ",
              "type": "text"
            },
            {
              "code": "key",
              "type": "codeVoice"
            },
            {
              "text": " of type",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "WritableKeyPath<T, U>",
              "type": "codeVoice"
            },
            {
              "text": ", and a ",
              "type": "text"
            },
            {
              "code": "value",
              "type": "codeVoice"
            },
            {
              "text": " of type ",
              "type": "text"
            },
            {
              "code": "U",
              "type": "codeVoice"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// Mutation through the key path",
            "root[keyPath: key] = value",
            "",
            "// Mutation through the offset pointer",
            "withUnsafeMutableBytes(of: &root) { bytes in",
            "    let offset = MemoryLayout<T>.offset(of: key)!",
            "    let rawPointerToValue = bytes.baseAddress! + offset",
            "    let pointerToValue = rawPointerToValue.assumingMemoryBound(to: U.self)",
            "    pointerToValue.pointee = value",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "A property has inline, directly addressable storage when it is a stored",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "property for which no additional work is required to extract or set the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "value. Properties are not directly accessible if they trigger any",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "didSet",
              "type": "codeVoice"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "code": "willSet",
              "type": "codeVoice"
            },
            {
              "text": " accessors, perform any representation changes such",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "as bridging or closure reabstraction, or mask the value out of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "overlapping storage as for packed bitfields. In addition, because class",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instance properties are always stored out-of-line, their positions are",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "not accessible using ",
              "type": "text"
            },
            {
              "code": "offset(of:)",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example, in the ",
              "type": "text"
            },
            {
              "code": "ProductCategory",
              "type": "codeVoice"
            },
            {
              "text": " type defined here, only",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "\\.updateCounter",
              "type": "codeVoice"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "code": "\\.identifier",
              "type": "codeVoice"
            },
            {
              "text": ", and ",
              "type": "text"
            },
            {
              "code": "\\.identifier.name",
              "type": "codeVoice"
            },
            {
              "text": " refer to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "properties with inline, directly addressable storage:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ProductCategory {",
            "    struct Identifier {",
            "        var name: String              // addressable",
            "    }",
            "",
            "    var identifier: Identifier        // addressable",
            "    var updateCounter: Int            // addressable",
            "    var products: [Product] {         // not addressable: didSet handler",
            "        didSet { updateCounter += 1 }",
            "    }",
            "    var productCount: Int {           // not addressable: computed property",
            "        return products.count",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When using ",
              "type": "text"
            },
            {
              "code": "offset(of:)",
              "type": "codeVoice"
            },
            {
              "text": " with a type imported from a library, donâ€™t",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "assume that future versions of the library will have the same behavior.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If a property is converted from a stored property to a computed",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "property, the result of ",
              "type": "text"
            },
            {
              "code": "offset(of:)",
              "type": "codeVoice"
            },
            {
              "text": " changes to ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": ". That kind of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "conversion is nonbreaking in other contexts, but would trigger a runtime",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "error if the result of ",
              "type": "text"
            },
            {
              "code": "offset(of:)",
              "type": "codeVoice"
            },
            {
              "text": " is force-unwrapped.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Int": {
      "abstract": [
        {
          "text": "A signed integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int"
        }
      ],
      "role": "symbol",
      "title": "Int",
      "type": "topic",
      "url": "/documentation/swift/int"
    },
    "doc://com.apple.Swift/documentation/Swift/MemoryLayout": {
      "abstract": [
        {
          "text": "The memory layout of a type, describing its size, stride, and alignment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MemoryLayout"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MemoryLayout",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MemoryLayout"
        }
      ],
      "role": "symbol",
      "title": "MemoryLayout",
      "type": "topic",
      "url": "/documentation/swift/memorylayout"
    },
    "doc://com.apple.Swift/documentation/Swift/MemoryLayout/offset(of:)": {
      "abstract": [
        {
          "text": "Returns the offset of an inline stored property within a typeâ€™s in-memory",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "offset"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s14PartialKeyPathC",
          "text": "PartialKeyPath"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MemoryLayout/offset(of:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "offset(of:)",
      "type": "topic",
      "url": "/documentation/swift/memorylayout/offset(of:)"
    },
    "doc://com.apple.Swift/documentation/Swift/PartialKeyPath": {
      "abstract": [
        {
          "text": "A partially type-erased key path, from a concrete root type to any",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "resulting value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PartialKeyPath"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/PartialKeyPath",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PartialKeyPath"
        }
      ],
      "role": "symbol",
      "title": "PartialKeyPath",
      "type": "topic",
      "url": "/documentation/swift/partialkeypath"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/swift/memorylayout/offset(of:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
