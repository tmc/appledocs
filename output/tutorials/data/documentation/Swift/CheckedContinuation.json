{
  "abstract": [
    {
      "text": "A mechanism to interface",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "between synchronous and asynchronous code,",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "logging correctness violations.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/CheckedContinuation"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:ScC",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "CheckedContinuation"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "CheckedContinuation"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "CheckedContinuation"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "CheckedContinuation"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "T"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "E"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "E"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Error",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s5ErrorP",
              "text": "Error"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "continuation",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " is an opaque representation of program state.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "To create a continuation in asynchronous code,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "call the ",
              "type": "text"
            },
            {
              "code": "withUnsafeContinuation(function:_:)",
              "type": "codeVoice"
            },
            {
              "text": " or",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "withUnsafeThrowingContinuation(function:_:)",
              "type": "codeVoice"
            },
            {
              "text": " function.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "To resume the asynchronous task,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "call the ",
              "type": "text"
            },
            {
              "code": "resume(returning:)",
              "type": "codeVoice"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "resume(throwing:)",
              "type": "codeVoice"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "resume(with:)",
              "type": "codeVoice"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or ",
              "type": "text"
            },
            {
              "code": "resume()",
              "type": "codeVoice"
            },
            {
              "text": " method.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "You must call a resume method exactly once",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "on every execution path throughout the program.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "Resuming from a continuation more than once is undefined behavior.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Never resuming leaves the task in a suspended state indefinitely,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and leaks any associated resources.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "CheckedContinuation",
              "type": "codeVoice"
            },
            {
              "text": " logs a message",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "if either of these invariants is violated.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "code": "CheckedContinuation",
              "type": "codeVoice"
            },
            {
              "text": " performs runtime checks",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "for missing or multiple resume operations.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "UnsafeContinuation",
              "type": "codeVoice"
            },
            {
              "text": " avoids enforcing these invariants at runtime",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "because it aims to be a low-overhead mechanism",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "for interfacing Swift tasks with",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "event loops, delegate methods, callbacks,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and other non-",
              "type": "text"
            },
            {
              "code": "async",
              "type": "codeVoice"
            },
            {
              "text": " scheduling mechanisms.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "However, during development, the ability to verify that the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "invariants are being upheld in testing is important.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Because both types have the same interface,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you can replace one with the other in most circumstances,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "without making other changes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/CheckedContinuation": {
      "abstract": [
        {
          "text": "A mechanism to interface",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "between synchronous and asynchronous code,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "logging correctness violations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CheckedContinuation"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CheckedContinuation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CheckedContinuation"
        }
      ],
      "role": "symbol",
      "title": "CheckedContinuation",
      "type": "topic",
      "url": "/documentation/swift/checkedcontinuation"
    },
    "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/init(continuation:function:)": {
      "abstract": [
        {
          "text": "Creates a checked continuation from an unsafe continuation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "continuation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Scc",
          "text": "UnsafeContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "function"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/init(continuation:function:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(continuation:function:)",
      "type": "topic",
      "url": "/documentation/swift/checkedcontinuation/init(continuation:function:)"
    },
    "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/resume()": {
      "abstract": [
        {
          "text": "Resume the task awaiting the continuation by having it return normally",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "from its suspension point.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "E",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Error",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "resume"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/resume()",
      "kind": "symbol",
      "role": "symbol",
      "title": "resume()",
      "type": "topic",
      "url": "/documentation/swift/checkedcontinuation/resume()"
    },
    "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/resume(returning:)": {
      "abstract": [
        {
          "text": "Resume the task awaiting the continuation by having it return normally",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "from its suspension point.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "resume"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "returning"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "attribute",
          "text": "sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/resume(returning:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "resume(returning:)",
      "type": "topic",
      "url": "/documentation/swift/checkedcontinuation/resume(returning:)"
    },
    "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/resume(throwing:)": {
      "abstract": [
        {
          "text": "Resume the task awaiting the continuation by having it throw an error",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "from its suspension point.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "resume"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "throwing"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/resume(throwing:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "resume(throwing:)",
      "type": "topic",
      "url": "/documentation/swift/checkedcontinuation/resume(throwing:)"
    },
    "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/resume(with:)-3gh60": {
      "abstract": [
        {
          "text": "Resume the task awaiting the continuation by having it either",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "return normally or throw an error based on the state of the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "Result",
          "type": "codeVoice"
        },
        {
          "text": " value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "E",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Error",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "resume"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "attribute",
          "text": "sending "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6ResultO",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/resume(with:)-3gh60",
      "kind": "symbol",
      "role": "symbol",
      "title": "resume(with:)",
      "type": "topic",
      "url": "/documentation/swift/checkedcontinuation/resume(with:)-3gh60"
    },
    "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/resume(with:)-5n1a5": {
      "abstract": [
        {
          "text": "Resume the task awaiting the continuation by having it either",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "return normally or throw an error based on the state of the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "Result",
          "type": "codeVoice"
        },
        {
          "text": " value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "E",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Error",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "resume"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Er"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "attribute",
          "text": "sending "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6ResultO",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Er"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/resume(with:)-5n1a5",
      "kind": "symbol",
      "role": "symbol",
      "title": "resume(with:)",
      "type": "topic",
      "url": "/documentation/swift/checkedcontinuation/resume(with:)-5n1a5"
    },
    "doc://com.apple.Swift/documentation/Swift/Error": {
      "abstract": [
        {
          "text": "A type representing an error value that can be thrown.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Error"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Error",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Error"
        }
      ],
      "role": "symbol",
      "title": "Error",
      "type": "topic",
      "url": "/documentation/swift/error"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeContinuation": {
      "abstract": [
        {
          "text": "A mechanism to interface",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "between synchronous and asynchronous code,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "without correctness checking.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeContinuation"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeContinuation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeContinuation"
        }
      ],
      "role": "symbol",
      "title": "UnsafeContinuation",
      "type": "topic",
      "url": "/documentation/swift/unsafecontinuation"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeThrowingContinuation": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeThrowingContinuation"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeThrowingContinuation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeThrowingContinuation"
        }
      ],
      "role": "symbol",
      "title": "UnsafeThrowingContinuation",
      "type": "topic",
      "url": "/documentation/swift/unsafethrowingcontinuation"
    },
    "doc://com.apple.Swift/documentation/Swift/withCheckedContinuation(isolation:function:_:)": {
      "abstract": [
        {
          "text": "Invokes the passed in closure with a checked continuation for the current task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withCheckedContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "function"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScC",
          "text": "CheckedContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5NeverO",
          "text": "Never"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withCheckedContinuation(isolation:function:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withCheckedContinuation(isolation:function:_:)",
      "type": "topic",
      "url": "/documentation/swift/withcheckedcontinuation(isolation:function:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withCheckedThrowingContinuation(isolation:function:_:)": {
      "abstract": [
        {
          "text": "Invokes the passed in closure with a checked continuation for the current task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withCheckedThrowingContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "function"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScC",
          "text": "CheckedContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withCheckedThrowingContinuation(isolation:function:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withCheckedThrowingContinuation(isolation:function:_:)",
      "type": "topic",
      "url": "/documentation/swift/withcheckedthrowingcontinuation(isolation:function:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withUnsafeContinuation(isolation:_:)": {
      "abstract": [
        {
          "text": "Invokes the passed in closure with a unsafe continuation for the current task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withUnsafeContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Scc",
          "text": "UnsafeContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5NeverO",
          "text": "Never"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withUnsafeContinuation(isolation:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withUnsafeContinuation(isolation:_:)",
      "type": "topic",
      "url": "/documentation/swift/withunsafecontinuation(isolation:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withUnsafeThrowingContinuation(isolation:_:)": {
      "abstract": [
        {
          "text": "Invokes the passed in closure with a unsafe continuation for the current task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withUnsafeThrowingContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Scc",
          "text": "UnsafeContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withUnsafeThrowingContinuation(isolation:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withUnsafeThrowingContinuation(isolation:_:)",
      "type": "topic",
      "url": "/documentation/swift/withunsafethrowingcontinuation(isolation:_:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Sendable"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Continuations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/withCheckedContinuation(isolation:function:_:)",
        "doc://com.apple.Swift/documentation/Swift/withCheckedThrowingContinuation(isolation:function:_:)",
        "doc://com.apple.Swift/documentation/Swift/UnsafeContinuation",
        "doc://com.apple.Swift/documentation/Swift/withUnsafeContinuation(isolation:_:)",
        "doc://com.apple.Swift/documentation/Swift/UnsafeThrowingContinuation",
        "doc://com.apple.Swift/documentation/Swift/withUnsafeThrowingContinuation(isolation:_:)"
      ],
      "title": "Continuations"
    }
  ],
  "topicSections": [
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/init(continuation:function:)"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/resume()",
        "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/resume(returning:)",
        "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/resume(throwing:)",
        "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/resume(with:)-3gh60",
        "doc://com.apple.Swift/documentation/Swift/CheckedContinuation/resume(with:)-5n1a5"
      ],
      "title": "Instance Methods"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/checkedcontinuation"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
