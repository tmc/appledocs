{
  "abstract": [
    {
      "text": "Performs a nil-coalescing operation, returning the wrapped value of an",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "code": "Optional",
      "type": "codeVoice"
    },
    {
      "text": " instance or a default ",
      "type": "text"
    },
    {
      "code": "Optional",
      "type": "codeVoice"
    },
    {
      "text": " value.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/__(_:_:)-1fjjj"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:s2qqoiyxSgABn_AByKXKtKRi_zlF",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "??"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "T"
      },
      {
        "kind": "text",
        "text": ">("
      },
      {
        "kind": "keyword",
        "text": "consuming"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "text": "T"
      },
      {
        "kind": "text",
        "text": "?, "
      },
      {
        "kind": "attribute",
        "text": "@autoclosure "
      },
      {
        "kind": "text",
        "text": "() "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "T"
      },
      {
        "kind": "text",
        "text": "?) "
      },
      {
        "kind": "keyword",
        "text": "rethrows"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "T"
      },
      {
        "kind": "text",
        "text": "?"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Operator",
    "symbolKind": "op",
    "title": "??(_:_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "??"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "T"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "internalParam",
              "text": "optional"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "consuming"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "T"
            },
            {
              "kind": "text",
              "text": "?, "
            },
            {
              "kind": "internalParam",
              "text": "defaultValue"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "attribute",
              "text": "@autoclosure "
            },
            {
              "kind": "text",
              "text": "() "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "T"
            },
            {
              "kind": "text",
              "text": "?) "
            },
            {
              "kind": "keyword",
              "text": "rethrows"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "T"
            },
            {
              "kind": "text",
              "text": "? "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "T"
            },
            {
              "kind": "text",
              "text": " : ~Copyable"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "An optional value.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "optional"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A value to use as a default. ",
                  "type": "text"
                },
                {
                  "code": "defaultValue",
                  "type": "codeVoice"
                },
                {
                  "text": " and",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "code": "optional",
                  "type": "codeVoice"
                },
                {
                  "text": " have the same type.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "defaultValue"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A nil-coalescing operation unwraps the left-hand side if it has a value, or",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "returns the right-hand side as a default. The result of this operation",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "will be the same type as its arguments.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "This operator uses short-circuit evaluation: ",
              "type": "text"
            },
            {
              "code": "optional",
              "type": "codeVoice"
            },
            {
              "text": " is checked first,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and ",
              "type": "text"
            },
            {
              "code": "defaultValue",
              "type": "codeVoice"
            },
            {
              "text": " is evaluated only if ",
              "type": "text"
            },
            {
              "code": "optional",
              "type": "codeVoice"
            },
            {
              "text": " is ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": ". For example:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let goodNumber = Int(\"100\") ?? Int(\"42\")",
            "print(goodNumber)",
            "// Prints \"Optional(100)\"",
            "",
            "let notSoGoodNumber = Int(\"invalid-input\") ?? Int(\"42\")",
            "print(notSoGoodNumber)",
            "// Prints \"Optional(42)\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "In this example, ",
              "type": "text"
            },
            {
              "code": "goodNumber",
              "type": "codeVoice"
            },
            {
              "text": " is assigned a value of ",
              "type": "text"
            },
            {
              "code": "100",
              "type": "codeVoice"
            },
            {
              "text": " because",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "Int(\"100\")",
              "type": "codeVoice"
            },
            {
              "text": " succeeds in returning a non-",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " result. When",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "notSoGoodNumber",
              "type": "codeVoice"
            },
            {
              "text": " is initialized, ",
              "type": "text"
            },
            {
              "code": "Int(\"invalid-input\")",
              "type": "codeVoice"
            },
            {
              "text": " fails and returns",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": ", and so ",
              "type": "text"
            },
            {
              "code": "Int(\"42\")",
              "type": "codeVoice"
            },
            {
              "text": " is called to supply a default value.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Because the result of this nil-coalescing operation is itself an optional",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "value, you can chain default values by using ",
              "type": "text"
            },
            {
              "code": "??",
              "type": "codeVoice"
            },
            {
              "text": " multiple times. The",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "first optional value that isn’t ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " stops the chain and becomes the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "result of the whole expression. The next example tries to find the correct",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "text for a greeting in two separate dictionaries before falling back to a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "static default.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let greeting = userPrefs[greetingKey] ??",
            "    defaults[greetingKey] ?? \"Greetings!\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "If ",
              "type": "text"
            },
            {
              "code": "userPrefs[greetingKey]",
              "type": "codeVoice"
            },
            {
              "text": " has a value, that value is assigned to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "greeting",
              "type": "codeVoice"
            },
            {
              "text": ". If not, any value in ",
              "type": "text"
            },
            {
              "code": "defaults[greetingKey]",
              "type": "codeVoice"
            },
            {
              "text": " will succeed, and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "if not that, ",
              "type": "text"
            },
            {
              "code": "greeting",
              "type": "codeVoice"
            },
            {
              "text": " will be set to the non-optional default value,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "\"Greetings!\"",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/__(_:_:)-1fjjj": {
      "abstract": [
        {
          "text": "Performs a nil-coalescing operation, returning the wrapped value of an",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "Optional",
          "type": "codeVoice"
        },
        {
          "text": " instance or a default ",
          "type": "text"
        },
        {
          "code": "Optional",
          "type": "codeVoice"
        },
        {
          "text": " value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "??"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "keyword",
          "text": "consuming"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "?) "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/__(_:_:)-1fjjj",
      "kind": "symbol",
      "role": "symbol",
      "title": "??(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/__(_:_:)-1fjjj"
    },
    "doc://com.apple.Swift/documentation/Swift/__(_:_:)-9xjze": {
      "abstract": [
        {
          "text": "Performs a nil-coalescing operation, returning the wrapped value of an",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "Optional",
          "type": "codeVoice"
        },
        {
          "text": " instance or a default value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "??"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "keyword",
          "text": "consuming"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/__(_:_:)-9xjze",
      "kind": "symbol",
      "role": "symbol",
      "title": "??(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/__(_:_:)-9xjze"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Coalescing-Nil-Values",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/__(_:_:)-9xjze"
      ],
      "title": "Coalescing Nil Values"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/__(_:_:)-1fjjj"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
