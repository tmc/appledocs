{
  "abstract": [
    {
      "text": "Work directly with memory-managed Core Foundation types in your Swift code, and manually",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "handle retains as needed.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/imported-c-and-objective-c-apis"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/working-with-core-foundation-types"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Working with Core Foundation Types"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When you import the Core Foundation framework, its types are imported as Swift classes.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Wherever memory management annotations are provided, Swift automatically manages",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the memory of Core Foundation objects, including Core Foundation objects that you",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instantiate yourself. In Swift, you can use each pair of toll-free bridged Foundation",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and Core Foundation types interchangeably. You can also bridge some toll-free bridged",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Core Foundation types to Swift standard library types if you cast to a bridging Foundation",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "type first. See ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/library/archive/documentation/General/Conceptual/CocoaEncyclopedia/Toll-FreeBridgin/Toll-FreeBridgin.html#//apple_ref/doc/uid/TP40010810-CH2",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "for more information.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Use-Memory-Managed-Objects",
          "level": 3,
          "text": "Use Memory Managed Objects",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When Swift imports Core Foundation types, the compiler remaps the names of these",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "types. The compiler removes ",
              "type": "text"
            },
            {
              "code": "Ref",
              "type": "codeVoice"
            },
            {
              "text": " from the end of each type name because all Swift",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "classes are reference types; therefore, the suffix is redundant. The ",
              "type": "text"
            },
            {
              "code": "CFTypeRef",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "type completely remaps to the ",
              "type": "text"
            },
            {
              "code": "AnyObject",
              "type": "codeVoice"
            },
            {
              "text": " type.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Core Foundation objects returned from annotated APIs are automatically memory-managed",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in Swift—you don’t need to invoke the ",
              "type": "text"
            },
            {
              "code": "CFRetain",
              "type": "codeVoice"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "code": "CFRelease",
              "type": "codeVoice"
            },
            {
              "text": ", or ",
              "type": "text"
            },
            {
              "code": "CFAutorelease",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "functions yourself.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If you return Core Foundation objects from your own C functions and Objective-C methods,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you can annotate them with either the ",
              "type": "text"
            },
            {
              "code": "CF_RETURNS_RETAINED",
              "type": "codeVoice"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "code": "CF_RETURNS_NOT_RETAINED",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "macro to automatically insert memory management calls. You can also use the ",
              "type": "text"
            },
            {
              "code": "CF_IMPLICIT_BRIDGING_ENABLED",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and ",
              "type": "text"
            },
            {
              "code": "CF_IMPLICIT_BRIDGING_DISABLED",
              "type": "codeVoice"
            },
            {
              "text": " macros to enclose C function declarations that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "follow the policy for Core Foundation ownership naming, in order to infer memory",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "management.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Convert-Unmanaged-Objects-to-Memory-Managed-Objects",
          "level": 3,
          "text": "Convert Unmanaged Objects to Memory-Managed Objects",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When Swift imports APIs that have not been annotated, the compiler cannot automatically",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "memory-manage the returned Core Foundation objects. Swift wraps these returned Core",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Foundation objects in an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Unmanaged",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " structure. All indirectly",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "returned Core Foundation objects are unmanaged as well. For example, here’s an unannotated",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "C function:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "CFStringRef StringByAddingTwoStrings(CFStringRef s1, CFStringRef s2)"
          ],
          "syntax": "occ",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "And here’s how Swift imports it:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func StringByAddingTwoStrings(_: CFString!, _: CFString!) -> Unmanaged<CFString>! {",
            "    // ...",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When you receive an unmanaged object from an unannotated API, immediately convert",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "it to a memory-managed object before you work with it. That way, Swift can handle",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "memory management for you.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "Unmanaged",
              "type": "codeVoice"
            },
            {
              "text": " structure provides two methods to convert an unmanaged",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "object to a memory-managed object—",
              "type": "text"
            },
            {
              "code": "takeUnretainedValue()",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "takeRetainedValue()",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Both of these methods return the original, unwrapped type of the object. You choose",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "which method to use based on whether the API you are invoking returns an unretained",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or a retained object.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example, suppose the C function above doesn’t retain the ",
              "type": "text"
            },
            {
              "code": "CFString",
              "type": "codeVoice"
            },
            {
              "text": " object before",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "returning it. To start using the object, you use the ",
              "type": "text"
            },
            {
              "code": "takeUnretainedValue()",
              "type": "codeVoice"
            },
            {
              "text": " function.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let memoryManagedResult = StringByAddingTwoStrings(str1, str2).takeUnretainedValue()",
            "// memoryManagedResult is a memory managed CFString"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "You can also invoke the ",
              "type": "text"
            },
            {
              "code": "retain()",
              "type": "codeVoice"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "code": "release()",
              "type": "codeVoice"
            },
            {
              "text": ", and ",
              "type": "text"
            },
            {
              "code": "autorelease()",
              "type": "codeVoice"
            },
            {
              "text": " methods on unmanaged",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "objects, but this approach is not recommended.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For more information, see ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/library/archive/documentation/CoreFoundation/Conceptual/CFMemoryMgmt/Concepts/Ownership.html#//apple_ref/doc/uid/20001148",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/library/archive/documentation/CoreFoundation/Conceptual/CFMemoryMgmt/CFMemoryMgmt.html#//apple_ref/doc/uid/10000127i",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Unmanaged": {
      "abstract": [
        {
          "text": "A type for propagating an unmanaged object reference.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Unmanaged"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Unmanaged",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Unmanaged"
        }
      ],
      "role": "symbol",
      "title": "Unmanaged",
      "type": "topic",
      "url": "/documentation/swift/unmanaged"
    },
    "doc://com.apple.Swift/documentation/Swift/imported-c-and-objective-c-apis": {
      "abstract": [
        {
          "text": "Use native Swift syntax to interoperate with types and functions in C and Objective-C.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/imported-c-and-objective-c-apis",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Imported C and Objective-C APIs",
      "type": "topic",
      "url": "/documentation/swift/imported-c-and-objective-c-apis"
    },
    "doc://com.apple.Swift/documentation/Swift/working-with-foundation-types": {
      "abstract": [
        {
          "text": "Use bridged Foundation types in your Swift codebase to work with dates, times, and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "other values.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/working-with-foundation-types",
      "kind": "article",
      "role": "article",
      "title": "Working with Foundation Types",
      "type": "topic",
      "url": "/documentation/swift/working-with-foundation-types"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "https://developer.apple.com/library/archive/documentation/CoreFoundation/Conceptual/CFMemoryMgmt/CFMemoryMgmt.html#//apple_ref/doc/uid/10000127i": {
      "identifier": "https://developer.apple.com/library/archive/documentation/CoreFoundation/Conceptual/CFMemoryMgmt/CFMemoryMgmt.html#//apple_ref/doc/uid/10000127i",
      "title": "Memory Management Programming Guide for Core Foundation",
      "titleInlineContent": [
        {
          "text": "Memory Management Programming Guide for Core Foundation",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/library/archive/documentation/CoreFoundation/Conceptual/CFMemoryMgmt/CFMemoryMgmt.html#//apple_ref/doc/uid/10000127i"
    },
    "https://developer.apple.com/library/archive/documentation/CoreFoundation/Conceptual/CFMemoryMgmt/Concepts/Ownership.html#//apple_ref/doc/uid/20001148": {
      "identifier": "https://developer.apple.com/library/archive/documentation/CoreFoundation/Conceptual/CFMemoryMgmt/Concepts/Ownership.html#//apple_ref/doc/uid/20001148",
      "title": "Ownership Policy",
      "titleInlineContent": [
        {
          "text": "Ownership Policy",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/library/archive/documentation/CoreFoundation/Conceptual/CFMemoryMgmt/Concepts/Ownership.html#//apple_ref/doc/uid/20001148"
    },
    "https://developer.apple.com/library/archive/documentation/General/Conceptual/CocoaEncyclopedia/Toll-FreeBridgin/Toll-FreeBridgin.html#//apple_ref/doc/uid/TP40010810-CH2": {
      "identifier": "https://developer.apple.com/library/archive/documentation/General/Conceptual/CocoaEncyclopedia/Toll-FreeBridgin/Toll-FreeBridgin.html#//apple_ref/doc/uid/TP40010810-CH2",
      "title": "Toll-Free Bridging",
      "titleInlineContent": [
        {
          "text": "Toll-Free Bridging",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/library/archive/documentation/General/Conceptual/CocoaEncyclopedia/Toll-FreeBridgin/Toll-FreeBridgin.html#//apple_ref/doc/uid/TP40010810-CH2"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Cocoa-Frameworks",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/working-with-foundation-types"
      ],
      "title": "Cocoa Frameworks"
    }
  ]
}
