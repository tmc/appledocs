{
  "abstract": [
    {
      "text": "Common protocol to which all actors conform.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/Actor"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:ScA",
    "fragments": [
      {
        "kind": "keyword",
        "text": "protocol"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Actor"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Actor"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Protocol",
    "symbolKind": "protocol",
    "title": "Actor"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Actor"
            },
            {
              "kind": "text",
              "text": " : AnyObject, "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s8SendableP",
              "text": "Sendable"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "Actor",
              "type": "codeVoice"
            },
            {
              "text": " protocol generalizes over all ",
              "type": "text"
            },
            {
              "code": "actor",
              "type": "codeVoice"
            },
            {
              "text": " types. Actor types",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "implicitly conform to this protocol.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Actors-and-SerialExecutors",
          "level": 3,
          "text": "Actors and SerialExecutors",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "By default, actors execute tasks on a shared global concurrency thread pool.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "This pool is shared by all default actors and tasks, unless an actor or task",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "specified a more specific executor requirement.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "It is possible to configure an actor to use a specific ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/SerialExecutor",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "as well as impact the scheduling of default tasks and actors by using",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/TaskExecutor",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.Swift/documentation/Swift/SerialExecutor",
                  "isActive": true,
                  "type": "reference"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "See Also",
          "style": "note",
          "type": "aside"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.Swift/documentation/Swift/TaskExecutor",
                  "isActive": true,
                  "type": "reference"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "See Also",
          "style": "note",
          "type": "aside"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Actor": {
      "abstract": [
        {
          "text": "Common protocol to which all actors conform.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Actor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Actor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Actor"
        }
      ],
      "role": "symbol",
      "title": "Actor",
      "type": "topic",
      "url": "/documentation/swift/actor"
    },
    "doc://com.apple.Swift/documentation/Swift/Actor/assertIsolated(_:file:line:)": {
      "abstract": [
        {
          "text": "Stops program execution if the current task is not executing on this",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "actor’s serial executor.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "assertIsolated"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "file"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12StaticStringV",
          "text": "StaticString"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "line"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Su",
          "text": "UInt"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Actor/assertIsolated(_:file:line:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "assertIsolated(_:file:line:)",
      "type": "topic",
      "url": "/documentation/swift/actor/assertisolated(_:file:line:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Actor/assumeIsolated(_:file:line:)": {
      "abstract": [
        {
          "text": "Assume that the current task is executing on this actor’s serial executor,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "or stop program execution otherwise.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "assumeIsolated"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "file"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12StaticStringV",
          "text": "StaticString"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "line"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Su",
          "text": "UInt"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Actor/assumeIsolated(_:file:line:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "assumeIsolated(_:file:line:)",
      "type": "topic",
      "url": "/documentation/swift/actor/assumeisolated(_:file:line:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Actor/preconditionIsolated(_:file:line:)": {
      "abstract": [
        {
          "text": "Stops program execution if the current task is not executing on this",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "actor’s serial executor.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "preconditionIsolated"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "file"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12StaticStringV",
          "text": "StaticString"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "line"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Su",
          "text": "UInt"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Actor/preconditionIsolated(_:file:line:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "preconditionIsolated(_:file:line:)",
      "type": "topic",
      "url": "/documentation/swift/actor/preconditionisolated(_:file:line:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Actor/unownedExecutor": {
      "abstract": [
        {
          "text": "Retrieve the executor for this actor as an optimized, unowned",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "reference.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "unownedExecutor"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sce",
          "text": "UnownedSerialExecutor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Actor/unownedExecutor",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "unownedExecutor",
      "type": "topic",
      "url": "/documentation/swift/actor/unownedexecutor"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyActor": {
      "abstract": [
        {
          "text": "Common marker protocol providing a shared “base” for both (local) ",
          "type": "text"
        },
        {
          "code": "Actor",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and (potentially remote) ",
          "type": "text"
        },
        {
          "code": "DistributedActor",
          "type": "codeVoice"
        },
        {
          "text": " types.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AnyActor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyActor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AnyActor"
        }
      ],
      "role": "symbol",
      "title": "AnyActor",
      "type": "topic",
      "url": "/documentation/swift/anyactor"
    },
    "doc://com.apple.Swift/documentation/Swift/ConcurrentValue": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ConcurrentValue"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ConcurrentValue",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ConcurrentValue"
        }
      ],
      "role": "symbol",
      "title": "ConcurrentValue",
      "type": "topic",
      "url": "/documentation/swift/concurrentvalue"
    },
    "doc://com.apple.Swift/documentation/Swift/GlobalActor": {
      "abstract": [
        {
          "text": "A type that represents a globally-unique actor that can be used to isolate",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "various declarations anywhere in the program.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GlobalActor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/GlobalActor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "GlobalActor"
        }
      ],
      "role": "symbol",
      "title": "GlobalActor",
      "type": "topic",
      "url": "/documentation/swift/globalactor"
    },
    "doc://com.apple.Swift/documentation/Swift/MainActor": {
      "abstract": [
        {
          "text": "A singleton actor whose executor is equivalent to the main",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "dispatch queue.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "actor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MainActor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MainActor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MainActor"
        }
      ],
      "role": "symbol",
      "title": "MainActor",
      "type": "topic",
      "url": "/documentation/swift/mainactor"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.Swift/documentation/Swift/SerialExecutor": {
      "abstract": [
        {
          "text": "A service that executes jobs.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SerialExecutor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SerialExecutor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SerialExecutor"
        }
      ],
      "role": "symbol",
      "title": "SerialExecutor",
      "type": "topic",
      "url": "/documentation/swift/serialexecutor"
    },
    "doc://com.apple.Swift/documentation/Swift/TaskExecutor": {
      "abstract": [
        {
          "text": "An executor that may be used as preferred executor by a task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TaskExecutor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskExecutor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TaskExecutor"
        }
      ],
      "role": "symbol",
      "title": "TaskExecutor",
      "type": "topic",
      "url": "/documentation/swift/taskexecutor"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeConcurrentValue": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeConcurrentValue"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeConcurrentValue",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeConcurrentValue"
        }
      ],
      "role": "symbol",
      "title": "UnsafeConcurrentValue",
      "type": "topic",
      "url": "/documentation/swift/unsafeconcurrentvalue"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeSendable": {
      "abstract": [
        {
          "text": "A type whose values can safely be passed across concurrency domains by copying,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "but which disables some safety checking at the conformance site.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeSendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeSendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeSendable"
        }
      ],
      "role": "symbol",
      "title": "UnsafeSendable",
      "type": "topic",
      "url": "/documentation/swift/unsafesendable"
    },
    "doc://com.apple.Swift/documentation/Swift/extractIsolation(_:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "extractIsolation"
        },
        {
          "kind": "text",
          "text": "<each "
        },
        {
          "kind": "genericParameter",
          "text": "Arg"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ">((repeat each "
        },
        {
          "kind": "typeIdentifier",
          "text": "Arg"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") -> (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/extractIsolation(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "extractIsolation(_:)",
      "type": "topic",
      "url": "/documentation/swift/extractisolation(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/isolation()": {
      "abstract": [
        {
          "text": "Produce a reference to the actor to which the enclosing code is",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "isolated, or ",
          "type": "text"
        },
        {
          "code": "nil",
          "type": "codeVoice"
        },
        {
          "text": " if the code is nonisolated.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">() -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/isolation()",
      "kind": "symbol",
      "role": "symbol",
      "title": "isolation()",
      "type": "topic",
      "url": "/documentation/swift/isolation()"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Sendable"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    },
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/MainActor"
      ],
      "kind": "relationships",
      "title": "Conforming Types",
      "type": "conformingTypes"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Actors",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Sendable",
        "doc://com.apple.Swift/documentation/Swift/AnyActor",
        "doc://com.apple.Swift/documentation/Swift/MainActor",
        "doc://com.apple.Swift/documentation/Swift/GlobalActor",
        "doc://com.apple.Swift/documentation/Swift/ConcurrentValue",
        "doc://com.apple.Swift/documentation/Swift/UnsafeSendable",
        "doc://com.apple.Swift/documentation/Swift/UnsafeConcurrentValue",
        "doc://com.apple.Swift/documentation/Swift/isolation()",
        "doc://com.apple.Swift/documentation/Swift/extractIsolation(_:)"
      ],
      "title": "Actors"
    }
  ],
  "topicSections": [
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Actor/unownedExecutor"
      ],
      "title": "Instance Properties"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Actor/assertIsolated(_:file:line:)",
        "doc://com.apple.Swift/documentation/Swift/Actor/assumeIsolated(_:file:line:)",
        "doc://com.apple.Swift/documentation/Swift/Actor/preconditionIsolated(_:file:line:)"
      ],
      "title": "Instance Methods"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/actor"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
