{
  "abstract": [
    {
      "text": "Provide custom execution scope for a function call which is related to the",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "specified test or test case.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "added",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    },
    "minor": {
      "change": "added",
      "platform": "Xcode",
      "versions": [
        "16.2",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/Never"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/Never/provideScope(for:testCase:performing:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Swift",
    "externalID": "s:s5NeverO7TestingE12provideScope3for8testCase10performingyAC4TestV_AI0G0VSgyyYaYbKXEtYaKF",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "provideScope"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "for"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Testing4TestV",
        "text": "Test"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "testCase"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Testing4TestV",
        "text": "Test"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Testing4TestV4CaseV",
        "text": "Case"
      },
      {
        "kind": "text",
        "text": "?, "
      },
      {
        "kind": "externalParam",
        "text": "performing"
      },
      {
        "kind": "text",
        "text": ": () "
      },
      {
        "kind": "keyword",
        "text": "async"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s4Voida",
        "text": "Void"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "async"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "keyword",
        "text": "throws"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "provideScope(for:testCase:performing:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "provideScope"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "for"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "test"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7Testing4TestV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Testing4TestV",
              "text": "Test"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "testCase"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7Testing4TestV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Testing4TestV",
              "text": "Test"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7Testing4TestV4CaseV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Testing4TestV4CaseV",
              "text": "Case"
            },
            {
              "kind": "text",
              "text": "?, "
            },
            {
              "kind": "externalParam",
              "text": "performing"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "function"
            },
            {
              "kind": "text",
              "text": ": () "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Void",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s4Voida",
              "text": "Void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "throws"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The test which ",
                  "type": "text"
                },
                {
                  "code": "function",
                  "type": "codeVoice"
                },
                {
                  "text": " encapsulates.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "test"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The test case, if any, which ",
                  "type": "text"
                },
                {
                  "code": "function",
                  "type": "codeVoice"
                },
                {
                  "text": " encapsulates.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "When invoked on a suite, the value of this argument is ",
                  "type": "text"
                },
                {
                  "code": "nil",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "testCase"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The function to perform. If ",
                  "type": "text"
                },
                {
                  "code": "test",
                  "type": "codeVoice"
                },
                {
                  "text": " represents a test suite,",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "this function encapsulates running all the tests in that suite. If",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "code": "test",
                  "type": "codeVoice"
                },
                {
                  "text": " represents a test function, this function is the body of that",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "test function (including all cases if the test function is",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "parameterized.)",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "function"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Any error that ",
                  "type": "text"
                },
                {
                  "code": "function",
                  "type": "codeVoice"
                },
                {
                  "text": " throws, or an error that prevents this",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "type from providing a custom scope correctly. The testing library",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "records an error thrown from this method as an issue associated with",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "code": "test",
                  "type": "codeVoice"
                },
                {
                  "text": ". If an error is thrown before this method calls ",
                  "type": "text"
                },
                {
                  "code": "function",
                  "type": "codeVoice"
                },
                {
                  "text": ", the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "corresponding test doesn’t run.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Throws",
          "style": "note",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "When the testing library prepares to run a test, it starts by finding",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "all traits applied to that test, including those inherited from containing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "suites. It begins with inherited suite traits, sorting them",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "outermost-to-innermost, and if the test is a function, it then adds all",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "traits applied directly to that functions in the order they were applied",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "(left-to-right). It then asks each trait for its scope provider (if any)",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "by calling ",
              "type": "text"
            },
            {
              "code": "Trait/scopeProvider(for:testCase:)-cjmg",
              "type": "codeVoice"
            },
            {
              "text": ". Finally, it calls",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "this method on all non-",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " scope providers, giving each an opportunity",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to perform arbitrary work before or after invoking ",
              "type": "text"
            },
            {
              "code": "function",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "This method should either invoke ",
              "type": "text"
            },
            {
              "code": "function",
              "type": "codeVoice"
            },
            {
              "text": " once before returning,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or throw an error if it’s unable to provide a custom scope.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Issues recorded by this method are associated with ",
              "type": "text"
            },
            {
              "code": "test",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Never": {
      "abstract": [
        {
          "text": "A type that has no values and can’t be constructed.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Never"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Never",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Never"
        }
      ],
      "role": "symbol",
      "title": "Never",
      "type": "topic",
      "url": "/documentation/swift/never"
    },
    "doc://com.apple.Swift/documentation/Swift/Never/provideScope(for:testCase:performing:)": {
      "abstract": [
        {
          "text": "Provide custom execution scope for a function call which is related to the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "specified test or test case.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "provideScope"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV",
          "text": "Test"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "testCase"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV",
          "text": "Test"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV4CaseV",
          "text": "Case"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "performing"
        },
        {
          "kind": "text",
          "text": ": () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Never/provideScope(for:testCase:performing:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "provideScope(for:testCase:performing:)",
      "type": "topic",
      "url": "/documentation/swift/never/providescope(for:testcase:performing:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Void": {
      "abstract": [
        {
          "text": "The return type of functions that don’t explicitly specify a return type,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "that is, an empty tuple ",
          "type": "text"
        },
        {
          "code": "()",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Void"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Void",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Void"
        }
      ],
      "role": "symbol",
      "title": "Void",
      "type": "topic",
      "url": "/documentation/swift/void"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7Testing4TestV": {
      "abstract": [
        {
          "text": "A type representing a test or suite.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Test"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7Testing4TestV",
      "kind": "symbol",
      "role": "symbol",
      "title": "Test",
      "type": "topic",
      "url": "/documentation/Testing/Test"
    },
    "doc://com.externally.resolved.symbol/s:7Testing4TestV4CaseV": {
      "abstract": [
        {
          "text": "A single test case from a parameterized [`Test`](doc://org.swift.testing/documentation/Testing/Test).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Case"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7Testing4TestV4CaseV",
      "kind": "symbol",
      "role": "symbol",
      "title": "Test.Case",
      "type": "topic",
      "url": "/documentation/Testing/Test/Case"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/swift/never/providescope(for:testcase:performing:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
