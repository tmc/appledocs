{
  "abstract": [
    {
      "text": "A  nonowning collection interface to the bytes in a",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "region of memory.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    },
    "minor": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.2",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:SW",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "UnsafeRawBufferPointer"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "UnsafeRawBufferPointer"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "UnsafeRawBufferPointer"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UnsafeRawBufferPointer"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can use an ",
              "type": "text"
            },
            {
              "code": "UnsafeRawBufferPointer",
              "type": "codeVoice"
            },
            {
              "text": " instance in low-level operations to eliminate",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "uniqueness checks and release mode bounds checks. Bounds checks are always",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "performed in debug mode.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "An ",
              "type": "text"
            },
            {
              "code": "UnsafeRawBufferPointer",
              "type": "codeVoice"
            },
            {
              "text": " instance is a view of the raw bytes in a region of memory.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Each byte in memory is viewed as a ",
              "type": "text"
            },
            {
              "code": "UInt8",
              "type": "codeVoice"
            },
            {
              "text": " value independent of the type",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of values held in that memory. Reading from memory through a raw buffer is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "an untyped operation.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In addition to its collection interface, an ",
              "type": "text"
            },
            {
              "code": "UnsafeRawBufferPointer",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instance also supports the ",
              "type": "text"
            },
            {
              "code": "load(fromByteOffset:as:)",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and ",
              "type": "text"
            },
            {
              "code": "loadUnaligned(fromByteOffset:as:)",
              "type": "codeVoice"
            },
            {
              "text": " methods provided by",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "UnsafeRawPointer",
              "type": "codeVoice"
            },
            {
              "text": ", including bounds checks in debug mode.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To access the underlying memory through typed operations, the memory must",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "be bound to a trivial type.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A ",
                  "type": "text"
                },
                {
                  "inlineContent": [
                    {
                      "text": "trivial type",
                      "type": "text"
                    }
                  ],
                  "type": "emphasis"
                },
                {
                  "text": " can be copied bit for bit with no indirection",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "or reference-counting operations. Generally, native Swift types that do",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "not contain strong or weak references or other forms of indirection are",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "trivial, as are imported C structs and enums. Copying memory that",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "contains values of nontrivial types can only be done safely with a typed",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "pointer. Copying bytes directly from nontrivial, in-memory values does",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "not produce valid copies and can only be done by calling a C API, such as",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "code": "memmove()",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "anchor": "UnsafeRawBufferPointer-Semantics",
          "level": 1,
          "text": "UnsafeRawBufferPointer Semantics",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "An ",
              "type": "text"
            },
            {
              "code": "UnsafeRawBufferPointer",
              "type": "codeVoice"
            },
            {
              "text": " instance is a view into memory and does not own the memory",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that it references. Copying a variable or constant of type ",
              "type": "text"
            },
            {
              "code": "UnsafeRawBufferPointer",
              "type": "codeVoice"
            },
            {
              "text": " does",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "not copy the underlying memory. However, initializing another collection",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "with an ",
              "type": "text"
            },
            {
              "code": "UnsafeRawBufferPointer",
              "type": "codeVoice"
            },
            {
              "text": " instance copies bytes out of the referenced memory and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "into the new collection.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The following example uses ",
              "type": "text"
            },
            {
              "code": "someBytes",
              "type": "codeVoice"
            },
            {
              "text": ", an ",
              "type": "text"
            },
            {
              "code": "UnsafeRawBufferPointer",
              "type": "codeVoice"
            },
            {
              "text": " instance, to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "demonstrate the difference between assigning a buffer pointer and using a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "buffer pointer as the source for another collection’s elements. Here, the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "assignment to ",
              "type": "text"
            },
            {
              "code": "destBytes",
              "type": "codeVoice"
            },
            {
              "text": " creates a new, nonowning buffer pointer",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "covering the first ",
              "type": "text"
            },
            {
              "code": "n",
              "type": "codeVoice"
            },
            {
              "text": " bytes of the memory that ",
              "type": "text"
            },
            {
              "code": "someBytes",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "references—nothing is copied:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var destBytes = someBytes[0..<n]"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Next, the bytes referenced by ",
              "type": "text"
            },
            {
              "code": "destBytes",
              "type": "codeVoice"
            },
            {
              "text": " are copied into ",
              "type": "text"
            },
            {
              "code": "byteArray",
              "type": "codeVoice"
            },
            {
              "text": ", a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "new ",
              "type": "text"
            },
            {
              "code": "[UInt8]",
              "type": "codeVoice"
            },
            {
              "text": " array, and then the remainder of ",
              "type": "text"
            },
            {
              "code": "someBytes",
              "type": "codeVoice"
            },
            {
              "text": " is appended to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "byteArray",
              "type": "codeVoice"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var byteArray: [UInt8] = Array(destBytes)",
            "byteArray += someBytes[n..<someBytes.count]"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/BidirectionalCollection": {
      "abstract": [
        {
          "text": "A collection that supports backward as well as forward traversal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BidirectionalCollection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BidirectionalCollection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BidirectionalCollection"
        }
      ],
      "role": "symbol",
      "title": "BidirectionalCollection",
      "type": "topic",
      "url": "/documentation/swift/bidirectionalcollection"
    },
    "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "role": "symbol",
      "title": "BitwiseCopyable",
      "type": "topic",
      "url": "/documentation/swift/bitwisecopyable"
    },
    "doc://com.apple.Swift/documentation/Swift/Collection": {
      "abstract": [
        {
          "text": "A sequence whose elements can be traversed multiple times,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "nondestructively, and accessed by an indexed subscript.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Collection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Collection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Collection"
        }
      ],
      "role": "symbol",
      "title": "Collection",
      "type": "topic",
      "url": "/documentation/swift/collection"
    },
    "doc://com.apple.Swift/documentation/Swift/Copyable": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Copyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/swift/copyable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customdebugstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/RandomAccessCollection": {
      "abstract": [
        {
          "text": "A collection that supports efficient random-access index traversal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RandomAccessCollection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RandomAccessCollection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RandomAccessCollection"
        }
      ],
      "role": "symbol",
      "title": "RandomAccessCollection",
      "type": "topic",
      "url": "/documentation/swift/randomaccesscollection"
    },
    "doc://com.apple.Swift/documentation/Swift/Sequence": {
      "abstract": [
        {
          "text": "A type that provides sequential, iterated access to its elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sequence"
        }
      ],
      "role": "symbol",
      "title": "Sequence",
      "type": "topic",
      "url": "/documentation/swift/sequence"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeMutableRawBufferPointer": {
      "abstract": [
        {
          "text": "A mutable nonowning collection interface to the bytes in a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "region of memory.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeMutableRawBufferPointer"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeMutableRawBufferPointer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeMutableRawBufferPointer"
        }
      ],
      "role": "symbol",
      "title": "UnsafeMutableRawBufferPointer",
      "type": "topic",
      "url": "/documentation/swift/unsafemutablerawbufferpointer"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeMutableRawPointer": {
      "abstract": [
        {
          "text": "A raw pointer for accessing and manipulating untyped data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeMutableRawPointer"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeMutableRawPointer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeMutableRawPointer"
        }
      ],
      "role": "symbol",
      "title": "UnsafeMutableRawPointer",
      "type": "topic",
      "url": "/documentation/swift/unsafemutablerawpointer"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer": {
      "abstract": [
        {
          "text": "A  nonowning collection interface to the bytes in a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "region of memory.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeRawBufferPointer"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeRawBufferPointer"
        }
      ],
      "role": "symbol",
      "title": "UnsafeRawBufferPointer",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/AtomicRepresentable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/AtomicRepresentable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "AtomicRepresentable Implementations",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/atomicrepresentable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/BidirectionalCollection-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/BidirectionalCollection-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "BidirectionalCollection Implementations",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/bidirectionalcollection-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/Collection-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/Collection-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Collection Implementations",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/collection-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/CustomDebugStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/CustomDebugStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomDebugStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/customdebugstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/RandomAccessCollection-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/RandomAccessCollection-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "RandomAccessCollection Implementations",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/randomaccesscollection-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/Sequence-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/Sequence-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Sequence Implementations",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/sequence-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/assumingMemoryBound(to:)": {
      "abstract": [
        {
          "text": "Returns a typed buffer to the memory referenced by this buffer,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "assuming that the memory is already bound to the specified type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "assumingMemoryBound"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ".Type) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SR",
          "text": "UnsafeBufferPointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/assumingMemoryBound(to:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "assumingMemoryBound(to:)",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/assumingmemorybound(to:)"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/baseAddress": {
      "abstract": [
        {
          "text": "A pointer to the first byte of the buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "baseAddress"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SV",
          "text": "UnsafeRawPointer"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/baseAddress",
      "kind": "symbol",
      "role": "symbol",
      "title": "baseAddress",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/baseaddress"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/bindMemory(to:)": {
      "abstract": [
        {
          "text": "Binds this buffer’s memory to the specified type and returns a typed",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "buffer of the bound memory.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bindMemory"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ".Type) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SR",
          "text": "UnsafeBufferPointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/bindMemory(to:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "bindMemory(to:)",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/bindmemory(to:)"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/deallocate()": {
      "abstract": [
        {
          "text": "Deallocates the memory block previously allocated at this buffer pointer’s",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "base address.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "deallocate"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/deallocate()",
      "kind": "symbol",
      "role": "symbol",
      "title": "deallocate()",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/deallocate()"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(_:)-24m35": {
      "abstract": [
        {
          "text": "Creates a new buffer over the same memory as the given buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SW",
          "text": "UnsafeRawBufferPointer"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(_:)-24m35",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/init(_:)-24m35"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(_:)-5ko6n": {
      "abstract": [
        {
          "text": "Creates a new buffer over the same memory as the given buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sw",
          "text": "UnsafeMutableRawBufferPointer"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(_:)-5ko6n",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/init(_:)-5ko6n"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(_:)-9uv4": {
      "abstract": [
        {
          "text": "Creates a raw buffer over the contiguous bytes in the given typed buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SR",
          "text": "UnsafeBufferPointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(_:)-9uv4",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/init(_:)-9uv4"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(_:)-rrzw": {
      "abstract": [
        {
          "text": "Creates a raw buffer over the contiguous bytes in the given typed buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sr",
          "text": "UnsafeMutableBufferPointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(_:)-rrzw",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/init(_:)-rrzw"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(rebasing:)-9mh4j": {
      "abstract": [
        {
          "text": "Creates a raw buffer over the same memory as the given raw buffer slice,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "with the indices rebased to zero.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "rebasing"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5SliceV",
          "text": "Slice"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SW",
          "text": "UnsafeRawBufferPointer"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(rebasing:)-9mh4j",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(rebasing:)",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/init(rebasing:)-9mh4j"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(rebasing:)-9sxid": {
      "abstract": [
        {
          "text": "Creates a raw buffer over the same memory as the given raw buffer slice,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "with the indices rebased to zero.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "rebasing"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5SliceV",
          "text": "Slice"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sw",
          "text": "UnsafeMutableRawBufferPointer"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(rebasing:)-9sxid",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(rebasing:)",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/init(rebasing:)-9sxid"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(start:count:)": {
      "abstract": [
        {
          "text": "Creates a buffer over the specified number of contiguous bytes starting",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "at the given pointer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "start"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SV",
          "text": "UnsafeRawPointer"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "count"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(start:count:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(start:count:)",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/init(start:count:)"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/load(fromByteOffset:as:)": {
      "abstract": [
        {
          "text": "Returns a new instance of the given type, read from the buffer pointer’s",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "raw memory at the specified byte offset.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "load"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "fromByteOffset"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "as"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ".Type) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/load(fromByteOffset:as:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "load(fromByteOffset:as:)",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/load(frombyteoffset:as:)"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/loadUnaligned(fromByteOffset:as:)-2r9sy": {
      "abstract": [
        {
          "text": "Returns a new instance of the given type, constructed from the raw memory",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "at the specified offset.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "loadUnaligned"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "fromByteOffset"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "as"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ".Type) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/loadUnaligned(fromByteOffset:as:)-2r9sy",
      "kind": "symbol",
      "role": "symbol",
      "title": "loadUnaligned(fromByteOffset:as:)",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/loadunaligned(frombyteoffset:as:)-2r9sy"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/loadUnaligned(fromByteOffset:as:)-95fln": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "loadUnaligned"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "fromByteOffset"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "as"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ".Type) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/loadUnaligned(fromByteOffset:as:)-95fln",
      "kind": "symbol",
      "role": "symbol",
      "title": "loadUnaligned(fromByteOffset:as:)",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/loadunaligned(frombyteoffset:as:)-95fln"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/withMemoryRebound(to:_:)": {
      "abstract": [
        {
          "text": "Executes the given closure while temporarily binding the buffer to",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "instances of type ",
          "type": "text"
        },
        {
          "code": "T",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withMemoryRebound"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ".Type, ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SR",
          "text": "UnsafeBufferPointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/withMemoryRebound(to:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withMemoryRebound(to:_:)",
      "type": "topic",
      "url": "/documentation/swift/unsaferawbufferpointer/withmemoryrebound(to:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawPointer": {
      "abstract": [
        {
          "text": "A raw pointer for accessing untyped data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeRawPointer"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawPointer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeRawPointer"
        }
      ],
      "role": "symbol",
      "title": "UnsafeRawPointer",
      "type": "topic",
      "url": "/documentation/swift/unsaferawpointer"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicRepresentable": {
      "abstract": [
        {
          "text": "A type that supports atomic operations through a separate atomic storage",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AtomicRepresentable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicRepresentable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AtomicRepresentable"
        }
      ],
      "role": "symbol",
      "title": "AtomicRepresentable",
      "type": "topic",
      "url": "/documentation/synchronization/atomicrepresentable"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:10Foundation12DataProtocolP": {
      "abstract": [
        {
          "text": "A protocol that provides consistent data access to the bytes underlying contiguous and noncontiguous data buffers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "DataProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:10Foundation12DataProtocolP",
      "kind": "symbol",
      "role": "symbol",
      "title": "DataProtocol",
      "type": "topic",
      "url": "/documentation/foundation/dataprotocol"
    },
    "doc://com.externally.resolved.symbol/s:10Foundation15ContiguousBytesP": {
      "abstract": [
        {
          "text": "A protocol that declares the type offers direct access to the underlying raw bytes in a contiguous manner.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "ContiguousBytes"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:10Foundation15ContiguousBytesP",
      "kind": "symbol",
      "role": "symbol",
      "title": "ContiguousBytes",
      "type": "topic",
      "url": "/documentation/foundation/contiguousbytes"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Synchronization/AtomicRepresentable",
        "doc://com.apple.Swift/documentation/Swift/BidirectionalCollection",
        "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
        "doc://com.apple.Swift/documentation/Swift/Collection",
        "doc://com.externally.resolved.symbol/s:10Foundation15ContiguousBytesP",
        "doc://com.apple.Swift/documentation/Swift/Copyable",
        "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible",
        "doc://com.externally.resolved.symbol/s:10Foundation12DataProtocolP",
        "doc://com.apple.Swift/documentation/Swift/RandomAccessCollection",
        "doc://com.apple.Swift/documentation/Swift/Sequence"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Raw-Pointers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawPointer",
        "doc://com.apple.Swift/documentation/Swift/UnsafeMutableRawPointer",
        "doc://com.apple.Swift/documentation/Swift/UnsafeMutableRawBufferPointer"
      ],
      "title": "Raw Pointers"
    }
  ],
  "topicSections": [
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(_:)-24m35",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(_:)-5ko6n",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(_:)-9uv4",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(_:)-rrzw",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(rebasing:)-9mh4j",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(rebasing:)-9sxid",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/init(start:count:)"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/baseAddress"
      ],
      "title": "Instance Properties"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/assumingMemoryBound(to:)",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/bindMemory(to:)",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/deallocate()",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/load(fromByteOffset:as:)",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/loadUnaligned(fromByteOffset:as:)-2r9sy",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/loadUnaligned(fromByteOffset:as:)-95fln",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/withMemoryRebound(to:_:)"
      ],
      "title": "Instance Methods"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/AtomicRepresentable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/BidirectionalCollection-Implementations",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/Collection-Implementations",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/CustomDebugStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/RandomAccessCollection-Implementations",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawBufferPointer/Sequence-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/unsaferawbufferpointer"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
