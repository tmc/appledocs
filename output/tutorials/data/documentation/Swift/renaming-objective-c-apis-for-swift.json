{
  "abstract": [
    {
      "text": "Use the ",
      "type": "text"
    },
    {
      "code": "NS_SWIFT_NAME",
      "type": "codeVoice"
    },
    {
      "text": " macro to customize API names for Swift.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/renaming-objective-c-apis-for-swift"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Renaming Objective-C APIs for Swift"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If you want to import an Objective-C API into Swift with a different name, use the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "NS_SWIFT_NAME",
              "type": "codeVoice"
            },
            {
              "text": " macro. The macro preserves the Objective-C name for use with Objective-C",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "code, so the API has appropriate names in each language.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You apply the ",
              "type": "text"
            },
            {
              "code": "NS_SWIFT_NAME",
              "type": "codeVoice"
            },
            {
              "text": " macro to an individual type, method, or function declaration",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in Objective-C. After applying the macro, the name you use in your Swift code will",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "be what you’ve chosen by using the macro.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Rename-APIs",
          "level": 3,
          "text": "Rename APIs",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The example below renames a class and one of its properties:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "NS_SWIFT_NAME(Sandwich.Preferences)",
            "@interface SandwichPreferences : NSObject",
            "",
            "@property BOOL includesCrust NS_SWIFT_NAME(isCrusty);",
            "",
            "@end",
            "",
            "@interface Sandwich : NSObject",
            "@end"
          ],
          "syntax": "occ",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "SandwichPreferences",
              "type": "codeVoice"
            },
            {
              "text": " class and its ",
              "type": "text"
            },
            {
              "code": "includesCrust",
              "type": "codeVoice"
            },
            {
              "text": " property are renamed to ",
              "type": "text"
            },
            {
              "code": "Sandwich.Preferences",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and ",
              "type": "text"
            },
            {
              "code": "isCrusty",
              "type": "codeVoice"
            },
            {
              "text": " for Swift:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var preferences = Sandwich.Preferences()",
            "preferences.isCrusty = true"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "You use the ",
              "type": "text"
            },
            {
              "code": "NS_SWIFT_NAME",
              "type": "codeVoice"
            },
            {
              "text": " macro as a prefix for classes and protocols. For all",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "other kinds of declaration—such as properties, enumeration cases, and type aliases—you",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "use the macro as a suffix. The following example uses the macro as a suffix to rename",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "an enumeration:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "typedef NS_ENUM(NSInteger, SandwichBreadType) {",
            "    brioche, pumpernickel, pretzel, focaccia",
            "} NS_SWIFT_NAME(SandwichPreferences.BreadType);"
          ],
          "syntax": "occ",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/designating-nullability-in-objective-c-apis": {
      "abstract": [
        {
          "text": "Use nullability annotations or mark regions as annotated to control how Objective-C",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "declarations are imported into Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/designating-nullability-in-objective-c-apis",
      "kind": "article",
      "role": "article",
      "title": "Designating Nullability in Objective-C APIs",
      "type": "topic",
      "url": "/documentation/swift/designating-nullability-in-objective-c-apis"
    },
    "doc://com.apple.Swift/documentation/Swift/grouping-related-objective-c-constants": {
      "abstract": [
        {
          "text": "Add macros to your Objective-C types to group their values in Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/grouping-related-objective-c-constants",
      "kind": "article",
      "role": "article",
      "title": "Grouping Related Objective-C Constants",
      "type": "topic",
      "url": "/documentation/swift/grouping-related-objective-c-constants"
    },
    "doc://com.apple.Swift/documentation/Swift/improving-objective-c-api-declarations-for-swift": {
      "abstract": [
        {
          "text": "Use the ",
          "type": "text"
        },
        {
          "code": "NS_REFINED_FOR_SWIFT",
          "type": "codeVoice"
        },
        {
          "text": " macro to change how an API is imported into Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/improving-objective-c-api-declarations-for-swift",
      "kind": "article",
      "role": "article",
      "title": "Improving Objective-C API Declarations for Swift",
      "type": "topic",
      "url": "/documentation/swift/improving-objective-c-api-declarations-for-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/making-objective-c-apis-unavailable-in-swift": {
      "abstract": [
        {
          "text": "Use the ",
          "type": "text"
        },
        {
          "code": "NS_SWIFT_UNAVAILABLE",
          "type": "codeVoice"
        },
        {
          "text": " macro to prevent an API from being used in Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/making-objective-c-apis-unavailable-in-swift",
      "kind": "article",
      "role": "article",
      "title": "Making Objective-C APIs Unavailable in Swift",
      "type": "topic",
      "url": "/documentation/swift/making-objective-c-apis-unavailable-in-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/marking-api-availability-in-objective-c": {
      "abstract": [
        {
          "text": "Use ",
          "type": "text"
        },
        {
          "code": "a",
          "type": "codeVoice"
        },
        {
          "text": " macro to denote the availability of an Objective-C API.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/marking-api-availability-in-objective-c",
      "kind": "article",
      "role": "article",
      "title": "Marking API Availability in Objective-C",
      "type": "topic",
      "url": "/documentation/swift/marking-api-availability-in-objective-c"
    },
    "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization": {
      "abstract": [
        {
          "text": "Apply macros to your Objective-C APIs to customize how they’re imported into Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Objective-C and C Code Customization",
      "type": "topic",
      "url": "/documentation/swift/objective-c-and-c-code-customization"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Customizing-Objective-C-APIs",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/designating-nullability-in-objective-c-apis",
        "doc://com.apple.Swift/documentation/Swift/improving-objective-c-api-declarations-for-swift",
        "doc://com.apple.Swift/documentation/Swift/grouping-related-objective-c-constants",
        "doc://com.apple.Swift/documentation/Swift/marking-api-availability-in-objective-c",
        "doc://com.apple.Swift/documentation/Swift/making-objective-c-apis-unavailable-in-swift"
      ],
      "title": "Customizing Objective-C APIs"
    }
  ]
}
