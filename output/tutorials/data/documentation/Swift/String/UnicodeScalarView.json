{
  "abstract": [
    {
      "text": "A view of a string’s contents as a collection of Unicode scalar values.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/String"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Swift",
    "externalID": "s:SS17UnicodeScalarViewV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "UnicodeScalarView"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "UnicodeScalarView"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "String.UnicodeScalarView"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "UnicodeScalarView"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can access a string’s view of Unicode scalar values by using its",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "unicodeScalars",
              "type": "codeVoice"
            },
            {
              "text": " property. Unicode scalar values are the 21-bit codes",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that are the basic unit of Unicode. Each scalar value is represented by",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a ",
              "type": "text"
            },
            {
              "code": "Unicode.Scalar",
              "type": "codeVoice"
            },
            {
              "text": " instance and is equivalent to a UTF-32 code unit.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let flowers = \"Flowers 💐\"",
            "for v in flowers.unicodeScalars {",
            "    print(v.value)",
            "}",
            "// 70",
            "// 108",
            "// 111",
            "// 119",
            "// 101",
            "// 114",
            "// 115",
            "// 32",
            "// 128144"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Some characters that are visible in a string are made up of more than one",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Unicode scalar value. In that case, a string’s ",
              "type": "text"
            },
            {
              "code": "unicodeScalars",
              "type": "codeVoice"
            },
            {
              "text": " view",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "contains more elements than the string itself.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let flag = \"🇵🇷\"",
            "for c in flag {",
            "    print(c)",
            "}",
            "// 🇵🇷",
            "",
            "for v in flag.unicodeScalars {",
            "    print(v.value)",
            "}",
            "// 127477",
            "// 127479"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "You can convert a ",
              "type": "text"
            },
            {
              "code": "String.UnicodeScalarView",
              "type": "codeVoice"
            },
            {
              "text": " instance back into a string",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "using the ",
              "type": "text"
            },
            {
              "code": "String",
              "type": "codeVoice"
            },
            {
              "text": " type’s ",
              "type": "text"
            },
            {
              "code": "init(_:)",
              "type": "codeVoice"
            },
            {
              "text": " initializer.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let favemoji = \"My favorite emoji is 🎉\"",
            "if let i = favemoji.unicodeScalars.firstIndex(where: { $0.value >= 128 }) {",
            "    let asciiPrefix = String(favemoji.unicodeScalars[..<i])",
            "    print(asciiPrefix)",
            "}",
            "// Prints \"My favorite emoji is \""
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/BidirectionalCollection": {
      "abstract": [
        {
          "text": "A collection that supports backward as well as forward traversal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BidirectionalCollection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BidirectionalCollection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BidirectionalCollection"
        }
      ],
      "role": "symbol",
      "title": "BidirectionalCollection",
      "type": "topic",
      "url": "/documentation/swift/bidirectionalcollection"
    },
    "doc://com.apple.Swift/documentation/Swift/Collection": {
      "abstract": [
        {
          "text": "A sequence whose elements can be traversed multiple times,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "nondestructively, and accessed by an indexed subscript.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Collection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Collection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Collection"
        }
      ],
      "role": "symbol",
      "title": "Collection",
      "type": "topic",
      "url": "/documentation/swift/collection"
    },
    "doc://com.apple.Swift/documentation/Swift/Copyable": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Copyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/swift/copyable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customdebugstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomReflectable": {
      "abstract": [
        {
          "text": "A type that explicitly supplies its own mirror.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "role": "symbol",
      "title": "CustomReflectable",
      "type": "topic",
      "url": "/documentation/swift/customreflectable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/RangeReplaceableCollection": {
      "abstract": [
        {
          "text": "A collection that supports replacement of an arbitrary subrange of elements",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "with the elements of another collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RangeReplaceableCollection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RangeReplaceableCollection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RangeReplaceableCollection"
        }
      ],
      "role": "symbol",
      "title": "RangeReplaceableCollection",
      "type": "topic",
      "url": "/documentation/swift/rangereplaceablecollection"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.Swift/documentation/Swift/Sequence": {
      "abstract": [
        {
          "text": "A type that provides sequential, iterated access to its elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sequence"
        }
      ],
      "role": "symbol",
      "title": "Sequence",
      "type": "topic",
      "url": "/documentation/swift/sequence"
    },
    "doc://com.apple.Swift/documentation/Swift/String": {
      "abstract": [
        {
          "text": "A Unicode string value that is a collection of characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "String"
        }
      ],
      "role": "symbol",
      "title": "String",
      "type": "topic",
      "url": "/documentation/swift/string"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Encoding": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Encoding"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Encoding",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Encoding"
        }
      ],
      "role": "symbol",
      "title": "String.Encoding",
      "type": "topic",
      "url": "/documentation/swift/string/encoding"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Index": {
      "abstract": [
        {
          "text": "A position of a character or code unit in a string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Index"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Index",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Index"
        }
      ],
      "role": "symbol",
      "title": "String.Index",
      "type": "topic",
      "url": "/documentation/swift/string/index"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Iterator": {
      "abstract": [
        {
          "text": "A type that provides the collection’s iteration interface and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "encapsulates its iteration state.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Iterator"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Iterator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Iterator"
        }
      ],
      "role": "symbol",
      "title": "String.Iterator",
      "type": "topic",
      "url": "/documentation/swift/string/iterator"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UTF16View": {
      "abstract": [
        {
          "text": "A view of a string’s contents as a collection of UTF-16 code units.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UTF16View"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UTF16View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UTF16View"
        }
      ],
      "role": "symbol",
      "title": "String.UTF16View",
      "type": "topic",
      "url": "/documentation/swift/string/utf16view"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UTF8View": {
      "abstract": [
        {
          "text": "A view of a string’s contents as a collection of UTF-8 code units.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UTF8View"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UTF8View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UTF8View"
        }
      ],
      "role": "symbol",
      "title": "String.UTF8View",
      "type": "topic",
      "url": "/documentation/swift/string/utf8view"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView": {
      "abstract": [
        {
          "text": "A view of a string’s contents as a collection of Unicode scalar values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnicodeScalarView"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnicodeScalarView"
        }
      ],
      "role": "symbol",
      "title": "String.UnicodeScalarView",
      "type": "topic",
      "url": "/documentation/swift/string/unicodescalarview"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/BidirectionalCollection-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/BidirectionalCollection-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "BidirectionalCollection Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/unicodescalarview/bidirectionalcollection-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/Collection-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/Collection-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Collection Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/unicodescalarview/collection-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/CustomDebugStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/CustomDebugStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomDebugStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/unicodescalarview/customdebugstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/CustomReflectable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/CustomReflectable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomReflectable Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/unicodescalarview/customreflectable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/CustomStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/CustomStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/unicodescalarview/customstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/RangeReplaceableCollection-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/RangeReplaceableCollection-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "RangeReplaceableCollection Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/unicodescalarview/rangereplaceablecollection-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/Sequence-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/Sequence-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Sequence Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/unicodescalarview/sequence-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/customPlaygroundQuickLook": {
      "abstract": [
        {
          "text": "A custom playground Quick Look for this instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "customPlaygroundQuickLook"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "_PlaygroundQuickLook"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/customPlaygroundQuickLook",
      "kind": "symbol",
      "role": "symbol",
      "title": "customPlaygroundQuickLook",
      "type": "topic",
      "url": "/documentation/swift/string/unicodescalarview/customplaygroundquicklook"
    },
    "doc://com.apple.Swift/documentation/Swift/StringProtocol": {
      "abstract": [
        {
          "text": "A type that can represent a string as a collection of characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "StringProtocol"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StringProtocol",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StringProtocol"
        }
      ],
      "role": "symbol",
      "title": "StringProtocol",
      "type": "topic",
      "url": "/documentation/swift/stringprotocol"
    },
    "doc://com.apple.Swift/documentation/Swift/Substring": {
      "abstract": [
        {
          "text": "A slice of a string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Substring"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Substring",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Substring"
        }
      ],
      "role": "symbol",
      "title": "Substring",
      "type": "topic",
      "url": "/documentation/swift/substring"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BidirectionalCollection",
        "doc://com.apple.Swift/documentation/Swift/Collection",
        "doc://com.apple.Swift/documentation/Swift/Copyable",
        "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible",
        "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
        "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
        "doc://com.apple.Swift/documentation/Swift/RangeReplaceableCollection",
        "doc://com.apple.Swift/documentation/Swift/Sendable",
        "doc://com.apple.Swift/documentation/Swift/Sequence"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Related-String-Types",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Substring",
        "doc://com.apple.Swift/documentation/Swift/StringProtocol",
        "doc://com.apple.Swift/documentation/Swift/String/Index",
        "doc://com.apple.Swift/documentation/Swift/String/UTF16View",
        "doc://com.apple.Swift/documentation/Swift/String/UTF8View",
        "doc://com.apple.Swift/documentation/Swift/String/Iterator",
        "doc://com.apple.Swift/documentation/Swift/String/Encoding"
      ],
      "title": "Related String Types"
    }
  ],
  "topicSections": [
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/customPlaygroundQuickLook"
      ],
      "title": "Instance Properties"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/BidirectionalCollection-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/Collection-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/CustomDebugStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/CustomReflectable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/CustomStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/RangeReplaceableCollection-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView/Sequence-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/string/unicodescalarview"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
