{
  "abstract": [
    {
      "text": "Configure the current task hierarchy’s task executor preference to the passed ",
      "type": "text"
    },
    {
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskExecutor",
      "isActive": true,
      "type": "reference"
    },
    {
      "text": ",",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "and execute the passed in closure by immediately hopping to that executor.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/withTaskExecutorPreference(_:isolation:operation:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:12_Concurrency26withTaskExecutorPreference_9isolation9operationxSch_pSg_ScA_pSgYixyYaq_YKXEtYaq_YKs5ErrorR_r0_lF",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "withTaskExecutorPreference"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "T"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "genericParameter",
        "text": "Failure"
      },
      {
        "kind": "text",
        "text": ">((any "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sch",
        "text": "TaskExecutor"
      },
      {
        "kind": "text",
        "text": ")?, "
      },
      {
        "kind": "externalParam",
        "text": "isolation"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "keyword",
        "text": "isolated"
      },
      {
        "kind": "text",
        "text": " (any "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:ScA",
        "text": "Actor"
      },
      {
        "kind": "text",
        "text": ")?, "
      },
      {
        "kind": "externalParam",
        "text": "operation"
      },
      {
        "kind": "text",
        "text": ": () "
      },
      {
        "kind": "keyword",
        "text": "async"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "typeIdentifier",
        "text": "Failure"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "T"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "async"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "typeIdentifier",
        "text": "Failure"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "T"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "11.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Function",
    "symbolKind": "func",
    "title": "withTaskExecutorPreference(_:isolation:operation:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "withTaskExecutorPreference"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "T"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "Failure"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "taskExecutor"
            },
            {
              "kind": "text",
              "text": ": (any "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/TaskExecutor",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sch",
              "text": "TaskExecutor"
            },
            {
              "kind": "text",
              "text": ")?, "
            },
            {
              "kind": "externalParam",
              "text": "isolation"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "isolated"
            },
            {
              "kind": "text",
              "text": " (any "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Actor",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:ScA",
              "text": "Actor"
            },
            {
              "kind": "text",
              "text": ")? = #isolation, "
            },
            {
              "kind": "externalParam",
              "text": "operation"
            },
            {
              "kind": "text",
              "text": ": () "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "text": "Failure"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "T"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "text": "Failure"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "T"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Failure"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Error",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s5ErrorP",
              "text": "Error"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The executor to use as preferred task executor for this",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "operation, and any child tasks created inside the ",
                  "type": "text"
                },
                {
                  "code": "operation",
                  "type": "codeVoice"
                },
                {
                  "text": " closure.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "If ",
                  "type": "text"
                },
                {
                  "code": "nil",
                  "type": "codeVoice"
                },
                {
                  "text": " it is interpreted as “no preference” and calling this method",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "will have no impact on execution semantics of the ",
                  "type": "text"
                },
                {
                  "code": "operation",
                  "type": "codeVoice"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "taskExecutor"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The operation to execute on the passed executor",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "operation"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The value returned from the ",
              "type": "text"
            },
            {
              "code": "operation",
              "type": "codeVoice"
            },
            {
              "text": " closure",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "Task-executor-preference-semantics",
          "level": 3,
          "text": "Task executor preference semantics",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Task executors influence ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "where",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " nonisolated asynchronous functions, and default actor methods execute.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The preferred executor will be used whenever possible, rather than hopping to the global concurrent pool.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For an in depth discussion of this topic, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/TaskExecutor",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Disabling-task-executor-preference",
          "level": 3,
          "text": "Disabling task executor preference",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Passing ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " as executor means disabling any preference preference (if it was set) and the task hierarchy",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "will execute without any executor preference until a different preference is set.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Asynchronous-function-execution-semantics-in-presence-of-task-executor-preferences",
          "level": 3,
          "text": "Asynchronous function execution semantics in presence of task executor preferences",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The following diagram illustrates on which executor an ",
              "type": "text"
            },
            {
              "code": "async",
              "type": "codeVoice"
            },
            {
              "text": " function will",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "execute, in presence (or lack thereof) a task executor preference.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "[ func / closure ] - /* where should it execute? */",
            "                              |",
            "                    +--------------+          +===========================+",
            "          +-------- | is isolated? | - yes -> | actor has unownedExecutor |",
            "          |         +--------------+          +===========================+",
            "          |                                       |                |",
            "          |                                      yes               no",
            "          |                                       |                |",
            "          |                                       v                v",
            "          |                  +=======================+    /* task executor preference? */",
            "          |                  | on specified executor |        |                   |",
            "          |                  +=======================+       yes                  no",
            "          |                                                   |                   |",
            "          |                                                   |                   v",
            "          |                                                   |    +==========================+",
            "          |                                                   |    | default (actor) executor |",
            "          |                                                   v    +==========================+",
            "          v                                     +==============================+",
            " /* task executor preference? */ ---- yes ----> | on Task's preferred executor |",
            "          |                                     +==============================+",
            "          no",
            "          |",
            "          v",
            " +===============================+",
            " | on global concurrent executor |",
            " +===============================+"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "In short, without a task executor preference, ",
              "type": "text"
            },
            {
              "code": "nonisolated async",
              "type": "codeVoice"
            },
            {
              "text": " functions",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "will execute on the global concurrent executor. If a task executor preference",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is present, such ",
              "type": "text"
            },
            {
              "code": "nonisolated async",
              "type": "codeVoice"
            },
            {
              "text": " functions will execute on the preferred",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "task executor.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Isolated functions semantically execute on the actor they are isolated to,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "however if such actor does not declare a custom executor (it is a “default",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "actor”) in presence of a task executor preference, tasks executing on this",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "actor will use the preferred executor as source of threads to run the task,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "while isolated on the actor.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Example",
          "level": 3,
          "text": "Example",
          "type": "heading"
        },
        {
          "code": [
            "Task {",
            "  // case 0) \"no task executor preference\"",
            "",
            "  // default task executor",
            "  // ...",
            "  await SomeDefaultActor().hello() // default executor",
            "  await ActorWithCustomExecutor().hello() // 'hello' executes on actor's custom executor",
            "",
            "  // child tasks execute on default executor:",
            "  async let x = ...",
            "  await withTaskGroup(of: Int.self) { group in g.addTask { 7 } }",
            "",
            "  await withTaskExecutorPreference(specific) {",
            "    // case 1) 'specific' task executor preference",
            "",
            "    // 'specific' task executor",
            "    // ...",
            "    await SomeDefaultActor().hello() // 'hello' executes on 'specific' executor",
            "    await ActorWithCustomExecutor().hello() // 'hello' executes on actor's custom executor (same as case 0)",
            "",
            "    // child tasks execute on 'specific' task executor:",
            "    async let x = ...",
            "    await withTaskGroup(of: Int.self) { group in",
            "      group.addTask { 7 } // child task executes on 'specific' executor",
            "      group.addTask(executorPreference: globalConcurrentExecutor) { 13 } // child task executes on global concurrent executor",
            "    }",
            "",
            "    // disable the task executor preference:",
            "    await withTaskExecutorPreference(globalConcurrentExecutor) {",
            "      // equivalent to case 0) preference is globalConcurrentExecutor",
            "",
            "      // default task executor",
            "      // ...",
            "      await SomeDefaultActor().hello() // default executor (same as case 0)",
            "      await ActorWithCustomExecutor().hello() // 'hello' executes on actor's custom executor (same as case 0)",
            "",
            "      // child tasks execute on default executor (same as case 0):",
            "      async let x = ...",
            "      await withTaskGroup(of: Int.self) { group in g.addTask { 7 } }",
            "    }",
            "  }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "If the operation closure throws",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Throws",
          "style": "note",
          "type": "aside"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.Swift/documentation/Swift/TaskExecutor",
                  "isActive": true,
                  "type": "reference"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "See Also",
          "style": "note",
          "type": "aside"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Actor": {
      "abstract": [
        {
          "text": "Common protocol to which all actors conform.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Actor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Actor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Actor"
        }
      ],
      "role": "symbol",
      "title": "Actor",
      "type": "topic",
      "url": "/documentation/swift/actor"
    },
    "doc://com.apple.Swift/documentation/Swift/Error": {
      "abstract": [
        {
          "text": "A type representing an error value that can be thrown.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Error"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Error",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Error"
        }
      ],
      "role": "symbol",
      "title": "Error",
      "type": "topic",
      "url": "/documentation/swift/error"
    },
    "doc://com.apple.Swift/documentation/Swift/Executor": {
      "abstract": [
        {
          "text": "A service that can execute jobs.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Executor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Executor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Executor"
        }
      ],
      "role": "symbol",
      "title": "Executor",
      "type": "topic",
      "url": "/documentation/swift/executor"
    },
    "doc://com.apple.Swift/documentation/Swift/ExecutorJob": {
      "abstract": [
        {
          "text": "A unit of schedulable work.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExecutorJob"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExecutorJob",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExecutorJob"
        }
      ],
      "role": "symbol",
      "title": "ExecutorJob",
      "type": "topic",
      "url": "/documentation/swift/executorjob"
    },
    "doc://com.apple.Swift/documentation/Swift/JobPriority": {
      "abstract": [
        {
          "text": "The priority of this job.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "JobPriority"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/JobPriority",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "JobPriority"
        }
      ],
      "role": "symbol",
      "title": "JobPriority",
      "type": "topic",
      "url": "/documentation/swift/jobpriority"
    },
    "doc://com.apple.Swift/documentation/Swift/PartialAsyncTask": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PartialAsyncTask"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/PartialAsyncTask",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PartialAsyncTask"
        }
      ],
      "role": "symbol",
      "title": "PartialAsyncTask",
      "type": "topic",
      "url": "/documentation/swift/partialasynctask"
    },
    "doc://com.apple.Swift/documentation/Swift/SerialExecutor": {
      "abstract": [
        {
          "text": "A service that executes jobs.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SerialExecutor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SerialExecutor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SerialExecutor"
        }
      ],
      "role": "symbol",
      "title": "SerialExecutor",
      "type": "topic",
      "url": "/documentation/swift/serialexecutor"
    },
    "doc://com.apple.Swift/documentation/Swift/TaskExecutor": {
      "abstract": [
        {
          "text": "An executor that may be used as preferred executor by a task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TaskExecutor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskExecutor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TaskExecutor"
        }
      ],
      "role": "symbol",
      "title": "TaskExecutor",
      "type": "topic",
      "url": "/documentation/swift/taskexecutor"
    },
    "doc://com.apple.Swift/documentation/Swift/UnownedJob": {
      "abstract": [
        {
          "text": "A unit of schedulable work.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnownedJob"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnownedJob",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnownedJob"
        }
      ],
      "role": "symbol",
      "title": "UnownedJob",
      "type": "topic",
      "url": "/documentation/swift/unownedjob"
    },
    "doc://com.apple.Swift/documentation/Swift/UnownedSerialExecutor": {
      "abstract": [
        {
          "text": "An unowned reference to a serial executor (a ",
          "type": "text"
        },
        {
          "code": "SerialExecutor",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnownedSerialExecutor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnownedSerialExecutor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnownedSerialExecutor"
        }
      ],
      "role": "symbol",
      "title": "UnownedSerialExecutor",
      "type": "topic",
      "url": "/documentation/swift/unownedserialexecutor"
    },
    "doc://com.apple.Swift/documentation/Swift/UnownedTaskExecutor": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnownedTaskExecutor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnownedTaskExecutor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnownedTaskExecutor"
        }
      ],
      "role": "symbol",
      "title": "UnownedTaskExecutor",
      "type": "topic",
      "url": "/documentation/swift/unownedtaskexecutor"
    },
    "doc://com.apple.Swift/documentation/Swift/globalConcurrentExecutor": {
      "abstract": [
        {
          "text": "The global concurrent executor that is used by default for Swift Concurrency",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "globalConcurrentExecutor"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sch",
          "text": "TaskExecutor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/globalConcurrentExecutor",
      "kind": "symbol",
      "role": "symbol",
      "title": "globalConcurrentExecutor",
      "type": "topic",
      "url": "/documentation/swift/globalconcurrentexecutor"
    },
    "doc://com.apple.Swift/documentation/Swift/withTaskExecutorPreference(_:isolation:operation:)": {
      "abstract": [
        {
          "text": "Configure the current task hierarchy’s task executor preference to the passed ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.Swift/documentation/Swift/TaskExecutor",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ",",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and execute the passed in closure by immediately hopping to that executor.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withTaskExecutorPreference"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Failure"
        },
        {
          "kind": "text",
          "text": ">((any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sch",
          "text": "TaskExecutor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "operation"
        },
        {
          "kind": "text",
          "text": ": () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Failure"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Failure"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withTaskExecutorPreference(_:isolation:operation:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withTaskExecutorPreference(_:isolation:operation:)",
      "type": "topic",
      "url": "/documentation/swift/withtaskexecutorpreference(_:isolation:operation:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Executors",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Executor",
        "doc://com.apple.Swift/documentation/Swift/ExecutorJob",
        "doc://com.apple.Swift/documentation/Swift/SerialExecutor",
        "doc://com.apple.Swift/documentation/Swift/TaskExecutor",
        "doc://com.apple.Swift/documentation/Swift/PartialAsyncTask",
        "doc://com.apple.Swift/documentation/Swift/UnownedJob",
        "doc://com.apple.Swift/documentation/Swift/JobPriority",
        "doc://com.apple.Swift/documentation/Swift/UnownedSerialExecutor",
        "doc://com.apple.Swift/documentation/Swift/UnownedTaskExecutor",
        "doc://com.apple.Swift/documentation/Swift/globalConcurrentExecutor"
      ],
      "title": "Executors"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/withtaskexecutorpreference(_:isolation:operation:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
