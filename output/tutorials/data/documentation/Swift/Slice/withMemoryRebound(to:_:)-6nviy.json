{
  "abstract": [
    {
      "text": "Executes the given closure while temporarily binding the memory referenced",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "by this buffer slice to the given type.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/Slice"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/Slice/withMemoryRebound(to:_:)-6nviy"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "conformance": {
      "availabilityPrefix": [
        {
          "text": "Available when",
          "type": "text"
        }
      ],
      "conformancePrefix": [
        {
          "text": "Conforms when",
          "type": "text"
        }
      ],
      "constraints": [
        {
          "code": "Base",
          "type": "codeVoice"
        },
        {
          "text": " conforms to ",
          "type": "text"
        },
        {
          "code": "Collection",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ]
    },
    "extendedModule": "Swift",
    "externalID": "s:s5SliceV17withMemoryRebound2to_qd_0_qd__m_qd_0_SRyqd__GKXEtKSRyqd_1_GRszr1_lF",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "withMemoryRebound"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "T"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "genericParameter",
        "text": "Result"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "genericParameter",
        "text": "Element"
      },
      {
        "kind": "text",
        "text": ">("
      },
      {
        "kind": "externalParam",
        "text": "to"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "text": "T"
      },
      {
        "kind": "text",
        "text": ".Type, ("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:SR",
        "text": "UnsafeBufferPointer"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "text": "T"
      },
      {
        "kind": "text",
        "text": ">) "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "Result"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "rethrows"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "Result"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "withMemoryRebound(to:_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "withMemoryRebound"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "T"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "Result"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "genericParameter",
              "text": "Element"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "to"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "type"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "text": "T"
            },
            {
              "kind": "text",
              "text": ".Type, "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "body"
            },
            {
              "kind": "text",
              "text": ": ("
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeBufferPointer",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SR",
              "text": "UnsafeBufferPointer"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "text": "T"
            },
            {
              "kind": "text",
              "text": ">) "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "Result"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "rethrows"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "Result"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Base"
            },
            {
              "kind": "text",
              "text": " == "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeBufferPointer",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SR",
              "text": "UnsafeBufferPointer"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "text": "Element"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The type to temporarily bind the memory referenced by this",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "buffer slice. The type ",
                  "type": "text"
                },
                {
                  "code": "T",
                  "type": "codeVoice"
                },
                {
                  "text": " must be layout compatible",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "with the pointer’s ",
                  "type": "text"
                },
                {
                  "code": "Element",
                  "type": "codeVoice"
                },
                {
                  "text": " type.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "type"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A closure that takes a typed buffer to the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "same memory as this buffer slice, only bound to type ",
                  "type": "text"
                },
                {
                  "code": "T",
                  "type": "codeVoice"
                },
                {
                  "text": ". The buffer",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "parameter contains a number of complete instances of ",
                  "type": "text"
                },
                {
                  "code": "T",
                  "type": "codeVoice"
                },
                {
                  "text": " based",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "on the capacity of the original buffer and the stride of ",
                  "type": "text"
                },
                {
                  "code": "Element",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "The closure’s buffer argument is valid only for the duration of the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "closure’s execution. If ",
                  "type": "text"
                },
                {
                  "code": "body",
                  "type": "codeVoice"
                },
                {
                  "text": " has a return value, that value",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "is also used as the return value for the ",
                  "type": "text"
                },
                {
                  "code": "withMemoryRebound(to:_:)",
                  "type": "codeVoice"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "method.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "body"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The return value, if any, of the ",
              "type": "text"
            },
            {
              "code": "body",
              "type": "codeVoice"
            },
            {
              "text": " closure parameter.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use this method when you have a buffer slice of memory bound to one type",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and you need to access that memory as a buffer of another type. Accessing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "memory as type ",
              "type": "text"
            },
            {
              "code": "T",
              "type": "codeVoice"
            },
            {
              "text": " requires that the memory be bound to that type. A",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "memory location may only be bound to one type at a time, so accessing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the same memory as an unrelated type without first rebinding the memory",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is undefined.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The number of instances of ",
              "type": "text"
            },
            {
              "code": "T",
              "type": "codeVoice"
            },
            {
              "text": " referenced by the rebound buffer may be",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "different than the number of instances of ",
              "type": "text"
            },
            {
              "code": "Element",
              "type": "codeVoice"
            },
            {
              "text": " referenced by the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "original buffer slice. The number of instances of ",
              "type": "text"
            },
            {
              "code": "T",
              "type": "codeVoice"
            },
            {
              "text": " will be calculated",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "at runtime.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Any instance of ",
              "type": "text"
            },
            {
              "code": "T",
              "type": "codeVoice"
            },
            {
              "text": " within the re-bound region may be initialized or",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "uninitialized. Every instance of ",
              "type": "text"
            },
            {
              "code": "Pointee",
              "type": "codeVoice"
            },
            {
              "text": " overlapping with a given",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instance of ",
              "type": "text"
            },
            {
              "code": "T",
              "type": "codeVoice"
            },
            {
              "text": " should have the same initialization state (i.e.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "initialized or uninitialized.) Accessing a ",
              "type": "text"
            },
            {
              "code": "T",
              "type": "codeVoice"
            },
            {
              "text": " whose underlying",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "Pointee",
              "type": "codeVoice"
            },
            {
              "text": " storage is in a mixed initialization state shall be",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "undefined behaviour.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Because this range of memory is no longer bound to its ",
              "type": "text"
            },
            {
              "code": "Element",
              "type": "codeVoice"
            },
            {
              "text": " type",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "while the ",
              "type": "text"
            },
            {
              "code": "body",
              "type": "codeVoice"
            },
            {
              "text": " closure executes, do not access memory using the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "original buffer slice from within ",
              "type": "text"
            },
            {
              "code": "body",
              "type": "codeVoice"
            },
            {
              "text": ". Instead,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "use the ",
              "type": "text"
            },
            {
              "code": "body",
              "type": "codeVoice"
            },
            {
              "text": " closure’s buffer argument to access the values",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in memory as instances of type ",
              "type": "text"
            },
            {
              "code": "T",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "After executing ",
              "type": "text"
            },
            {
              "code": "body",
              "type": "codeVoice"
            },
            {
              "text": ", this method rebinds memory back to the original",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "Element",
              "type": "codeVoice"
            },
            {
              "text": " type.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Only use this method to rebind the buffer slice’s memory to a type",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "that is layout compatible with the currently bound ",
                  "type": "text"
                },
                {
                  "code": "Element",
                  "type": "codeVoice"
                },
                {
                  "text": " type.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "The stride of the temporary type (",
                  "type": "text"
                },
                {
                  "code": "T",
                  "type": "codeVoice"
                },
                {
                  "text": ") may be an integer multiple",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "or a whole fraction of ",
                  "type": "text"
                },
                {
                  "code": "Element",
                  "type": "codeVoice"
                },
                {
                  "text": "’s stride.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "To bind a region of memory to a type that does not match these",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "requirements, convert the buffer to a raw buffer and use the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "code": "withMemoryRebound(to:)",
                  "type": "codeVoice"
                },
                {
                  "text": " method on the raw buffer.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "If ",
                  "type": "text"
                },
                {
                  "code": "T",
                  "type": "codeVoice"
                },
                {
                  "text": " and ",
                  "type": "text"
                },
                {
                  "code": "Element",
                  "type": "codeVoice"
                },
                {
                  "text": " have different alignments, this buffer slice",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "must be aligned with the larger of the two alignments.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Slice": {
      "abstract": [
        {
          "text": "A view into a subsequence of elements of another collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Slice"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Slice",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Slice"
        }
      ],
      "role": "symbol",
      "title": "Slice",
      "type": "topic",
      "url": "/documentation/swift/slice"
    },
    "doc://com.apple.Swift/documentation/Swift/Slice/withMemoryRebound(to:_:)-6nviy": {
      "abstract": [
        {
          "text": "Executes the given closure while temporarily binding the memory referenced",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "by this buffer slice to the given type.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Base",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Collection",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withMemoryRebound"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ".Type, ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SR",
          "text": "UnsafeBufferPointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Slice/withMemoryRebound(to:_:)-6nviy",
      "kind": "symbol",
      "role": "symbol",
      "title": "withMemoryRebound(to:_:)",
      "type": "topic",
      "url": "/documentation/swift/slice/withmemoryrebound(to:_:)-6nviy"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeBufferPointer": {
      "abstract": [
        {
          "text": "A nonowning collection interface to a buffer of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements stored contiguously in memory.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeBufferPointer"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeBufferPointer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeBufferPointer"
        }
      ],
      "role": "symbol",
      "title": "UnsafeBufferPointer",
      "type": "topic",
      "url": "/documentation/swift/unsafebufferpointer"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/swift/slice/withmemoryrebound(to:_:)-6nviy"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
