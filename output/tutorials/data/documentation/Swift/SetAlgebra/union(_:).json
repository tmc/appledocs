{"hierarchy":{"paths":[["doc://com.apple.documentation/documentation/technologies","doc://com.apple.Swift/documentation/Swift","doc://com.apple.Swift/documentation/Swift/SetAlgebra"]]},"identifier":{"interfaceLanguage":"swift","url":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/union(_:)"},"kind":"symbol","metadata":{"externalID":"s:s10SetAlgebraP5unionyxxnF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"union"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"roleHeading":"Instance Method","required":true,"role":"symbol","modules":[{"name":"Swift"}],"platforms":[{"beta":false,"unavailable":false,"deprecated":false,"introducedAt":"8.0","name":"iOS"},{"beta":false,"unavailable":false,"deprecated":false,"introducedAt":"8.0","name":"iPadOS"},{"beta":false,"unavailable":false,"deprecated":false,"introducedAt":"13.0","name":"Mac Catalyst"},{"beta":false,"unavailable":false,"deprecated":false,"introducedAt":"10.10","name":"macOS"},{"beta":false,"unavailable":false,"deprecated":false,"introducedAt":"9.0","name":"tvOS"},{"beta":false,"unavailable":false,"deprecated":false,"introducedAt":"1.0","name":"visionOS"},{"beta":false,"unavailable":false,"deprecated":false,"introducedAt":"2.0","name":"watchOS"}],"title":"union(_:)","symbolKind":"method"},"abstract":[{"type":"text","text":"Returns a new set with the elements of both this and the given set."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"union"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"platforms":["iOS","iPadOS","Mac Catalyst","macOS","tvOS","visionOS","watchOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"A set of the same type as the current set.","type":"text"}],"type":"paragraph"}],"name":"other"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A new set with the unique elements of this set and "},{"type":"codeVoice","code":"other"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"In the following example, the ","type":"text"},{"code":"attendeesAndVisitors","type":"codeVoice"},{"text":" set is made up","type":"text"},{"text":" ","type":"text"},{"text":"of the elements of the ","type":"text"},{"code":"attendees","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"visitors","type":"codeVoice"},{"text":" sets:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let attendees: Set = [\"Alicia\", \"Bethany\", \"Diana\"]","let visitors = [\"Marcia\", \"Nathaniel\"]","let attendeesAndVisitors = attendees.union(visitors)","print(attendeesAndVisitors)","// Prints \"[\"Diana\", \"Nathaniel\", \"Bethany\", \"Alicia\", \"Marcia\"]\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the set already contains one or more elements that are also in"},{"type":"text","text":" "},{"type":"codeVoice","code":"other"},{"type":"text","text":", the existing members are kept."}]},{"syntax":"swift","type":"codeListing","code":["let initialIndices = Set(0..<5)","let expandedIndices = initialIndices.union([2, 3, 6, 7])","print(expandedIndices)","// Prints \"[2, 4, 6, 7, 0, 1, 3]\""]},{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If this set and "},{"type":"codeVoice","code":"other"},{"type":"text","text":" contain elements that are equal but"},{"type":"text","text":" "},{"type":"text","text":"distinguishable (e.g. via "},{"type":"codeVoice","code":"==="},{"type":"text","text":"), which of these elements is present"},{"type":"text","text":" "},{"type":"text","text":"in the result is unspecified."}]}],"style":"note"}]}],"defaultImplementationsSections":[{"title":"SetAlgebra Implementations","identifiers":["doc://com.apple.Swift/documentation/Swift/SetAlgebra/union(_:)-7mfo6"],"anchor":"SetAlgebra-Implementations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["/documentation/swift/setalgebra/union(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"generated":true,"title":"Combining Sets","identifiers":["doc://com.apple.Swift/documentation/Swift/SetAlgebra/formUnion(_:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/intersection(_:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/formIntersection(_:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/symmetricDifference(_:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/formSymmetricDifference(_:)"],"anchor":"Combining-Sets"}],"references":{"doc://com.apple.Swift/documentation/Swift/SetAlgebra/formUnion(_:)":{"type":"topic","kind":"symbol","defaultImplementations":1,"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/formUnion(_:)","abstract":[{"type":"text","text":"Adds the elements of the given set to the set."}],"url":"/documentation/swift/setalgebra/formunion(_:)","title":"formUnion(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formUnion","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"required":true},"doc://com.apple.documentation/documentation/technologies":{"abstract":[{"text":"","type":"text"}],"type":"topic","role":"overview","title":"Technologies","identifier":"doc://com.apple.documentation/documentation/technologies","url":"/documentation/technologies","kind":"technologies"},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/union(_:)-7mfo6":{"kind":"symbol","abstract":[{"type":"text","text":"Returns a new option set of the elements contained in this set, in the"},{"type":"text","text":" "},{"type":"text","text":"given set, or in both."}],"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/union(_:)-7mfo6","url":"/documentation/swift/setalgebra/union(_:)-7mfo6","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"union","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","title":"union(_:)","type":"topic"},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/intersection(_:)":{"defaultImplementations":1,"url":"/documentation/swift/setalgebra/intersection(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"intersection","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a new set with the elements that are common to both this set and"},{"type":"text","text":" "},{"type":"text","text":"the given set."}],"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/intersection(_:)","role":"symbol","required":true,"kind":"symbol","title":"intersection(_:)","type":"topic"},"doc://com.apple.Swift/documentation/Swift":{"abstract":[{"text":"Build apps using a powerful open language.","type":"text"}],"type":"topic","role":"collection","title":"Swift","identifier":"doc://com.apple.Swift/documentation/Swift","url":"/documentation/swift","kind":"symbol","images":[{"identifier":"Swift-PageImage-card.png","type":"card"}]},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/formSymmetricDifference(_:)":{"title":"formSymmetricDifference(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formSymmetricDifference","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"/documentation/swift/setalgebra/formsymmetricdifference(_:)","kind":"symbol","defaultImplementations":1,"role":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/formSymmetricDifference(_:)","required":true,"abstract":[{"text":"Removes the elements of the set that are also in the given set and adds","type":"text"},{"text":" ","type":"text"},{"text":"the members of the given set that are not already in the set.","type":"text"}]},"Swift-PageImage-card.png":{"identifier":"Swift-PageImage-card.png","type":"image","alt":"An orange Swift logo on a gradient background.","variants":[{"traits":["2x","light"],"url":"https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"},{"traits":["2x","dark"],"url":"https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"}]},"doc://com.apple.Swift/documentation/Swift/SetAlgebra":{"type":"topic","kind":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra","abstract":[{"text":"A type that provides mathematical set operations.","type":"text"}],"navigatorTitle":[{"text":"SetAlgebra","kind":"identifier"}],"url":"/documentation/swift/setalgebra","title":"SetAlgebra","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SetAlgebra","kind":"identifier"}]},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/formIntersection(_:)":{"title":"formIntersection(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formIntersection"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"type":"topic","url":"/documentation/swift/setalgebra/formintersection(_:)","kind":"symbol","defaultImplementations":1,"role":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/formIntersection(_:)","required":true,"abstract":[{"type":"text","text":"Removes the elements of this set that aren’t also in the given set."}]},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/symmetricDifference(_:)":{"title":"symmetricDifference(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"symmetricDifference"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","url":"/documentation/swift/setalgebra/symmetricdifference(_:)","kind":"symbol","defaultImplementations":1,"role":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/symmetricDifference(_:)","required":true,"abstract":[{"type":"text","text":"Returns a new set with the elements that are either in this set or in the"},{"type":"text","text":" "},{"type":"text","text":"given set, but not in both."}]},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/union(_:)":{"type":"topic","kind":"symbol","defaultImplementations":1,"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/union(_:)","abstract":[{"type":"text","text":"Returns a new set with the elements of both this and the given set."}],"url":"/documentation/swift/setalgebra/union(_:)","title":"union(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"union"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"required":true}},"legalNotices":{"copyright":"Copyright &copy; 2025 Apple Inc. All rights reserved.","termsOfUse":"https://www.apple.com/legal/internet-services/terms/site.html","privacyPolicy":"https://www.apple.com/privacy/privacy-policy"}}