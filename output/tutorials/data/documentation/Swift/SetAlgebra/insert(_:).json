{
  "abstract": [
    {
      "text": "Inserts the given element in the set if it is not already present.",
      "type": "text"
    }
  ],
  "defaultImplementationsSections": [
    {
      "anchor": "SetAlgebra-Implementations",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/SetAlgebra/insert(_:)-9wohp"
      ],
      "title": "SetAlgebra Implementations"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/SetAlgebra"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/SetAlgebra/insert(_:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:s10SetAlgebraP6insertySb8inserted_7ElementQz17memberAfterInserttAFnF",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "insert"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s10SetAlgebraP7ElementQa",
        "text": "Element"
      },
      {
        "kind": "text",
        "text": ") -> (inserted"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sb",
        "text": "Bool"
      },
      {
        "kind": "text",
        "text": ", memberAfterInsert"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s10SetAlgebraP7ElementQa",
        "text": "Element"
      },
      {
        "kind": "text",
        "text": ")"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "required": true,
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "insert(_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@discardableResult"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "mutating"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "insert"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "newMember"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/SetAlgebra/Element",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s10SetAlgebraP7ElementQa",
              "text": "Element"
            },
            {
              "kind": "text",
              "text": ") -> (inserted"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": ", memberAfterInsert"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/SetAlgebra/Element",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s10SetAlgebraP7ElementQa",
              "text": "Element"
            },
            {
              "kind": "text",
              "text": ")"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "An element to insert into the set.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "newMember"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "",
              "type": "text"
            },
            {
              "code": "(true, newMember)",
              "type": "codeVoice"
            },
            {
              "text": " if ",
              "type": "text"
            },
            {
              "code": "newMember",
              "type": "codeVoice"
            },
            {
              "text": " was not contained in the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "set. If an element equal to ",
              "type": "text"
            },
            {
              "code": "newMember",
              "type": "codeVoice"
            },
            {
              "text": " was already contained in the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "set, the method returns ",
              "type": "text"
            },
            {
              "code": "(false, oldMember)",
              "type": "codeVoice"
            },
            {
              "text": ", where ",
              "type": "text"
            },
            {
              "code": "oldMember",
              "type": "codeVoice"
            },
            {
              "text": " is the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "element that was equal to ",
              "type": "text"
            },
            {
              "code": "newMember",
              "type": "codeVoice"
            },
            {
              "text": ". In some cases, ",
              "type": "text"
            },
            {
              "code": "oldMember",
              "type": "codeVoice"
            },
            {
              "text": " may",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "be distinguishable from ",
              "type": "text"
            },
            {
              "code": "newMember",
              "type": "codeVoice"
            },
            {
              "text": " by identity comparison or some",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "other means.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If an element equal to ",
              "type": "text"
            },
            {
              "code": "newMember",
              "type": "codeVoice"
            },
            {
              "text": " is already contained in the set, this",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method has no effect. In this example, a new element is inserted into",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "classDays",
              "type": "codeVoice"
            },
            {
              "text": ", a set of days of the week. When an existing element is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "inserted, the ",
              "type": "text"
            },
            {
              "code": "classDays",
              "type": "codeVoice"
            },
            {
              "text": " set does not change.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "enum DayOfTheWeek: Int {",
            "    case sunday, monday, tuesday, wednesday, thursday,",
            "        friday, saturday",
            "}",
            "",
            "var classDays: Set<DayOfTheWeek> = [.wednesday, .friday]",
            "print(classDays.insert(.monday))",
            "// Prints \"(true, .monday)\"",
            "print(classDays)",
            "// Prints \"[.friday, .wednesday, .monday]\"",
            "",
            "print(classDays.insert(.friday))",
            "// Prints \"(false, .friday)\"",
            "print(classDays)",
            "// Prints \"[.friday, .wednesday, .monday]\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool": {
      "abstract": [
        {
          "text": "A value type whose instances are either ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": " or ",
          "type": "text"
        },
        {
          "code": "false",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Bool"
        }
      ],
      "role": "symbol",
      "title": "Bool",
      "type": "topic",
      "url": "/documentation/swift/bool"
    },
    "doc://com.apple.Swift/documentation/Swift/SetAlgebra": {
      "abstract": [
        {
          "text": "A type that provides mathematical set operations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SetAlgebra"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SetAlgebra",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SetAlgebra"
        }
      ],
      "role": "symbol",
      "title": "SetAlgebra",
      "type": "topic",
      "url": "/documentation/swift/setalgebra"
    },
    "doc://com.apple.Swift/documentation/Swift/SetAlgebra/Element": {
      "abstract": [
        {
          "text": "A type for which the conforming type provides a containment test.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Element"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SetAlgebra/Element",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "Element",
      "type": "topic",
      "url": "/documentation/swift/setalgebra/element"
    },
    "doc://com.apple.Swift/documentation/Swift/SetAlgebra/insert(_:)": {
      "abstract": [
        {
          "text": "Inserts the given element in the set if it is not already present.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "insert"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s10SetAlgebraP7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") -> (inserted"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", memberAfterInsert"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s10SetAlgebraP7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SetAlgebra/insert(_:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "insert(_:)",
      "type": "topic",
      "url": "/documentation/swift/setalgebra/insert(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/SetAlgebra/insert(_:)-9wohp": {
      "abstract": [
        {
          "text": "Adds the given element to the option set if it is not already a member.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Self.Element",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "insert"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s10SetAlgebraP7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") -> (inserted"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", memberAfterInsert"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s10SetAlgebraP7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SetAlgebra/insert(_:)-9wohp",
      "kind": "symbol",
      "role": "symbol",
      "title": "insert(_:)",
      "type": "topic",
      "url": "/documentation/swift/setalgebra/insert(_:)-9wohp"
    },
    "doc://com.apple.Swift/documentation/Swift/SetAlgebra/remove(_:)": {
      "abstract": [
        {
          "text": "Removes the given element and any elements subsumed by the given element.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "remove"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s10SetAlgebraP7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s10SetAlgebraP7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SetAlgebra/remove(_:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "remove(_:)",
      "type": "topic",
      "url": "/documentation/swift/setalgebra/remove(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/SetAlgebra/update(with:)": {
      "abstract": [
        {
          "text": "Inserts the given element into the set unconditionally.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "update"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s10SetAlgebraP7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s10SetAlgebraP7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SetAlgebra/update(with:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "update(with:)",
      "type": "topic",
      "url": "/documentation/swift/setalgebra/update(with:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Adding-and-Removing-Elements",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/SetAlgebra/update(with:)",
        "doc://com.apple.Swift/documentation/Swift/SetAlgebra/remove(_:)"
      ],
      "title": "Adding and Removing Elements"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/setalgebra/insert(_:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
