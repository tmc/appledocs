{
  "abstract": [
    {
      "text": "Creates a regular expression from the given string, using the specified",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "capture type.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/Regex"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/Regex/init(_:as:)-5z5nu"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Swift",
    "externalID": "s:17_StringProcessing5RegexV_2asACyxGSS_xmtKcfc",
    "fragments": [
      {
        "kind": "identifier",
        "text": "init"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:SS",
        "text": "String"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "as"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "text": "Output"
      },
      {
        "kind": "text",
        "text": ".Type) "
      },
      {
        "kind": "keyword",
        "text": "throws"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Initializer",
    "symbolKind": "init",
    "title": "init(_:as:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "init"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "pattern"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/String",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SS",
              "text": "String"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "as"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "outputType"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "text": "Output"
            },
            {
              "kind": "text",
              "text": ".Type = Output.self) "
            },
            {
              "kind": "keyword",
              "text": "throws"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A string with regular expression syntax.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "pattern"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The desired type for the output captures.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "outputType"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can use this initializer to create a ",
              "type": "text"
            },
            {
              "code": "Regex",
              "type": "codeVoice"
            },
            {
              "text": " instance from a regular",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "expression that you have stored in ",
              "type": "text"
            },
            {
              "code": "pattern",
              "type": "codeVoice"
            },
            {
              "text": " when you know the capture",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "structure of the regular expression in advance.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In this example, the regular expression includes two parenthesized",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "capture groups, so the capture type is ",
              "type": "text"
            },
            {
              "code": "(Substring, Substring, Substring)",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The first substring in the tuple represents the entire match, while the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "second and third substrings represent the first and second capture group,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "respectively.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let keyAndValue = try Regex(\"(.+): (.+)\", as: (Substring, Substring, Substring).self)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "This initializer throws an error if ",
              "type": "text"
            },
            {
              "code": "pattern",
              "type": "codeVoice"
            },
            {
              "text": " uses invalid regular",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "expression syntax, or if ",
              "type": "text"
            },
            {
              "code": "outputType",
              "type": "codeVoice"
            },
            {
              "text": " does not match the capture",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "structure declared by ",
              "type": "text"
            },
            {
              "code": "pattern",
              "type": "codeVoice"
            },
            {
              "text": ". If you donâ€™t know the capture structure",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in advance, use the ",
              "type": "text"
            },
            {
              "code": "init(_:)",
              "type": "codeVoice"
            },
            {
              "text": " initializer instead.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Regex": {
      "abstract": [
        {
          "text": "A regular expression.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Regex"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Regex",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Regex"
        }
      ],
      "role": "symbol",
      "title": "Regex",
      "type": "topic",
      "url": "/documentation/swift/regex"
    },
    "doc://com.apple.Swift/documentation/Swift/Regex/init(_:as:)-5z5nu": {
      "abstract": [
        {
          "text": "Creates a regular expression from the given string, using the specified",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "capture type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "as"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Output"
        },
        {
          "kind": "text",
          "text": ".Type) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Regex/init(_:as:)-5z5nu",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:as:)",
      "type": "topic",
      "url": "/documentation/swift/regex/init(_:as:)-5z5nu"
    },
    "doc://com.apple.Swift/documentation/Swift/String": {
      "abstract": [
        {
          "text": "A Unicode string value that is a collection of characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "String"
        }
      ],
      "role": "symbol",
      "title": "String",
      "type": "topic",
      "url": "/documentation/swift/string"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/swift/regex/init(_:as:)-5z5nu"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
