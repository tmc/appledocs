{
  "abstract": [
    {
      "text": "A value type whose instances are either ",
      "type": "text"
    },
    {
      "code": "true",
      "type": "codeVoice"
    },
    {
      "text": " or ",
      "type": "text"
    },
    {
      "code": "false",
      "type": "codeVoice"
    },
    {
      "text": ".",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/Bool"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:Sb",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Bool"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Bool"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "Bool"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Bool"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "code": "Bool",
              "type": "codeVoice"
            },
            {
              "text": " represents Boolean values in Swift. Create instances of ",
              "type": "text"
            },
            {
              "code": "Bool",
              "type": "codeVoice"
            },
            {
              "text": " by",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "using one of the Boolean literals ",
              "type": "text"
            },
            {
              "code": "true",
              "type": "codeVoice"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "code": "false",
              "type": "codeVoice"
            },
            {
              "text": ", or by assigning the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "result of a Boolean method or operation to a variable or constant.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var godotHasArrived = false",
            "",
            "let numbers = 1...5",
            "let containsTen = numbers.contains(10)",
            "print(containsTen)",
            "// Prints \"false\"",
            "",
            "let (a, b) = (100, 101)",
            "let aFirst = a < b",
            "print(aFirst)",
            "// Prints \"true\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Swift uses only simple Boolean values in conditional contexts to help avoid",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "accidental programming errors and to help maintain the clarity of each",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "control statement. Unlike in other programming languages, in Swift, integers",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and strings cannot be used where a Boolean value is required.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example, the following code sample does not compile, because it",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "attempts to use the integer ",
              "type": "text"
            },
            {
              "code": "i",
              "type": "codeVoice"
            },
            {
              "text": " in a logical context:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var i = 5",
            "while i {",
            "    print(i)",
            "    i -= 1",
            "}",
            "// error: Cannot convert value of type 'Int' to expected condition type 'Bool'"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The correct approach in Swift is to compare the ",
              "type": "text"
            },
            {
              "code": "i",
              "type": "codeVoice"
            },
            {
              "text": " value with zero in the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "while",
              "type": "codeVoice"
            },
            {
              "text": " statement.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "while i != 0 {",
            "    print(i)",
            "    i -= 1",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Using-Imported-Boolean-values",
          "level": 1,
          "text": "Using Imported Boolean values",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The C ",
              "type": "text"
            },
            {
              "code": "bool",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "Boolean",
              "type": "codeVoice"
            },
            {
              "text": " types and the Objective-C ",
              "type": "text"
            },
            {
              "code": "BOOL",
              "type": "codeVoice"
            },
            {
              "text": " type are all",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "bridged into Swift as ",
              "type": "text"
            },
            {
              "code": "Bool",
              "type": "codeVoice"
            },
            {
              "text": ". The single ",
              "type": "text"
            },
            {
              "code": "Bool",
              "type": "codeVoice"
            },
            {
              "text": " type in Swift guarantees",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that functions, methods, and properties imported from C and Objective-C",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "have a consistent type interface.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "role": "symbol",
      "title": "BitwiseCopyable",
      "type": "topic",
      "url": "/documentation/swift/bitwisecopyable"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool": {
      "abstract": [
        {
          "text": "A value type whose instances are either ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": " or ",
          "type": "text"
        },
        {
          "code": "false",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Bool"
        }
      ],
      "role": "symbol",
      "title": "Bool",
      "type": "topic",
      "url": "/documentation/swift/bool"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/!(_:)": {
      "abstract": [
        {
          "text": "Performs a logical NOT operation on a Boolean value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "!"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/!(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "!(_:)",
      "type": "topic",
      "url": "/documentation/swift/bool/!(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/!=(_:_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether two values are not equal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "!="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/!=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "!=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/bool/!=(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/&&(_:_:)": {
      "abstract": [
        {
          "text": "Performs a logical AND operation on two Boolean values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "&&"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/&&(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "&&(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/bool/&&(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/==(_:_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether two values are equal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "=="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/==(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "==(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/bool/==(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/AtomicRepresentable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/AtomicRepresentable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "AtomicRepresentable Implementations",
      "type": "topic",
      "url": "/documentation/swift/bool/atomicrepresentable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/CustomReflectable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/CustomReflectable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomReflectable Implementations",
      "type": "topic",
      "url": "/documentation/swift/bool/customreflectable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/CustomStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/CustomStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/bool/customstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/Decodable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/Decodable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Decodable Implementations",
      "type": "topic",
      "url": "/documentation/swift/bool/decodable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/Encodable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/Encodable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Encodable Implementations",
      "type": "topic",
      "url": "/documentation/swift/bool/encodable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/Equatable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/Equatable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Equatable Implementations",
      "type": "topic",
      "url": "/documentation/swift/bool/equatable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/ExpressibleByBooleanLiteral-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/ExpressibleByBooleanLiteral-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByBooleanLiteral Implementations",
      "type": "topic",
      "url": "/documentation/swift/bool/expressiblebybooleanliteral-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/Hashable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/Hashable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Hashable Implementations",
      "type": "topic",
      "url": "/documentation/swift/bool/hashable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/IntentDisplayName": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "IntentDisplayName"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/IntentDisplayName",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IntentDisplayName"
        }
      ],
      "role": "symbol",
      "title": "Bool.IntentDisplayName",
      "type": "topic",
      "url": "/documentation/swift/bool/intentdisplayname"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/LosslessStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/LosslessStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "LosslessStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/bool/losslessstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/MLDataValueConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/MLDataValueConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "MLDataValueConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/bool/mldatavalueconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/Specification": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Specification"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/Specification",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Specification"
        }
      ],
      "role": "symbol",
      "title": "Bool.Specification",
      "type": "topic",
      "url": "/documentation/swift/bool/specification"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/UnwrappedType": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnwrappedType"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/UnwrappedType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnwrappedType"
        }
      ],
      "role": "symbol",
      "title": "Bool.UnwrappedType",
      "type": "topic",
      "url": "/documentation/swift/bool/unwrappedtype"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/ValueType": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ValueType"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/ValueType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ValueType"
        }
      ],
      "role": "symbol",
      "title": "Bool.ValueType",
      "type": "topic",
      "url": "/documentation/swift/bool/valuetype"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/__(_:_:)": {
      "abstract": [
        {
          "text": "Performs a logical OR operation on two Boolean values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "||"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/__(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "||(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/bool/__(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/customMirror": {
      "abstract": [
        {
          "text": "A mirror that reflects the ",
          "type": "text"
        },
        {
          "code": "Bool",
          "type": "codeVoice"
        },
        {
          "text": " instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "customMirror"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6MirrorV",
          "text": "Mirror"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/customMirror",
      "kind": "symbol",
      "role": "symbol",
      "title": "customMirror",
      "type": "topic",
      "url": "/documentation/swift/bool/custommirror"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/customPlaygroundQuickLook": {
      "abstract": [
        {
          "text": "A custom playground Quick Look for the ",
          "type": "text"
        },
        {
          "code": "Bool",
          "type": "codeVoice"
        },
        {
          "text": " instance.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "customPlaygroundQuickLook"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "_PlaygroundQuickLook"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/customPlaygroundQuickLook",
      "kind": "symbol",
      "role": "symbol",
      "title": "customPlaygroundQuickLook",
      "type": "topic",
      "url": "/documentation/swift/bool/customplaygroundquicklook"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/dataValue": {
      "abstract": [
        {
          "text": "The value of the conforming type’s instance wrapped in a data value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dataValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:8CreateML11MLDataValueO",
          "text": "MLDataValue"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/dataValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "dataValue",
      "type": "topic",
      "url": "/documentation/swift/bool/datavalue"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/dataValueType": {
      "abstract": [
        {
          "text": "The underlying type the conforming type uses when it wraps itself in a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "data value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dataValueType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:8CreateML11MLDataValueO",
          "text": "MLDataValue"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:8CreateML11MLDataValueO0D4TypeO",
          "text": "ValueType"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/dataValueType",
      "kind": "symbol",
      "role": "symbol",
      "title": "dataValueType",
      "type": "topic",
      "url": "/documentation/swift/bool/datavaluetype"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/defaultResolverSpecification": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "defaultResolverSpecification"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10AppIntents21ResolverSpecificationP",
          "text": "ResolverSpecification"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/defaultResolverSpecification",
      "kind": "symbol",
      "role": "symbol",
      "title": "defaultResolverSpecification",
      "type": "topic",
      "url": "/documentation/swift/bool/defaultresolverspecification"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/description": {
      "abstract": [
        {
          "text": "A textual representation of the Boolean value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "description"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/description",
      "kind": "symbol",
      "role": "symbol",
      "title": "description",
      "type": "topic",
      "url": "/documentation/swift/bool/description"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/encode(to:)": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/encode(to:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/bool/encode(to:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/hash(into:)": {
      "abstract": [
        {
          "text": "Hashes the essential components of this value by feeding them into the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given hasher.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hash"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "into"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6HasherV",
          "text": "Hasher"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/hash(into:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "hash(into:)",
      "type": "topic",
      "url": "/documentation/swift/bool/hash(into:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/hashValue": {
      "abstract": [
        {
          "text": "The hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hashValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/hashValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "hashValue",
      "type": "topic",
      "url": "/documentation/swift/bool/hashvalue"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/init()": {
      "abstract": [
        {
          "text": "Creates an instance initialized to ",
          "type": "text"
        },
        {
          "code": "false",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/init()",
      "kind": "symbol",
      "role": "symbol",
      "title": "init()",
      "type": "topic",
      "url": "/documentation/swift/bool/init()"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/init(_:)-25sp9": {
      "abstract": [
        {
          "text": "Creates an instance equal to the given Boolean value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/init(_:)-25sp9",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/bool/init(_:)-25sp9"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/init(_:)-3mody": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSNumber",
          "text": "NSNumber"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/init(_:)-3mody",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/bool/init(_:)-3mody"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/init(_:)-83vgw": {
      "abstract": [
        {
          "text": "Creates a new Boolean value from the given string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/init(_:)-83vgw",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/bool/init(_:)-83vgw"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/init(booleanLiteral:)": {
      "abstract": [
        {
          "text": "Creates an instance initialized to the specified Boolean literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "booleanLiteral"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/init(booleanLiteral:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(booleanLiteral:)",
      "type": "topic",
      "url": "/documentation/swift/bool/init(booleanliteral:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/init(exactly:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSNumber",
          "text": "NSNumber"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/init(exactly:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/bool/init(exactly:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/init(from:)-4iol": {
      "abstract": [
        {
          "text": "Creates an instance of the conforming type from a data value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:8CreateML11MLDataValueO",
          "text": "MLDataValue"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/init(from:)-4iol",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/bool/init(from:)-4iol"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/init(from:)-99p2s": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/init(from:)-99p2s",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/bool/init(from:)-99p2s"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/init(truncating:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "truncating"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSNumber",
          "text": "NSNumber"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/init(truncating:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(truncating:)",
      "type": "topic",
      "url": "/documentation/swift/bool/init(truncating:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/random()": {
      "abstract": [
        {
          "text": "Returns a random Boolean value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "random"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/random()",
      "kind": "symbol",
      "role": "symbol",
      "title": "random()",
      "type": "topic",
      "url": "/documentation/swift/bool/random()"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/random(using:)": {
      "abstract": [
        {
          "text": "Returns a random Boolean value, using the given generator as a source for",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "randomness.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "random"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "using"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/random(using:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "random(using:)",
      "type": "topic",
      "url": "/documentation/swift/bool/random(using:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool/toggle()": {
      "abstract": [
        {
          "text": "Toggles the Boolean variable’s value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "toggle"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool/toggle()",
      "kind": "symbol",
      "role": "symbol",
      "title": "toggle()",
      "type": "topic",
      "url": "/documentation/swift/bool/toggle()"
    },
    "doc://com.apple.Swift/documentation/Swift/CVarArg": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements of a C ",
          "type": "text"
        },
        {
          "code": "va_list",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CVarArg",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/swift/cvararg"
    },
    "doc://com.apple.Swift/documentation/Swift/Copyable": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Copyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/swift/copyable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomReflectable": {
      "abstract": [
        {
          "text": "A type that explicitly supplies its own mirror.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "role": "symbol",
      "title": "CustomReflectable",
      "type": "topic",
      "url": "/documentation/swift/customreflectable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/Decodable": {
      "abstract": [
        {
          "text": "A type that can decode itself from an external representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Decodable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Decodable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Decodable"
        }
      ],
      "role": "symbol",
      "title": "Decodable",
      "type": "topic",
      "url": "/documentation/swift/decodable"
    },
    "doc://com.apple.Swift/documentation/Swift/Encodable": {
      "abstract": [
        {
          "text": "A type that can encode itself to an external representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Encodable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Encodable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Encodable"
        }
      ],
      "role": "symbol",
      "title": "Encodable",
      "type": "topic",
      "url": "/documentation/swift/encodable"
    },
    "doc://com.apple.Swift/documentation/Swift/Equatable": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Equatable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/swift/equatable"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByBooleanLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with the Boolean literals ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": " and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "false",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByBooleanLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByBooleanLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByBooleanLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByBooleanLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebybooleanliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/Hashable": {
      "abstract": [
        {
          "text": "A type that can be hashed into a ",
          "type": "text"
        },
        {
          "code": "Hasher",
          "type": "codeVoice"
        },
        {
          "text": " to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Hashable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/swift/hashable"
    },
    "doc://com.apple.Swift/documentation/Swift/LosslessStringConvertible": {
      "abstract": [
        {
          "text": "A type that can be represented as a string in a lossless, unambiguous way.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LosslessStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/LosslessStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LosslessStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "LosslessStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/losslessstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicRepresentable": {
      "abstract": [
        {
          "text": "A type that supports atomic operations through a separate atomic storage",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AtomicRepresentable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicRepresentable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AtomicRepresentable"
        }
      ],
      "role": "symbol",
      "title": "AtomicRepresentable",
      "type": "topic",
      "url": "/documentation/synchronization/atomicrepresentable"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:10Accelerate10BNNSScalarP": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BNNSScalar"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:10Accelerate10BNNSScalarP",
      "kind": "symbol",
      "role": "symbol",
      "title": "BNNSScalar",
      "type": "topic",
      "url": "/documentation/Accelerate/BNNSScalar"
    },
    "doc://com.externally.resolved.symbol/s:17RealityFoundation12BindableDataP": {
      "abstract": [
        {
          "text": "An opaque base protocol for bindable data objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BindableData"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:17RealityFoundation12BindableDataP",
      "kind": "symbol",
      "role": "symbol",
      "title": "BindableData",
      "type": "topic",
      "url": "/documentation/RealityKit/BindableData"
    },
    "doc://com.externally.resolved.symbol/s:6CoreML14MLTensorScalarP": {
      "abstract": [
        {
          "text": "A type that represents the tensor scalar types supported by the framework. Don’t use this type directly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MLTensorScalar"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s8SendableP",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:6CoreML14MLTensorScalarP",
      "kind": "symbol",
      "role": "symbol",
      "title": "MLTensorScalar",
      "type": "topic",
      "url": "/documentation/CoreML/MLTensorScalar"
    },
    "doc://com.externally.resolved.symbol/s:8CloudKit21CKRecordValueProtocolP": {
      "abstract": [
        {
          "text": "A description of a CloudKit record value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CKRecordValueProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:8CloudKit21CKRecordValueProtocolP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CKRecordValueProtocol",
      "type": "topic",
      "url": "/documentation/CloudKit/CKRecordValueProtocol"
    },
    "doc://com.externally.resolved.symbol/s:8CreateML22MLDataValueConvertibleP": {
      "abstract": [
        {
          "text": "A type that can convert itself to and from a data value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MLDataValueConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:8CreateML22MLDataValueConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "MLDataValueConvertible",
      "type": "topic",
      "url": "/documentation/CreateML/MLDataValueConvertible"
    },
    "doc://com.externally.resolved.symbol/s:8MusicKit0A34LibraryRequestFilterValueEquatableP": {
      "abstract": [
        {
          "text": "A protocol for types of values your app can use with equality filters when fetching items using a music library request.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MusicLibraryRequestFilterValueEquatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:8MusicKit0A34LibraryRequestFilterValueEquatableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "MusicLibraryRequestFilterValueEquatable",
      "type": "topic",
      "url": "/documentation/MusicKit/MusicLibraryRequestFilterValueEquatable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Synchronization/AtomicRepresentable",
        "doc://com.externally.resolved.symbol/s:10Accelerate10BNNSScalarP",
        "doc://com.externally.resolved.symbol/s:17RealityFoundation12BindableDataP",
        "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
        "doc://com.externally.resolved.symbol/s:8CloudKit21CKRecordValueProtocolP",
        "doc://com.apple.Swift/documentation/Swift/CVarArg",
        "doc://com.apple.Swift/documentation/Swift/Copyable",
        "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
        "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
        "doc://com.apple.Swift/documentation/Swift/Decodable",
        "doc://com.apple.Swift/documentation/Swift/Encodable",
        "doc://com.apple.Swift/documentation/Swift/Equatable",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByBooleanLiteral",
        "doc://com.apple.Swift/documentation/Swift/Hashable",
        "doc://com.apple.Swift/documentation/Swift/LosslessStringConvertible",
        "doc://com.externally.resolved.symbol/s:8CreateML22MLDataValueConvertibleP",
        "doc://com.externally.resolved.symbol/s:6CoreML14MLTensorScalarP",
        "doc://com.externally.resolved.symbol/s:8MusicKit0A34LibraryRequestFilterValueEquatableP",
        "doc://com.apple.Swift/documentation/Swift/Sendable"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "topicSections": [
    {
      "anchor": "Comparing-Boolean-Values",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Bool/==(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Bool/!=(_:_:)"
      ],
      "title": "Comparing Boolean Values"
    },
    {
      "anchor": "Transforming-a-Boolean",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Bool/toggle()",
        "doc://com.apple.Swift/documentation/Swift/Bool/!(_:)",
        "doc://com.apple.Swift/documentation/Swift/Bool/__(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Bool/&&(_:_:)"
      ],
      "title": "Transforming a Boolean"
    },
    {
      "anchor": "Creating-a-Random-Value",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Bool/random()",
        "doc://com.apple.Swift/documentation/Swift/Bool/random(using:)"
      ],
      "title": "Creating a Random Value"
    },
    {
      "anchor": "Describing-a-Boolean",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Bool/description"
      ],
      "title": "Describing a Boolean"
    },
    {
      "anchor": "Inspecting-a-Boolean",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Bool/customMirror",
        "doc://com.apple.Swift/documentation/Swift/Bool/customPlaygroundQuickLook",
        "doc://com.apple.Swift/documentation/Swift/Bool/hashValue",
        "doc://com.apple.Swift/documentation/Swift/Bool/hash(into:)"
      ],
      "title": "Inspecting a Boolean"
    },
    {
      "anchor": "Creating-a-Boolean-From-Another-Value",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Bool/init(_:)-25sp9",
        "doc://com.apple.Swift/documentation/Swift/Bool/init(_:)-83vgw"
      ],
      "title": "Creating a Boolean From Another Value"
    },
    {
      "anchor": "Converting-an-NSNumber-to-a-Boolean",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Bool/init(_:)-3mody",
        "doc://com.apple.Swift/documentation/Swift/Bool/init(exactly:)",
        "doc://com.apple.Swift/documentation/Swift/Bool/init(truncating:)"
      ],
      "title": "Converting an NSNumber to a Boolean"
    },
    {
      "anchor": "Encoding-and-Decoding",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Bool/init(from:)-99p2s",
        "doc://com.apple.Swift/documentation/Swift/Bool/encode(to:)"
      ],
      "title": "Encoding and Decoding"
    },
    {
      "anchor": "Using-a-Boolean-as-a-Data-Value",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Bool/init(from:)-4iol",
        "doc://com.apple.Swift/documentation/Swift/Bool/dataValue",
        "doc://com.apple.Swift/documentation/Swift/Bool/dataValueType"
      ],
      "title": "Using a Boolean as a Data Value"
    },
    {
      "anchor": "Infrequently-Used-Intializers",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Bool/init()",
        "doc://com.apple.Swift/documentation/Swift/Bool/init(booleanLiteral:)"
      ],
      "title": "Infrequently Used Intializers"
    },
    {
      "anchor": "Structures",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Bool/IntentDisplayName"
      ],
      "title": "Structures"
    },
    {
      "anchor": "Type-Aliases",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Bool/Specification",
        "doc://com.apple.Swift/documentation/Swift/Bool/UnwrappedType",
        "doc://com.apple.Swift/documentation/Swift/Bool/ValueType"
      ],
      "title": "Type Aliases"
    },
    {
      "anchor": "Type-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Bool/defaultResolverSpecification"
      ],
      "title": "Type Properties"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Bool/AtomicRepresentable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Bool/CustomReflectable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Bool/CustomStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Bool/Decodable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Bool/Encodable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Bool/Equatable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Bool/ExpressibleByBooleanLiteral-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Bool/Hashable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Bool/LosslessStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Bool/MLDataValueConvertible-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/bool"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
