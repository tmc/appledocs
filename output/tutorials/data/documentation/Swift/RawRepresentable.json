{
  "abstract": [
    {
      "text": "A type that can be converted to and from an associated raw value.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/RawRepresentable"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:SY",
    "fragments": [
      {
        "kind": "keyword",
        "text": "protocol"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "RawRepresentable"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "RawRepresentable"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Protocol",
    "symbolKind": "protocol",
    "title": "RawRepresentable"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "RawRepresentable"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/RawValue-swift.associatedtype",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SY8RawValueQa",
              "text": "RawValue"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "With a ",
              "type": "text"
            },
            {
              "code": "RawRepresentable",
              "type": "codeVoice"
            },
            {
              "text": " type, you can switch back and forth between a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "custom type and an associated ",
              "type": "text"
            },
            {
              "code": "RawValue",
              "type": "codeVoice"
            },
            {
              "text": " type without losing the value of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the original ",
              "type": "text"
            },
            {
              "code": "RawRepresentable",
              "type": "codeVoice"
            },
            {
              "text": " type. Using the raw value of a conforming",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "type streamlines interoperation with Objective-C and legacy APIs and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "simplifies conformance to other protocols, such as ",
              "type": "text"
            },
            {
              "code": "Equatable",
              "type": "codeVoice"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "Comparable",
              "type": "codeVoice"
            },
            {
              "text": ", and ",
              "type": "text"
            },
            {
              "code": "Hashable",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "RawRepresentable",
              "type": "codeVoice"
            },
            {
              "text": " protocol is seen mainly in two categories of types:",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "enumerations with raw value types and option sets.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Enumerations-with-Raw-Values",
          "level": 1,
          "text": "Enumerations with Raw Values",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "For any enumeration with a string, integer, or floating-point raw type, the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Swift compiler automatically adds ",
              "type": "text"
            },
            {
              "code": "RawRepresentable",
              "type": "codeVoice"
            },
            {
              "text": " conformance. When",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "defining your own custom enumeration, you give it a raw type by specifying",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the raw type as the first item in the enumerationâ€™s type inheritance list.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "You can also use literals to specify values for one or more cases.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example, the ",
              "type": "text"
            },
            {
              "code": "Counter",
              "type": "codeVoice"
            },
            {
              "text": " enumeration defined here has an ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": " raw value",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "type and gives the first case a raw value of ",
              "type": "text"
            },
            {
              "code": "1",
              "type": "codeVoice"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "enum Counter: Int {",
            "    case one = 1, two, three, four, five",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "You can create a ",
              "type": "text"
            },
            {
              "code": "Counter",
              "type": "codeVoice"
            },
            {
              "text": " instance from an integer value between 1 and 5",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "by using the ",
              "type": "text"
            },
            {
              "code": "init?(rawValue:)",
              "type": "codeVoice"
            },
            {
              "text": " initializer declared in the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "RawRepresentable",
              "type": "codeVoice"
            },
            {
              "text": " protocol. This initializer is failable because although",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "every case of the ",
              "type": "text"
            },
            {
              "code": "Counter",
              "type": "codeVoice"
            },
            {
              "text": " type has a corresponding ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": " value, there",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "are many ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": " values that ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "donâ€™t",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " correspond to a case of ",
              "type": "text"
            },
            {
              "code": "Counter",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "for i in 3...6 {",
            "    print(Counter(rawValue: i))",
            "}",
            "// Prints \"Optional(Counter.three)\"",
            "// Prints \"Optional(Counter.four)\"",
            "// Prints \"Optional(Counter.five)\"",
            "// Prints \"nil\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Option-Sets",
          "level": 1,
          "text": "Option Sets",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Option sets all conform to ",
              "type": "text"
            },
            {
              "code": "RawRepresentable",
              "type": "codeVoice"
            },
            {
              "text": " by inheritance using the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "OptionSet",
              "type": "codeVoice"
            },
            {
              "text": " protocol. Whether using an option set or creating your own,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you use the raw value of an option set instance to store the instanceâ€™s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "bitfield. The raw value must therefore be of a type that conforms to the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "FixedWidthInteger",
              "type": "codeVoice"
            },
            {
              "text": " protocol, such as ",
              "type": "text"
            },
            {
              "code": "UInt8",
              "type": "codeVoice"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": ". For example, the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "Direction",
              "type": "codeVoice"
            },
            {
              "text": " type defines an option set for the four directions you can",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "move in a game.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct Directions: OptionSet {",
            "    let rawValue: UInt8",
            "",
            "    static let up    = Directions(rawValue: 1 << 0)",
            "    static let down  = Directions(rawValue: 1 << 1)",
            "    static let left  = Directions(rawValue: 1 << 2)",
            "    static let right = Directions(rawValue: 1 << 3)",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Unlike enumerations, option sets provide a nonfailable ",
              "type": "text"
            },
            {
              "code": "init(rawValue:)",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "initializer to convert from a raw value, because option sets donâ€™t have an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "enumerated list of all possible cases. Option set values have",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a one-to-one correspondence with their associated raw values.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In the case of the ",
              "type": "text"
            },
            {
              "code": "Directions",
              "type": "codeVoice"
            },
            {
              "text": " option set, an instance can contain zero,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "one, or more of the four defined directions. This example declares a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "constant with three currently allowed moves. The raw value of the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "allowedMoves",
              "type": "codeVoice"
            },
            {
              "text": " instance is the result of the bitwise OR of its three",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "membersâ€™ raw values:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let allowedMoves: Directions = [.up, .down, .left]",
            "print(allowedMoves.rawValue)",
            "// Prints \"7\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Option sets use bitwise operations on their associated raw values to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "implement their mathematical set operations. For example, the ",
              "type": "text"
            },
            {
              "code": "contains()",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method on ",
              "type": "text"
            },
            {
              "code": "allowedMoves",
              "type": "codeVoice"
            },
            {
              "text": " performs a bitwise AND operation to check whether",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the option set contains an element.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "print(allowedMoves.contains(.right))",
            "// Prints \"false\"",
            "print(allowedMoves.rawValue & Directions.right.rawValue)",
            "// Prints \"0\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/!=(_:_:)-8pggn": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the two arguments are not equal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "!="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/!=(_:_:)-8pggn",
      "kind": "symbol",
      "role": "symbol",
      "title": "!=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/!=(_:_:)-8pggn"
    },
    "doc://com.apple.Swift/documentation/Swift/!=(_:_:)-9wy5n": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the two arguments are not equal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "!="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/!=(_:_:)-9wy5n",
      "kind": "symbol",
      "role": "symbol",
      "title": "!=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/!=(_:_:)-9wy5n"
    },
    "doc://com.apple.Swift/documentation/Swift/==(_:_:)-9hu5c": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the two arguments are equal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "=="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/==(_:_:)-9hu5c",
      "kind": "symbol",
      "role": "symbol",
      "title": "==(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/==(_:_:)-9hu5c"
    },
    "doc://com.apple.Swift/documentation/Swift/CaseIterable": {
      "abstract": [
        {
          "text": "A type that provides a collection of all of its values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CaseIterable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CaseIterable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CaseIterable"
        }
      ],
      "role": "symbol",
      "title": "CaseIterable",
      "type": "topic",
      "url": "/documentation/swift/caseiterable"
    },
    "doc://com.apple.Swift/documentation/Swift/CodingUserInfoKey": {
      "abstract": [
        {
          "text": "A user-defined key for providing context during encoding and decoding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CodingUserInfoKey"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CodingUserInfoKey",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CodingUserInfoKey"
        }
      ],
      "role": "symbol",
      "title": "CodingUserInfoKey",
      "type": "topic",
      "url": "/documentation/swift/codinguserinfokey"
    },
    "doc://com.apple.Swift/documentation/Swift/FloatingPointSign": {
      "abstract": [
        {
          "text": "The sign of a floating-point value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FloatingPointSign"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/FloatingPointSign",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FloatingPointSign"
        }
      ],
      "role": "symbol",
      "title": "FloatingPointSign",
      "type": "topic",
      "url": "/documentation/swift/floatingpointsign"
    },
    "doc://com.apple.Swift/documentation/Swift/OptionSet": {
      "abstract": [
        {
          "text": "A type that presents a mathematical set interface to a bit set.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "OptionSet"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/OptionSet",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "OptionSet"
        }
      ],
      "role": "symbol",
      "title": "OptionSet",
      "type": "topic",
      "url": "/documentation/swift/optionset"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable": {
      "abstract": [
        {
          "text": "A type that can be converted to and from an associated raw value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RawRepresentable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RawRepresentable"
        }
      ],
      "role": "symbol",
      "title": "RawRepresentable",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/AtomicOptionalRepresentation": {
      "abstract": [
        {
          "text": "The storage representation type that encodes to and decodes from",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "Optional<Self>",
          "type": "codeVoice"
        },
        {
          "text": " which is a suitable type when used in atomic operations",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "on ",
          "type": "text"
        },
        {
          "code": "Optional",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "AtomicOptionalRepresentable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "AtomicOptionalRepresentable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AtomicOptionalRepresentation"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/AtomicOptionalRepresentation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AtomicOptionalRepresentation"
        }
      ],
      "role": "symbol",
      "title": "RawRepresentable.AtomicOptionalRepresentation",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/atomicoptionalrepresentation"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/AtomicRepresentation": {
      "abstract": [
        {
          "text": "The storage representation type that ",
          "type": "text"
        },
        {
          "code": "Self",
          "type": "codeVoice"
        },
        {
          "text": " encodes to and decodes from",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "which is a suitable type when used in atomic operations.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "AtomicRepresentable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "AtomicRepresentable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AtomicRepresentation"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/AtomicRepresentation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AtomicRepresentation"
        }
      ],
      "role": "symbol",
      "title": "RawRepresentable.AtomicRepresentation",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/atomicrepresentation"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/RawValue-swift.associatedtype": {
      "abstract": [
        {
          "text": "The raw type that can be used to represent all values of the conforming",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RawValue"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/RawValue-swift.associatedtype",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "RawValue",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/rawvalue-swift.associatedtype"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/codingKey-2f0gm": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "CodingKeyRepresentable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "String",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "codingKey"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s9CodingKeyP",
          "text": "CodingKey"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/codingKey-2f0gm",
      "kind": "symbol",
      "role": "symbol",
      "title": "codingKey",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/codingkey-2f0gm"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/codingKey-xnw1": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "CodingKeyRepresentable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Int",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "codingKey"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s9CodingKeyP",
          "text": "CodingKey"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/codingKey-xnw1",
      "kind": "symbol",
      "role": "symbol",
      "title": "codingKey",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/codingkey-xnw1"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/decodeAtomicOptionalRepresentation(_:)": {
      "abstract": [
        {
          "text": "Recovers the logical atomic type ",
          "type": "text"
        },
        {
          "code": "Self?",
          "type": "codeVoice"
        },
        {
          "text": " by destroying some",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "AtomicOptionalRepresentation",
          "type": "codeVoice"
        },
        {
          "text": " storage instance returned from an atomic",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "operation on ",
          "type": "text"
        },
        {
          "code": "Optional",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "AtomicOptionalRepresentable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "AtomicOptionalRepresentable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "decodeAtomicOptionalRepresentation"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "consuming"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SY8RawValueQa",
          "text": "RawValue"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:15Synchronization27AtomicOptionalRepresentableP0bC14RepresentationQa",
          "text": "AtomicOptionalRepresentation"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/decodeAtomicOptionalRepresentation(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "decodeAtomicOptionalRepresentation(_:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/decodeatomicoptionalrepresentation(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/decodeAtomicRepresentation(_:)": {
      "abstract": [
        {
          "text": "Recovers the logical atomic type ",
          "type": "text"
        },
        {
          "code": "Self",
          "type": "codeVoice"
        },
        {
          "text": " by destroying some",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "AtomicRepresentation",
          "type": "codeVoice"
        },
        {
          "text": " storage instance returned from an atomic operation.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "AtomicRepresentable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "AtomicRepresentable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "decodeAtomicRepresentation"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "consuming"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SY8RawValueQa",
          "text": "RawValue"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:15Synchronization19AtomicRepresentableP0B14RepresentationQa",
          "text": "AtomicRepresentation"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/decodeAtomicRepresentation(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "decodeAtomicRepresentation(_:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/decodeatomicrepresentation(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-16ame": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "UInt64",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "UInt64",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-16ame",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-16ame"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-172ut": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "Int128",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Int128",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-172ut",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-172ut"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-21ma8": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "Float",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Float",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-21ma8",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-21ma8"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-27waz": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "UInt32",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "UInt32",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-27waz",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-27waz"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-3ahar": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "UInt128",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "UInt128",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-3ahar",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-3ahar"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-4evma": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "String",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "String",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-4evma",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-4evma"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-4gohs": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "Int64",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Int64",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-4gohs",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-4gohs"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-4pavm": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "Int8",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Int8",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-4pavm",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-4pavm"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-4tbh4": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "Double",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Double",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-4tbh4",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-4tbh4"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-5igsi": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "Bool",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Bool",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-5igsi",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-5igsi"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-78oqu": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "UInt",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "UInt",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-78oqu",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-78oqu"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-7dyeb": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "Int32",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Int32",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-7dyeb",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-7dyeb"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-86dqn": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "Int16",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Int16",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-86dqn",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-86dqn"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-8horh": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "Int",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Int",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-8horh",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-8horh"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-9u5rt": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "UInt8",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "UInt8",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-9u5rt",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-9u5rt"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-cla3": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder, when the typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "is ",
          "type": "text"
        },
        {
          "code": "UInt16",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "UInt16",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-cla3",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encode(to:)-cla3"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encodeAtomicOptionalRepresentation(_:)": {
      "abstract": [
        {
          "text": "Destroys a value of ",
          "type": "text"
        },
        {
          "code": "Self",
          "type": "codeVoice"
        },
        {
          "text": " and prepares an ",
          "type": "text"
        },
        {
          "code": "AtomicOptionalRepresentation",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "storage type to be used for atomic operations on ",
          "type": "text"
        },
        {
          "code": "Optional",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "AtomicOptionalRepresentable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "AtomicOptionalRepresentable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encodeAtomicOptionalRepresentation"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "consuming"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SY8RawValueQa",
          "text": "RawValue"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:15Synchronization27AtomicOptionalRepresentableP0bC14RepresentationQa",
          "text": "AtomicOptionalRepresentation"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encodeAtomicOptionalRepresentation(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "encodeAtomicOptionalRepresentation(_:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encodeatomicoptionalrepresentation(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encodeAtomicRepresentation(_:)": {
      "abstract": [
        {
          "text": "Destroys a value of ",
          "type": "text"
        },
        {
          "code": "Self",
          "type": "codeVoice"
        },
        {
          "text": " and prepares an ",
          "type": "text"
        },
        {
          "code": "AtomicRepresentation",
          "type": "codeVoice"
        },
        {
          "text": " storage",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type to be used for atomic operations.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "AtomicRepresentable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "AtomicRepresentable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encodeAtomicRepresentation"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "consuming"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SY8RawValueQa",
          "text": "RawValue"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:15Synchronization19AtomicRepresentableP0B14RepresentationQa",
          "text": "AtomicRepresentation"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encodeAtomicRepresentation(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "encodeAtomicRepresentation(_:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/encodeatomicrepresentation(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/hash(into:)": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hash"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "into"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6HasherV",
          "text": "Hasher"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/hash(into:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "hash(into:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/hash(into:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/hashValue": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hashValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/hashValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "hashValue",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/hashvalue"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(codingKey:)-3mxjn": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "CodingKeyRepresentable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Int",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "codingKey"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(codingKey:)-3mxjn",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(codingKey:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(codingkey:)-3mxjn"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(codingKey:)-9gih0": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "CodingKeyRepresentable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "String",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "codingKey"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(codingKey:)-9gih0",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(codingKey:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(codingkey:)-9gih0"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-114vz": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "Int32",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Int32",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-114vz",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-114vz"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-29lhi": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "Int64",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Int64",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-29lhi",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-29lhi"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-2hvc0": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "Int16",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Int16",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-2hvc0",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-2hvc0"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-3arr3": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "UInt32",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "UInt32",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-3arr3",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-3arr3"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-3hvw1": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "UInt",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "UInt",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-3hvw1",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-3hvw1"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-417i8": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "Double",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Double",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-417i8",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-417i8"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-4ibll": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "Int",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Int",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-4ibll",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-4ibll"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-5ar5m": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "Bool",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Bool",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-5ar5m",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-5ar5m"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-5auil": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "String",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "String",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-5auil",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-5auil"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-5ktev": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "Int8",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Int8",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-5ktev",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-5ktev"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-6yajb": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "UInt128",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "UInt128",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-6yajb",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-6yajb"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-6z4x4": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "UInt16",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "UInt16",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-6z4x4",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-6z4x4"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-812cy": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "UInt64",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "UInt64",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-812cy",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-812cy"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-8fm8i": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "Int128",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Int128",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-8fm8i",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-8fm8i"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-94955": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "UInt8",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "UInt8",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-94955",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-94955"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-9u9tp": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder, when the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "typeâ€™s ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "Float",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "RawValue",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Float",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-9u9tp",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(from:)-9u9tp"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(rawValue:)": {
      "abstract": [
        {
          "text": "Creates a new instance with the specified raw value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "rawValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SY8RawValueQa",
          "text": "RawValue"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(rawValue:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "init(rawValue:)",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/init(rawvalue:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable/rawValue-swift.property": {
      "abstract": [
        {
          "text": "The corresponding value of the raw type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "rawValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SY8RawValueQa",
          "text": "RawValue"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable/rawValue-swift.property",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "rawValue",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable/rawvalue-swift.property"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Encoding": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Encoding"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Encoding",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Encoding"
        }
      ],
      "role": "symbol",
      "title": "String.Encoding",
      "type": "topic",
      "url": "/documentation/swift/string/encoding"
    },
    "doc://com.apple.Swift/documentation/Swift/TaskPriority": {
      "abstract": [
        {
          "text": "The priority of a task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TaskPriority"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskPriority",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TaskPriority"
        }
      ],
      "role": "symbol",
      "title": "TaskPriority",
      "type": "topic",
      "url": "/documentation/swift/taskpriority"
    },
    "doc://com.apple.Swift/documentation/Swift/Unicode/CanonicalCombiningClass": {
      "abstract": [
        {
          "text": "The classification of a scalar used in the Canonical Ordering Algorithm",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "defined by the Unicode Standard.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CanonicalCombiningClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Unicode/CanonicalCombiningClass",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CanonicalCombiningClass"
        }
      ],
      "role": "symbol",
      "title": "Unicode.CanonicalCombiningClass",
      "type": "topic",
      "url": "/documentation/swift/unicode/canonicalcombiningclass"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/OptionSet"
      ],
      "kind": "relationships",
      "title": "Inherited By",
      "type": "inheritedBy"
    },
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CodingUserInfoKey",
        "doc://com.apple.Swift/documentation/Swift/FloatingPointSign",
        "doc://com.apple.Swift/documentation/Swift/String/Encoding",
        "doc://com.apple.Swift/documentation/Swift/TaskPriority",
        "doc://com.apple.Swift/documentation/Swift/Unicode/CanonicalCombiningClass"
      ],
      "kind": "relationships",
      "title": "Conforming Types",
      "type": "conformingTypes"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Raw-Representation",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CaseIterable"
      ],
      "title": "Raw Representation"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-Value",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(rawValue:)"
      ],
      "title": "Creating a Value"
    },
    {
      "anchor": "Accessing-the-Raw-Value",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/rawValue-swift.property",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/RawValue-swift.associatedtype"
      ],
      "title": "Accessing the Raw Value"
    },
    {
      "anchor": "Comparing-Values",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/==(_:_:)-9hu5c",
        "doc://com.apple.Swift/documentation/Swift/!=(_:_:)-9wy5n",
        "doc://com.apple.Swift/documentation/Swift/!=(_:_:)-8pggn"
      ],
      "title": "Comparing Values"
    },
    {
      "abstract": [
        {
          "text": "These initializer overloads are available for any conforming type with a ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "that is a ",
          "type": "text"
        },
        {
          "code": "Decodable",
          "type": "codeVoice"
        },
        {
          "text": " standard library type.",
          "type": "text"
        }
      ],
      "anchor": "Decoding-a-Value",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-5auil",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-5ar5m",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-417i8",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-9u9tp",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-4ibll",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-3hvw1",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-5ktev",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-2hvc0",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-114vz",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-29lhi",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-94955",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-6z4x4",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-3arr3",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-812cy"
      ],
      "title": "Decoding a Value"
    },
    {
      "abstract": [
        {
          "text": "These overloads are available for any conforming type with a ",
          "type": "text"
        },
        {
          "code": "RawValue",
          "type": "codeVoice"
        },
        {
          "text": " that is an",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "Encodable",
          "type": "codeVoice"
        },
        {
          "text": " standard library type.",
          "type": "text"
        }
      ],
      "anchor": "Encoding-a-Value",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-4evma",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-5igsi",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-4tbh4",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-21ma8",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-8horh",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-78oqu",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-4pavm",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-86dqn",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-7dyeb",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-4gohs",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-9u5rt",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-cla3",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-27waz",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-16ame"
      ],
      "title": "Encoding a Value"
    },
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(codingKey:)-3mxjn",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(codingKey:)-9gih0",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-6yajb",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/init(from:)-8fm8i"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/codingKey-2f0gm",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/codingKey-xnw1",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/hashValue"
      ],
      "title": "Instance Properties"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-172ut",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encode(to:)-3ahar",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/hash(into:)"
      ],
      "title": "Instance Methods"
    },
    {
      "anchor": "Type-Aliases",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/AtomicOptionalRepresentation",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/AtomicRepresentation"
      ],
      "title": "Type Aliases"
    },
    {
      "anchor": "Type-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/decodeAtomicOptionalRepresentation(_:)",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/decodeAtomicRepresentation(_:)",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encodeAtomicOptionalRepresentation(_:)",
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable/encodeAtomicRepresentation(_:)"
      ],
      "title": "Type Methods"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/rawrepresentable"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
