{
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/swift-standard-library",
        "doc://com.apple.Swift/documentation/Swift/numbers-and-basic-values",
        "doc://com.apple.Swift/documentation/Swift/special-use-numeric-types",
        "doc://com.apple.Swift/documentation/Swift/Float80"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/Float80/FloatingPoint-Implementations"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "role": "collectionGroup",
    "roleHeading": "API Collection",
    "title": "FloatingPoint Implementations"
  },
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80": {
      "abstract": [
        {
          "text": "An extended-precision, floating-point value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Float80"
        }
      ],
      "role": "symbol",
      "title": "Float80",
      "type": "topic",
      "url": "/documentation/swift/float80"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/*(_:_:)": {
      "abstract": [
        {
          "text": "Multiplies two values and produces their product, rounding to a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "representable value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "*"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/*(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "*(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/*(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/*=(_:_:)": {
      "abstract": [
        {
          "text": "Multiplies two values and stores the result in the left-hand-side",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "variable, rounding to a representable value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "*="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/*=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "*=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/*=(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/+(_:_:)": {
      "abstract": [
        {
          "text": "Adds two values and produces their sum, rounded to a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "representable value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "+"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/+(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "+(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/+(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/+=(_:_:)": {
      "abstract": [
        {
          "text": "Adds two values and stores the result in the left-hand-side variable,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "rounded to a representable value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "+="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/+=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "+=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/+=(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/-(_:)": {
      "abstract": [
        {
          "text": "Calculates the additive inverse of a value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "-"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/-(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "-(_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/-(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/-(_:_:)": {
      "abstract": [
        {
          "text": "Subtracts one value from another and produces their difference, rounded",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "to a representable value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "-"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/-(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "-(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/-(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/-=(_:_:)": {
      "abstract": [
        {
          "text": "Subtracts the second value from the first and stores the difference in",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the left-hand-side variable, rounding to a representable value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "-="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/-=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "-=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/-=(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/Exponent-swift.typealias": {
      "abstract": [
        {
          "text": "A type that can represent any written exponent.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Exponent"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/Exponent-swift.typealias",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Exponent"
        }
      ],
      "role": "symbol",
      "title": "Float80.Exponent",
      "type": "topic",
      "url": "/documentation/swift/float80/exponent-swift.typealias"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/_(_:_:)": {
      "abstract": [
        {
          "text": "Returns the quotient of dividing the first value by the second, rounded",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "to a representable value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "/"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/_(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "/(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/_(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/_(_:_:)-8otyc": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": ">"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/_(_:_:)-8otyc",
      "kind": "symbol",
      "role": "symbol",
      "title": ">(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/_(_:_:)-8otyc"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/_=(_:_:)": {
      "abstract": [
        {
          "text": "Divides the first value by the second and stores the quotient in the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "left-hand-side variable, rounding to a representable value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "/="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/_=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "/=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/_=(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/_=(_:_:)-2myj1": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": ">="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/_=(_:_:)-2myj1",
      "kind": "symbol",
      "role": "symbol",
      "title": ">=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/_=(_:_:)-2myj1"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/_=(_:_:)-502lh": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "<="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/_=(_:_:)-502lh",
      "kind": "symbol",
      "role": "symbol",
      "title": "<=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/_=(_:_:)-502lh"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/addProduct(_:_:)": {
      "abstract": [
        {
          "text": "Adds the product of the two given values to this value in place, computed",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "without intermediate rounding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "addProduct"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/addProduct(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "addProduct(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/addproduct(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/addingProduct(_:_:)": {
      "abstract": [
        {
          "text": "Returns the result of adding the product of the two given values to this",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value, computed without intermediate rounding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "addingProduct"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/addingProduct(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "addingProduct(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/addingproduct(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/exponent-swift.property": {
      "abstract": [
        {
          "text": "The exponent of the floating-point value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "exponent"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/exponent-swift.property",
      "kind": "symbol",
      "role": "symbol",
      "title": "exponent",
      "type": "topic",
      "url": "/documentation/swift/float80/exponent-swift.property"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/floatingPointClass": {
      "abstract": [
        {
          "text": "The classification of this value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "floatingPointClass"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s27FloatingPointClassificationO",
          "text": "FloatingPointClassification"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/floatingPointClass",
      "kind": "symbol",
      "role": "symbol",
      "title": "floatingPointClass",
      "type": "topic",
      "url": "/documentation/swift/float80/floatingpointclass"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/formRemainder(dividingBy:)": {
      "abstract": [
        {
          "text": "Replaces this value with the remainder of itself divided by the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "formRemainder"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "dividingBy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/formRemainder(dividingBy:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "formRemainder(dividingBy:)",
      "type": "topic",
      "url": "/documentation/swift/float80/formremainder(dividingby:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/formSquareRoot()": {
      "abstract": [
        {
          "text": "Replaces this value with its square root, rounded to a representable",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "formSquareRoot"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/formSquareRoot()",
      "kind": "symbol",
      "role": "symbol",
      "title": "formSquareRoot()",
      "type": "topic",
      "url": "/documentation/swift/float80/formsquareroot()"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/formTruncatingRemainder(dividingBy:)": {
      "abstract": [
        {
          "text": "Replaces this value with the remainder of itself divided by the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value using truncating division.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "formTruncatingRemainder"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "dividingBy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/formTruncatingRemainder(dividingBy:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "formTruncatingRemainder(dividingBy:)",
      "type": "topic",
      "url": "/documentation/swift/float80/formtruncatingremainder(dividingby:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/greatestFiniteMagnitude": {
      "abstract": [
        {
          "text": "The greatest finite number representable by this type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "greatestFiniteMagnitude"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/greatestFiniteMagnitude",
      "kind": "symbol",
      "role": "symbol",
      "title": "greatestFiniteMagnitude",
      "type": "topic",
      "url": "/documentation/swift/float80/greatestfinitemagnitude"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/infinity": {
      "abstract": [
        {
          "text": "Positive infinity.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "infinity"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/infinity",
      "kind": "symbol",
      "role": "symbol",
      "title": "infinity",
      "type": "topic",
      "url": "/documentation/swift/float80/infinity"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/init(_:)-33oy4": {
      "abstract": [
        {
          "text": "Creates a new value, rounded to the closest possible representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Source"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "Source"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/init(_:)-33oy4",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/init(_:)-33oy4"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/init(_:)-42n91": {
      "abstract": [
        {
          "text": "Creates a new value, rounded to the closest possible representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/init(_:)-42n91",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/init(_:)-42n91"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/init(exactly:)-2t92j": {
      "abstract": [
        {
          "text": "Creates a new value, if the given integer can be represented exactly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?<"
        },
        {
          "kind": "genericParameter",
          "text": "Source"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Source"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/init(exactly:)-2t92j",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/float80/init(exactly:)-2t92j"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/init(sign:exponent:significand:)": {
      "abstract": [
        {
          "text": "Creates a new value from the given sign, exponent, and significand.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "sign"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s17FloatingPointSignO",
          "text": "FloatingPointSign"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "exponent"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "significand"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/init(sign:exponent:significand:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(sign:exponent:significand:)",
      "type": "topic",
      "url": "/documentation/swift/float80/init(sign:exponent:significand:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/init(signOf:magnitudeOf:)": {
      "abstract": [
        {
          "text": "Creates a new floating-point value using the sign of one value and the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "magnitude of another.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "signOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "magnitudeOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/init(signOf:magnitudeOf:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(signOf:magnitudeOf:)",
      "type": "topic",
      "url": "/documentation/swift/float80/init(signof:magnitudeof:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/init(signOf:magnitudeOf:)-t3cu": {
      "abstract": [
        {
          "text": "Creates a new floating-point value using the sign of one value and the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "magnitude of another.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "signOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "magnitudeOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/init(signOf:magnitudeOf:)-t3cu",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(signOf:magnitudeOf:)",
      "type": "topic",
      "url": "/documentation/swift/float80/init(signof:magnitudeof:)-t3cu"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/isCanonical": {
      "abstract": [
        {
          "text": "A Boolean value indicating whether the instance’s representation is in",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "its canonical form.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isCanonical"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/isCanonical",
      "kind": "symbol",
      "role": "symbol",
      "title": "isCanonical",
      "type": "topic",
      "url": "/documentation/swift/float80/iscanonical"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/isEqual(to:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether this instance is equal to the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isEqual"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/isEqual(to:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "isEqual(to:)",
      "type": "topic",
      "url": "/documentation/swift/float80/isequal(to:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/isFinite": {
      "abstract": [
        {
          "text": "A Boolean value indicating whether this instance is finite.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isFinite"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/isFinite",
      "kind": "symbol",
      "role": "symbol",
      "title": "isFinite",
      "type": "topic",
      "url": "/documentation/swift/float80/isfinite"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/isInfinite": {
      "abstract": [
        {
          "text": "A Boolean value indicating whether the instance is infinite.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isInfinite"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/isInfinite",
      "kind": "symbol",
      "role": "symbol",
      "title": "isInfinite",
      "type": "topic",
      "url": "/documentation/swift/float80/isinfinite"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/isLess(than:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether this instance is less than the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isLess"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "than"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/isLess(than:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "isLess(than:)",
      "type": "topic",
      "url": "/documentation/swift/float80/isless(than:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/isLessThanOrEqualTo(_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether this instance is less than or",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "equal to the given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isLessThanOrEqualTo"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/isLessThanOrEqualTo(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "isLessThanOrEqualTo(_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/islessthanorequalto(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/isNaN": {
      "abstract": [
        {
          "text": "A Boolean value indicating whether the instance is NaN (“not a number”).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isNaN"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/isNaN",
      "kind": "symbol",
      "role": "symbol",
      "title": "isNaN",
      "type": "topic",
      "url": "/documentation/swift/float80/isnan"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/isNormal": {
      "abstract": [
        {
          "text": "A Boolean value indicating whether this instance is normal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isNormal"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/isNormal",
      "kind": "symbol",
      "role": "symbol",
      "title": "isNormal",
      "type": "topic",
      "url": "/documentation/swift/float80/isnormal"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/isSignalingNaN": {
      "abstract": [
        {
          "text": "A Boolean value indicating whether the instance is a signaling NaN.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isSignalingNaN"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/isSignalingNaN",
      "kind": "symbol",
      "role": "symbol",
      "title": "isSignalingNaN",
      "type": "topic",
      "url": "/documentation/swift/float80/issignalingnan"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/isSubnormal": {
      "abstract": [
        {
          "text": "A Boolean value indicating whether the instance is subnormal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isSubnormal"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/isSubnormal",
      "kind": "symbol",
      "role": "symbol",
      "title": "isSubnormal",
      "type": "topic",
      "url": "/documentation/swift/float80/issubnormal"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/isTotallyOrdered(belowOrEqualTo:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether this instance should precede",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "or tie positions with the given value in an ascending sort.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isTotallyOrdered"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "belowOrEqualTo"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/isTotallyOrdered(belowOrEqualTo:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "isTotallyOrdered(belowOrEqualTo:)",
      "type": "topic",
      "url": "/documentation/swift/float80/istotallyordered(beloworequalto:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/isZero": {
      "abstract": [
        {
          "text": "A Boolean value indicating whether the instance is equal to zero.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isZero"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/isZero",
      "kind": "symbol",
      "role": "symbol",
      "title": "isZero",
      "type": "topic",
      "url": "/documentation/swift/float80/iszero"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/leastNonzeroMagnitude": {
      "abstract": [
        {
          "text": "The least positive number.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "leastNonzeroMagnitude"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/leastNonzeroMagnitude",
      "kind": "symbol",
      "role": "symbol",
      "title": "leastNonzeroMagnitude",
      "type": "topic",
      "url": "/documentation/swift/float80/leastnonzeromagnitude"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/leastNormalMagnitude": {
      "abstract": [
        {
          "text": "The least positive normal number.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "leastNormalMagnitude"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/leastNormalMagnitude",
      "kind": "symbol",
      "role": "symbol",
      "title": "leastNormalMagnitude",
      "type": "topic",
      "url": "/documentation/swift/float80/leastnormalmagnitude"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/maximum(_:_:)": {
      "abstract": [
        {
          "text": "Returns the greater of the two given values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "maximum"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/maximum(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "maximum(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/maximum(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/maximumMagnitude(_:_:)": {
      "abstract": [
        {
          "text": "Returns the value with greater magnitude.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "maximumMagnitude"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/maximumMagnitude(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "maximumMagnitude(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/maximummagnitude(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/minimum(_:_:)": {
      "abstract": [
        {
          "text": "Returns the lesser of the two given values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "minimum"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/minimum(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "minimum(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/minimum(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/minimumMagnitude(_:_:)": {
      "abstract": [
        {
          "text": "Returns the value with lesser magnitude.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "minimumMagnitude"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/minimumMagnitude(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "minimumMagnitude(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/minimummagnitude(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/nan": {
      "abstract": [
        {
          "text": "A quiet NaN (“not a number”).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "nan"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/nan",
      "kind": "symbol",
      "role": "symbol",
      "title": "nan",
      "type": "topic",
      "url": "/documentation/swift/float80/nan"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/negate()": {
      "abstract": [
        {
          "text": "Replaces this value with its additive inverse.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "negate"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/negate()",
      "kind": "symbol",
      "role": "symbol",
      "title": "negate()",
      "type": "topic",
      "url": "/documentation/swift/float80/negate()"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/nextDown": {
      "abstract": [
        {
          "text": "The greatest representable value that compares less than this value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "nextDown"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/nextDown",
      "kind": "symbol",
      "role": "symbol",
      "title": "nextDown",
      "type": "topic",
      "url": "/documentation/swift/float80/nextdown"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/nextUp": {
      "abstract": [
        {
          "text": "The least representable value that compares greater than this value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "nextUp"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/nextUp",
      "kind": "symbol",
      "role": "symbol",
      "title": "nextUp",
      "type": "topic",
      "url": "/documentation/swift/float80/nextup"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/pi": {
      "abstract": [
        {
          "text": "The mathematical constant pi (π), approximately equal to 3.14159.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "pi"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/pi",
      "kind": "symbol",
      "role": "symbol",
      "title": "pi",
      "type": "topic",
      "url": "/documentation/swift/float80/pi"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/radix": {
      "abstract": [
        {
          "text": "The radix, or base of exponentiation, for a floating-point type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "radix"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/radix",
      "kind": "symbol",
      "role": "symbol",
      "title": "radix",
      "type": "topic",
      "url": "/documentation/swift/float80/radix"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/remainder(dividingBy:)": {
      "abstract": [
        {
          "text": "Returns the remainder of this value divided by the given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "remainder"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "dividingBy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/remainder(dividingBy:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "remainder(dividingBy:)",
      "type": "topic",
      "url": "/documentation/swift/float80/remainder(dividingby:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/round()": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "round"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/round()",
      "kind": "symbol",
      "role": "symbol",
      "title": "round()",
      "type": "topic",
      "url": "/documentation/swift/float80/round()"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/round(_:)": {
      "abstract": [
        {
          "text": "Rounds the value to an integral value using the specified rounding rule.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "round"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s25FloatingPointRoundingRuleO",
          "text": "FloatingPointRoundingRule"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/round(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "round(_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/round(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/rounded()": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "rounded"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/rounded()",
      "kind": "symbol",
      "role": "symbol",
      "title": "rounded()",
      "type": "topic",
      "url": "/documentation/swift/float80/rounded()"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/rounded(_:)": {
      "abstract": [
        {
          "text": "Returns this value rounded to an integral value using the specified",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "rounding rule.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "rounded"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s25FloatingPointRoundingRuleO",
          "text": "FloatingPointRoundingRule"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/rounded(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "rounded(_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/rounded(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/sign": {
      "abstract": [
        {
          "text": "The sign of the floating-point value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sign"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s17FloatingPointSignO",
          "text": "FloatingPointSign"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/sign",
      "kind": "symbol",
      "role": "symbol",
      "title": "sign",
      "type": "topic",
      "url": "/documentation/swift/float80/sign"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/signalingNaN": {
      "abstract": [
        {
          "text": "A signaling NaN (“not a number”).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "signalingNaN"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/signalingNaN",
      "kind": "symbol",
      "role": "symbol",
      "title": "signalingNaN",
      "type": "topic",
      "url": "/documentation/swift/float80/signalingnan"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/significand": {
      "abstract": [
        {
          "text": "The significand of the floating-point value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "significand"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/significand",
      "kind": "symbol",
      "role": "symbol",
      "title": "significand",
      "type": "topic",
      "url": "/documentation/swift/float80/significand"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/squareRoot()": {
      "abstract": [
        {
          "text": "Returns the square root of the value, rounded to a representable value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "squareRoot"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/squareRoot()",
      "kind": "symbol",
      "role": "symbol",
      "title": "squareRoot()",
      "type": "topic",
      "url": "/documentation/swift/float80/squareroot()"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/truncatingRemainder(dividingBy:)": {
      "abstract": [
        {
          "text": "Returns the remainder of this value divided by the given value using",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "truncating division.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "truncatingRemainder"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "dividingBy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/truncatingRemainder(dividingBy:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "truncatingRemainder(dividingBy:)",
      "type": "topic",
      "url": "/documentation/swift/float80/truncatingremainder(dividingby:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/ulp": {
      "abstract": [
        {
          "text": "The unit in the last place of this value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ulp"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/ulp",
      "kind": "symbol",
      "role": "symbol",
      "title": "ulp",
      "type": "topic",
      "url": "/documentation/swift/float80/ulp"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/ulpOfOne": {
      "abstract": [
        {
          "text": "The unit in the last place of 1.0.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ulpOfOne"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/ulpOfOne",
      "kind": "symbol",
      "role": "symbol",
      "title": "ulpOfOne",
      "type": "topic",
      "url": "/documentation/swift/float80/ulpofone"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/ulpOfOne-817da": {
      "abstract": [
        {
          "text": "The unit in the last place of 1.0.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ulpOfOne"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/ulpOfOne-817da",
      "kind": "symbol",
      "role": "symbol",
      "title": "ulpOfOne",
      "type": "topic",
      "url": "/documentation/swift/float80/ulpofone-817da"
    },
    "doc://com.apple.Swift/documentation/Swift/numbers-and-basic-values": {
      "abstract": [
        {
          "text": "Model data with numbers, Boolean values, and other fundamental types.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/numbers-and-basic-values",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Numbers and Basic Values",
      "type": "topic",
      "url": "/documentation/swift/numbers-and-basic-values"
    },
    "doc://com.apple.Swift/documentation/Swift/special-use-numeric-types": {
      "abstract": [
        {
          "text": "Work with fixed-width numeric types of different sizes.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/special-use-numeric-types",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Special-Use Numeric Types",
      "type": "topic",
      "url": "/documentation/swift/special-use-numeric-types"
    },
    "doc://com.apple.Swift/documentation/Swift/swift-standard-library": {
      "abstract": [
        {
          "text": "Solve complex problems and write high-performance, readable code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/swift-standard-library",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Swift Standard Library",
      "type": "topic",
      "url": "/documentation/swift/swift-standard-library"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "topicSections": [
    {
      "anchor": "Operators",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Float80/*(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/*=(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/+(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/+=(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/-(_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/-(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/-=(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/_(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/_(_:_:)-8otyc",
        "doc://com.apple.Swift/documentation/Swift/Float80/_=(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/_=(_:_:)-2myj1",
        "doc://com.apple.Swift/documentation/Swift/Float80/_=(_:_:)-502lh"
      ],
      "title": "Operators"
    },
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Float80/init(_:)-33oy4",
        "doc://com.apple.Swift/documentation/Swift/Float80/init(_:)-42n91",
        "doc://com.apple.Swift/documentation/Swift/Float80/init(exactly:)-2t92j",
        "doc://com.apple.Swift/documentation/Swift/Float80/init(sign:exponent:significand:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/init(signOf:magnitudeOf:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/init(signOf:magnitudeOf:)-t3cu"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Float80/exponent-swift.property",
        "doc://com.apple.Swift/documentation/Swift/Float80/floatingPointClass",
        "doc://com.apple.Swift/documentation/Swift/Float80/isCanonical",
        "doc://com.apple.Swift/documentation/Swift/Float80/isFinite",
        "doc://com.apple.Swift/documentation/Swift/Float80/isInfinite",
        "doc://com.apple.Swift/documentation/Swift/Float80/isNaN",
        "doc://com.apple.Swift/documentation/Swift/Float80/isNormal",
        "doc://com.apple.Swift/documentation/Swift/Float80/isSignalingNaN",
        "doc://com.apple.Swift/documentation/Swift/Float80/isSubnormal",
        "doc://com.apple.Swift/documentation/Swift/Float80/isZero",
        "doc://com.apple.Swift/documentation/Swift/Float80/nextDown",
        "doc://com.apple.Swift/documentation/Swift/Float80/nextUp",
        "doc://com.apple.Swift/documentation/Swift/Float80/sign",
        "doc://com.apple.Swift/documentation/Swift/Float80/significand",
        "doc://com.apple.Swift/documentation/Swift/Float80/ulp"
      ],
      "title": "Instance Properties"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Float80/addProduct(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/addingProduct(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/formRemainder(dividingBy:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/formSquareRoot()",
        "doc://com.apple.Swift/documentation/Swift/Float80/formTruncatingRemainder(dividingBy:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/isEqual(to:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/isLess(than:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/isLessThanOrEqualTo(_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/isTotallyOrdered(belowOrEqualTo:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/negate()",
        "doc://com.apple.Swift/documentation/Swift/Float80/remainder(dividingBy:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/round()",
        "doc://com.apple.Swift/documentation/Swift/Float80/round(_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/rounded()",
        "doc://com.apple.Swift/documentation/Swift/Float80/rounded(_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/squareRoot()",
        "doc://com.apple.Swift/documentation/Swift/Float80/truncatingRemainder(dividingBy:)"
      ],
      "title": "Instance Methods"
    },
    {
      "anchor": "Type-Aliases",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Float80/Exponent-swift.typealias"
      ],
      "title": "Type Aliases"
    },
    {
      "anchor": "Type-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Float80/greatestFiniteMagnitude",
        "doc://com.apple.Swift/documentation/Swift/Float80/infinity",
        "doc://com.apple.Swift/documentation/Swift/Float80/leastNonzeroMagnitude",
        "doc://com.apple.Swift/documentation/Swift/Float80/leastNormalMagnitude",
        "doc://com.apple.Swift/documentation/Swift/Float80/nan",
        "doc://com.apple.Swift/documentation/Swift/Float80/pi",
        "doc://com.apple.Swift/documentation/Swift/Float80/radix",
        "doc://com.apple.Swift/documentation/Swift/Float80/signalingNaN",
        "doc://com.apple.Swift/documentation/Swift/Float80/ulpOfOne",
        "doc://com.apple.Swift/documentation/Swift/Float80/ulpOfOne-817da"
      ],
      "title": "Type Properties"
    },
    {
      "anchor": "Type-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Float80/maximum(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/maximumMagnitude(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/minimum(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Float80/minimumMagnitude(_:_:)"
      ],
      "title": "Type Methods"
    }
  ]
}
