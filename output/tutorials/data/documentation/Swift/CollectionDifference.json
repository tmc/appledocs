{
  "abstract": [
    {
      "text": "A collection of insertions and removals that describe the difference",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "between two ordered collection states.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/CollectionDifference"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:s20CollectionDifferenceV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "CollectionDifference"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "CollectionDifference"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "CollectionDifference"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "CollectionDifference"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "ChangeElement"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "kind": "declarations"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Collection": {
      "abstract": [
        {
          "text": "A sequence whose elements can be traversed multiple times,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "nondestructively, and accessed by an indexed subscript.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "ChangeElement",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Collection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Collection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Collection"
        }
      ],
      "role": "symbol",
      "title": "Collection",
      "type": "topic",
      "url": "/documentation/swift/collection"
    },
    "doc://com.apple.Swift/documentation/Swift/CollectionDifference": {
      "abstract": [
        {
          "text": "A collection of insertions and removals that describe the difference",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "between two ordered collection states.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CollectionDifference"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CollectionDifference",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CollectionDifference"
        }
      ],
      "role": "symbol",
      "title": "CollectionDifference",
      "type": "topic",
      "url": "/documentation/swift/collectiondifference"
    },
    "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Change": {
      "abstract": [
        {
          "text": "A single change to a collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Change"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Change",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Change"
        }
      ],
      "role": "symbol",
      "title": "CollectionDifference.Change",
      "type": "topic",
      "url": "/documentation/swift/collectiondifference/change"
    },
    "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Collection-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Collection-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Collection Implementations",
      "type": "topic",
      "url": "/documentation/swift/collectiondifference/collection-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Decodable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Decodable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Decodable Implementations",
      "type": "topic",
      "url": "/documentation/swift/collectiondifference/decodable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Encodable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Encodable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Encodable Implementations",
      "type": "topic",
      "url": "/documentation/swift/collectiondifference/encodable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Equatable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Equatable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Equatable Implementations",
      "type": "topic",
      "url": "/documentation/swift/collectiondifference/equatable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Hashable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Hashable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Hashable Implementations",
      "type": "topic",
      "url": "/documentation/swift/collectiondifference/hashable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Sequence-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Sequence-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Sequence Implementations",
      "type": "topic",
      "url": "/documentation/swift/collectiondifference/sequence-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/CollectionDifference/formIndex(_:offsetBy:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "formIndex"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s20CollectionDifferenceV",
          "text": "CollectionDifference"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "ChangeElement"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s20CollectionDifferenceV5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "offsetBy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CollectionDifference/formIndex(_:offsetBy:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "formIndex(_:offsetBy:)",
      "type": "topic",
      "url": "/documentation/swift/collectiondifference/formindex(_:offsetby:)"
    },
    "doc://com.apple.Swift/documentation/Swift/CollectionDifference/index(before:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "index"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "before"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s20CollectionDifferenceV",
          "text": "CollectionDifference"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "ChangeElement"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s20CollectionDifferenceV5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s20CollectionDifferenceV",
          "text": "CollectionDifference"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "ChangeElement"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s20CollectionDifferenceV5IndexV",
          "text": "Index"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CollectionDifference/index(before:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "index(before:)",
      "type": "topic",
      "url": "/documentation/swift/collectiondifference/index(before:)"
    },
    "doc://com.apple.Swift/documentation/Swift/CollectionDifference/inferringMoves()": {
      "abstract": [
        {
          "text": "Returns a new collection difference with associations between individual",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements that have been removed and inserted only once.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "ChangeElement",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "inferringMoves"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s20CollectionDifferenceV",
          "text": "CollectionDifference"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "ChangeElement"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CollectionDifference/inferringMoves()",
      "kind": "symbol",
      "role": "symbol",
      "title": "inferringMoves()",
      "type": "topic",
      "url": "/documentation/swift/collectiondifference/inferringmoves()"
    },
    "doc://com.apple.Swift/documentation/Swift/CollectionDifference/init(_:)": {
      "abstract": [
        {
          "text": "Creates a new collection difference from a collection of changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?<"
        },
        {
          "kind": "genericParameter",
          "text": "Changes"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "Changes"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CollectionDifference/init(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/collectiondifference/init(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/CollectionDifference/insertions": {
      "abstract": [
        {
          "text": "The insertions contained by this difference, from lowest offset to",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "highest.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "insertions"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s20CollectionDifferenceV",
          "text": "CollectionDifference"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "ChangeElement"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s20CollectionDifferenceV6ChangeO",
          "text": "Change"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CollectionDifference/insertions",
      "kind": "symbol",
      "role": "symbol",
      "title": "insertions",
      "type": "topic",
      "url": "/documentation/swift/collectiondifference/insertions"
    },
    "doc://com.apple.Swift/documentation/Swift/CollectionDifference/inverse()": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "inverse"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s20CollectionDifferenceV",
          "text": "CollectionDifference"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "ChangeElement"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CollectionDifference/inverse()",
      "kind": "symbol",
      "role": "symbol",
      "title": "inverse()",
      "type": "topic",
      "url": "/documentation/swift/collectiondifference/inverse()"
    },
    "doc://com.apple.Swift/documentation/Swift/CollectionDifference/removals": {
      "abstract": [
        {
          "text": "The removals contained by this difference, from lowest offset to highest.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removals"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s20CollectionDifferenceV",
          "text": "CollectionDifference"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "ChangeElement"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s20CollectionDifferenceV6ChangeO",
          "text": "Change"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CollectionDifference/removals",
      "kind": "symbol",
      "role": "symbol",
      "title": "removals",
      "type": "topic",
      "url": "/documentation/swift/collectiondifference/removals"
    },
    "doc://com.apple.Swift/documentation/Swift/Copyable": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "ChangeElement",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Copyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/swift/copyable"
    },
    "doc://com.apple.Swift/documentation/Swift/Decodable": {
      "abstract": [
        {
          "text": "A type that can decode itself from an external representation.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "ChangeElement",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Decodable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Decodable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Decodable"
        }
      ],
      "role": "symbol",
      "title": "Decodable",
      "type": "topic",
      "url": "/documentation/swift/decodable"
    },
    "doc://com.apple.Swift/documentation/Swift/DropFirstSequence": {
      "abstract": [
        {
          "text": "A sequence that lazily consumes and drops ",
          "type": "text"
        },
        {
          "code": "n",
          "type": "codeVoice"
        },
        {
          "text": " elements from an underlying",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "Base",
          "type": "codeVoice"
        },
        {
          "text": " iterator before possibly returning the first available element.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DropFirstSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/DropFirstSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DropFirstSequence"
        }
      ],
      "role": "symbol",
      "title": "DropFirstSequence",
      "type": "topic",
      "url": "/documentation/swift/dropfirstsequence"
    },
    "doc://com.apple.Swift/documentation/Swift/DropWhileSequence": {
      "abstract": [
        {
          "text": "A sequence that lazily consumes and drops ",
          "type": "text"
        },
        {
          "code": "n",
          "type": "codeVoice"
        },
        {
          "text": " elements from an underlying",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "Base",
          "type": "codeVoice"
        },
        {
          "text": " iterator before possibly returning the first available element.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DropWhileSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/DropWhileSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DropWhileSequence"
        }
      ],
      "role": "symbol",
      "title": "DropWhileSequence",
      "type": "topic",
      "url": "/documentation/swift/dropwhilesequence"
    },
    "doc://com.apple.Swift/documentation/Swift/Encodable": {
      "abstract": [
        {
          "text": "A type that can encode itself to an external representation.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "ChangeElement",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Decodable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Encodable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Encodable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Encodable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Encodable"
        }
      ],
      "role": "symbol",
      "title": "Encodable",
      "type": "topic",
      "url": "/documentation/swift/encodable"
    },
    "doc://com.apple.Swift/documentation/Swift/EnumeratedSequence": {
      "abstract": [
        {
          "text": "An enumeration of the elements of a sequence or collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EnumeratedSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/EnumeratedSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EnumeratedSequence"
        }
      ],
      "role": "symbol",
      "title": "EnumeratedSequence",
      "type": "topic",
      "url": "/documentation/swift/enumeratedsequence"
    },
    "doc://com.apple.Swift/documentation/Swift/Equatable": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "ChangeElement",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Equatable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/swift/equatable"
    },
    "doc://com.apple.Swift/documentation/Swift/FlattenCollection": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FlattenCollection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/FlattenCollection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FlattenCollection"
        }
      ],
      "role": "symbol",
      "title": "FlattenCollection",
      "type": "topic",
      "url": "/documentation/swift/flattencollection"
    },
    "doc://com.apple.Swift/documentation/Swift/FlattenSequence": {
      "abstract": [
        {
          "text": "A sequence consisting of all the elements contained in each segment",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contained in some ",
          "type": "text"
        },
        {
          "code": "Base",
          "type": "codeVoice"
        },
        {
          "text": " sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FlattenSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/FlattenSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FlattenSequence"
        }
      ],
      "role": "symbol",
      "title": "FlattenSequence",
      "type": "topic",
      "url": "/documentation/swift/flattensequence"
    },
    "doc://com.apple.Swift/documentation/Swift/Hashable": {
      "abstract": [
        {
          "text": "A type that can be hashed into a ",
          "type": "text"
        },
        {
          "code": "Hasher",
          "type": "codeVoice"
        },
        {
          "text": " to produce an integer hash value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "ChangeElement",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Hashable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Hashable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/swift/hashable"
    },
    "doc://com.apple.Swift/documentation/Swift/JoinedSequence": {
      "abstract": [
        {
          "text": "A sequence that presents the elements of a base sequence of sequences",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "concatenated using a given separator.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "JoinedSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/JoinedSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "JoinedSequence"
        }
      ],
      "role": "symbol",
      "title": "JoinedSequence",
      "type": "topic",
      "url": "/documentation/swift/joinedsequence"
    },
    "doc://com.apple.Swift/documentation/Swift/PrefixSequence": {
      "abstract": [
        {
          "text": "A sequence that only consumes up to ",
          "type": "text"
        },
        {
          "code": "n",
          "type": "codeVoice"
        },
        {
          "text": " elements from an underlying",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "Base",
          "type": "codeVoice"
        },
        {
          "text": " iterator.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PrefixSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/PrefixSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PrefixSequence"
        }
      ],
      "role": "symbol",
      "title": "PrefixSequence",
      "type": "topic",
      "url": "/documentation/swift/prefixsequence"
    },
    "doc://com.apple.Swift/documentation/Swift/Repeated": {
      "abstract": [
        {
          "text": "A collection whose elements are all identical.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Repeated"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Repeated",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Repeated"
        }
      ],
      "role": "symbol",
      "title": "Repeated",
      "type": "topic",
      "url": "/documentation/swift/repeated"
    },
    "doc://com.apple.Swift/documentation/Swift/ReversedCollection": {
      "abstract": [
        {
          "text": "A collection that presents the elements of its base collection",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "in reverse order.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ReversedCollection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ReversedCollection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ReversedCollection"
        }
      ],
      "role": "symbol",
      "title": "ReversedCollection",
      "type": "topic",
      "url": "/documentation/swift/reversedcollection"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "ChangeElement",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Sendable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.Swift/documentation/Swift/Sequence": {
      "abstract": [
        {
          "text": "A type that provides sequential, iterated access to its elements.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "ChangeElement",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sequence"
        }
      ],
      "role": "symbol",
      "title": "Sequence",
      "type": "topic",
      "url": "/documentation/swift/sequence"
    },
    "doc://com.apple.Swift/documentation/Swift/StrideThrough": {
      "abstract": [
        {
          "text": "A sequence of values formed by striding over a closed interval.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "StrideThrough"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StrideThrough",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StrideThrough"
        }
      ],
      "role": "symbol",
      "title": "StrideThrough",
      "type": "topic",
      "url": "/documentation/swift/stridethrough"
    },
    "doc://com.apple.Swift/documentation/Swift/StrideTo": {
      "abstract": [
        {
          "text": "A sequence of values formed by striding over a half-open interval.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "StrideTo"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StrideTo",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StrideTo"
        }
      ],
      "role": "symbol",
      "title": "StrideTo",
      "type": "topic",
      "url": "/documentation/swift/strideto"
    },
    "doc://com.apple.Swift/documentation/Swift/UnfoldSequence": {
      "abstract": [
        {
          "text": "A sequence whose elements are produced via repeated applications of a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "closure to some mutable state.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnfoldSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnfoldSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnfoldSequence"
        }
      ],
      "role": "symbol",
      "title": "UnfoldSequence",
      "type": "topic",
      "url": "/documentation/swift/unfoldsequence"
    },
    "doc://com.apple.Swift/documentation/Swift/Zip2Sequence": {
      "abstract": [
        {
          "text": "A sequence of pairs built out of two underlying sequences.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Zip2Sequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Zip2Sequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Zip2Sequence"
        }
      ],
      "role": "symbol",
      "title": "Zip2Sequence",
      "type": "topic",
      "url": "/documentation/swift/zip2sequence"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Collection",
        "doc://com.apple.Swift/documentation/Swift/Copyable",
        "doc://com.apple.Swift/documentation/Swift/Decodable",
        "doc://com.apple.Swift/documentation/Swift/Encodable",
        "doc://com.apple.Swift/documentation/Swift/Equatable",
        "doc://com.apple.Swift/documentation/Swift/Hashable",
        "doc://com.apple.Swift/documentation/Swift/Sendable",
        "doc://com.apple.Swift/documentation/Swift/Sequence"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Wrappers-for-Algorithms",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/DropFirstSequence",
        "doc://com.apple.Swift/documentation/Swift/DropWhileSequence",
        "doc://com.apple.Swift/documentation/Swift/EnumeratedSequence",
        "doc://com.apple.Swift/documentation/Swift/FlattenCollection",
        "doc://com.apple.Swift/documentation/Swift/FlattenSequence",
        "doc://com.apple.Swift/documentation/Swift/JoinedSequence",
        "doc://com.apple.Swift/documentation/Swift/PrefixSequence",
        "doc://com.apple.Swift/documentation/Swift/Repeated",
        "doc://com.apple.Swift/documentation/Swift/ReversedCollection",
        "doc://com.apple.Swift/documentation/Swift/StrideTo",
        "doc://com.apple.Swift/documentation/Swift/StrideThrough",
        "doc://com.apple.Swift/documentation/Swift/UnfoldSequence",
        "doc://com.apple.Swift/documentation/Swift/Zip2Sequence"
      ],
      "title": "Wrappers for Algorithms"
    }
  ],
  "topicSections": [
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CollectionDifference/init(_:)"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CollectionDifference/insertions",
        "doc://com.apple.Swift/documentation/Swift/CollectionDifference/removals"
      ],
      "title": "Instance Properties"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CollectionDifference/formIndex(_:offsetBy:)",
        "doc://com.apple.Swift/documentation/Swift/CollectionDifference/index(before:)",
        "doc://com.apple.Swift/documentation/Swift/CollectionDifference/inferringMoves()",
        "doc://com.apple.Swift/documentation/Swift/CollectionDifference/inverse()"
      ],
      "title": "Instance Methods"
    },
    {
      "anchor": "Enumerations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Change"
      ],
      "title": "Enumerations"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Collection-Implementations",
        "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Decodable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Encodable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Equatable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Hashable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/CollectionDifference/Sequence-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/collectiondifference"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
