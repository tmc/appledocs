{
  "abstract": [
    {
      "text": "An integer type with a binary representation.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/BinaryInteger"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:Sz",
    "fragments": [
      {
        "kind": "keyword",
        "text": "protocol"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "BinaryInteger"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "BinaryInteger"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Protocol",
    "symbolKind": "protocol",
    "title": "BinaryInteger"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "BinaryInteger"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s23CustomStringConvertibleP",
              "text": "CustomStringConvertible"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Hashable",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SH",
              "text": "Hashable"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Numeric",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sj",
              "text": "Numeric"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sx",
              "text": "Strideable"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Numeric/Magnitude-swift.associatedtype",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sj9MagnitudeQa",
              "text": "Magnitude"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sz",
              "text": "BinaryInteger"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Numeric/Magnitude-swift.associatedtype",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sj9MagnitudeQa",
              "text": "Magnitude"
            },
            {
              "kind": "text",
              "text": " == "
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Numeric/Magnitude-swift.associatedtype",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sj9MagnitudeQa",
              "text": "Magnitude"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Numeric/Magnitude-swift.associatedtype",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sj9MagnitudeQa",
              "text": "Magnitude"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "BinaryInteger",
              "type": "codeVoice"
            },
            {
              "text": " protocol is the basis for all the integer types",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "provided by the standard library. All of the standard libraryâ€™s integer",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "types, such as ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "UInt32",
              "type": "codeVoice"
            },
            {
              "text": ", conform to ",
              "type": "text"
            },
            {
              "code": "BinaryInteger",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Converting-Between-Numeric-Types",
          "level": 1,
          "text": "Converting Between Numeric Types",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can create new instances of a type that conforms to the ",
              "type": "text"
            },
            {
              "code": "BinaryInteger",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "protocol from a floating-point number or another binary integer of any",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "type. The ",
              "type": "text"
            },
            {
              "code": "BinaryInteger",
              "type": "codeVoice"
            },
            {
              "text": " protocol provides initializers for four",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "different kinds of conversion.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Range-Checked-Conversion",
          "level": 2,
          "text": "Range-Checked Conversion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You use the default ",
              "type": "text"
            },
            {
              "code": "init(_:)",
              "type": "codeVoice"
            },
            {
              "text": " initializer to create a new instance when",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "youâ€™re sure that the value passed is representable in the new type. For",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "example, an instance of ",
              "type": "text"
            },
            {
              "code": "Int16",
              "type": "codeVoice"
            },
            {
              "text": " can represent the value ",
              "type": "text"
            },
            {
              "code": "500",
              "type": "codeVoice"
            },
            {
              "text": ", so the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "first conversion in the code sample below succeeds. That same value is too",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "large to represent as an ",
              "type": "text"
            },
            {
              "code": "Int8",
              "type": "codeVoice"
            },
            {
              "text": " instance, so the second conversion fails,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "triggering a runtime error.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let x: Int = 500",
            "let y = Int16(x)",
            "// y == 500",
            "",
            "let z = Int8(x)",
            "// Error: Not enough bits to represent..."
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When you create a binary integer from a floating-point value using the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "default initializer, the value is rounded toward zero before the range is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "checked. In the following example, the value ",
              "type": "text"
            },
            {
              "code": "127.75",
              "type": "codeVoice"
            },
            {
              "text": " is rounded to ",
              "type": "text"
            },
            {
              "code": "127",
              "type": "codeVoice"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "which is representable by the ",
              "type": "text"
            },
            {
              "code": "Int8",
              "type": "codeVoice"
            },
            {
              "text": " type.  ",
              "type": "text"
            },
            {
              "code": "128.25",
              "type": "codeVoice"
            },
            {
              "text": " is rounded to ",
              "type": "text"
            },
            {
              "code": "128",
              "type": "codeVoice"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "which is not representable as an ",
              "type": "text"
            },
            {
              "code": "Int8",
              "type": "codeVoice"
            },
            {
              "text": " instance, triggering a runtime",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "error.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let e = Int8(127.75)",
            "// e == 127",
            "",
            "let f = Int8(128.25)",
            "// Error: Double value cannot be converted..."
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Exact-Conversion",
          "level": 2,
          "text": "Exact Conversion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "code": "init?(exactly:)",
              "type": "codeVoice"
            },
            {
              "text": " initializer to create a new instance after",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "checking whether the passed value is representable. Instead of trapping on",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "out-of-range values, using the failable ",
              "type": "text"
            },
            {
              "code": "init?(exactly:)",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "initializer results in ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let x = Int16(exactly: 500)",
            "// x == Optional(500)",
            "",
            "let y = Int8(exactly: 500)",
            "// y == nil"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When converting floating-point values, the ",
              "type": "text"
            },
            {
              "code": "init?(exactly:)",
              "type": "codeVoice"
            },
            {
              "text": " initializer",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "checks both that the passed value has no fractional part and that the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "value is representable in the resulting type.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let e = Int8(exactly: 23.0)       // integral value, representable",
            "// e == Optional(23)",
            "",
            "let f = Int8(exactly: 23.75)      // fractional value, representable",
            "// f == nil",
            "",
            "let g = Int8(exactly: 500.0)      // integral value, nonrepresentable",
            "// g == nil"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Clamping-Conversion",
          "level": 2,
          "text": "Clamping Conversion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "code": "init(clamping:)",
              "type": "codeVoice"
            },
            {
              "text": " initializer to create a new instance of a binary",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "integer type where out-of-range values are clamped to the representable",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "range of the type. For a type ",
              "type": "text"
            },
            {
              "code": "T",
              "type": "codeVoice"
            },
            {
              "text": ", the resulting value is in the range",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "T.min...T.max",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let x = Int16(clamping: 500)",
            "// x == 500",
            "",
            "let y = Int8(clamping: 500)",
            "// y == 127",
            "",
            "let z = UInt8(clamping: -500)",
            "// z == 0"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Bit-Pattern-Conversion",
          "level": 2,
          "text": "Bit Pattern Conversion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "code": "init(truncatingIfNeeded:)",
              "type": "codeVoice"
            },
            {
              "text": " initializer to create a new instance",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "with the same bit pattern as the passed value, extending or truncating the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "valueâ€™s representation as necessary. Note that the value may not be",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "preserved, particularly when converting between signed to unsigned integer",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "types or when the destination type has a smaller bit width than the source",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "type. The following example shows how extending and truncating work for",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "nonnegative integers:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let q: Int16 = 850",
            "// q == 0b00000011_01010010",
            "",
            "let r = Int8(truncatingIfNeeded: q)      // truncate 'q' to fit in 8 bits",
            "// r == 82",
            "//   == 0b01010010",
            "",
            "let s = Int16(truncatingIfNeeded: r)     // extend 'r' to fill 16 bits",
            "// s == 82",
            "//   == 0b00000000_01010010"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Any padding is performed by ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "sign-extending",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " the passed value. When",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "nonnegative integers are extended, the result is padded with zeroes. When",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "negative integers are extended, the result is padded with ones. This",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "example shows several extending conversions of a negative valueâ€”note",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that negative values are sign-extended even when converting to an unsigned",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "type.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let t: Int8 = -100",
            "// t == -100",
            "// t's binary representation == 0b10011100",
            "",
            "let u = UInt8(truncatingIfNeeded: t)",
            "// u == 156",
            "// u's binary representation == 0b10011100",
            "",
            "let v = Int16(truncatingIfNeeded: t)",
            "// v == -100",
            "// v's binary representation == 0b11111111_10011100",
            "",
            "let w = UInt16(truncatingIfNeeded: t)",
            "// w == 65436",
            "// w's binary representation == 0b11111111_10011100"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Comparing-Across-Integer-Types",
          "level": 1,
          "text": "Comparing Across Integer Types",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can use relational operators, such as the less-than and equal-to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "operators (",
              "type": "text"
            },
            {
              "code": "<",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "==",
              "type": "codeVoice"
            },
            {
              "text": "), to compare instances of different binary integer",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "types. The following example compares instances of the ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "code": "UInt",
              "type": "codeVoice"
            },
            {
              "text": ", and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "UInt8",
              "type": "codeVoice"
            },
            {
              "text": " types:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let x: Int = -23",
            "let y: UInt = 1_000",
            "let z: UInt8 = 23",
            "",
            "if x < y {",
            "    print(\"\\(x) is less than \\(y).\")",
            "}",
            "// Prints \"-23 is less than 1000.\"",
            "",
            "if z > x {",
            "    print(\"\\(z) is greater than \\(x).\")",
            "}",
            "// Prints \"23 is greater than -23.\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/AdditiveArithmetic": {
      "abstract": [
        {
          "text": "A type with values that support addition and subtraction.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AdditiveArithmetic"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AdditiveArithmetic",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AdditiveArithmetic"
        }
      ],
      "role": "symbol",
      "title": "AdditiveArithmetic",
      "type": "topic",
      "url": "/documentation/swift/additivearithmetic"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger": {
      "abstract": [
        {
          "text": "An integer type with a binary representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BinaryInteger"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BinaryInteger"
        }
      ],
      "role": "symbol",
      "title": "BinaryInteger",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/BinaryInteger-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/BinaryInteger-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "BinaryInteger Implementations",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/binaryinteger-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/Equatable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/Equatable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Equatable Implementations",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/equatable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/Words-swift.associatedtype": {
      "abstract": [
        {
          "text": "A type that represents the words of a binary integer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Words"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sk",
          "text": "RandomAccessCollection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/Words-swift.associatedtype",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "Words",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/words-swift.associatedtype"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_(_:_:)-30ngi": {
      "abstract": [
        {
          "text": "Returns the remainder of dividing the first value by the second.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "%"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_(_:_:)-30ngi",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "%(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/_(_:_:)-30ngi"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_(_:_:)-3qw5d": {
      "abstract": [
        {
          "text": "Returns the result of performing a bitwise XOR operation on the two given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "^"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_(_:_:)-3qw5d",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "^(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/_(_:_:)-3qw5d"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_(_:_:)-6qhsw": {
      "abstract": [
        {
          "text": "Returns the result of performing a bitwise OR operation on the two given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "|"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_(_:_:)-6qhsw",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "|(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/_(_:_:)-6qhsw"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_=(_:_:)-1fatv": {
      "abstract": [
        {
          "text": "Stores the result of performing a bitwise XOR operation on the two given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values in the left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "^="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_=(_:_:)-1fatv",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "^=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/_=(_:_:)-1fatv"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_=(_:_:)-4vfmj": {
      "abstract": [
        {
          "text": "Stores the result of performing a bitwise OR operation on the two given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values in the left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "|="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_=(_:_:)-4vfmj",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "|=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/_=(_:_:)-4vfmj"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_=(_:_:)-79wgi": {
      "abstract": [
        {
          "text": "Divides the first value by the second and stores the remainder in the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "%="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_=(_:_:)-79wgi",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "%=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/_=(_:_:)-79wgi"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/__(_:_:)-28lmu": {
      "abstract": [
        {
          "text": "Returns the result of shifting a valueâ€™s binary representation the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "specified number of digits to the left.",
          "type": "text"
        }
      ],
      "defaultImplementations": 2,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "<<"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "RHS"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "RHS"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/__(_:_:)-28lmu",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "<<(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/__(_:_:)-28lmu"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/__(_:_:)-4vnij": {
      "abstract": [
        {
          "text": "Returns the result of shifting a valueâ€™s binary representation the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "specified number of digits to the right.",
          "type": "text"
        }
      ],
      "defaultImplementations": 2,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": ">>"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "RHS"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "RHS"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/__(_:_:)-4vnij",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": ">>(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/__(_:_:)-4vnij"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/__=(_:_:)-5lhky": {
      "abstract": [
        {
          "text": "Stores the result of shifting a valueâ€™s binary representation the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "specified number of digits to the right in the left-hand-side variable.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": ">>="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "RHS"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "RHS"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/__=(_:_:)-5lhky",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": ">>=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/__=(_:_:)-5lhky"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/__=(_:_:)-9pzpp": {
      "abstract": [
        {
          "text": "Stores the result of shifting a valueâ€™s binary representation the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "specified number of digits to the left in the left-hand-side variable.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "<<="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "RHS"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "RHS"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/__=(_:_:)-9pzpp",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "<<=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/__=(_:_:)-9pzpp"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/bitWidth": {
      "abstract": [
        {
          "text": "The number of bits in the current binary representation of this value.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bitWidth"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/bitWidth",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "bitWidth",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/bitwidth"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/formatted()": {
      "abstract": [
        {
          "text": "Format ",
          "type": "text"
        },
        {
          "code": "self",
          "type": "codeVoice"
        },
        {
          "text": " using ",
          "type": "text"
        },
        {
          "code": "IntegerFormatStyle()",
          "type": "codeVoice"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "formatted"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/formatted()",
      "kind": "symbol",
      "role": "symbol",
      "title": "formatted()",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/formatted()"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/formatted(_:)-4qd73": {
      "abstract": [
        {
          "text": "Format ",
          "type": "text"
        },
        {
          "code": "self",
          "type": "codeVoice"
        },
        {
          "text": " with the given format.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "formatted"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation11FormatStyleP0B6OutputQa",
          "text": "FormatOutput"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/formatted(_:)-4qd73",
      "kind": "symbol",
      "role": "symbol",
      "title": "formatted(_:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/formatted(_:)-4qd73"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/formatted(_:)-73k3e": {
      "abstract": [
        {
          "text": "Format ",
          "type": "text"
        },
        {
          "code": "self",
          "type": "codeVoice"
        },
        {
          "text": " with the given format. ",
          "type": "text"
        },
        {
          "code": "self",
          "type": "codeVoice"
        },
        {
          "text": " is first converted to ",
          "type": "text"
        },
        {
          "code": "S.FormatInput",
          "type": "codeVoice"
        },
        {
          "text": " type, then format with the given format.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "formatted"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation11FormatStyleP0B6OutputQa",
          "text": "FormatOutput"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/formatted(_:)-73k3e",
      "kind": "symbol",
      "role": "symbol",
      "title": "formatted(_:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/formatted(_:)-73k3e"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init()": {
      "abstract": [
        {
          "text": "Creates a new value equal to zero.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init()",
      "kind": "symbol",
      "role": "symbol",
      "title": "init()",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/init()"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:)-2ln0u": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, rounding toward",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "zero.",
          "type": "text"
        }
      ],
      "defaultImplementations": 4,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:)-2ln0u",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/init(_:)-2ln0u"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:)-8gmdl": {
      "abstract": [
        {
          "text": "Creates a new instance from the given integer.",
          "type": "text"
        }
      ],
      "defaultImplementations": 4,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:)-8gmdl",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/init(_:)-8gmdl"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:format:lenient:)-2qv61": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "format"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation18IntegerFormatStyleV",
          "text": "IntegerFormatStyle"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "lenient"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:format:lenient:)-2qv61",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:format:lenient:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/init(_:format:lenient:)-2qv61"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:format:lenient:)-50z9r": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "format"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation18IntegerFormatStyleV",
          "text": "IntegerFormatStyle"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation18IntegerFormatStyleV8CurrencyV",
          "text": "Currency"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "lenient"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:format:lenient:)-50z9r",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:format:lenient:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/init(_:format:lenient:)-50z9r"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:format:lenient:)-86j1g": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "format"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation18IntegerFormatStyleV",
          "text": "IntegerFormatStyle"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation18IntegerFormatStyleV7PercentV",
          "text": "Percent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "lenient"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:format:lenient:)-86j1g",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:format:lenient:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/init(_:format:lenient:)-86j1g"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:strategy:)-207i8": {
      "abstract": [
        {
          "text": "Initialize an instance by parsing ",
          "type": "text"
        },
        {
          "code": "value",
          "type": "codeVoice"
        },
        {
          "text": " with the given ",
          "type": "text"
        },
        {
          "code": "strategy",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation13ParseStrategyP0B5InputQa",
          "text": "ParseInput"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "strategy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:strategy:)-207i8",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:strategy:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/init(_:strategy:)-207i8"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(clamping:)": {
      "abstract": [
        {
          "text": "Creates a new instance with the representable value thatâ€™s closest to the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given integer.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "clamping"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(clamping:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "init(clamping:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/init(clamping:)"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(exactly:)": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, if it can be",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "represented exactly.",
          "type": "text"
        }
      ],
      "defaultImplementations": 3,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(exactly:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/init(exactly:)"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(truncatingIfNeeded:)": {
      "abstract": [
        {
          "text": "Creates a new instance from the bit pattern of the given instance by",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sign-extending or truncating to fit this type.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "truncatingIfNeeded"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(truncatingIfNeeded:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "init(truncatingIfNeeded:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/init(truncatingifneeded:)"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/isMultiple(of:)": {
      "abstract": [
        {
          "text": "Returns ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": " if this value is a multiple of the given value, and ",
          "type": "text"
        },
        {
          "code": "false",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "otherwise.",
          "type": "text"
        }
      ],
      "defaultImplementations": 2,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isMultiple"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/isMultiple(of:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "isMultiple(of:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/ismultiple(of:)"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/isSigned": {
      "abstract": [
        {
          "text": "A Boolean value indicating whether this type is a signed integer type.",
          "type": "text"
        }
      ],
      "defaultImplementations": 2,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isSigned"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/isSigned",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "isSigned",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/issigned"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/quotientAndRemainder(dividingBy:)": {
      "abstract": [
        {
          "text": "Returns the quotient and remainder of this value divided by the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "quotientAndRemainder"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "dividingBy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> (quotient"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", remainder"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/quotientAndRemainder(dividingBy:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "quotientAndRemainder(dividingBy:)",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/quotientandremainder(dividingby:)"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/signum()": {
      "abstract": [
        {
          "text": "Returns ",
          "type": "text"
        },
        {
          "code": "-1",
          "type": "codeVoice"
        },
        {
          "text": " if this value is negative and ",
          "type": "text"
        },
        {
          "code": "1",
          "type": "codeVoice"
        },
        {
          "text": " if itâ€™s positive;",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "otherwise, ",
          "type": "text"
        },
        {
          "code": "0",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "signum"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/signum()",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "signum()",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/signum()"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/trailingZeroBitCount": {
      "abstract": [
        {
          "text": "The number of trailing zeros in this valueâ€™s binary representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "trailingZeroBitCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/trailingZeroBitCount",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "trailingZeroBitCount",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/trailingzerobitcount"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger/words-swift.property": {
      "abstract": [
        {
          "text": "A collection containing the words of this valueâ€™s binary",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "representation, in order from the least significant to most significant.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "words"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sz5WordsQa",
          "text": "Words"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger/words-swift.property",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "words",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger/words-swift.property"
    },
    "doc://com.apple.Swift/documentation/Swift/Comparable": {
      "abstract": [
        {
          "text": "A type that can be compared using the relational operators ",
          "type": "text"
        },
        {
          "code": "<",
          "type": "codeVoice"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "code": "<=",
          "type": "codeVoice"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "code": ">=",
          "type": "codeVoice"
        },
        {
          "text": ",",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and ",
          "type": "text"
        },
        {
          "code": ">",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Comparable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Comparable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Comparable"
        }
      ],
      "role": "symbol",
      "title": "Comparable",
      "type": "topic",
      "url": "/documentation/swift/comparable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/Equatable": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Equatable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/swift/equatable"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with an integer literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByIntegerLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByIntegerLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByIntegerLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebyintegerliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/FixedWidthInteger": {
      "abstract": [
        {
          "text": "An integer type that uses a fixed size for every instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FixedWidthInteger"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/FixedWidthInteger",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FixedWidthInteger"
        }
      ],
      "role": "symbol",
      "title": "FixedWidthInteger",
      "type": "topic",
      "url": "/documentation/swift/fixedwidthinteger"
    },
    "doc://com.apple.Swift/documentation/Swift/Hashable": {
      "abstract": [
        {
          "text": "A type that can be hashed into a ",
          "type": "text"
        },
        {
          "code": "Hasher",
          "type": "codeVoice"
        },
        {
          "text": " to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Hashable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/swift/hashable"
    },
    "doc://com.apple.Swift/documentation/Swift/Int": {
      "abstract": [
        {
          "text": "A signed integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int"
        }
      ],
      "role": "symbol",
      "title": "Int",
      "type": "topic",
      "url": "/documentation/swift/int"
    },
    "doc://com.apple.Swift/documentation/Swift/Int128": {
      "abstract": [
        {
          "text": "A 128-bit signed integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int128"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int128",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int128"
        }
      ],
      "role": "symbol",
      "title": "Int128",
      "type": "topic",
      "url": "/documentation/swift/int128"
    },
    "doc://com.apple.Swift/documentation/Swift/Int16": {
      "abstract": [
        {
          "text": "A 16-bit signed integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int16"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int16",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int16"
        }
      ],
      "role": "symbol",
      "title": "Int16",
      "type": "topic",
      "url": "/documentation/swift/int16"
    },
    "doc://com.apple.Swift/documentation/Swift/Int32": {
      "abstract": [
        {
          "text": "A 32-bit signed integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int32"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int32",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int32"
        }
      ],
      "role": "symbol",
      "title": "Int32",
      "type": "topic",
      "url": "/documentation/swift/int32"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64": {
      "abstract": [
        {
          "text": "A 64-bit signed integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int64"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int64"
        }
      ],
      "role": "symbol",
      "title": "Int64",
      "type": "topic",
      "url": "/documentation/swift/int64"
    },
    "doc://com.apple.Swift/documentation/Swift/Int8": {
      "abstract": [
        {
          "text": "An 8-bit signed integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int8"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int8",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int8"
        }
      ],
      "role": "symbol",
      "title": "Int8",
      "type": "topic",
      "url": "/documentation/swift/int8"
    },
    "doc://com.apple.Swift/documentation/Swift/Numeric": {
      "abstract": [
        {
          "text": "A type with values that support multiplication.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Numeric"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Numeric",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Numeric"
        }
      ],
      "role": "symbol",
      "title": "Numeric",
      "type": "topic",
      "url": "/documentation/swift/numeric"
    },
    "doc://com.apple.Swift/documentation/Swift/Numeric/Magnitude-swift.associatedtype": {
      "abstract": [
        {
          "text": "A type that can represent the absolute value of any possible value of the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "conforming type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Magnitude"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SL",
          "text": "Comparable"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sj",
          "text": "Numeric"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Numeric/Magnitude-swift.associatedtype",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "Magnitude",
      "type": "topic",
      "url": "/documentation/swift/numeric/magnitude-swift.associatedtype"
    },
    "doc://com.apple.Swift/documentation/Swift/SignedInteger": {
      "abstract": [
        {
          "text": "An integer type that can represent both positive and negative values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SignedInteger"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SignedInteger",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SignedInteger"
        }
      ],
      "role": "symbol",
      "title": "SignedInteger",
      "type": "topic",
      "url": "/documentation/swift/signedinteger"
    },
    "doc://com.apple.Swift/documentation/Swift/Strideable": {
      "abstract": [
        {
          "text": "A type representing continuous, one-dimensional values that can be offset",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and measured.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Strideable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Strideable"
        }
      ],
      "role": "symbol",
      "title": "Strideable",
      "type": "topic",
      "url": "/documentation/swift/strideable"
    },
    "doc://com.apple.Swift/documentation/Swift/UInt": {
      "abstract": [
        {
          "text": "An unsigned integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UInt",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UInt"
        }
      ],
      "role": "symbol",
      "title": "UInt",
      "type": "topic",
      "url": "/documentation/swift/uint"
    },
    "doc://com.apple.Swift/documentation/Swift/UInt128": {
      "abstract": [
        {
          "text": "A 128-bit unsigned integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt128"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UInt128",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UInt128"
        }
      ],
      "role": "symbol",
      "title": "UInt128",
      "type": "topic",
      "url": "/documentation/swift/uint128"
    },
    "doc://com.apple.Swift/documentation/Swift/UInt16": {
      "abstract": [
        {
          "text": "A 16-bit unsigned integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt16"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UInt16",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UInt16"
        }
      ],
      "role": "symbol",
      "title": "UInt16",
      "type": "topic",
      "url": "/documentation/swift/uint16"
    },
    "doc://com.apple.Swift/documentation/Swift/UInt32": {
      "abstract": [
        {
          "text": "A 32-bit unsigned integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt32"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UInt32",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UInt32"
        }
      ],
      "role": "symbol",
      "title": "UInt32",
      "type": "topic",
      "url": "/documentation/swift/uint32"
    },
    "doc://com.apple.Swift/documentation/Swift/UInt64": {
      "abstract": [
        {
          "text": "A 64-bit unsigned integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt64"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UInt64",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UInt64"
        }
      ],
      "role": "symbol",
      "title": "UInt64",
      "type": "topic",
      "url": "/documentation/swift/uint64"
    },
    "doc://com.apple.Swift/documentation/Swift/UInt8": {
      "abstract": [
        {
          "text": "An 8-bit unsigned integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt8"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UInt8",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UInt8"
        }
      ],
      "role": "symbol",
      "title": "UInt8",
      "type": "topic",
      "url": "/documentation/swift/uint8"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsignedInteger": {
      "abstract": [
        {
          "text": "An integer type that can represent only nonnegative values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsignedInteger"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsignedInteger",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsignedInteger"
        }
      ],
      "role": "symbol",
      "title": "UnsignedInteger",
      "type": "topic",
      "url": "/documentation/swift/unsignedinteger"
    },
    "doc://com.apple.Swift/documentation/Swift/binary-integer-operators": {
      "abstract": [
        {
          "text": "Perform arithmetic and bitwise operations or compare values.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/binary-integer-operators",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Binary Integer Operators",
      "type": "topic",
      "url": "/documentation/swift/binary-integer-operators"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/AdditiveArithmetic",
        "doc://com.apple.Swift/documentation/Swift/Comparable",
        "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
        "doc://com.apple.Swift/documentation/Swift/Equatable",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral",
        "doc://com.apple.Swift/documentation/Swift/Hashable",
        "doc://com.apple.Swift/documentation/Swift/Numeric",
        "doc://com.apple.Swift/documentation/Swift/Strideable"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    },
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/FixedWidthInteger",
        "doc://com.apple.Swift/documentation/Swift/SignedInteger",
        "doc://com.apple.Swift/documentation/Swift/UnsignedInteger"
      ],
      "kind": "relationships",
      "title": "Inherited By",
      "type": "inheritedBy"
    },
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int",
        "doc://com.apple.Swift/documentation/Swift/Int128",
        "doc://com.apple.Swift/documentation/Swift/Int16",
        "doc://com.apple.Swift/documentation/Swift/Int32",
        "doc://com.apple.Swift/documentation/Swift/Int64",
        "doc://com.apple.Swift/documentation/Swift/Int8",
        "doc://com.apple.Swift/documentation/Swift/UInt",
        "doc://com.apple.Swift/documentation/Swift/UInt128",
        "doc://com.apple.Swift/documentation/Swift/UInt16",
        "doc://com.apple.Swift/documentation/Swift/UInt32",
        "doc://com.apple.Swift/documentation/Swift/UInt64",
        "doc://com.apple.Swift/documentation/Swift/UInt8"
      ],
      "kind": "relationships",
      "title": "Conforming Types",
      "type": "conformingTypes"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Integer",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/FixedWidthInteger",
        "doc://com.apple.Swift/documentation/Swift/SignedInteger",
        "doc://com.apple.Swift/documentation/Swift/UnsignedInteger"
      ],
      "title": "Integer"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-Binary-Integer",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init()"
      ],
      "title": "Creating a Binary Integer"
    },
    {
      "anchor": "Converting-Integers",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:)-8gmdl",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(clamping:)",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(truncatingIfNeeded:)"
      ],
      "title": "Converting Integers"
    },
    {
      "anchor": "Converting-Floating-Point-Values",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:)-2ln0u"
      ],
      "title": "Converting Floating-Point Values"
    },
    {
      "anchor": "Converting-with-No-Loss-of-Precision",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(exactly:)"
      ],
      "title": "Converting with No Loss of Precision"
    },
    {
      "anchor": "Performing-Calculations",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/binary-integer-operators",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/quotientAndRemainder(dividingBy:)",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/isMultiple(of:)"
      ],
      "title": "Performing Calculations"
    },
    {
      "anchor": "Finding-the-Sign-and-Magnitude",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/signum()"
      ],
      "title": "Finding the Sign and Magnitude"
    },
    {
      "anchor": "Accessing-Numeric-Constants",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/isSigned"
      ],
      "title": "Accessing Numeric Constants"
    },
    {
      "anchor": "Working-with-Binary-Representation",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/bitWidth",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/trailingZeroBitCount",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/words-swift.property",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/Words-swift.associatedtype"
      ],
      "title": "Working with Binary Representation"
    },
    {
      "anchor": "Operators",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_(_:_:)-30ngi",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_(_:_:)-3qw5d",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_(_:_:)-6qhsw",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_=(_:_:)-1fatv",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_=(_:_:)-4vfmj",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/_=(_:_:)-79wgi",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/__(_:_:)-28lmu",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/__(_:_:)-4vnij",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/__=(_:_:)-5lhky",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/__=(_:_:)-9pzpp"
      ],
      "title": "Operators"
    },
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:format:lenient:)-2qv61",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:format:lenient:)-50z9r",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:format:lenient:)-86j1g",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/init(_:strategy:)-207i8"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/formatted()",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/formatted(_:)-4qd73",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/formatted(_:)-73k3e"
      ],
      "title": "Instance Methods"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/BinaryInteger-Implementations",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger/Equatable-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/binaryinteger"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
