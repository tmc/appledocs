{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"relative","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"collection","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","identifier":"doc://com.apple.Swift/documentation/Swift/Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","identifier":"doc://com.apple.Swift/documentation/Swift/Collection/Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","kind":"typeIdentifier","identifier":"doc://com.apple.Swift/documentation/Swift/Collection","preciseIdentifier":"s:Sl"}],"platforms":["iOS","iPadOS","Mac Catalyst","macOS","tvOS","visionOS","watchOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The collection to evaluate this range expression"},{"type":"text","text":" "},{"type":"text","text":"in relation to."}],"type":"paragraph"}],"name":"collection"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A range suitable for slicing ","type":"text"},{"code":"collection","type":"codeVoice"},{"text":". The returned range","type":"text"},{"text":" ","type":"text"},{"text":"is ","type":"text"},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"text":" guaranteed to be inside the bounds of ","type":"text"},{"code":"collection","type":"codeVoice"},{"text":". Callers","type":"text"},{"text":" ","type":"text"},{"text":"should apply the same preconditions to the return value as they would","type":"text"},{"text":" ","type":"text"},{"text":"to a range provided directly by the user.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"You can use the ","type":"text"},{"code":"relative(to:)","type":"codeVoice"},{"text":" method to convert a range expression,","type":"text"},{"text":" ","type":"text"},{"text":"which could be missing one or both of its endpoints, into a concrete","type":"text"},{"text":" ","type":"text"},{"text":"range that is bounded on both sides. The following example uses this","type":"text"},{"text":" ","type":"text"},{"text":"method to convert a partial range up to ","type":"text"},{"code":"4","type":"codeVoice"},{"text":" into a half-open range,","type":"text"},{"text":" ","type":"text"},{"text":"using an array instance to add the range’s lower bound.","type":"text"}]},{"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","let upToFour = ..<4","","let r1 = upToFour.relative(to: numbers)","// r1 == 0..<4"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"r1","type":"codeVoice"},{"text":" range is bounded on the lower end by ","type":"text"},{"code":"0","type":"codeVoice"},{"text":" because that is the","type":"text"},{"text":" ","type":"text"},{"text":"starting index of the ","type":"text"},{"code":"numbers","type":"codeVoice"},{"text":" array. When the collection passed to","type":"text"},{"text":" ","type":"text"},{"code":"relative(to:)","type":"codeVoice"},{"text":" starts with a different index, that index is used as the","type":"text"},{"text":" ","type":"text"},{"text":"lower bound instead. The next example creates a slice of ","type":"text"},{"code":"numbers","type":"codeVoice"},{"text":" ","type":"text"},{"text":"starting at index ","type":"text"},{"code":"2","type":"codeVoice"},{"text":", and then uses the slice with ","type":"text"},{"code":"relative(to:)","type":"codeVoice"},{"text":" to","type":"text"},{"text":" ","type":"text"},{"text":"convert ","type":"text"},{"code":"upToFour","type":"codeVoice"},{"text":" to a concrete range.","type":"text"}]},{"code":["let numbersSuffix = numbers[2...]","// numbersSuffix == [30, 40, 50, 60, 70]","","let r2 = upToFour.relative(to: numbersSuffix)","// r2 == 2..<4"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this method only if you need the concrete range it produces. To"},{"type":"text","text":" "},{"type":"text","text":"access a slice of a collection using a range expression, use the"},{"type":"text","text":" "},{"type":"text","text":"collection’s generic subscript that uses a range expression as its"},{"type":"text","text":" "},{"type":"text","text":"parameter."}]},{"code":["let numbersPrefix = numbers[upToFour]","// numbersPrefix == [10, 20, 30, 40]"],"type":"codeListing","syntax":"swift"}]}],"metadata":{"symbolKind":"method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","extendedModule":"Swift","title":"relative(to:)","modules":[{"name":"Swift"}],"externalID":"s:SN8relative2toSnyxGqd___t5IndexQyd__RszSlRd__lF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"relative"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":">"}],"platforms":[{"name":"iOS","introducedAt":"8.0","unavailable":false,"deprecated":false,"beta":false},{"name":"iPadOS","introducedAt":"8.0","unavailable":false,"deprecated":false,"beta":false},{"name":"Mac Catalyst","introducedAt":"13.0","unavailable":false,"deprecated":false,"beta":false},{"name":"macOS","introducedAt":"10.10","unavailable":false,"deprecated":false,"beta":false},{"name":"tvOS","introducedAt":"9.0","unavailable":false,"deprecated":false,"beta":false},{"name":"visionOS","introducedAt":"1.0","unavailable":false,"deprecated":false,"beta":false},{"name":"watchOS","introducedAt":"2.0","unavailable":false,"deprecated":false,"beta":false}],"roleHeading":"Instance Method"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc://com.apple.Swift/documentation/Swift/ClosedRange/relative(to:)"},"hierarchy":{"paths":[["doc://com.apple.documentation/documentation/technologies","doc://com.apple.Swift/documentation/Swift","doc://com.apple.Swift/documentation/Swift/ClosedRange"]]},"variants":[{"paths":["/documentation/swift/closedrange/relative(to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Returns the range of indices described by this range expression within"},{"type":"text","text":" "},{"type":"text","text":"the given collection."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"Swift-PageImage-card.png":{"identifier":"Swift-PageImage-card.png","variants":[{"url":"https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png","traits":["2x","light"]},{"url":"https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png","traits":["2x","dark"]}],"alt":"An orange Swift logo on a gradient background.","type":"image"},"doc://com.apple.Swift/documentation/Swift":{"abstract":[{"text":"Build apps using a powerful open language.","type":"text"}],"type":"topic","role":"collection","title":"Swift","identifier":"doc://com.apple.Swift/documentation/Swift","url":"/documentation/swift","kind":"symbol","images":[{"identifier":"Swift-PageImage-card.png","type":"card"}]},"doc://com.apple.Swift/documentation/Swift/Collection":{"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Collection"}],"title":"Collection","url":"/documentation/swift/collection","role":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/Collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"type":"text","text":" "},{"type":"text","text":"nondestructively, and accessed by an indexed subscript."}],"kind":"symbol","type":"topic"},"doc://com.apple.Swift/documentation/Swift/ClosedRange":{"kind":"symbol","abstract":[{"text":"An interval from a lower bound up to, and including, an upper bound.","type":"text"}],"identifier":"doc://com.apple.Swift/documentation/Swift/ClosedRange","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClosedRange"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ClosedRange"}],"url":"/documentation/swift/closedrange","title":"ClosedRange"},"doc://com.apple.Swift/documentation/Swift/ClosedRange/relative(to:)":{"abstract":[{"type":"text","text":"Returns the range of indices described by this range expression within"},{"type":"text","text":" "},{"type":"text","text":"the given collection."}],"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/ClosedRange/relative(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"relative","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":">"}],"title":"relative(to:)","type":"topic","url":"/documentation/swift/closedrange/relative(to:)"},"doc://com.apple.Swift/documentation/Swift/Range":{"abstract":[{"type":"text","text":"A half-open interval from a lower bound up to, but not including, an upper"},{"type":"text","text":" "},{"type":"text","text":"bound."}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Range"}],"title":"Range","identifier":"doc://com.apple.Swift/documentation/Swift/Range","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Range"}],"url":"/documentation/swift/range","kind":"symbol"},"doc://com.apple.documentation/documentation/technologies":{"abstract":[{"text":"","type":"text"}],"type":"topic","role":"overview","title":"Technologies","identifier":"doc://com.apple.documentation/documentation/technologies","url":"/documentation/technologies","kind":"technologies"},"doc://com.apple.Swift/documentation/Swift/Collection/Index":{"title":"Index","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SL","text":"Comparable","kind":"typeIdentifier"}],"required":true,"type":"topic","url":"/documentation/swift/collection/index","identifier":"doc://com.apple.Swift/documentation/Swift/Collection/Index"}},"legalNotices":{"copyright":"Copyright &copy; 2025 Apple Inc. All rights reserved.","termsOfUse":"https://www.apple.com/legal/internet-services/terms/site.html","privacyPolicy":"https://www.apple.com/privacy/privacy-policy"}}