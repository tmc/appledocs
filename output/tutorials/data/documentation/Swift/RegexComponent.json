{
  "abstract": [
    {
      "text": "A type that represents a regular expression.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/RegexComponent"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:17_StringProcessing14RegexComponentP",
    "fragments": [
      {
        "kind": "keyword",
        "text": "protocol"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "RegexComponent"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "RegexComponent"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Protocol",
    "symbolKind": "protocol",
    "title": "RegexComponent"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "RegexComponent"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/RegexOutput",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:17_StringProcessing14RegexComponentP0C6OutputQa",
              "text": "RegexOutput"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can use types that conform to ",
              "type": "text"
            },
            {
              "code": "RegexComponent",
              "type": "codeVoice"
            },
            {
              "text": " as parameters to string",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "searching operations and inside ",
              "type": "text"
            },
            {
              "code": "RegexBuilder",
              "type": "codeVoice"
            },
            {
              "text": " closures.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/Anchor": {
      "abstract": [
        {
          "text": "A regex component that matches a specific condition at a particular position",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "in an input string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Anchor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/Anchor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Anchor"
        }
      ],
      "role": "symbol",
      "title": "Anchor",
      "type": "topic",
      "url": "/documentation/regexbuilder/anchor"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/Capture": {
      "abstract": [
        {
          "text": "A regex component that saves the matched substring, or a transformed result,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "for access in a regex match.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Output",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Capture"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/Capture",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Capture"
        }
      ],
      "role": "symbol",
      "title": "Capture",
      "type": "topic",
      "url": "/documentation/regexbuilder/capture"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass": {
      "abstract": [
        {
          "text": "A class of characters that match in a regex.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CharacterClass"
        }
      ],
      "role": "symbol",
      "title": "CharacterClass",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/ChoiceOf": {
      "abstract": [
        {
          "text": "A regex component that chooses exactly one of its constituent regex",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "components when matching.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Output",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ChoiceOf"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/ChoiceOf",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ChoiceOf"
        }
      ],
      "role": "symbol",
      "title": "ChoiceOf",
      "type": "topic",
      "url": "/documentation/regexbuilder/choiceof"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/Local": {
      "abstract": [
        {
          "text": "A regex component that represents an atomic group.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Output",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Local"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/Local",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Local"
        }
      ],
      "role": "symbol",
      "title": "Local",
      "type": "topic",
      "url": "/documentation/regexbuilder/local"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/Lookahead": {
      "abstract": [
        {
          "text": "A regex component that allows a match to continue only if its contents",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "match at the given location.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Output",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Lookahead"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/Lookahead",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Lookahead"
        }
      ],
      "role": "symbol",
      "title": "Lookahead",
      "type": "topic",
      "url": "/documentation/regexbuilder/lookahead"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/NegativeLookahead": {
      "abstract": [
        {
          "text": "A regex component that allows a match to continue only if its contents",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "do not match at the given location.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Output",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NegativeLookahead"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/NegativeLookahead",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NegativeLookahead"
        }
      ],
      "role": "symbol",
      "title": "NegativeLookahead",
      "type": "topic",
      "url": "/documentation/regexbuilder/negativelookahead"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/One": {
      "abstract": [
        {
          "text": "A regex component that matches exactly one occurrence of its underlying",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "component.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "One"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/One",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "One"
        }
      ],
      "role": "symbol",
      "title": "One",
      "type": "topic",
      "url": "/documentation/regexbuilder/one"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/OneOrMore": {
      "abstract": [
        {
          "text": "A regex component that matches one or more occurrences of its underlying",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "component.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Output",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "OneOrMore"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/OneOrMore",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "OneOrMore"
        }
      ],
      "role": "symbol",
      "title": "OneOrMore",
      "type": "topic",
      "url": "/documentation/regexbuilder/oneormore"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/Optionally": {
      "abstract": [
        {
          "text": "A regex component that matches zero or one occurrences of its underlying",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "component.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Output",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Optionally"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/Optionally",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Optionally"
        }
      ],
      "role": "symbol",
      "title": "Optionally",
      "type": "topic",
      "url": "/documentation/regexbuilder/optionally"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/Reference": {
      "abstract": [
        {
          "text": "A reference to a captured portion of a regular expression.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Reference"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/Reference",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Reference"
        }
      ],
      "role": "symbol",
      "title": "Reference",
      "type": "topic",
      "url": "/documentation/regexbuilder/reference"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/Repeat": {
      "abstract": [
        {
          "text": "A regex component that matches a selectable number of occurrences of its",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "underlying component.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Output",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Repeat"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/Repeat",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Repeat"
        }
      ],
      "role": "symbol",
      "title": "Repeat",
      "type": "topic",
      "url": "/documentation/regexbuilder/repeat"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/TryCapture": {
      "abstract": [
        {
          "text": "A regex component that attempts to transform a matched substring, saving",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the result if successful and backtracking if the transformation fails.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Output",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TryCapture"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/TryCapture",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TryCapture"
        }
      ],
      "role": "symbol",
      "title": "TryCapture",
      "type": "topic",
      "url": "/documentation/regexbuilder/trycapture"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/ZeroOrMore": {
      "abstract": [
        {
          "text": "A regex component that matches zero or more occurrences of its underlying",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "component.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Output",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ZeroOrMore"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/ZeroOrMore",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ZeroOrMore"
        }
      ],
      "role": "symbol",
      "title": "ZeroOrMore",
      "type": "topic",
      "url": "/documentation/regexbuilder/zeroormore"
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyRegexOutput": {
      "abstract": [
        {
          "text": "The type-erased, dynamic output of a regular expression match.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AnyRegexOutput"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyRegexOutput",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AnyRegexOutput"
        }
      ],
      "role": "symbol",
      "title": "AnyRegexOutput",
      "type": "topic",
      "url": "/documentation/swift/anyregexoutput"
    },
    "doc://com.apple.Swift/documentation/Swift/Character": {
      "abstract": [
        {
          "text": "A single extended grapheme cluster that approximates a user-perceived",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "character.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Character"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Character",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Character"
        }
      ],
      "role": "symbol",
      "title": "Character",
      "type": "topic",
      "url": "/documentation/swift/character"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomConsumingRegexComponent": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomConsumingRegexComponent"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomConsumingRegexComponent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomConsumingRegexComponent"
        }
      ],
      "role": "symbol",
      "title": "CustomConsumingRegexComponent",
      "type": "topic",
      "url": "/documentation/swift/customconsumingregexcomponent"
    },
    "doc://com.apple.Swift/documentation/Swift/Regex": {
      "abstract": [
        {
          "text": "A regular expression.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Regex"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Regex",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Regex"
        }
      ],
      "role": "symbol",
      "title": "Regex",
      "type": "topic",
      "url": "/documentation/swift/regex"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent": {
      "abstract": [
        {
          "text": "A type that represents a regular expression.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RegexComponent"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RegexComponent"
        }
      ],
      "role": "symbol",
      "title": "RegexComponent",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/DateStyle": {
      "abstract": [
        {
          "text": "A type alias to use when matching date components in a regular expression.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ParseStrategy",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DateStyle"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/DateStyle",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DateStyle"
        }
      ],
      "role": "symbol",
      "title": "RegexComponent.DateStyle",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/datestyle"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/RegexOutput": {
      "abstract": [
        {
          "text": "The output type for this regular expression.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RegexOutput"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/RegexOutput",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "RegexOutput",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/regexoutput"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/TimeStyle": {
      "abstract": [
        {
          "text": "A type alias to use when matching time components in a regular expression.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ParseStrategy",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TimeStyle"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/TimeStyle",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TimeStyle"
        }
      ],
      "role": "symbol",
      "title": "RegexComponent.TimeStyle",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/timestyle"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/any": {
      "abstract": [
        {
          "text": "A character class that matches any element.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "any"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/any",
      "kind": "symbol",
      "role": "symbol",
      "title": "any",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/any"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/anyGraphemeCluster": {
      "abstract": [
        {
          "text": "A character class that matches any single ",
          "type": "text"
        },
        {
          "code": "Character",
          "type": "codeVoice"
        },
        {
          "text": ", or extended",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "grapheme cluster, regardless of the current semantic level.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "anyGraphemeCluster"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/anyGraphemeCluster",
      "kind": "symbol",
      "role": "symbol",
      "title": "anyGraphemeCluster",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/anygraphemecluster"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/anyNonNewline": {
      "abstract": [
        {
          "text": "A character class that matches any element that isn’t a newline.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "anyNonNewline"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/anyNonNewline",
      "kind": "symbol",
      "role": "symbol",
      "title": "anyNonNewline",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/anynonnewline"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/anyOf(_:)-3pexl": {
      "abstract": [
        {
          "text": "Returns a character class that matches any Unicode scalar in the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "anyOf"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/anyOf(_:)-3pexl",
      "kind": "symbol",
      "role": "symbol",
      "title": "anyOf(_:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/anyof(_:)-3pexl"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/anyOf(_:)-4xgea": {
      "abstract": [
        {
          "text": "Returns a character class that matches any character in the given string",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "or sequence.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "anyOf"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/anyOf(_:)-4xgea",
      "kind": "symbol",
      "role": "symbol",
      "title": "anyOf(_:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/anyof(_:)-4xgea"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/date(_:locale:timeZone:calendar:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches a localized date string formatted in accordance with a style, capturing it as a Foundation date.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ParseStrategy",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "date"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV11FormatStyleV",
          "text": "FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV11FormatStyleV0bD0V",
          "text": "DateStyle"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "timeZone"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8TimeZoneV",
          "text": "TimeZone"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "calendar"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8CalendarV",
          "text": "Calendar"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV13ParseStrategyV",
          "text": "ParseStrategy"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/date(_:locale:timeZone:calendar:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "date(_:locale:timeZone:calendar:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/date(_:locale:timezone:calendar:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/date(format:locale:timeZone:calendar:twoDigitStartDate:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches a localized date string formatted in accordance with a format string, capturing it as a Foundation date.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ParseStrategy",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "date"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "format"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV12FormatStringV",
          "text": "FormatString"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "timeZone"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8TimeZoneV",
          "text": "TimeZone"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "calendar"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8CalendarV",
          "text": "Calendar"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "twoDigitStartDate"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/date(format:locale:timeZone:calendar:twoDigitStartDate:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "date(format:locale:timeZone:calendar:twoDigitStartDate:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/date(format:locale:timezone:calendar:twodigitstartdate:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/dateTime(date:time:locale:timeZone:calendar:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches a localized date and time string, capturing it as a Foundation date.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ParseStrategy",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dateTime"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "date"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV11FormatStyleV",
          "text": "FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV11FormatStyleV0bD0V",
          "text": "DateStyle"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "time"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV11FormatStyleV",
          "text": "FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV11FormatStyleV04TimeD0V",
          "text": "TimeStyle"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "timeZone"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8TimeZoneV",
          "text": "TimeZone"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "calendar"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8CalendarV",
          "text": "Calendar"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV13ParseStrategyV",
          "text": "ParseStrategy"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/dateTime(date:time:locale:timeZone:calendar:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "dateTime(date:time:locale:timeZone:calendar:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/datetime(date:time:locale:timezone:calendar:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/digit": {
      "abstract": [
        {
          "text": "A character class that matches any digit.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "digit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/digit",
      "kind": "symbol",
      "role": "symbol",
      "title": "digit",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/digit"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/hexDigit": {
      "abstract": [
        {
          "text": "A character class that matches any hexadecimal digit.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hexDigit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/hexDigit",
      "kind": "symbol",
      "role": "symbol",
      "title": "hexDigit",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/hexdigit"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/horizontalWhitespace": {
      "abstract": [
        {
          "text": "A character class that matches any element that is classified as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "horizontal whitespace.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "horizontalWhitespace"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/horizontalWhitespace",
      "kind": "symbol",
      "role": "symbol",
      "title": "horizontalWhitespace",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/horizontalwhitespace"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/init(_:_:)": {
      "abstract": [
        {
          "text": "Creates a character class that combines the given classes in a union.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        },
        {
          "kind": "text",
          "text": "...)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/init(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/init(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601": {
      "abstract": [
        {
          "text": "A regex component that matches a default ISO 8601-formatted date string, capturing it as a Foundation date.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ISO8601FormatStyle",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "iso8601"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601",
      "kind": "symbol",
      "role": "symbol",
      "title": "iso8601",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/iso8601"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601(timeZone:includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches an ISO 8601-formatted date string, capturing the matched substring as a Foundation date in the specified time zone.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ISO8601FormatStyle",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "iso8601"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "timeZone"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8TimeZoneV",
          "text": "TimeZone"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "includingFractionalSeconds"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "dateSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV0B9SeparatorO",
          "text": "DateSeparator"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "dateTimeSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV0B13TimeSeparatorO",
          "text": "DateTimeSeparator"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "timeSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV13TimeSeparatorO",
          "text": "TimeSeparator"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601(timeZone:includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "iso8601(timeZone:includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/iso8601(timezone:includingfractionalseconds:dateseparator:datetimeseparator:timeseparator:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601Date(timeZone:dateSeparator:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches an ISO 8601-formatted date string, capturing it as a Foundation date in the specified time zone.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ISO8601FormatStyle",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "iso8601Date"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "timeZone"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8TimeZoneV",
          "text": "TimeZone"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "dateSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV0B9SeparatorO",
          "text": "DateSeparator"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601Date(timeZone:dateSeparator:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "iso8601Date(timeZone:dateSeparator:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/iso8601date(timezone:dateseparator:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601WithTimeZone(includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches an ISO 8601-formatted date string that includes a time zone component, capturing the matched substring as a Foundation date.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ISO8601FormatStyle",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "iso8601WithTimeZone"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "includingFractionalSeconds"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "dateSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV0B9SeparatorO",
          "text": "DateSeparator"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "dateTimeSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV0B13TimeSeparatorO",
          "text": "DateTimeSeparator"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "timeSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV13TimeSeparatorO",
          "text": "TimeSeparator"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "timeZoneSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV17TimeZoneSeparatorO",
          "text": "TimeZoneSeparator"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601WithTimeZone(includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "iso8601WithTimeZone(includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/iso8601withtimezone(includingfractionalseconds:dateseparator:datetimeseparator:timeseparator:timezoneseparator:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedCurrency(code:locale:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches a localized currency string, capturing it as a decimal value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Decimal.FormatStyle.Currency",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "localizedCurrency"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "code"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV8CurrencyV",
          "text": "Currency"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedCurrency(code:locale:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "localizedCurrency(code:locale:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/localizedcurrency(code:locale:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedDecimal(locale:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches a localized decimal string, capturing it as a Foundation decimal.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Decimal.FormatStyle",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "localizedDecimal"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedDecimal(locale:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "localizedDecimal(locale:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/localizeddecimal(locale:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedDouble(locale:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches a localized numeric string, capturing it as a double-precision floating-point value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "FloatingPointFormatStyle<Double>",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "localizedDouble"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedDouble(locale:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "localizedDouble(locale:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/localizeddouble(locale:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedDoublePercentage(locale:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches a localized percentage string, capturing it as a double-precision floating-point value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "FloatingPointFormatStyle<Double>.Percent",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "localizedDoublePercentage"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedDoublePercentage(locale:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "localizedDoublePercentage(locale:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/localizeddoublepercentage(locale:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedInteger(locale:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches a localized numeric string, capturing it as an integer value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "IntegerFormatStyle<Int>",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "localizedInteger"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedInteger(locale:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "localizedInteger(locale:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/localizedinteger(locale:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedIntegerCurrency(code:locale:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches a localized currency string, capturing it as an integer value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "IntegerFormatStyle<Int>.Currency",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "localizedIntegerCurrency"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "code"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV8CurrencyV",
          "text": "Currency"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedIntegerCurrency(code:locale:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "localizedIntegerCurrency(code:locale:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/localizedintegercurrency(code:locale:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedIntegerPercentage(locale:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches a localized percentage string, capturing it as a double-precision floating-point value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "IntegerFormatStyle<Int>.Percent",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "localizedIntegerPercentage"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedIntegerPercentage(locale:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "localizedIntegerPercentage(locale:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/localizedintegerpercentage(locale:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/newlineSequence": {
      "abstract": [
        {
          "text": "A character class that matches any newline sequence.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "newlineSequence"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/newlineSequence",
      "kind": "symbol",
      "role": "symbol",
      "title": "newlineSequence",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/newlinesequence"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/regex": {
      "abstract": [
        {
          "text": "The regular expression represented by this component.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "regex"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17_StringProcessing5RegexV",
          "text": "Regex"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17_StringProcessing14RegexComponentP0C6OutputQa",
          "text": "RegexOutput"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/regex",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "regex",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/regex"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/url(scheme:user:password:host:port:path:query:fragment:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches a URL substring, capturing it as a Foundation URL.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "URL.ParseStrategy",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "url"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "scheme"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV",
          "text": "ParseStrategy"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV09ComponentcD0O",
          "text": "ComponentParseStrategy"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "user"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV",
          "text": "ParseStrategy"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV09ComponentcD0O",
          "text": "ComponentParseStrategy"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "password"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV",
          "text": "ParseStrategy"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV09ComponentcD0O",
          "text": "ComponentParseStrategy"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "host"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV",
          "text": "ParseStrategy"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV09ComponentcD0O",
          "text": "ComponentParseStrategy"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "port"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV",
          "text": "ParseStrategy"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV09ComponentcD0O",
          "text": "ComponentParseStrategy"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "path"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV",
          "text": "ParseStrategy"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV09ComponentcD0O",
          "text": "ComponentParseStrategy"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "query"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV",
          "text": "ParseStrategy"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV09ComponentcD0O",
          "text": "ComponentParseStrategy"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "fragment"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV",
          "text": "ParseStrategy"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV13ParseStrategyV09ComponentcD0O",
          "text": "ComponentParseStrategy"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/url(scheme:user:password:host:port:path:query:fragment:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "url(scheme:user:password:host:port:path:query:fragment:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/url(scheme:user:password:host:port:path:query:fragment:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/verticalWhitespace": {
      "abstract": [
        {
          "text": "A character class that matches any element that is classified as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "vertical whitespace.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "verticalWhitespace"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/verticalWhitespace",
      "kind": "symbol",
      "role": "symbol",
      "title": "verticalWhitespace",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/verticalwhitespace"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/whitespace": {
      "abstract": [
        {
          "text": "A character class that matches any element that is classified as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "whitespace.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "whitespace"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/whitespace",
      "kind": "symbol",
      "role": "symbol",
      "title": "whitespace",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/whitespace"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/word": {
      "abstract": [
        {
          "text": "A character class that matches any element that is a “word character”.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "word"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/word",
      "kind": "symbol",
      "role": "symbol",
      "title": "word",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/word"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexRepetitionBehavior": {
      "abstract": [
        {
          "text": "Specifies how much to attempt to match when using a quantifier.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RegexRepetitionBehavior"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexRepetitionBehavior",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RegexRepetitionBehavior"
        }
      ],
      "role": "symbol",
      "title": "RegexRepetitionBehavior",
      "type": "topic",
      "url": "/documentation/swift/regexrepetitionbehavior"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexSemanticLevel": {
      "abstract": [
        {
          "text": "A semantic level to use during regex matching.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RegexSemanticLevel"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexSemanticLevel",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RegexSemanticLevel"
        }
      ],
      "role": "symbol",
      "title": "RegexSemanticLevel",
      "type": "topic",
      "url": "/documentation/swift/regexsemanticlevel"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexWordBoundaryKind": {
      "abstract": [
        {
          "text": "A word boundary algorithm to use during regex matching.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RegexWordBoundaryKind"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexWordBoundaryKind",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RegexWordBoundaryKind"
        }
      ],
      "role": "symbol",
      "title": "RegexWordBoundaryKind",
      "type": "topic",
      "url": "/documentation/swift/regexwordboundarykind"
    },
    "doc://com.apple.Swift/documentation/Swift/String": {
      "abstract": [
        {
          "text": "A Unicode string value that is a collection of characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "String"
        }
      ],
      "role": "symbol",
      "title": "String",
      "type": "topic",
      "url": "/documentation/swift/string"
    },
    "doc://com.apple.Swift/documentation/Swift/Substring": {
      "abstract": [
        {
          "text": "A slice of a string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Substring"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Substring",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Substring"
        }
      ],
      "role": "symbol",
      "title": "Substring",
      "type": "topic",
      "url": "/documentation/swift/substring"
    },
    "doc://com.apple.Swift/documentation/Swift/Unicode/Scalar": {
      "abstract": [
        {
          "text": "A Unicode scalar value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Scalar"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Unicode/Scalar",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Scalar"
        }
      ],
      "role": "symbol",
      "title": "Unicode.Scalar",
      "type": "topic",
      "url": "/documentation/swift/unicode/scalar"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CustomConsumingRegexComponent"
      ],
      "kind": "relationships",
      "title": "Inherited By",
      "type": "inheritedBy"
    },
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/RegexBuilder/Anchor",
        "doc://com.apple.Swift/documentation/RegexBuilder/Capture",
        "doc://com.apple.Swift/documentation/Swift/Character",
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass",
        "doc://com.apple.Swift/documentation/RegexBuilder/ChoiceOf",
        "doc://com.apple.Swift/documentation/RegexBuilder/Local",
        "doc://com.apple.Swift/documentation/RegexBuilder/Lookahead",
        "doc://com.apple.Swift/documentation/RegexBuilder/NegativeLookahead",
        "doc://com.apple.Swift/documentation/RegexBuilder/One",
        "doc://com.apple.Swift/documentation/RegexBuilder/OneOrMore",
        "doc://com.apple.Swift/documentation/RegexBuilder/Optionally",
        "doc://com.apple.Swift/documentation/RegexBuilder/Reference",
        "doc://com.apple.Swift/documentation/Swift/Regex",
        "doc://com.apple.Swift/documentation/RegexBuilder/Repeat",
        "doc://com.apple.Swift/documentation/Swift/String",
        "doc://com.apple.Swift/documentation/Swift/Substring",
        "doc://com.apple.Swift/documentation/RegexBuilder/TryCapture",
        "doc://com.apple.Swift/documentation/Swift/Unicode/Scalar",
        "doc://com.apple.Swift/documentation/RegexBuilder/ZeroOrMore"
      ],
      "kind": "relationships",
      "title": "Conforming Types",
      "type": "conformingTypes"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Regular-Expressions",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Regex",
        "doc://com.apple.Swift/documentation/Swift/RegexRepetitionBehavior",
        "doc://com.apple.Swift/documentation/Swift/RegexSemanticLevel",
        "doc://com.apple.Swift/documentation/Swift/RegexWordBoundaryKind",
        "doc://com.apple.Swift/documentation/Swift/AnyRegexOutput",
        "doc://com.apple.Swift/documentation/Swift/CustomConsumingRegexComponent"
      ],
      "title": "Regular Expressions"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-a-regex-component",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/init(_:_:)"
      ],
      "title": "Creating a regex component"
    },
    {
      "anchor": "Getting-a-regex-from-a-component",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/regex"
      ],
      "title": "Getting a regex from a component"
    },
    {
      "anchor": "Matching-substring-sequences",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/anyOf(_:)-3pexl",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/anyOf(_:)-4xgea",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/any",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/anyGraphemeCluster",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/anyNonNewline",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/digit",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/hexDigit",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/word"
      ],
      "title": "Matching substring sequences"
    },
    {
      "anchor": "Matching-whitespace-and-line-endings",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/horizontalWhitespace",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/newlineSequence",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/verticalWhitespace",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/whitespace"
      ],
      "title": "Matching whitespace and line endings"
    },
    {
      "anchor": "Matching-dates-and-times",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/date(_:locale:timeZone:calendar:)",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/date(format:locale:timeZone:calendar:twoDigitStartDate:)",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/dateTime(date:time:locale:timeZone:calendar:)",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601Date(timeZone:dateSeparator:)",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601(timeZone:includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:)",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601WithTimeZone(includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:)"
      ],
      "title": "Matching dates and times"
    },
    {
      "anchor": "Matching-numeric-formats",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedInteger(locale:)",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedDouble(locale:)",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedDecimal(locale:)",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedCurrency(code:locale:)",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedIntegerCurrency(code:locale:)",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedIntegerPercentage(locale:)",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/localizedDoublePercentage(locale:)"
      ],
      "title": "Matching numeric formats"
    },
    {
      "anchor": "Matching-URLs",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/url(scheme:user:password:host:port:path:query:fragment:)"
      ],
      "title": "Matching URLs"
    },
    {
      "anchor": "Supporting-types",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/RegexOutput",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/DateStyle",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/TimeStyle"
      ],
      "title": "Supporting types"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/regexcomponent"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
