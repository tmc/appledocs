{
  "abstract": [
    {
      "text": "Raises a fatal error when its upstream publisher fails, and otherwise republishes all received input.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/Optional",
        "doc://com.apple.Swift/documentation/Swift/Optional/Publisher-swift.struct"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/Optional/Publisher-swift.struct/assertNoFailure(_:file:line:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Combine",
    "externalID": "s:7Combine9PublisherPAAE15assertNoFailure_4file4lineAA10PublishersO06AssertdE0Vy_xGSS_s12StaticStringVSutF::SYNTHESIZED::s:Sq7CombineE9PublisherV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "assertNoFailure"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:SS",
        "text": "String"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "file"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s12StaticStringV",
        "text": "StaticString"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "line"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Su",
        "text": "UInt"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Combine10PublishersO",
        "text": "Publishers"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Combine10PublishersO15AssertNoFailureV",
        "text": "AssertNoFailure"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": ">"
      }
    ],
    "modules": [
      {
        "name": "Swift",
        "relatedModules": [
          "Combine"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "assertNoFailure(_:file:line:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "assertNoFailure"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "prefix"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/String",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SS",
              "text": "String"
            },
            {
              "kind": "text",
              "text": " = \"\", "
            },
            {
              "kind": "externalParam",
              "text": "file"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/StaticString",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s12StaticStringV",
              "text": "StaticString"
            },
            {
              "kind": "text",
              "text": " = "
            },
            {
              "kind": "keyword",
              "text": "#file"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "line"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/UInt",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Su",
              "text": "UInt"
            },
            {
              "kind": "text",
              "text": " = "
            },
            {
              "kind": "keyword",
              "text": "#line"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7Combine10PublishersO",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Combine10PublishersO",
              "text": "Publishers"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7Combine10PublishersO15AssertNoFailureV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Combine10PublishersO15AssertNoFailureV",
              "text": "AssertNoFailure"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A string used at the beginning of the fatal error message.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "prefix"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A filename used in the error message. This defaults to ",
                  "type": "text"
                },
                {
                  "code": "#file",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "file"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A line number used in the error message. This defaults to ",
                  "type": "text"
                },
                {
                  "code": "#line",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "line"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A publisher that raises a fatal error when its upstream publisher fails.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use ",
              "type": "text"
            },
            {
              "code": "assertNoFailure()",
              "type": "codeVoice"
            },
            {
              "text": " for internal integrity checks that are active during testing. However, it is important to note that, like its Swift counterpart ",
              "type": "text"
            },
            {
              "code": "fatalError(_:)",
              "type": "codeVoice"
            },
            {
              "text": ", the ",
              "type": "text"
            },
            {
              "code": "assertNoFailure()",
              "type": "codeVoice"
            },
            {
              "text": " operator asserts a fatal exception when triggered during development and testing, ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "and",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " in shipping versions of code.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In the example below, a ",
              "type": "text"
            },
            {
              "code": "CurrentValueSubject",
              "type": "codeVoice"
            },
            {
              "text": " publishes the initial and second values successfully. The third value, containing a ",
              "type": "text"
            },
            {
              "code": "genericSubjectError",
              "type": "codeVoice"
            },
            {
              "text": ", causes the ",
              "type": "text"
            },
            {
              "code": "assertNoFailure()",
              "type": "codeVoice"
            },
            {
              "text": " operator to assert a fatal exception stopping the process:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "public enum SubjectError: Error {",
            "    case genericSubjectError",
            "}",
            "",
            "let subject = CurrentValueSubject<String, Error>(\"initial value\")",
            "subject",
            "    .assertNoFailure()",
            "    .sink(receiveCompletion: { print (\"completion: \\($0)\") },",
            "          receiveValue: { print (\"value: \\($0).\") }",
            "    )",
            "",
            "subject.send(\"second value\")",
            "subject.send(completion: Subscribers.Completion<Error>.failure(SubjectError.genericSubjectError))",
            "",
            "// Prints:",
            "//  value: initial value.",
            "//  value: second value.",
            "//  The process then terminates in the debugger as the assertNoFailure operator catches the genericSubjectError."
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Optional": {
      "abstract": [
        {
          "text": "A type that represents either a wrapped value or the absence of a value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Optional"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Optional",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Optional"
        }
      ],
      "role": "symbol",
      "title": "Optional",
      "type": "topic",
      "url": "/documentation/swift/optional"
    },
    "doc://com.apple.Swift/documentation/Swift/Optional/Publisher-swift.struct": {
      "abstract": [
        {
          "text": "The type of a Combine publisher that publishes the value of a Swift optional instance to each subscriber exactly once, if the instance has any value at all.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Publisher"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Optional/Publisher-swift.struct",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Publisher"
        }
      ],
      "role": "symbol",
      "title": "Optional.Publisher",
      "type": "topic",
      "url": "/documentation/swift/optional/publisher-swift.struct"
    },
    "doc://com.apple.Swift/documentation/Swift/Optional/Publisher-swift.struct/assertNoFailure(_:file:line:)": {
      "abstract": [
        {
          "text": "Raises a fatal error when its upstream publisher fails, and otherwise republishes all received input.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "assertNoFailure"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "file"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12StaticStringV",
          "text": "StaticString"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "line"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Su",
          "text": "UInt"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO",
          "text": "Publishers"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine10PublishersO15AssertNoFailureV",
          "text": "AssertNoFailure"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Optional/Publisher-swift.struct/assertNoFailure(_:file:line:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "assertNoFailure(_:file:line:)",
      "type": "topic",
      "url": "/documentation/swift/optional/publisher-swift.struct/assertnofailure(_:file:line:)"
    },
    "doc://com.apple.Swift/documentation/Swift/StaticString": {
      "abstract": [
        {
          "text": "A string type designed to represent text that is known at compile time.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "StaticString"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StaticString",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StaticString"
        }
      ],
      "role": "symbol",
      "title": "StaticString",
      "type": "topic",
      "url": "/documentation/swift/staticstring"
    },
    "doc://com.apple.Swift/documentation/Swift/String": {
      "abstract": [
        {
          "text": "A Unicode string value that is a collection of characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "String"
        }
      ],
      "role": "symbol",
      "title": "String",
      "type": "topic",
      "url": "/documentation/swift/string"
    },
    "doc://com.apple.Swift/documentation/Swift/UInt": {
      "abstract": [
        {
          "text": "An unsigned integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UInt",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UInt"
        }
      ],
      "role": "symbol",
      "title": "UInt",
      "type": "topic",
      "url": "/documentation/swift/uint"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7Combine10PublishersO": {
      "abstract": [
        {
          "text": "A namespace for types that serve as publishers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Publishers"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7Combine10PublishersO",
      "kind": "symbol",
      "role": "symbol",
      "title": "Publishers",
      "type": "topic",
      "url": "/documentation/Combine/Publishers"
    },
    "doc://com.externally.resolved.symbol/s:7Combine10PublishersO15AssertNoFailureV": {
      "abstract": [
        {
          "text": "A publisher that raises a fatal error upon receiving any failure, and otherwise republishes all received input.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AssertNoFailure"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Upstream"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Upstream"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine9PublisherP",
          "text": "Publisher"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7Combine10PublishersO15AssertNoFailureV",
      "kind": "symbol",
      "role": "symbol",
      "title": "Publishers.AssertNoFailure",
      "type": "topic",
      "url": "/documentation/Combine/Publishers/AssertNoFailure"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/swift/optional/publisher-swift.struct/assertnofailure(_:file:line:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
