{
  "abstract": [
    {
      "text": "Republishes elements received from a publisher, by assigning them to a property marked as a publisher.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/Optional",
        "doc://com.apple.Swift/documentation/Swift/Optional/Publisher-swift.struct"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/Optional/Publisher-swift.struct/assign(to:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "conformance": {
      "availabilityPrefix": [
        {
          "text": "Available when",
          "type": "text"
        }
      ],
      "conformancePrefix": [
        {
          "text": "Conforms when",
          "type": "text"
        }
      ],
      "constraints": [
        {
          "code": "Failure",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "Never",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ]
    },
    "extendedModule": "Combine",
    "externalID": "s:7Combine9PublisherPAAs5NeverO7FailureRtzrlE6assign2toyAA9PublishedVABVy6OutputQz_Gz_tF::SYNTHESIZED::s:Sq7CombineE9PublisherV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "assign"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "to"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "keyword",
        "text": "inout"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Combine9PublishedV",
        "text": "Published"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Combine9PublisherP6OutputQa",
        "text": "Output"
      },
      {
        "kind": "text",
        "text": ">."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Combine9PublishedV9PublisherV",
        "text": "Publisher"
      },
      {
        "kind": "text",
        "text": ")"
      }
    ],
    "modules": [
      {
        "name": "Swift",
        "relatedModules": [
          "Combine"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "11.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "7.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "assign(to:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "assign"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "to"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "published"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "inout"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7Combine9PublishedV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Combine9PublishedV",
              "text": "Published"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7Combine9PublisherP6OutputQa",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Combine9PublisherP6OutputQa",
              "text": "Output"
            },
            {
              "kind": "text",
              "text": ">."
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7Combine9PublishedV9PublisherV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Combine9PublishedV9PublisherV",
              "text": "Publisher"
            },
            {
              "kind": "text",
              "text": ")"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A property marked with the ",
                  "type": "text"
                },
                {
                  "code": "@Published",
                  "type": "codeVoice"
                },
                {
                  "text": " attribute, which receives and republishes all elements received from the upstream publisher.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "published"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use this operator when you want to receive elements from a publisher and republish them through a property marked with the ",
              "type": "text"
            },
            {
              "code": "@Published",
              "type": "codeVoice"
            },
            {
              "text": " attribute. The ",
              "type": "text"
            },
            {
              "code": "assign(to:)",
              "type": "codeVoice"
            },
            {
              "text": " operator manages the life cycle of the subscription, canceling the subscription automatically when the ",
              "type": "text"
            },
            {
              "code": "Published",
              "type": "codeVoice"
            },
            {
              "text": " instance deinitializes. Because of this, the ",
              "type": "text"
            },
            {
              "code": "assign(to:)",
              "type": "codeVoice"
            },
            {
              "text": " operator doesn’t return an ",
              "type": "text"
            },
            {
              "code": "AnyCancellable",
              "type": "codeVoice"
            },
            {
              "text": " that you’re responsible for like ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Optional/Publisher-swift.struct/assign(to:on:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " does.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The example below shows a model class that receives elements from an internal ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/timer/timerpublisher",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", and assigns them to a ",
              "type": "text"
            },
            {
              "code": "@Published",
              "type": "codeVoice"
            },
            {
              "text": " property called ",
              "type": "text"
            },
            {
              "code": "lastUpdated",
              "type": "codeVoice"
            },
            {
              "text": ". Because the ",
              "type": "text"
            },
            {
              "code": "to",
              "type": "codeVoice"
            },
            {
              "text": " parameter has the ",
              "type": "text"
            },
            {
              "code": "inout",
              "type": "codeVoice"
            },
            {
              "text": " keyword, you need to use the ",
              "type": "text"
            },
            {
              "code": "&",
              "type": "codeVoice"
            },
            {
              "text": " operator when calling this method.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "class MyModel: ObservableObject {",
            "    @Published var lastUpdated: Date = Date()",
            "    init() {",
            "         Timer.publish(every: 1.0, on: .main, in: .common)",
            "             .autoconnect()",
            "             .assign(to: &$lastUpdated)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "If you instead implemented ",
              "type": "text"
            },
            {
              "code": "MyModel",
              "type": "codeVoice"
            },
            {
              "text": " with ",
              "type": "text"
            },
            {
              "code": "assign(to: lastUpdated, on: self)",
              "type": "codeVoice"
            },
            {
              "text": ", storing the returned ",
              "type": "text"
            },
            {
              "code": "AnyCancellable",
              "type": "codeVoice"
            },
            {
              "text": " instance could cause a reference cycle, because the ",
              "type": "text"
            },
            {
              "code": "Subscribers/Assign",
              "type": "codeVoice"
            },
            {
              "text": " subscriber would hold a strong reference to ",
              "type": "text"
            },
            {
              "code": "self",
              "type": "codeVoice"
            },
            {
              "text": ". Using ",
              "type": "text"
            },
            {
              "code": "assign(to:)",
              "type": "codeVoice"
            },
            {
              "text": " solves this problem.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "While the ",
              "type": "text"
            },
            {
              "code": "to",
              "type": "codeVoice"
            },
            {
              "text": " parameter uses the ",
              "type": "text"
            },
            {
              "code": "inout",
              "type": "codeVoice"
            },
            {
              "text": " keyword, this method doesn’t replace a reference type passed to it. Instead, this notation indicates that the operator may modify members of the assigned object, as seen in the following example:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "    class MyModel2: ObservableObject {",
            "        @Published var id: Int = 0",
            "    }",
            "    let model2 = MyModel2()",
            "    Just(100).assign(to: &model2.$id)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Optional": {
      "abstract": [
        {
          "text": "A type that represents either a wrapped value or the absence of a value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Optional"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Optional",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Optional"
        }
      ],
      "role": "symbol",
      "title": "Optional",
      "type": "topic",
      "url": "/documentation/swift/optional"
    },
    "doc://com.apple.Swift/documentation/Swift/Optional/Publisher-swift.struct": {
      "abstract": [
        {
          "text": "The type of a Combine publisher that publishes the value of a Swift optional instance to each subscriber exactly once, if the instance has any value at all.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Publisher"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Optional/Publisher-swift.struct",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Publisher"
        }
      ],
      "role": "symbol",
      "title": "Optional.Publisher",
      "type": "topic",
      "url": "/documentation/swift/optional/publisher-swift.struct"
    },
    "doc://com.apple.Swift/documentation/Swift/Optional/Publisher-swift.struct/assign(to:)": {
      "abstract": [
        {
          "text": "Republishes elements received from a publisher, by assigning them to a property marked as a publisher.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Failure",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Never",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "assign"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine9PublishedV",
          "text": "Published"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine9PublisherP6OutputQa",
          "text": "Output"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine9PublishedV9PublisherV",
          "text": "Publisher"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Optional/Publisher-swift.struct/assign(to:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "assign(to:)",
      "type": "topic",
      "url": "/documentation/swift/optional/publisher-swift.struct/assign(to:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Optional/Publisher-swift.struct/assign(to:on:)": {
      "abstract": [
        {
          "text": "Assigns each element from a publisher to a property on an object.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Failure",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Never",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "assign"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Root"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s24ReferenceWritableKeyPathC",
          "text": "ReferenceWritableKeyPath"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Root"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine9PublisherP6OutputQa",
          "text": "Output"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "on"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Root"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Combine14AnyCancellableC",
          "text": "AnyCancellable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Optional/Publisher-swift.struct/assign(to:on:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "assign(to:on:)",
      "type": "topic",
      "url": "/documentation/swift/optional/publisher-swift.struct/assign(to:on:)"
    },
    "doc://com.apple.documentation/documentation/foundation/timer/timerpublisher": {
      "abstract": [
        {
          "text": "A publisher that repeatedly emits the current date on a given interval.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "Timer.TimerPublisher"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/timer/timerpublisher",
      "kind": "symbol",
      "role": "symbol",
      "title": "Timer.TimerPublisher",
      "type": "topic",
      "url": "/documentation/foundation/timer/timerpublisher"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7Combine9PublishedV": {
      "abstract": [
        {
          "text": "A type that publishes a property marked with an attribute.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@propertyWrapper"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Published"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7Combine9PublishedV",
      "kind": "symbol",
      "role": "symbol",
      "title": "Published",
      "type": "topic",
      "url": "/documentation/Combine/Published"
    },
    "doc://com.externally.resolved.symbol/s:7Combine9PublishedV9PublisherV": {
      "abstract": [
        {
          "text": "A publisher for properties marked with the `@Published` attribute.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Publisher"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7Combine9PublishedV9PublisherV",
      "kind": "symbol",
      "role": "symbol",
      "title": "Published.Publisher",
      "type": "topic",
      "url": "/documentation/Combine/Published/Publisher"
    },
    "doc://com.externally.resolved.symbol/s:7Combine9PublisherP6OutputQa": {
      "abstract": [
        {
          "text": "The kind of values published by this publisher.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Output"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7Combine9PublisherP6OutputQa",
      "kind": "symbol",
      "role": "symbol",
      "title": "Output",
      "type": "topic",
      "url": "/documentation/Combine/Publisher/Output"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/swift/optional/publisher-swift.struct/assign(to:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
