{
  "abstract": [
    {
      "text": "Understand the constraints of imported Obj-C lightweight generic type declarations.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/imported-c-and-objective-c-apis"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/using-imported-lightweight-generics-in-swift"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Using Imported Lightweight Generics in Swift"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Objective-C type declarations that use lightweight generic parameterization are imported",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "by Swift with information about the type of their contents preserved. For example,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "given the following Objective-C property declarations:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@property NSArray<NSDate *> *dates;",
            "@property NSCache<NSObject *, id<NSDiscardableContent>> *cachedData;",
            "@property NSDictionary <NSString *, NSArray<NSLocale *> *> *supportedLocales;"
          ],
          "syntax": "occ",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Hereâ€™s the Swift version of those declarations when you import them:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var dates: [Date]",
            "var cachedData: NSCache<NSObject, NSDiscardableContent>",
            "var supportedLocales: [String: [Locale]]"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "A parameterized class written in Objective-C is imported into Swift as a generic",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "class with the same number of type parameters. All Objective-C generic type parameters",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "imported by Swift have a type constraint that requires that type to be a class (",
              "type": "text"
            },
            {
              "code": "T: AnyObject",
              "type": "codeVoice"
            },
            {
              "text": ").",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If the Objective-C generic parameterization specifies class or protocols qualifications,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the imported Swift declaration has a constraint that requires that type to be a subclass",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of the specified class or to conform to the specified protocol. For an unspecialized",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Objective-C type, Swift infers the generic parameterization for the imported class",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "type constraints. For example, consider the following Objective-C class and category",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "declarations:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@interface List<T: id<NSCopying>> : NSObject",
            "- (List<T> *)listByAppendingItemsInList:(List<T> *)otherList;",
            "@end",
            "",
            "@interface ListContainer : NSObject",
            "- (List<NSValue *> *)listOfValues;",
            "@end",
            "",
            "@interface ListContainer (ObjectList)",
            "- (List *)listOfObjects;",
            "@end"
          ],
          "syntax": "occ",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When you import these declarations into Swift, the ",
              "type": "text"
            },
            {
              "code": "NSCopying",
              "type": "codeVoice"
            },
            {
              "text": " protocol qualification",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of the ",
              "type": "text"
            },
            {
              "code": "List",
              "type": "codeVoice"
            },
            {
              "text": " type and the ",
              "type": "text"
            },
            {
              "code": "NSValue",
              "type": "codeVoice"
            },
            {
              "text": " class qualification of the ",
              "type": "text"
            },
            {
              "code": "listOfValues",
              "type": "codeVoice"
            },
            {
              "text": " method",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "are preserved. In addition, the unqualified ",
              "type": "text"
            },
            {
              "code": "listOfObjects",
              "type": "codeVoice"
            },
            {
              "text": " method uses the ",
              "type": "text"
            },
            {
              "code": "NSCopying",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "generic constraint inferred from the ",
              "type": "text"
            },
            {
              "code": "List",
              "type": "codeVoice"
            },
            {
              "text": " type.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "class List<T: NSCopying> : NSObject {",
            "    func listByAppendingItemsInList(otherList: List<T>) -> List<T>",
            "}",
            "",
            "class ListContainer : NSObject {",
            "    func listOfValues() -> List<NSValue>",
            "}",
            "",
            "extension ListContainer {",
            "    func listOfObjects() -> List<NSCopying>",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/imported-c-and-objective-c-apis": {
      "abstract": [
        {
          "text": "Use native Swift syntax to interoperate with types and functions in C and Objective-C.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/imported-c-and-objective-c-apis",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Imported C and Objective-C APIs",
      "type": "topic",
      "url": "/documentation/swift/imported-c-and-objective-c-apis"
    },
    "doc://com.apple.Swift/documentation/Swift/using-imported-protocol-qualified-classes-in-swift": {
      "abstract": [
        {
          "text": "Learn how imported Objective-C protocol-qualified classes and metaclasses are represented.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/using-imported-protocol-qualified-classes-in-swift",
      "kind": "article",
      "role": "article",
      "title": "Using Imported Protocol-Qualified Classes in Swift",
      "type": "topic",
      "url": "/documentation/swift/using-imported-protocol-qualified-classes-in-swift"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Objective-C-APIs",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/using-imported-protocol-qualified-classes-in-swift"
      ],
      "title": "Objective-C APIs"
    }
  ]
}
