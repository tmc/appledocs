{"hierarchy":{"paths":[["doc://com.apple.documentation/documentation/technologies","doc://com.apple.Swift/documentation/Swift"]]},"abstract":[{"text":"Returns the dynamic type of a value.","type":"text"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"type","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Metatype","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Metatype","kind":"typeIdentifier"}],"roleHeading":"Function","title":"type(of:)","modules":[{"name":"Swift"}],"symbolKind":"func","externalID":"s:s4type2ofq_x_tr0_lF","role":"symbol","platforms":[{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"8.0","name":"iOS"},{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"8.0","name":"iPadOS"},{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"13.0","name":"Mac Catalyst"},{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"10.10","name":"macOS"},{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"9.0","name":"tvOS"},{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"1.0","name":"visionOS"},{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"2.0","name":"watchOS"}]},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS","iPadOS","Mac Catalyst","macOS","tvOS","visionOS","watchOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"type"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Metatype"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Metatype"}],"languages":["swift"]}]},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"The value for which to find the dynamic type.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"The dynamic type, which is a metatype instance.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"You can use the ","type":"text"},{"type":"codeVoice","code":"type(of:)"},{"text":" function to find the dynamic type of a value,","type":"text"},{"text":" ","type":"text"},{"text":"particularly when the dynamic type is different from the static type. The","type":"text"},{"text":" ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"static type"}]},{"text":" of a value is the known, compile-time type of the value. The","type":"text"},{"text":" ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"dynamic type","type":"text"}]},{"text":" of a value is the valueâ€™s actual type at run-time, which","type":"text"},{"text":" ","type":"text"},{"text":"can be a subtype of its concrete type.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the following code, the "},{"code":"count","type":"codeVoice"},{"type":"text","text":" variable has the same static and dynamic"},{"type":"text","text":" "},{"type":"text","text":"type: "},{"code":"Int","type":"codeVoice"},{"type":"text","text":". When "},{"code":"count","type":"codeVoice"},{"type":"text","text":" is passed to the "},{"code":"printInfo(_:)","type":"codeVoice"},{"type":"text","text":" function,"},{"type":"text","text":" "},{"type":"text","text":"however, the "},{"code":"value","type":"codeVoice"},{"type":"text","text":" parameter has a static type of "},{"code":"Any","type":"codeVoice"},{"type":"text","text":" (the type"},{"type":"text","text":" "},{"type":"text","text":"declared for the parameter) and a dynamic type of "},{"code":"Int","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"codeListing","code":["func printInfo(_ value: Any) {","    let t = type(of: value)","    print(\"'\\(value)' of type '\\(t)'\")","}","","let count: Int = 5","printInfo(count)","// '5' of type 'Int'"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The dynamic type returned from ","type":"text"},{"code":"type(of:)","type":"codeVoice"},{"text":" is a ","type":"text"},{"inlineContent":[{"type":"text","text":"concrete metatype"}],"type":"emphasis"},{"text":" ","type":"text"},{"text":"(","type":"text"},{"code":"T.Type","type":"codeVoice"},{"text":") for a class, structure, enumeration, or other nonprotocol type","type":"text"},{"text":" ","type":"text"},{"code":"T","type":"codeVoice"},{"text":", or an ","type":"text"},{"inlineContent":[{"type":"text","text":"existential metatype"}],"type":"emphasis"},{"text":" (","type":"text"},{"code":"P.Type","type":"codeVoice"},{"text":") for a protocol or protocol","type":"text"},{"text":" ","type":"text"},{"text":"composition ","type":"text"},{"code":"P","type":"codeVoice"},{"text":". When the static type of the value passed to ","type":"text"},{"code":"type(of:)","type":"codeVoice"},{"text":" ","type":"text"},{"text":"is constrained to a class or protocol, you can use that metatype to access","type":"text"},{"text":" ","type":"text"},{"text":"initializers or other static members of the class or protocol.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example, the parameter passed as ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" to the ","type":"text"},{"code":"printSmileyInfo(_:)","type":"codeVoice"},{"text":" ","type":"text"},{"text":"function in the example below is an instance of the ","type":"text"},{"code":"Smiley","type":"codeVoice"},{"text":" class or one","type":"text"},{"text":" ","type":"text"},{"text":"of its subclasses. The function uses ","type":"text"},{"code":"type(of:)","type":"codeVoice"},{"text":" to find the dynamic type","type":"text"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"code":"value","type":"codeVoice"},{"text":", which itself is an instance of the ","type":"text"},{"code":"Smiley.Type","type":"codeVoice"},{"text":" metatype.","type":"text"}]},{"type":"codeListing","code":["class Smiley {","    class var text: String {","        return \":)\"","    }","}","","class EmojiSmiley: Smiley {","     override class var text: String {","        return \"ðŸ˜€\"","    }","}","","func printSmileyInfo(_ value: Smiley) {","    let smileyType = type(of: value)","    print(\"Smile!\", smileyType.text)","}","","let emojiSmiley = EmojiSmiley()","printSmileyInfo(emojiSmiley)","// Smile! ðŸ˜€"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"In this example, accessing the ","type":"text"},{"code":"text","type":"codeVoice"},{"text":" property of the ","type":"text"},{"code":"smileyType","type":"codeVoice"},{"text":" metatype","type":"text"},{"text":" ","type":"text"},{"text":"retrieves the overridden value from the ","type":"text"},{"code":"EmojiSmiley","type":"codeVoice"},{"text":" subclass, instead of","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Smiley","type":"codeVoice"},{"text":" classâ€™s original definition.","type":"text"}]},{"type":"heading","level":1,"anchor":"Finding-the-Dynamic-Type-in-a-Generic-Context","text":"Finding the Dynamic Type in a Generic Context"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, you donâ€™t need to be aware of the difference between concrete and"},{"type":"text","text":" "},{"type":"text","text":"existential metatypes, but calling "},{"type":"codeVoice","code":"type(of:)"},{"type":"text","text":" can yield unexpected"},{"type":"text","text":" "},{"type":"text","text":"results in a generic context with a type parameter bound to a protocol. In"},{"type":"text","text":" "},{"type":"text","text":"a case like this, where a generic parameter "},{"type":"codeVoice","code":"T"},{"type":"text","text":" is bound to a protocol"},{"type":"text","text":" "},{"type":"codeVoice","code":"P"},{"type":"text","text":", the type parameter is not statically known to be a protocol type in"},{"type":"text","text":" "},{"type":"text","text":"the body of the generic function. As a result, "},{"type":"codeVoice","code":"type(of:)"},{"type":"text","text":" can only"},{"type":"text","text":" "},{"type":"text","text":"produce the concrete metatype "},{"type":"codeVoice","code":"P.Protocol"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"The following example defines a ","type":"text"},{"code":"printGenericInfo(_:)","type":"codeVoice"},{"text":" function that takes","type":"text"},{"text":" ","type":"text"},{"text":"a generic parameter and declares the ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" typeâ€™s conformance to a new","type":"text"},{"text":" ","type":"text"},{"text":"protocol ","type":"text"},{"code":"P","type":"codeVoice"},{"text":". When ","type":"text"},{"code":"printGenericInfo(_:)","type":"codeVoice"},{"text":" is called with a string that has","type":"text"},{"text":" ","type":"text"},{"code":"P","type":"codeVoice"},{"text":" as its static type, the call to ","type":"text"},{"code":"type(of:)","type":"codeVoice"},{"text":" returns ","type":"text"},{"code":"P.self","type":"codeVoice"},{"text":" instead","type":"text"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"code":"String.self","type":"codeVoice"},{"text":" (the dynamic type inside the parameter).","type":"text"}]},{"type":"codeListing","code":["func printGenericInfo<T>(_ value: T) {","    let t = type(of: value)","    print(\"'\\(value)' of type '\\(t)'\")","}","","protocol P {}","extension String: P {}","","let stringAsP: P = \"Hello!\"","printGenericInfo(stringAsP)","// 'Hello!' of type 'P'"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This unexpected result occurs because the call to "},{"type":"codeVoice","code":"type(of: value)"},{"type":"text","text":" inside"},{"type":"text","text":" "},{"type":"codeVoice","code":"printGenericInfo(_:)"},{"type":"text","text":" must return a metatype that is an instance of"},{"type":"text","text":" "},{"type":"codeVoice","code":"T.Type"},{"type":"text","text":", but "},{"type":"codeVoice","code":"String.self"},{"type":"text","text":" (the expected dynamic type) is not an instance"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"P.Type"},{"type":"text","text":" (the concrete metatype of "},{"type":"codeVoice","code":"value"},{"type":"text","text":"). To get the dynamic type"},{"type":"text","text":" "},{"type":"text","text":"inside "},{"type":"codeVoice","code":"value"},{"type":"text","text":" in this generic context, cast the parameter to "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"text","text":"calling "},{"type":"codeVoice","code":"type(of:)"},{"type":"text","text":"."}]},{"type":"codeListing","code":["func betterPrintGenericInfo<T>(_ value: T) {","    let t = type(of: value as Any)","    print(\"'\\(value)' of type '\\(t)'\")","}","","betterPrintGenericInfo(stringAsP)","// 'Hello!' of type 'String'"],"syntax":"swift"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["/documentation/swift/type(of:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc://com.apple.Swift/documentation/Swift/type(of:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"generated":true,"anchor":"Querying-Runtime-Values","title":"Querying Runtime Values","identifiers":["doc://com.apple.Swift/documentation/Swift/Mirror","doc://com.apple.Swift/documentation/Swift/ObjectIdentifier","doc://com.apple.Swift/documentation/Swift/==(_:_:)-w1qf","doc://com.apple.Swift/documentation/Swift/!=(_:_:)-6s4z0"]}],"references":{"doc://com.apple.Swift/documentation/Swift/type(of:)":{"type":"topic","title":"type(of:)","url":"/documentation/swift/type(of:)","role":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/type(of:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"type","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Metatype","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Metatype","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns the dynamic type of a value."}]},"doc://com.apple.documentation/documentation/technologies":{"abstract":[{"text":"","type":"text"}],"type":"topic","role":"overview","title":"Technologies","identifier":"doc://com.apple.documentation/documentation/technologies","url":"/documentation/technologies","kind":"technologies"},"doc://com.apple.Swift/documentation/Swift/!=(_:_:)-6s4z0":{"type":"topic","title":"!=(_:_:)","url":"/documentation/swift/!=(_:_:)-6s4z0","role":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/!=(_:_:)-6s4z0","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"((any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type)?, (any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type)?) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two types are not identical."}]},"doc://com.apple.Swift/documentation/Swift":{"abstract":[{"text":"Build apps using a powerful open language.","type":"text"}],"type":"topic","role":"collection","title":"Swift","identifier":"doc://com.apple.Swift/documentation/Swift","url":"/documentation/swift","kind":"symbol","images":[{"identifier":"Swift-PageImage-card.png","type":"card"}]},"doc://com.apple.Swift/documentation/Swift/Mirror":{"identifier":"doc://com.apple.Swift/documentation/Swift/Mirror","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mirror","kind":"identifier"}],"url":"/documentation/swift/mirror","type":"topic","title":"Mirror","navigatorTitle":[{"text":"Mirror","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A representation of the substructure and display style of an instance of","type":"text"},{"text":" ","type":"text"},{"text":"any type.","type":"text"}]},"doc://com.apple.Swift/documentation/Swift/ObjectIdentifier":{"identifier":"doc://com.apple.Swift/documentation/Swift/ObjectIdentifier","abstract":[{"text":"A unique identifier for a class instance or metatype.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObjectIdentifier","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ObjectIdentifier","kind":"identifier"}],"url":"/documentation/swift/objectidentifier","type":"topic","title":"ObjectIdentifier"},"doc://com.apple.Swift/documentation/Swift/==(_:_:)-w1qf":{"type":"topic","title":"==(_:_:)","url":"/documentation/swift/==(_:_:)-w1qf","role":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/==(_:_:)-w1qf","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"((any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type)?, (any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type)?) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two types are identical."}]},"Swift-PageImage-card.png":{"type":"image","alt":"An orange Swift logo on a gradient background.","variants":[{"traits":["2x","light"],"url":"https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"},{"traits":["2x","dark"],"url":"https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"}],"identifier":"Swift-PageImage-card.png"}},"legalNotices":{"copyright":"Copyright &copy; 2025 Apple Inc. All rights reserved.","termsOfUse":"https://www.apple.com/legal/internet-services/terms/site.html","privacyPolicy":"https://www.apple.com/privacy/privacy-policy"}}