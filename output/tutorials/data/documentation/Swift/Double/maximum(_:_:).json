{
  "abstract": [
    {
      "text": "Returns the greater of the two given values.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/Double"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/Double/maximum(_:_:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Swift",
    "externalID": "s:SFsE7maximumyxx_xtFZ::SYNTHESIZED::s:Sd",
    "fragments": [
      {
        "kind": "keyword",
        "text": "static"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "maximum"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Type Method",
    "symbolKind": "method",
    "title": "maximum(_:_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "static"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "maximum"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "x"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "y"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A floating-point value.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "x"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Another floating-point value.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "y"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The greater of ",
              "type": "text"
            },
            {
              "code": "x",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "y",
              "type": "codeVoice"
            },
            {
              "text": ", or whichever is a number if the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "other is NaN.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This method returns the maximum of two values, preserving order and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "eliminating NaN when possible. For two values ",
              "type": "text"
            },
            {
              "code": "x",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "y",
              "type": "codeVoice"
            },
            {
              "text": ", the result of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "maximum(x, y)",
              "type": "codeVoice"
            },
            {
              "text": " is ",
              "type": "text"
            },
            {
              "code": "x",
              "type": "codeVoice"
            },
            {
              "text": " if ",
              "type": "text"
            },
            {
              "code": "x > y",
              "type": "codeVoice"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "code": "y",
              "type": "codeVoice"
            },
            {
              "text": " if ",
              "type": "text"
            },
            {
              "code": "x <= y",
              "type": "codeVoice"
            },
            {
              "text": ", or whichever of ",
              "type": "text"
            },
            {
              "code": "x",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or ",
              "type": "text"
            },
            {
              "code": "y",
              "type": "codeVoice"
            },
            {
              "text": " is a number if the other is a quiet NaN. If both ",
              "type": "text"
            },
            {
              "code": "x",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "y",
              "type": "codeVoice"
            },
            {
              "text": " are",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "NaN, or either ",
              "type": "text"
            },
            {
              "code": "x",
              "type": "codeVoice"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "code": "y",
              "type": "codeVoice"
            },
            {
              "text": " is a signaling NaN, the result is NaN.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "Double.maximum(10.0, -25.0)",
            "// 10.0",
            "Double.maximum(10.0, .nan)",
            "// 10.0",
            "Double.maximum(.nan, -25.0)",
            "// -25.0",
            "Double.maximum(.nan, .nan)",
            "// nan"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "maximum",
              "type": "codeVoice"
            },
            {
              "text": " method implements the ",
              "type": "text"
            },
            {
              "code": "maxNum",
              "type": "codeVoice"
            },
            {
              "text": " operation defined by the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "http://ieeexplore.ieee.org/servlet/opac?punumber=4610933",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Double": {
      "abstract": [
        {
          "text": "A double-precision, floating-point value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Double"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Double",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Double"
        }
      ],
      "role": "symbol",
      "title": "Double",
      "type": "topic",
      "url": "/documentation/swift/double"
    },
    "doc://com.apple.Swift/documentation/Swift/Double/isEqual(to:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether this instance is equal to the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isEqual"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sd",
          "text": "Double"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Double/isEqual(to:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "isEqual(to:)",
      "type": "topic",
      "url": "/documentation/swift/double/isequal(to:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Double/isLess(than:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether this instance is less than the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isLess"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "than"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sd",
          "text": "Double"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Double/isLess(than:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "isLess(than:)",
      "type": "topic",
      "url": "/documentation/swift/double/isless(than:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Double/isLessThanOrEqualTo(_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether this instance is less than or",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "equal to the given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isLessThanOrEqualTo"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sd",
          "text": "Double"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Double/isLessThanOrEqualTo(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "isLessThanOrEqualTo(_:)",
      "type": "topic",
      "url": "/documentation/swift/double/islessthanorequalto(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Double/isTotallyOrdered(belowOrEqualTo:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether this instance should precede",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "or tie positions with the given value in an ascending sort.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isTotallyOrdered"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "belowOrEqualTo"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Double/isTotallyOrdered(belowOrEqualTo:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "isTotallyOrdered(belowOrEqualTo:)",
      "type": "topic",
      "url": "/documentation/swift/double/istotallyordered(beloworequalto:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Double/maximum(_:_:)": {
      "abstract": [
        {
          "text": "Returns the greater of the two given values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "maximum"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Double/maximum(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "maximum(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/double/maximum(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Double/maximumMagnitude(_:_:)": {
      "abstract": [
        {
          "text": "Returns the value with greater magnitude.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "maximumMagnitude"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Double/maximumMagnitude(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "maximumMagnitude(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/double/maximummagnitude(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Double/minimum(_:_:)": {
      "abstract": [
        {
          "text": "Returns the lesser of the two given values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "minimum"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Double/minimum(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "minimum(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/double/minimum(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Double/minimumMagnitude(_:_:)": {
      "abstract": [
        {
          "text": "Returns the value with lesser magnitude.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "minimumMagnitude"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Double/minimumMagnitude(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "minimumMagnitude(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/double/minimummagnitude(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/floating-point-operators-for-double": {
      "abstract": [
        {
          "text": "Perform arithmetic and bitwise operations or compare values.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/floating-point-operators-for-double",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Floating-Point Operators for Double",
      "type": "topic",
      "url": "/documentation/swift/floating-point-operators-for-double"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "http://ieeexplore.ieee.org/servlet/opac?punumber=4610933": {
      "identifier": "http://ieeexplore.ieee.org/servlet/opac?punumber=4610933",
      "title": "IEEE 754 specification",
      "titleInlineContent": [
        {
          "text": "IEEE 754 specification",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "http://ieeexplore.ieee.org/servlet/opac?punumber=4610933"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Comparing-Values",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/floating-point-operators-for-double",
        "doc://com.apple.Swift/documentation/Swift/Double/isEqual(to:)",
        "doc://com.apple.Swift/documentation/Swift/Double/isLess(than:)",
        "doc://com.apple.Swift/documentation/Swift/Double/isLessThanOrEqualTo(_:)",
        "doc://com.apple.Swift/documentation/Swift/Double/isTotallyOrdered(belowOrEqualTo:)",
        "doc://com.apple.Swift/documentation/Swift/Double/minimum(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Double/minimumMagnitude(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Double/maximumMagnitude(_:_:)"
      ],
      "title": "Comparing Values"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/double/maximum(_:_:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
