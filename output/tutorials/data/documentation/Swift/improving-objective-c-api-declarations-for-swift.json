{
  "abstract": [
    {
      "text": "Use the ",
      "type": "text"
    },
    {
      "code": "NS_REFINED_FOR_SWIFT",
      "type": "codeVoice"
    },
    {
      "text": " macro to change how an API is imported into Swift.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/improving-objective-c-api-declarations-for-swift"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Improving Objective-C API Declarations for Swift"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If you want to expose an Objective-C API to Swift with a different declaration, but",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a similar underlying implementation, use the ",
              "type": "text"
            },
            {
              "code": "NS_REFINED_FOR_SWIFT",
              "type": "codeVoice"
            },
            {
              "text": " macro. When you",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "import an Objective-C API into Swift, you can adopt Swift-only types such as tuples.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "You can also reorder, combine, and rename parameters so the API matches other Swift",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "APIs.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Choose-a-New-Name-and-Declaration",
          "level": 3,
          "text": "Choose a New Name and Declaration",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The example below shows an Objective-C API that can be expressed more succinctly",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "once it’s imported into Swift:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@interface Color : NSObject",
            "",
            "- (void)getRed:(nullable CGFloat *)red",
            "         green:(nullable CGFloat *)green",
            "          blue:(nullable CGFloat *)blue",
            "         alpha:(nullable CGFloat *)alpha;",
            "",
            "@end"
          ],
          "syntax": "occ",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Calling the ",
              "type": "text"
            },
            {
              "code": "getRed(red:green:blue:alpha:)",
              "type": "codeVoice"
            },
            {
              "text": " method in Swift requires passing four",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in-out parameters. A reimagined Swift computed property that expresses the same functionality—getting",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the components of a color—can be written as a four-element tuple:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var rgba: (red: CGFloat, green: CGFloat, blue: CGFloat, alpha: CGFloat)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The new name is shorter, but still understandable because it uses an industry-standard",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "initialism for color components: RGBA. The property defined by the new declaration",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is easier to use in Swift.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Expose-the-Existing-Implementation",
          "level": 3,
          "text": "Expose the Existing Implementation",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Applying the ",
              "type": "text"
            },
            {
              "code": "NS_REFINED_FOR_SWIFT",
              "type": "codeVoice"
            },
            {
              "text": " macro exposes the existing Objective-C API for",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "reuse in your refined API. The existing API is renamed with double underscores (",
              "type": "text"
            },
            {
              "code": "__",
              "type": "codeVoice"
            },
            {
              "text": ")",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "when it’s imported, to help prevent you from accidentally using the existing API",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "elsewhere.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The example below adds the ",
              "type": "text"
            },
            {
              "code": "NS_REFINED_FOR_SWIFT",
              "type": "codeVoice"
            },
            {
              "text": " macro to the ",
              "type": "text"
            },
            {
              "code": "getRed(red:green:blue:alpha:)",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@interface Color : NSObject",
            "",
            "- (void)getRed:(nullable CGFloat *)red",
            "         green:(nullable CGFloat *)green",
            "          blue:(nullable CGFloat *)blue",
            "         alpha:(nullable CGFloat *)alpha NS_REFINED_FOR_SWIFT;",
            "",
            "@end"
          ],
          "syntax": "occ",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The following rules determine how an API’s existing interface is imported:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Initializer methods are imported by Swift with double underscores (",
                      "type": "text"
                    },
                    {
                      "code": "__",
                      "type": "codeVoice"
                    },
                    {
                      "text": ") prepended",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "to their first argument labels.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Object subscripting methods are imported by Swift as methods with double underscores",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "(",
                      "type": "text"
                    },
                    {
                      "code": "__",
                      "type": "codeVoice"
                    },
                    {
                      "text": ") prepended to their base names, rather than as a Swift subscript, if either",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "the getter or setter method is marked as ",
                      "type": "text"
                    },
                    {
                      "code": "NS_REFINED_FOR_SWIFT",
                      "type": "codeVoice"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Other methods are imported with double underscores (",
                      "type": "text"
                    },
                    {
                      "code": "__",
                      "type": "codeVoice"
                    },
                    {
                      "text": ") prepended to their base",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "names.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Reuse-the-Existing-Implementation",
          "level": 3,
          "text": "Reuse the Existing Implementation",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You reuse an API by using its new name to call it in the implementation of a new",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "API in Swift.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The implementation of the new ",
              "type": "text"
            },
            {
              "code": "rgba",
              "type": "codeVoice"
            },
            {
              "text": " property reuses the existing ",
              "type": "text"
            },
            {
              "code": "__getRed(red:green:blue:alpha:)",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method to ensure that functionality remains the same between Swift and Objective-C:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "extension Color {",
            "    var rgba: (red: CGFloat, green: CGFloat, blue: CGFloat, alpha: CGFloat) {",
            "        var r: CGFloat = 0.0",
            "        var g: CGFloat = 0.0",
            "        var b: CGFloat = 0.0",
            "        var a: CGFloat = 0.0",
            "        __getRed(red: &r, green: &g, blue: &b, alpha: &a)",
            "        return (red: r, green: g, blue: b, alpha: a)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/designating-nullability-in-objective-c-apis": {
      "abstract": [
        {
          "text": "Use nullability annotations or mark regions as annotated to control how Objective-C",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "declarations are imported into Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/designating-nullability-in-objective-c-apis",
      "kind": "article",
      "role": "article",
      "title": "Designating Nullability in Objective-C APIs",
      "type": "topic",
      "url": "/documentation/swift/designating-nullability-in-objective-c-apis"
    },
    "doc://com.apple.Swift/documentation/Swift/grouping-related-objective-c-constants": {
      "abstract": [
        {
          "text": "Add macros to your Objective-C types to group their values in Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/grouping-related-objective-c-constants",
      "kind": "article",
      "role": "article",
      "title": "Grouping Related Objective-C Constants",
      "type": "topic",
      "url": "/documentation/swift/grouping-related-objective-c-constants"
    },
    "doc://com.apple.Swift/documentation/Swift/making-objective-c-apis-unavailable-in-swift": {
      "abstract": [
        {
          "text": "Use the ",
          "type": "text"
        },
        {
          "code": "NS_SWIFT_UNAVAILABLE",
          "type": "codeVoice"
        },
        {
          "text": " macro to prevent an API from being used in Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/making-objective-c-apis-unavailable-in-swift",
      "kind": "article",
      "role": "article",
      "title": "Making Objective-C APIs Unavailable in Swift",
      "type": "topic",
      "url": "/documentation/swift/making-objective-c-apis-unavailable-in-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/marking-api-availability-in-objective-c": {
      "abstract": [
        {
          "text": "Use ",
          "type": "text"
        },
        {
          "code": "a",
          "type": "codeVoice"
        },
        {
          "text": " macro to denote the availability of an Objective-C API.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/marking-api-availability-in-objective-c",
      "kind": "article",
      "role": "article",
      "title": "Marking API Availability in Objective-C",
      "type": "topic",
      "url": "/documentation/swift/marking-api-availability-in-objective-c"
    },
    "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization": {
      "abstract": [
        {
          "text": "Apply macros to your Objective-C APIs to customize how they’re imported into Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Objective-C and C Code Customization",
      "type": "topic",
      "url": "/documentation/swift/objective-c-and-c-code-customization"
    },
    "doc://com.apple.Swift/documentation/Swift/renaming-objective-c-apis-for-swift": {
      "abstract": [
        {
          "text": "Use the ",
          "type": "text"
        },
        {
          "code": "NS_SWIFT_NAME",
          "type": "codeVoice"
        },
        {
          "text": " macro to customize API names for Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/renaming-objective-c-apis-for-swift",
      "kind": "article",
      "role": "article",
      "title": "Renaming Objective-C APIs for Swift",
      "type": "topic",
      "url": "/documentation/swift/renaming-objective-c-apis-for-swift"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Customizing-Objective-C-APIs",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/designating-nullability-in-objective-c-apis",
        "doc://com.apple.Swift/documentation/Swift/renaming-objective-c-apis-for-swift",
        "doc://com.apple.Swift/documentation/Swift/grouping-related-objective-c-constants",
        "doc://com.apple.Swift/documentation/Swift/marking-api-availability-in-objective-c",
        "doc://com.apple.Swift/documentation/Swift/making-objective-c-apis-unavailable-in-swift"
      ],
      "title": "Customizing Objective-C APIs"
    }
  ]
}
