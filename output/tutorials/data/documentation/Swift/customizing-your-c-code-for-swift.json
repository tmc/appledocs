{
  "abstract": [
    {
      "text": "Use the ",
      "type": "text"
    },
    {
      "code": "CF_SWIFT_NAME",
      "type": "codeVoice"
    },
    {
      "text": " macro to group functions that have related behavior.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/customizing-your-c-code-for-swift"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Customizing Your C Code for Swift"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Because structures in C can’t have methods, property accessors, or custom initializers,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you often need to write such functionality using global functions. Structures in",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Swift can declare methods, property accessors, and initializers. You use the ",
              "type": "text"
            },
            {
              "code": "CF_SWIFT_NAME",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "macro to group together related global functions into a single structure type that’s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "imported into Swift.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Apply-CFSWIFTNAME-to-Related-Functions",
          "level": 3,
          "text": "Apply CF_SWIFT_NAME to Related Functions",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The example below shows several functions that are all related to a ",
              "type": "text"
            },
            {
              "code": "Color",
              "type": "codeVoice"
            },
            {
              "text": " type.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "CF_SWIFT_NAME",
              "type": "codeVoice"
            },
            {
              "text": " macro is applied to each function, giving each one a new name",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "for Swift that’s nested together under the ",
              "type": "text"
            },
            {
              "code": "Color",
              "type": "codeVoice"
            },
            {
              "text": " type:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "Color ColorCreateWithCMYK(float c, float m, float y, float k) CF_SWIFT_NAME(Color.init(c:m:y:k:));",
            "",
            "float ColorGetHue(Color color) CF_SWIFT_NAME(getter:Color.hue(self:));",
            "void ColorSetHue(Color color, float hue) CF_SWIFT_NAME(setter:Color.hue(self:newValue:));",
            "",
            "Color ColorDarkenColor(Color color, float amount) CF_SWIFT_NAME(Color.darken(self:amount:));",
            "",
            "extern const Color ColorBondiBlue CF_SWIFT_NAME(Color.bondiBlue);",
            "",
            "Color ColorGetCalibrationColor(void) CF_SWIFT_NAME(getter:Color.calibration());",
            "Color ColorSetCalibrationColor(Color color) CF_SWIFT_NAME(setter:Color.calibration(newValue:));"
          ],
          "syntax": "occ",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The argument you pass to the ",
              "type": "text"
            },
            {
              "code": "CF_SWIFT_NAME",
              "type": "codeVoice"
            },
            {
              "text": " macro uses the same syntax as the ",
              "type": "text"
            },
            {
              "code": "#selector",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "expression. You use ",
              "type": "text"
            },
            {
              "code": "self",
              "type": "codeVoice"
            },
            {
              "text": " in a ",
              "type": "text"
            },
            {
              "code": "CF_SWIFT_NAME",
              "type": "codeVoice"
            },
            {
              "text": " argument to refer to the instance",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that the method belongs to.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Import-Related-Functions-into-Swift",
          "level": 3,
          "text": "Import Related Functions into Swift",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Here’s how Swift imports the related functions above into a single type:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "extension Color {",
            "    init(c: Float, m: Float, y: Float, k: Float)",
            "",
            "    var hue: Float { get set }",
            "",
            "    func darken(amount: Float) -> Color",
            "",
            "    static var bondiBlue: Color",
            "",
            "    static var calibration: Color",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "You can’t reorder or change the number of arguments for type members imported",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "using the ",
                  "type": "text"
                },
                {
                  "code": "CF_SWIFT_NAME",
                  "type": "codeVoice"
                },
                {
                  "text": " macro.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization": {
      "abstract": [
        {
          "text": "Apply macros to your Objective-C APIs to customize how they’re imported into Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Objective-C and C Code Customization",
      "type": "topic",
      "url": "/documentation/swift/objective-c-and-c-code-customization"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": []
}
