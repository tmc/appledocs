{
  "abstract": [
    {
      "text": "Use native Swift syntax to interoperate with types and functions in C and Objective-C.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/imported-c-and-objective-c-apis"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "role": "collectionGroup",
    "title": "Imported C and Objective-C APIs"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can access and use pieces of code written in C and Objective-C from within your",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Swift code. After you import an Objective-C framework, a C library, or a header file,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you can work with Objective-C classes and protocols, as well as common C constructs,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "functions, and patterns.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/calling-objective-c-apis-asynchronously": {
      "abstract": [
        {
          "text": "Learn how functions and methods that take a completion handler are converted to Swift",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "asynchronous functions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/calling-objective-c-apis-asynchronously",
      "kind": "article",
      "role": "article",
      "title": "Calling Objective-C APIs Asynchronously",
      "type": "topic",
      "url": "/documentation/swift/calling-objective-c-apis-asynchronously"
    },
    "doc://com.apple.Swift/documentation/Swift/cocoa-design-patterns": {
      "abstract": [
        {
          "text": "Adopt and interoperate with Cocoa design patterns in your Swift apps.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/cocoa-design-patterns",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Cocoa Design Patterns",
      "type": "topic",
      "url": "/documentation/swift/cocoa-design-patterns"
    },
    "doc://com.apple.Swift/documentation/Swift/handling-dynamically-typed-methods-and-objects-in-swift": {
      "abstract": [
        {
          "text": "Cast instances of the Objective-C ",
          "type": "text"
        },
        {
          "code": "id",
          "type": "codeVoice"
        },
        {
          "text": " type to a specific Swift type.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/handling-dynamically-typed-methods-and-objects-in-swift",
      "kind": "article",
      "role": "article",
      "title": "Handling Dynamically Typed Methods and Objects in Swift",
      "type": "topic",
      "url": "/documentation/swift/handling-dynamically-typed-methods-and-objects-in-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/importing-objective-c-into-swift": {
      "abstract": [
        {
          "text": "Access classes and other declarations from your Objective-C code in Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/importing-objective-c-into-swift",
      "kind": "article",
      "role": "article",
      "title": "Importing Objective-C into Swift",
      "type": "topic",
      "url": "/documentation/swift/importing-objective-c-into-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/importing-swift-into-objective-c": {
      "abstract": [
        {
          "text": "Access Swift types and declarations from within your Objective-C codebase.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/importing-swift-into-objective-c",
      "kind": "article",
      "role": "article",
      "title": "Importing Swift into Objective-C",
      "type": "topic",
      "url": "/documentation/swift/importing-swift-into-objective-c"
    },
    "doc://com.apple.Swift/documentation/Swift/migrating-your-objective-c-code-to-swift": {
      "abstract": [
        {
          "text": "Learn the recommended steps to migrate your code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/migrating-your-objective-c-code-to-swift",
      "kind": "article",
      "role": "article",
      "title": "Migrating Your Objective-C Code to Swift",
      "type": "topic",
      "url": "/documentation/swift/migrating-your-objective-c-code-to-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization": {
      "abstract": [
        {
          "text": "Apply macros to your Objective-C APIs to customize how theyâ€™re imported into Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Objective-C and C Code Customization",
      "type": "topic",
      "url": "/documentation/swift/objective-c-and-c-code-customization"
    },
    "doc://com.apple.Swift/documentation/Swift/using-imported-c-functions-in-swift": {
      "abstract": [
        {
          "text": "Learn how to call imported functions that are declared in a C header.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/using-imported-c-functions-in-swift",
      "kind": "article",
      "role": "article",
      "title": "Using Imported C Functions in Swift",
      "type": "topic",
      "url": "/documentation/swift/using-imported-c-functions-in-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/using-imported-c-macros-in-swift": {
      "abstract": [
        {
          "text": "Use imported C-defined macros as constants.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/using-imported-c-macros-in-swift",
      "kind": "article",
      "role": "article",
      "title": "Using Imported C Macros in Swift",
      "type": "topic",
      "url": "/documentation/swift/using-imported-c-macros-in-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/using-imported-c-structs-and-unions-in-swift": {
      "abstract": [
        {
          "text": "Learn how Swift represents imported C structures and unions, including types with",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "bitfields and unnamed fields.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/using-imported-c-structs-and-unions-in-swift",
      "kind": "article",
      "role": "article",
      "title": "Using Imported C Structs and Unions in Swift",
      "type": "topic",
      "url": "/documentation/swift/using-imported-c-structs-and-unions-in-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/using-imported-lightweight-generics-in-swift": {
      "abstract": [
        {
          "text": "Understand the constraints of imported Obj-C lightweight generic type declarations.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/using-imported-lightweight-generics-in-swift",
      "kind": "article",
      "role": "article",
      "title": "Using Imported Lightweight Generics in Swift",
      "type": "topic",
      "url": "/documentation/swift/using-imported-lightweight-generics-in-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/using-imported-protocol-qualified-classes-in-swift": {
      "abstract": [
        {
          "text": "Learn how imported Objective-C protocol-qualified classes and metaclasses are represented.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/using-imported-protocol-qualified-classes-in-swift",
      "kind": "article",
      "role": "article",
      "title": "Using Imported Protocol-Qualified Classes in Swift",
      "type": "topic",
      "url": "/documentation/swift/using-imported-protocol-qualified-classes-in-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/using-objective-c-runtime-features-in-swift": {
      "abstract": [
        {
          "text": "Use selectors and key paths to interact with dynamic Objective-C APIs.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/using-objective-c-runtime-features-in-swift",
      "kind": "article",
      "role": "article",
      "title": "Using Objective-C Runtime Features in Swift",
      "type": "topic",
      "url": "/documentation/swift/using-objective-c-runtime-features-in-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/working-with-core-foundation-types": {
      "abstract": [
        {
          "text": "Work directly with memory-managed Core Foundation types in your Swift code, and manually",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "handle retains as needed.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/working-with-core-foundation-types",
      "kind": "article",
      "role": "article",
      "title": "Working with Core Foundation Types",
      "type": "topic",
      "url": "/documentation/swift/working-with-core-foundation-types"
    },
    "doc://com.apple.Swift/documentation/Swift/working-with-foundation-types": {
      "abstract": [
        {
          "text": "Use bridged Foundation types in your Swift codebase to work with dates, times, and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "other values.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/working-with-foundation-types",
      "kind": "article",
      "role": "article",
      "title": "Working with Foundation Types",
      "type": "topic",
      "url": "/documentation/swift/working-with-foundation-types"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Language-Interoperability-with-Objective-C-and-C",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization",
        "doc://com.apple.Swift/documentation/Swift/migrating-your-objective-c-code-to-swift",
        "doc://com.apple.Swift/documentation/Swift/cocoa-design-patterns",
        "doc://com.apple.Swift/documentation/Swift/handling-dynamically-typed-methods-and-objects-in-swift",
        "doc://com.apple.Swift/documentation/Swift/using-objective-c-runtime-features-in-swift",
        "doc://com.apple.Swift/documentation/Swift/calling-objective-c-apis-asynchronously"
      ],
      "title": "Language Interoperability with Objective-C and C"
    }
  ],
  "topicSections": [
    {
      "abstract": [
        {
          "text": "Access your Swift code from within your Objective-C codebase, and your Objective-C",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "code from Swift.",
          "type": "text"
        }
      ],
      "anchor": "Swift-and-Objective-C-in-the-Same-Project",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/importing-objective-c-into-swift",
        "doc://com.apple.Swift/documentation/Swift/importing-swift-into-objective-c"
      ],
      "title": "Swift and Objective-C in the Same Project"
    },
    {
      "anchor": "Cocoa-Frameworks",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/working-with-foundation-types",
        "doc://com.apple.Swift/documentation/Swift/working-with-core-foundation-types"
      ],
      "title": "Cocoa Frameworks"
    },
    {
      "anchor": "Objective-C-APIs",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/using-imported-lightweight-generics-in-swift",
        "doc://com.apple.Swift/documentation/Swift/using-imported-protocol-qualified-classes-in-swift"
      ],
      "title": "Objective-C APIs"
    },
    {
      "anchor": "C-APIs",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/using-imported-c-structs-and-unions-in-swift",
        "doc://com.apple.Swift/documentation/Swift/using-imported-c-functions-in-swift",
        "doc://com.apple.Swift/documentation/Swift/using-imported-c-macros-in-swift"
      ],
      "title": "C APIs"
    }
  ]
}
