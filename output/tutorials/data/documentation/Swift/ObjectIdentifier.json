{
  "abstract": [
    {
      "text": "A unique identifier for a class instance or metatype.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:SO",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "ObjectIdentifier"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "ObjectIdentifier"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "ObjectIdentifier"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "ObjectIdentifier"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This unique identifier is only valid for comparisons during the lifetime",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of the instance.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In Swift, only class instances and metatypes have unique identities. There",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is no notion of identity for structs, enums, functions, or tuples.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/!=(_:_:)-6s4z0": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether two types are not identical.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "!="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "((any "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": ".Type)?, (any "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": ".Type)?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/!=(_:_:)-6s4z0",
      "kind": "symbol",
      "role": "symbol",
      "title": "!=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/!=(_:_:)-6s4z0"
    },
    "doc://com.apple.Swift/documentation/Swift/==(_:_:)-w1qf": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether two types are identical.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "=="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "((any "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": ".Type)?, (any "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": ".Type)?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/==(_:_:)-w1qf",
      "kind": "symbol",
      "role": "symbol",
      "title": "==(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/==(_:_:)-w1qf"
    },
    "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "role": "symbol",
      "title": "BitwiseCopyable",
      "type": "topic",
      "url": "/documentation/swift/bitwisecopyable"
    },
    "doc://com.apple.Swift/documentation/Swift/Comparable": {
      "abstract": [
        {
          "text": "A type that can be compared using the relational operators ",
          "type": "text"
        },
        {
          "code": "<",
          "type": "codeVoice"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "code": "<=",
          "type": "codeVoice"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "code": ">=",
          "type": "codeVoice"
        },
        {
          "text": ",",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and ",
          "type": "text"
        },
        {
          "code": ">",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Comparable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Comparable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Comparable"
        }
      ],
      "role": "symbol",
      "title": "Comparable",
      "type": "topic",
      "url": "/documentation/swift/comparable"
    },
    "doc://com.apple.Swift/documentation/Swift/Copyable": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Copyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/swift/copyable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customdebugstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/Equatable": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Equatable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/swift/equatable"
    },
    "doc://com.apple.Swift/documentation/Swift/Hashable": {
      "abstract": [
        {
          "text": "A type that can be hashed into a ",
          "type": "text"
        },
        {
          "code": "Hasher",
          "type": "codeVoice"
        },
        {
          "text": " to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Hashable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/swift/hashable"
    },
    "doc://com.apple.Swift/documentation/Swift/Mirror": {
      "abstract": [
        {
          "text": "A representation of the substructure and display style of an instance of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "any type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Mirror"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Mirror",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Mirror"
        }
      ],
      "role": "symbol",
      "title": "Mirror",
      "type": "topic",
      "url": "/documentation/swift/mirror"
    },
    "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier": {
      "abstract": [
        {
          "text": "A unique identifier for a class instance or metatype.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ObjectIdentifier"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ObjectIdentifier"
        }
      ],
      "role": "symbol",
      "title": "ObjectIdentifier",
      "type": "topic",
      "url": "/documentation/swift/objectidentifier"
    },
    "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/AtomicOptionalRepresentable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/AtomicOptionalRepresentable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "AtomicOptionalRepresentable Implementations",
      "type": "topic",
      "url": "/documentation/swift/objectidentifier/atomicoptionalrepresentable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/AtomicRepresentable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/AtomicRepresentable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "AtomicRepresentable Implementations",
      "type": "topic",
      "url": "/documentation/swift/objectidentifier/atomicrepresentable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/Comparable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/Comparable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Comparable Implementations",
      "type": "topic",
      "url": "/documentation/swift/objectidentifier/comparable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/CustomDebugStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/CustomDebugStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomDebugStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/objectidentifier/customdebugstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/Equatable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/Equatable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Equatable Implementations",
      "type": "topic",
      "url": "/documentation/swift/objectidentifier/equatable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/Hashable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/Hashable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Hashable Implementations",
      "type": "topic",
      "url": "/documentation/swift/objectidentifier/hashable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/init(_:)-223xw": {
      "abstract": [
        {
          "text": "Creates an instance that uniquely identifies the given class instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s9AnyObjecta",
          "text": "AnyObject"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/init(_:)-223xw",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/objectidentifier/init(_:)-223xw"
    },
    "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/init(_:)-86u7l": {
      "abstract": [
        {
          "text": "Creates an instance that uniquely identifies the given metatype.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": ".Type)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/init(_:)-86u7l",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/objectidentifier/init(_:)-86u7l"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.Swift/documentation/Swift/type(of:)": {
      "abstract": [
        {
          "text": "Returns the dynamic type of a value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "type"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Metatype"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Metatype"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/type(of:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "type(of:)",
      "type": "topic",
      "url": "/documentation/swift/type(of:)"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicOptionalRepresentable": {
      "abstract": [
        {
          "text": "An atomic value that also supports atomic operations when wrapped",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "in an ",
          "type": "text"
        },
        {
          "code": "Optional",
          "type": "codeVoice"
        },
        {
          "text": ". Atomic optional representable types come with a standalone",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "atomic representation for their optional-wrapped variants.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AtomicOptionalRepresentable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicOptionalRepresentable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AtomicOptionalRepresentable"
        }
      ],
      "role": "symbol",
      "title": "AtomicOptionalRepresentable",
      "type": "topic",
      "url": "/documentation/synchronization/atomicoptionalrepresentable"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicRepresentable": {
      "abstract": [
        {
          "text": "A type that supports atomic operations through a separate atomic storage",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AtomicRepresentable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicRepresentable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AtomicRepresentable"
        }
      ],
      "role": "symbol",
      "title": "AtomicRepresentable",
      "type": "topic",
      "url": "/documentation/synchronization/atomicrepresentable"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Synchronization/AtomicOptionalRepresentable",
        "doc://com.apple.Swift/documentation/Synchronization/AtomicRepresentable",
        "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
        "doc://com.apple.Swift/documentation/Swift/Comparable",
        "doc://com.apple.Swift/documentation/Swift/Copyable",
        "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible",
        "doc://com.apple.Swift/documentation/Swift/Equatable",
        "doc://com.apple.Swift/documentation/Swift/Hashable",
        "doc://com.apple.Swift/documentation/Swift/Sendable"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Querying-Runtime-Values",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Mirror",
        "doc://com.apple.Swift/documentation/Swift/type(of:)",
        "doc://com.apple.Swift/documentation/Swift/==(_:_:)-w1qf",
        "doc://com.apple.Swift/documentation/Swift/!=(_:_:)-6s4z0"
      ],
      "title": "Querying Runtime Values"
    }
  ],
  "topicSections": [
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/init(_:)-223xw",
        "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/init(_:)-86u7l"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/AtomicOptionalRepresentable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/AtomicRepresentable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/Comparable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/CustomDebugStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/Equatable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/ObjectIdentifier/Hashable-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/objectidentifier"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
