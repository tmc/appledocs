{
  "abstract": [
    {
      "text": "Starts a new scope that can contain a dynamic number of child tasks.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/withThrowingDiscardingTaskGroup(returning:isolation:body:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:12_Concurrency31withThrowingDiscardingTaskGroup9returning9isolation4bodyxxm_ScA_pSgYixAA0cdeF0Vys5Error_pGzYaKXEtYaKlF",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "withThrowingDiscardingTaskGroup"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "GroupResult"
      },
      {
        "kind": "text",
        "text": ">("
      },
      {
        "kind": "externalParam",
        "text": "returning"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "text": "GroupResult"
      },
      {
        "kind": "text",
        "text": ".Type, "
      },
      {
        "kind": "externalParam",
        "text": "isolation"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "keyword",
        "text": "isolated"
      },
      {
        "kind": "text",
        "text": " (any "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:ScA",
        "text": "Actor"
      },
      {
        "kind": "text",
        "text": ")?, "
      },
      {
        "kind": "externalParam",
        "text": "body"
      },
      {
        "kind": "text",
        "text": ": ("
      },
      {
        "kind": "keyword",
        "text": "inout"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:12_Concurrency27ThrowingDiscardingTaskGroupV",
        "text": "ThrowingDiscardingTaskGroup"
      },
      {
        "kind": "text",
        "text": "<any "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s5ErrorP",
        "text": "Error"
      },
      {
        "kind": "text",
        "text": ">) "
      },
      {
        "kind": "keyword",
        "text": "async"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "GroupResult"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "async"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "GroupResult"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "17.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Function",
    "symbolKind": "func",
    "title": "withThrowingDiscardingTaskGroup(returning:isolation:body:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "text",
              "text": "@backDeployed(before: macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0)\n"
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "withThrowingDiscardingTaskGroup"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "GroupResult"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "returning"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "returnType"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "text": "GroupResult"
            },
            {
              "kind": "text",
              "text": ".Type = GroupResult.self, "
            },
            {
              "kind": "externalParam",
              "text": "isolation"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "isolated"
            },
            {
              "kind": "text",
              "text": " (any "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Actor",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:ScA",
              "text": "Actor"
            },
            {
              "kind": "text",
              "text": ")? = #isolation, "
            },
            {
              "kind": "externalParam",
              "text": "body"
            },
            {
              "kind": "text",
              "text": ": ("
            },
            {
              "kind": "keyword",
              "text": "inout"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/ThrowingDiscardingTaskGroup",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:12_Concurrency27ThrowingDiscardingTaskGroupV",
              "text": "ThrowingDiscardingTaskGroup"
            },
            {
              "kind": "text",
              "text": "<any "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Error",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s5ErrorP",
              "text": "Error"
            },
            {
              "kind": "text",
              "text": ">) "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "GroupResult"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "GroupResult"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Unlike a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/ThrowingTaskGroup",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", the child tasks as well as their results are",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "discarded as soon as the tasks complete. This prevents the discarding",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "task group from accumulating many results waiting to be consumed, and is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "best applied in situations where the result of a child task is some form",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of side-effect.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "A group waits for all of its child tasks",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to complete before it returns. Even cancelled tasks must run until",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "completion before this function returns.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Cancelled child tasks cooperatively react to cancellation and attempt",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to return as early as possible.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "After this function returns, the task group is always empty.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "It is not possible to explicitly await completion of child-tasks,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "however the group will automatically await ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "all",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " child task completions",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "before returning from this function:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "try await withThrowingDiscardingTaskGroup(of: Void.self) { group in",
            "  group.addTask { /* slow-task */ }",
            "  // slow-task executes...",
            "}",
            "// guaranteed that slow-task has completed and the group is empty & destroyed"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Task-Group-Cancellation",
          "level": 1,
          "text": "Task Group Cancellation",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can cancel a task group and all of its child tasks",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "by calling the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/TaskGroup/cancelAll()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method on the task group,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or by canceling the task in which the group is running.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If you call ",
              "type": "text"
            },
            {
              "code": "addTask(priority:operation:)",
              "type": "codeVoice"
            },
            {
              "text": " to create a new task in a canceled group,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that task is immediately canceled after creation.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Alternatively, you can call ",
              "type": "text"
            },
            {
              "code": "asyncUnlessCancelled(priority:operation:)",
              "type": "codeVoice"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "which doesn’t create the task if the group has already been canceled.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Choosing between these two functions",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "lets you control how to react to cancellation within a group:",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "some child tasks need to run regardless of cancellation,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "but other tasks are better not even being created",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "when you know they can’t produce useful results.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Error-Handling-and-Implicit-Cancellation",
          "level": 1,
          "text": "Error Handling and Implicit Cancellation",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Since it is not possible to explicitly await individual task completions,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "it is also not possible to “re-throw” an error thrown by one of the child",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "tasks using the same pattern as one would in a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/ThrowingTaskGroup",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// ThrowingTaskGroup, pattern not applicable to ThrowingDiscardingTaskGroup",
            "try await withThrowingTaskGroup(of: Void.self) { group in",
            "  group.addTask { try boom() }",
            "  try await group.next() // re-throws \"boom\"",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Since discarding task groups don’t have access to ",
              "type": "text"
            },
            {
              "code": "next()",
              "type": "codeVoice"
            },
            {
              "text": ", this pattern",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "cannot be used.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Instead,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "throwing discarding task group implicitly cancels itself whenever any",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "of its child tasks throws",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "first error",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " thrown inside such task group",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is then retained and thrown",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "out of the ",
              "type": "text"
            },
            {
              "code": "withThrowingDiscardingTaskGroup",
              "type": "codeVoice"
            },
            {
              "text": " method when it returns.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "try await withThrowingDiscardingTaskGroup { group in",
            "  group.addTask { try boom(1) }",
            "  group.addTask { try boom(2, after: .seconds(5)) }",
            "  group.addTask { try boom(3, after: .seconds(5)) }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Generally, this suits the typical use cases of a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "discarding task group well, however, if you want to prevent specific",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "errors from canceling the group you can catch them inside the child",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "task’s body like this:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "try await withThrowingDiscardingTaskGroup { group in",
            "  group.addTask {",
            "    do {",
            "      try boom(1)",
            "    } catch is HarmlessError {",
            "      return",
            "    }",
            "  }",
            "  group.addTask {",
            "    try boom(2, after: .seconds(5))",
            "  }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Actor": {
      "abstract": [
        {
          "text": "Common protocol to which all actors conform.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Actor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Actor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Actor"
        }
      ],
      "role": "symbol",
      "title": "Actor",
      "type": "topic",
      "url": "/documentation/swift/actor"
    },
    "doc://com.apple.Swift/documentation/Swift/DiscardingTaskGroup": {
      "abstract": [
        {
          "text": "A discarding group that contains dynamically created child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DiscardingTaskGroup"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/DiscardingTaskGroup",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DiscardingTaskGroup"
        }
      ],
      "role": "symbol",
      "title": "DiscardingTaskGroup",
      "type": "topic",
      "url": "/documentation/swift/discardingtaskgroup"
    },
    "doc://com.apple.Swift/documentation/Swift/Error": {
      "abstract": [
        {
          "text": "A type representing an error value that can be thrown.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Error"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Error",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Error"
        }
      ],
      "role": "symbol",
      "title": "Error",
      "type": "topic",
      "url": "/documentation/swift/error"
    },
    "doc://com.apple.Swift/documentation/Swift/Task": {
      "abstract": [
        {
          "text": "A unit of asynchronous work.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Task"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Task",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Task"
        }
      ],
      "role": "symbol",
      "title": "Task",
      "type": "topic",
      "url": "/documentation/swift/task"
    },
    "doc://com.apple.Swift/documentation/Swift/TaskGroup": {
      "abstract": [
        {
          "text": "A group that contains dynamically created child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TaskGroup"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskGroup",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TaskGroup"
        }
      ],
      "role": "symbol",
      "title": "TaskGroup",
      "type": "topic",
      "url": "/documentation/swift/taskgroup"
    },
    "doc://com.apple.Swift/documentation/Swift/TaskGroup/cancelAll()": {
      "abstract": [
        {
          "text": "Cancel all of the remaining tasks in the group.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "cancelAll"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskGroup/cancelAll()",
      "kind": "symbol",
      "role": "symbol",
      "title": "cancelAll()",
      "type": "topic",
      "url": "/documentation/swift/taskgroup/cancelall()"
    },
    "doc://com.apple.Swift/documentation/Swift/TaskPriority": {
      "abstract": [
        {
          "text": "The priority of a task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TaskPriority"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskPriority",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TaskPriority"
        }
      ],
      "role": "symbol",
      "title": "TaskPriority",
      "type": "topic",
      "url": "/documentation/swift/taskpriority"
    },
    "doc://com.apple.Swift/documentation/Swift/ThrowingDiscardingTaskGroup": {
      "abstract": [
        {
          "text": "A throwing discarding group that contains dynamically created child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ThrowingDiscardingTaskGroup"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ThrowingDiscardingTaskGroup",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ThrowingDiscardingTaskGroup"
        }
      ],
      "role": "symbol",
      "title": "ThrowingDiscardingTaskGroup",
      "type": "topic",
      "url": "/documentation/swift/throwingdiscardingtaskgroup"
    },
    "doc://com.apple.Swift/documentation/Swift/ThrowingTaskGroup": {
      "abstract": [
        {
          "text": "A group that contains throwing, dynamically created child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ThrowingTaskGroup"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ThrowingTaskGroup",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ThrowingTaskGroup"
        }
      ],
      "role": "symbol",
      "title": "ThrowingTaskGroup",
      "type": "topic",
      "url": "/documentation/swift/throwingtaskgroup"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeCurrentTask": {
      "abstract": [
        {
          "text": "An unsafe reference to the current task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeCurrentTask"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeCurrentTask",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeCurrentTask"
        }
      ],
      "role": "symbol",
      "title": "UnsafeCurrentTask",
      "type": "topic",
      "url": "/documentation/swift/unsafecurrenttask"
    },
    "doc://com.apple.Swift/documentation/Swift/withDiscardingTaskGroup(returning:isolation:body:)": {
      "abstract": [
        {
          "text": "Starts a new scope that can contain a dynamic number of child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withDiscardingTaskGroup"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "returning"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "body"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12_Concurrency19DiscardingTaskGroupV",
          "text": "DiscardingTaskGroup"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withDiscardingTaskGroup(returning:isolation:body:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withDiscardingTaskGroup(returning:isolation:body:)",
      "type": "topic",
      "url": "/documentation/swift/withdiscardingtaskgroup(returning:isolation:body:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withTaskGroup(of:returning:isolation:body:)": {
      "abstract": [
        {
          "text": "Starts a new scope that can contain a dynamic number of child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withTaskGroup"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "ChildTaskResult"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "ChildTaskResult"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "returning"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "body"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScG",
          "text": "TaskGroup"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "ChildTaskResult"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withTaskGroup(of:returning:isolation:body:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withTaskGroup(of:returning:isolation:body:)",
      "type": "topic",
      "url": "/documentation/swift/withtaskgroup(of:returning:isolation:body:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withThrowingDiscardingTaskGroup(returning:isolation:body:)": {
      "abstract": [
        {
          "text": "Starts a new scope that can contain a dynamic number of child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withThrowingDiscardingTaskGroup"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "returning"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "body"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12_Concurrency27ThrowingDiscardingTaskGroupV",
          "text": "ThrowingDiscardingTaskGroup"
        },
        {
          "kind": "text",
          "text": "<any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withThrowingDiscardingTaskGroup(returning:isolation:body:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withThrowingDiscardingTaskGroup(returning:isolation:body:)",
      "type": "topic",
      "url": "/documentation/swift/withthrowingdiscardingtaskgroup(returning:isolation:body:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withThrowingTaskGroup(of:returning:isolation:body:)": {
      "abstract": [
        {
          "text": "Starts a new scope that can contain a dynamic number of throwing child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withThrowingTaskGroup"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "ChildTaskResult"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "ChildTaskResult"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "returning"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "body"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Scg",
          "text": "ThrowingTaskGroup"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "ChildTaskResult"
        },
        {
          "kind": "text",
          "text": ", any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withThrowingTaskGroup(of:returning:isolation:body:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withThrowingTaskGroup(of:returning:isolation:body:)",
      "type": "topic",
      "url": "/documentation/swift/withthrowingtaskgroup(of:returning:isolation:body:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Tasks",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Task",
        "doc://com.apple.Swift/documentation/Swift/TaskGroup",
        "doc://com.apple.Swift/documentation/Swift/withTaskGroup(of:returning:isolation:body:)",
        "doc://com.apple.Swift/documentation/Swift/ThrowingTaskGroup",
        "doc://com.apple.Swift/documentation/Swift/withThrowingTaskGroup(of:returning:isolation:body:)",
        "doc://com.apple.Swift/documentation/Swift/TaskPriority",
        "doc://com.apple.Swift/documentation/Swift/DiscardingTaskGroup",
        "doc://com.apple.Swift/documentation/Swift/withDiscardingTaskGroup(returning:isolation:body:)",
        "doc://com.apple.Swift/documentation/Swift/ThrowingDiscardingTaskGroup",
        "doc://com.apple.Swift/documentation/Swift/UnsafeCurrentTask"
      ],
      "title": "Tasks"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/withthrowingdiscardingtaskgroup(returning:isolation:body:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
