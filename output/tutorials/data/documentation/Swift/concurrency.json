{
  "abstract": [
    {
      "text": "Perform asynchronous and parallel operations.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    },
    "minor": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.2",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/swift-standard-library"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/concurrency"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "role": "collectionGroup",
    "roleHeading": "API Collection",
    "title": "Concurrency"
  },
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Actor": {
      "abstract": [
        {
          "text": "Common protocol to which all actors conform.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Actor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Actor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Actor"
        }
      ],
      "role": "symbol",
      "title": "Actor",
      "type": "topic",
      "url": "/documentation/swift/actor"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyActor": {
      "abstract": [
        {
          "text": "Common marker protocol providing a shared “base” for both (local) ",
          "type": "text"
        },
        {
          "code": "Actor",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and (potentially remote) ",
          "type": "text"
        },
        {
          "code": "DistributedActor",
          "type": "codeVoice"
        },
        {
          "text": " types.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AnyActor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyActor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AnyActor"
        }
      ],
      "role": "symbol",
      "title": "AnyActor",
      "type": "topic",
      "url": "/documentation/swift/anyactor"
    },
    "doc://com.apple.Swift/documentation/Swift/AsyncSequence": {
      "abstract": [
        {
          "text": "A type that provides asynchronous, sequential, iterated access to its",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AsyncSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AsyncSequence"
        }
      ],
      "role": "symbol",
      "title": "AsyncSequence",
      "type": "topic",
      "url": "/documentation/swift/asyncsequence"
    },
    "doc://com.apple.Swift/documentation/Swift/AsyncStream": {
      "abstract": [
        {
          "text": "An asynchronous sequence generated from a closure that calls a continuation",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "to produce new elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AsyncStream"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncStream",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AsyncStream"
        }
      ],
      "role": "symbol",
      "title": "AsyncStream",
      "type": "topic",
      "url": "/documentation/swift/asyncstream"
    },
    "doc://com.apple.Swift/documentation/Swift/AsyncThrowingStream": {
      "abstract": [
        {
          "text": "An asynchronous sequence generated from an error-throwing closure that",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "calls a continuation to produce new elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AsyncThrowingStream"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncThrowingStream",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AsyncThrowingStream"
        }
      ],
      "role": "symbol",
      "title": "AsyncThrowingStream",
      "type": "topic",
      "url": "/documentation/swift/asyncthrowingstream"
    },
    "doc://com.apple.Swift/documentation/Swift/CheckedContinuation": {
      "abstract": [
        {
          "text": "A mechanism to interface",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "between synchronous and asynchronous code,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "logging correctness violations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CheckedContinuation"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CheckedContinuation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CheckedContinuation"
        }
      ],
      "role": "symbol",
      "title": "CheckedContinuation",
      "type": "topic",
      "url": "/documentation/swift/checkedcontinuation"
    },
    "doc://com.apple.Swift/documentation/Swift/ConcurrentValue": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ConcurrentValue"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ConcurrentValue",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ConcurrentValue"
        }
      ],
      "role": "symbol",
      "title": "ConcurrentValue",
      "type": "topic",
      "url": "/documentation/swift/concurrentvalue"
    },
    "doc://com.apple.Swift/documentation/Swift/DiscardingTaskGroup": {
      "abstract": [
        {
          "text": "A discarding group that contains dynamically created child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DiscardingTaskGroup"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/DiscardingTaskGroup",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DiscardingTaskGroup"
        }
      ],
      "role": "symbol",
      "title": "DiscardingTaskGroup",
      "type": "topic",
      "url": "/documentation/swift/discardingtaskgroup"
    },
    "doc://com.apple.Swift/documentation/Swift/Executor": {
      "abstract": [
        {
          "text": "A service that can execute jobs.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Executor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Executor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Executor"
        }
      ],
      "role": "symbol",
      "title": "Executor",
      "type": "topic",
      "url": "/documentation/swift/executor"
    },
    "doc://com.apple.Swift/documentation/Swift/ExecutorJob": {
      "abstract": [
        {
          "text": "A unit of schedulable work.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExecutorJob"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExecutorJob",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExecutorJob"
        }
      ],
      "role": "symbol",
      "title": "ExecutorJob",
      "type": "topic",
      "url": "/documentation/swift/executorjob"
    },
    "doc://com.apple.Swift/documentation/Swift/GlobalActor": {
      "abstract": [
        {
          "text": "A type that represents a globally-unique actor that can be used to isolate",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "various declarations anywhere in the program.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GlobalActor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/GlobalActor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "GlobalActor"
        }
      ],
      "role": "symbol",
      "title": "GlobalActor",
      "type": "topic",
      "url": "/documentation/swift/globalactor"
    },
    "doc://com.apple.Swift/documentation/Swift/Job": {
      "abstract": [
        {
          "text": "Deprecated equivalent of ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.Swift/documentation/Swift/ExecutorJob",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Job"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Job",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Job"
        }
      ],
      "role": "symbol",
      "title": "Job",
      "type": "topic",
      "url": "/documentation/swift/job"
    },
    "doc://com.apple.Swift/documentation/Swift/JobPriority": {
      "abstract": [
        {
          "text": "The priority of this job.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "JobPriority"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/JobPriority",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "JobPriority"
        }
      ],
      "role": "symbol",
      "title": "JobPriority",
      "type": "topic",
      "url": "/documentation/swift/jobpriority"
    },
    "doc://com.apple.Swift/documentation/Swift/MainActor": {
      "abstract": [
        {
          "text": "A singleton actor whose executor is equivalent to the main",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "dispatch queue.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "actor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MainActor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MainActor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MainActor"
        }
      ],
      "role": "symbol",
      "title": "MainActor",
      "type": "topic",
      "url": "/documentation/swift/mainactor"
    },
    "doc://com.apple.Swift/documentation/Swift/PartialAsyncTask": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PartialAsyncTask"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/PartialAsyncTask",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PartialAsyncTask"
        }
      ],
      "role": "symbol",
      "title": "PartialAsyncTask",
      "type": "topic",
      "url": "/documentation/swift/partialasynctask"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.Swift/documentation/Swift/SerialExecutor": {
      "abstract": [
        {
          "text": "A service that executes jobs.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SerialExecutor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SerialExecutor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SerialExecutor"
        }
      ],
      "role": "symbol",
      "title": "SerialExecutor",
      "type": "topic",
      "url": "/documentation/swift/serialexecutor"
    },
    "doc://com.apple.Swift/documentation/Swift/Task": {
      "abstract": [
        {
          "text": "A unit of asynchronous work.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Task"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Task",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Task"
        }
      ],
      "role": "symbol",
      "title": "Task",
      "type": "topic",
      "url": "/documentation/swift/task"
    },
    "doc://com.apple.Swift/documentation/Swift/TaskExecutor": {
      "abstract": [
        {
          "text": "An executor that may be used as preferred executor by a task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TaskExecutor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskExecutor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TaskExecutor"
        }
      ],
      "role": "symbol",
      "title": "TaskExecutor",
      "type": "topic",
      "url": "/documentation/swift/taskexecutor"
    },
    "doc://com.apple.Swift/documentation/Swift/TaskGroup": {
      "abstract": [
        {
          "text": "A group that contains dynamically created child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TaskGroup"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskGroup",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TaskGroup"
        }
      ],
      "role": "symbol",
      "title": "TaskGroup",
      "type": "topic",
      "url": "/documentation/swift/taskgroup"
    },
    "doc://com.apple.Swift/documentation/Swift/TaskLocal": {
      "abstract": [
        {
          "text": "Wrapper type that defines a task-local value key.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TaskLocal"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskLocal",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TaskLocal"
        }
      ],
      "role": "symbol",
      "title": "TaskLocal",
      "type": "topic",
      "url": "/documentation/swift/tasklocal"
    },
    "doc://com.apple.Swift/documentation/Swift/TaskLocal()": {
      "abstract": [
        {
          "text": "Macro that introduces a ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.Swift/documentation/Swift/TaskLocal",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " binding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TaskLocal"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskLocal()",
      "kind": "symbol",
      "role": "symbol",
      "title": "TaskLocal()",
      "type": "topic",
      "url": "/documentation/swift/tasklocal()"
    },
    "doc://com.apple.Swift/documentation/Swift/TaskPriority": {
      "abstract": [
        {
          "text": "The priority of a task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TaskPriority"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskPriority",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TaskPriority"
        }
      ],
      "role": "symbol",
      "title": "TaskPriority",
      "type": "topic",
      "url": "/documentation/swift/taskpriority"
    },
    "doc://com.apple.Swift/documentation/Swift/ThrowingDiscardingTaskGroup": {
      "abstract": [
        {
          "text": "A throwing discarding group that contains dynamically created child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ThrowingDiscardingTaskGroup"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ThrowingDiscardingTaskGroup",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ThrowingDiscardingTaskGroup"
        }
      ],
      "role": "symbol",
      "title": "ThrowingDiscardingTaskGroup",
      "type": "topic",
      "url": "/documentation/swift/throwingdiscardingtaskgroup"
    },
    "doc://com.apple.Swift/documentation/Swift/ThrowingTaskGroup": {
      "abstract": [
        {
          "text": "A group that contains throwing, dynamically created child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ThrowingTaskGroup"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ThrowingTaskGroup",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ThrowingTaskGroup"
        }
      ],
      "role": "symbol",
      "title": "ThrowingTaskGroup",
      "type": "topic",
      "url": "/documentation/swift/throwingtaskgroup"
    },
    "doc://com.apple.Swift/documentation/Swift/UnownedJob": {
      "abstract": [
        {
          "text": "A unit of schedulable work.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnownedJob"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnownedJob",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnownedJob"
        }
      ],
      "role": "symbol",
      "title": "UnownedJob",
      "type": "topic",
      "url": "/documentation/swift/unownedjob"
    },
    "doc://com.apple.Swift/documentation/Swift/UnownedSerialExecutor": {
      "abstract": [
        {
          "text": "An unowned reference to a serial executor (a ",
          "type": "text"
        },
        {
          "code": "SerialExecutor",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnownedSerialExecutor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnownedSerialExecutor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnownedSerialExecutor"
        }
      ],
      "role": "symbol",
      "title": "UnownedSerialExecutor",
      "type": "topic",
      "url": "/documentation/swift/unownedserialexecutor"
    },
    "doc://com.apple.Swift/documentation/Swift/UnownedTaskExecutor": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnownedTaskExecutor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnownedTaskExecutor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnownedTaskExecutor"
        }
      ],
      "role": "symbol",
      "title": "UnownedTaskExecutor",
      "type": "topic",
      "url": "/documentation/swift/unownedtaskexecutor"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeConcurrentValue": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeConcurrentValue"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeConcurrentValue",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeConcurrentValue"
        }
      ],
      "role": "symbol",
      "title": "UnsafeConcurrentValue",
      "type": "topic",
      "url": "/documentation/swift/unsafeconcurrentvalue"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeContinuation": {
      "abstract": [
        {
          "text": "A mechanism to interface",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "between synchronous and asynchronous code,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "without correctness checking.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeContinuation"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeContinuation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeContinuation"
        }
      ],
      "role": "symbol",
      "title": "UnsafeContinuation",
      "type": "topic",
      "url": "/documentation/swift/unsafecontinuation"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeCurrentTask": {
      "abstract": [
        {
          "text": "An unsafe reference to the current task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeCurrentTask"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeCurrentTask",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeCurrentTask"
        }
      ],
      "role": "symbol",
      "title": "UnsafeCurrentTask",
      "type": "topic",
      "url": "/documentation/swift/unsafecurrenttask"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeSendable": {
      "abstract": [
        {
          "text": "A type whose values can safely be passed across concurrency domains by copying,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "but which disables some safety checking at the conformance site.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeSendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeSendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeSendable"
        }
      ],
      "role": "symbol",
      "title": "UnsafeSendable",
      "type": "topic",
      "url": "/documentation/swift/unsafesendable"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeThrowingContinuation": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeThrowingContinuation"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeThrowingContinuation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeThrowingContinuation"
        }
      ],
      "role": "symbol",
      "title": "UnsafeThrowingContinuation",
      "type": "topic",
      "url": "/documentation/swift/unsafethrowingcontinuation"
    },
    "doc://com.apple.Swift/documentation/Swift/c-interoperability": {
      "abstract": [
        {
          "text": "Use imported C types or call C variadic functions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/c-interoperability",
      "kind": "article",
      "role": "collectionGroup",
      "title": "C Interoperability",
      "type": "topic",
      "url": "/documentation/swift/c-interoperability"
    },
    "doc://com.apple.Swift/documentation/Swift/debugging-and-reflection": {
      "abstract": [
        {
          "text": "Fortify your code with runtime checks, and examine your values’ runtime representation.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/debugging-and-reflection",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Debugging and Reflection",
      "type": "topic",
      "url": "/documentation/swift/debugging-and-reflection"
    },
    "doc://com.apple.Swift/documentation/Swift/extractIsolation(_:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "extractIsolation"
        },
        {
          "kind": "text",
          "text": "<each "
        },
        {
          "kind": "genericParameter",
          "text": "Arg"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ">((repeat each "
        },
        {
          "kind": "typeIdentifier",
          "text": "Arg"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") -> (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/extractIsolation(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "extractIsolation(_:)",
      "type": "topic",
      "url": "/documentation/swift/extractisolation(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/globalConcurrentExecutor": {
      "abstract": [
        {
          "text": "The global concurrent executor that is used by default for Swift Concurrency",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "globalConcurrentExecutor"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sch",
          "text": "TaskExecutor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/globalConcurrentExecutor",
      "kind": "symbol",
      "role": "symbol",
      "title": "globalConcurrentExecutor",
      "type": "topic",
      "url": "/documentation/swift/globalconcurrentexecutor"
    },
    "doc://com.apple.Swift/documentation/Swift/input-and-output": {
      "abstract": [
        {
          "text": "Print values to the console, read from and write to text streams, and use command",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "line arguments.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/input-and-output",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Input and Output",
      "type": "topic",
      "url": "/documentation/swift/input-and-output"
    },
    "doc://com.apple.Swift/documentation/Swift/isolation()": {
      "abstract": [
        {
          "text": "Produce a reference to the actor to which the enclosing code is",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "isolated, or ",
          "type": "text"
        },
        {
          "code": "nil",
          "type": "codeVoice"
        },
        {
          "text": " if the code is nonisolated.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">() -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/isolation()",
      "kind": "symbol",
      "role": "symbol",
      "title": "isolation()",
      "type": "topic",
      "url": "/documentation/swift/isolation()"
    },
    "doc://com.apple.Swift/documentation/Swift/key-path-expressions": {
      "abstract": [
        {
          "text": "Use key-path expressions to access properties dynamically.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/key-path-expressions",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Key-Path Expressions",
      "type": "topic",
      "url": "/documentation/swift/key-path-expressions"
    },
    "doc://com.apple.Swift/documentation/Swift/macros": {
      "abstract": [
        {
          "text": "Generate boilerplate code and perform other compile-time operations.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/macros",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Macros",
      "type": "topic",
      "url": "/documentation/swift/macros"
    },
    "doc://com.apple.Swift/documentation/Swift/manual-memory-management": {
      "abstract": [
        {
          "text": "Allocate and manage memory manually.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/manual-memory-management",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Manual Memory Management",
      "type": "topic",
      "url": "/documentation/swift/manual-memory-management"
    },
    "doc://com.apple.Swift/documentation/Swift/operator-declarations": {
      "abstract": [
        {
          "text": "Work with prefix, postfix, and infix operators.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/operator-declarations",
      "kind": "article",
      "role": "article",
      "title": "Operator Declarations",
      "type": "topic",
      "url": "/documentation/swift/operator-declarations"
    },
    "doc://com.apple.Swift/documentation/Swift/swift-standard-library": {
      "abstract": [
        {
          "text": "Solve complex problems and write high-performance, readable code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/swift-standard-library",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Swift Standard Library",
      "type": "topic",
      "url": "/documentation/swift/swift-standard-library"
    },
    "doc://com.apple.Swift/documentation/Swift/type-casting-and-existential-types": {
      "abstract": [
        {
          "text": "Perform casts between types or represent values of any type.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/type-casting-and-existential-types",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Type Casting and Existential Types",
      "type": "topic",
      "url": "/documentation/swift/type-casting-and-existential-types"
    },
    "doc://com.apple.Swift/documentation/Swift/updating-an-app-to-use-strict-concurrency": {
      "abstract": [
        {
          "text": "Use this code to follow along with a guide to migrating your code to take advantage of the full concurrency protection that the Swift 6 language mode provides.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/updating-an-app-to-use-strict-concurrency",
      "kind": "article",
      "role": "sampleCode",
      "title": "Updating an app to use strict concurrency",
      "type": "topic",
      "url": "/documentation/swift/updating-an-app-to-use-strict-concurrency"
    },
    "doc://com.apple.Swift/documentation/Swift/withCheckedContinuation(isolation:function:_:)": {
      "abstract": [
        {
          "text": "Invokes the passed in closure with a checked continuation for the current task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withCheckedContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "function"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScC",
          "text": "CheckedContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5NeverO",
          "text": "Never"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withCheckedContinuation(isolation:function:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withCheckedContinuation(isolation:function:_:)",
      "type": "topic",
      "url": "/documentation/swift/withcheckedcontinuation(isolation:function:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withCheckedThrowingContinuation(isolation:function:_:)": {
      "abstract": [
        {
          "text": "Invokes the passed in closure with a checked continuation for the current task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withCheckedThrowingContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "function"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScC",
          "text": "CheckedContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withCheckedThrowingContinuation(isolation:function:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withCheckedThrowingContinuation(isolation:function:_:)",
      "type": "topic",
      "url": "/documentation/swift/withcheckedthrowingcontinuation(isolation:function:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withDiscardingTaskGroup(returning:isolation:body:)": {
      "abstract": [
        {
          "text": "Starts a new scope that can contain a dynamic number of child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withDiscardingTaskGroup"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "returning"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "body"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12_Concurrency19DiscardingTaskGroupV",
          "text": "DiscardingTaskGroup"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withDiscardingTaskGroup(returning:isolation:body:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withDiscardingTaskGroup(returning:isolation:body:)",
      "type": "topic",
      "url": "/documentation/swift/withdiscardingtaskgroup(returning:isolation:body:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withTaskExecutorPreference(_:isolation:operation:)": {
      "abstract": [
        {
          "text": "Configure the current task hierarchy’s task executor preference to the passed ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.Swift/documentation/Swift/TaskExecutor",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ",",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and execute the passed in closure by immediately hopping to that executor.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withTaskExecutorPreference"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Failure"
        },
        {
          "kind": "text",
          "text": ">((any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sch",
          "text": "TaskExecutor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "operation"
        },
        {
          "kind": "text",
          "text": ": () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Failure"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Failure"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withTaskExecutorPreference(_:isolation:operation:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withTaskExecutorPreference(_:isolation:operation:)",
      "type": "topic",
      "url": "/documentation/swift/withtaskexecutorpreference(_:isolation:operation:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withTaskGroup(of:returning:isolation:body:)": {
      "abstract": [
        {
          "text": "Starts a new scope that can contain a dynamic number of child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withTaskGroup"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "ChildTaskResult"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "ChildTaskResult"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "returning"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "body"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScG",
          "text": "TaskGroup"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "ChildTaskResult"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withTaskGroup(of:returning:isolation:body:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withTaskGroup(of:returning:isolation:body:)",
      "type": "topic",
      "url": "/documentation/swift/withtaskgroup(of:returning:isolation:body:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withThrowingDiscardingTaskGroup(returning:isolation:body:)": {
      "abstract": [
        {
          "text": "Starts a new scope that can contain a dynamic number of child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withThrowingDiscardingTaskGroup"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "returning"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "body"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12_Concurrency27ThrowingDiscardingTaskGroupV",
          "text": "ThrowingDiscardingTaskGroup"
        },
        {
          "kind": "text",
          "text": "<any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withThrowingDiscardingTaskGroup(returning:isolation:body:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withThrowingDiscardingTaskGroup(returning:isolation:body:)",
      "type": "topic",
      "url": "/documentation/swift/withthrowingdiscardingtaskgroup(returning:isolation:body:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withThrowingTaskGroup(of:returning:isolation:body:)": {
      "abstract": [
        {
          "text": "Starts a new scope that can contain a dynamic number of throwing child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withThrowingTaskGroup"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "ChildTaskResult"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "ChildTaskResult"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "returning"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "body"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Scg",
          "text": "ThrowingTaskGroup"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "ChildTaskResult"
        },
        {
          "kind": "text",
          "text": ", any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "GroupResult"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withThrowingTaskGroup(of:returning:isolation:body:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withThrowingTaskGroup(of:returning:isolation:body:)",
      "type": "topic",
      "url": "/documentation/swift/withthrowingtaskgroup(of:returning:isolation:body:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withUnsafeContinuation(isolation:_:)": {
      "abstract": [
        {
          "text": "Invokes the passed in closure with a unsafe continuation for the current task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withUnsafeContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Scc",
          "text": "UnsafeContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5NeverO",
          "text": "Never"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withUnsafeContinuation(isolation:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withUnsafeContinuation(isolation:_:)",
      "type": "topic",
      "url": "/documentation/swift/withunsafecontinuation(isolation:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withUnsafeThrowingContinuation(isolation:_:)": {
      "abstract": [
        {
          "text": "Invokes the passed in closure with a unsafe continuation for the current task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withUnsafeThrowingContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?, ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Scc",
          "text": "UnsafeContinuation"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> sending "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withUnsafeThrowingContinuation(isolation:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withUnsafeThrowingContinuation(isolation:_:)",
      "type": "topic",
      "url": "/documentation/swift/withunsafethrowingcontinuation(isolation:_:)"
    },
    "doc://com.apple.documentation/documentation/swift/updating_an_app_to_use_swift_concurrency": {
      "abstract": [
        {
          "text": "Improve your app’s performance by refactoring your code to take advantage of asynchronous functions in Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/swift/updating_an_app_to_use_swift_concurrency",
      "kind": "article",
      "role": "sampleCode",
      "title": "Updating an App to Use Swift Concurrency",
      "type": "topic",
      "url": "/documentation/swift/updating_an_app_to_use_swift_concurrency"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Programming-Tasks",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/input-and-output",
        "doc://com.apple.Swift/documentation/Swift/debugging-and-reflection",
        "doc://com.apple.Swift/documentation/Swift/macros",
        "doc://com.apple.Swift/documentation/Swift/key-path-expressions",
        "doc://com.apple.Swift/documentation/Swift/manual-memory-management",
        "doc://com.apple.Swift/documentation/Swift/type-casting-and-existential-types",
        "doc://com.apple.Swift/documentation/Swift/c-interoperability",
        "doc://com.apple.Swift/documentation/Swift/operator-declarations"
      ],
      "title": "Programming Tasks"
    }
  ],
  "topicSections": [
    {
      "anchor": "Essentials",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/updating-an-app-to-use-strict-concurrency",
        "doc://com.apple.documentation/documentation/swift/updating_an_app_to_use_swift_concurrency"
      ],
      "title": "Essentials"
    },
    {
      "anchor": "Tasks",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Task",
        "doc://com.apple.Swift/documentation/Swift/TaskGroup",
        "doc://com.apple.Swift/documentation/Swift/withTaskGroup(of:returning:isolation:body:)",
        "doc://com.apple.Swift/documentation/Swift/ThrowingTaskGroup",
        "doc://com.apple.Swift/documentation/Swift/withThrowingTaskGroup(of:returning:isolation:body:)",
        "doc://com.apple.Swift/documentation/Swift/TaskPriority",
        "doc://com.apple.Swift/documentation/Swift/DiscardingTaskGroup",
        "doc://com.apple.Swift/documentation/Swift/withDiscardingTaskGroup(returning:isolation:body:)",
        "doc://com.apple.Swift/documentation/Swift/ThrowingDiscardingTaskGroup",
        "doc://com.apple.Swift/documentation/Swift/withThrowingDiscardingTaskGroup(returning:isolation:body:)",
        "doc://com.apple.Swift/documentation/Swift/UnsafeCurrentTask"
      ],
      "title": "Tasks"
    },
    {
      "anchor": "Asynchronous-Sequences",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/AsyncSequence",
        "doc://com.apple.Swift/documentation/Swift/AsyncStream",
        "doc://com.apple.Swift/documentation/Swift/AsyncThrowingStream"
      ],
      "title": "Asynchronous Sequences"
    },
    {
      "anchor": "Continuations",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CheckedContinuation",
        "doc://com.apple.Swift/documentation/Swift/withCheckedContinuation(isolation:function:_:)",
        "doc://com.apple.Swift/documentation/Swift/withCheckedThrowingContinuation(isolation:function:_:)",
        "doc://com.apple.Swift/documentation/Swift/UnsafeContinuation",
        "doc://com.apple.Swift/documentation/Swift/withUnsafeContinuation(isolation:_:)",
        "doc://com.apple.Swift/documentation/Swift/UnsafeThrowingContinuation",
        "doc://com.apple.Swift/documentation/Swift/withUnsafeThrowingContinuation(isolation:_:)"
      ],
      "title": "Continuations"
    },
    {
      "anchor": "Actors",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Sendable",
        "doc://com.apple.Swift/documentation/Swift/Actor",
        "doc://com.apple.Swift/documentation/Swift/AnyActor",
        "doc://com.apple.Swift/documentation/Swift/MainActor",
        "doc://com.apple.Swift/documentation/Swift/GlobalActor",
        "doc://com.apple.Swift/documentation/Swift/ConcurrentValue",
        "doc://com.apple.Swift/documentation/Swift/UnsafeSendable",
        "doc://com.apple.Swift/documentation/Swift/UnsafeConcurrentValue",
        "doc://com.apple.Swift/documentation/Swift/isolation()",
        "doc://com.apple.Swift/documentation/Swift/extractIsolation(_:)"
      ],
      "title": "Actors"
    },
    {
      "anchor": "Task-Local-Storage",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/TaskLocal",
        "doc://com.apple.Swift/documentation/Swift/TaskLocal()"
      ],
      "title": "Task-Local Storage"
    },
    {
      "anchor": "Executors",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Executor",
        "doc://com.apple.Swift/documentation/Swift/ExecutorJob",
        "doc://com.apple.Swift/documentation/Swift/SerialExecutor",
        "doc://com.apple.Swift/documentation/Swift/TaskExecutor",
        "doc://com.apple.Swift/documentation/Swift/PartialAsyncTask",
        "doc://com.apple.Swift/documentation/Swift/UnownedJob",
        "doc://com.apple.Swift/documentation/Swift/JobPriority",
        "doc://com.apple.Swift/documentation/Swift/UnownedSerialExecutor",
        "doc://com.apple.Swift/documentation/Swift/UnownedTaskExecutor",
        "doc://com.apple.Swift/documentation/Swift/globalConcurrentExecutor",
        "doc://com.apple.Swift/documentation/Swift/withTaskExecutorPreference(_:isolation:operation:)"
      ],
      "title": "Executors"
    },
    {
      "anchor": "Deprecated",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Job"
      ],
      "title": "Deprecated"
    }
  ]
}
