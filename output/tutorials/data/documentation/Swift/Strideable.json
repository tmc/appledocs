{
  "abstract": [
    {
      "text": "A type representing continuous, one-dimensional values that can be offset",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "and measured.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/Strideable"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:Sx",
    "fragments": [
      {
        "kind": "keyword",
        "text": "protocol"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Strideable"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Strideable"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Protocol",
    "symbolKind": "protocol",
    "title": "Strideable"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Strideable"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable/Stride",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sx6StrideQa",
              "text": "Stride"
            },
            {
              "kind": "text",
              "text": "> : "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Comparable",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SL",
              "text": "Comparable"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can use a type that conforms to the ",
              "type": "text"
            },
            {
              "code": "Strideable",
              "type": "codeVoice"
            },
            {
              "text": " protocol with the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "stride(from:to:by:)",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "stride(from:through:by:)",
              "type": "codeVoice"
            },
            {
              "text": " functions. For",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "example, you can use ",
              "type": "text"
            },
            {
              "code": "stride(from:to:by:)",
              "type": "codeVoice"
            },
            {
              "text": " to iterate over an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "interval of floating-point values:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "for radians in stride(from: 0.0, to: .pi * 2, by: .pi / 2) {",
            "    let degrees = Int(radians * 180 / .pi)",
            "    print(\"Degrees: \\(degrees), radians: \\(radians)\")",
            "}",
            "// Degrees: 0, radians: 0.0",
            "// Degrees: 90, radians: 1.5707963267949",
            "// Degrees: 180, radians: 3.14159265358979",
            "// Degrees: 270, radians: 4.71238898038469"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The last parameter of these functions is of the associated ",
              "type": "text"
            },
            {
              "code": "Stride",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "typeâ€”the type that represents the distance between any two instances of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the ",
              "type": "text"
            },
            {
              "code": "Strideable",
              "type": "codeVoice"
            },
            {
              "text": " type.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Types that have an integer ",
              "type": "text"
            },
            {
              "code": "Stride",
              "type": "codeVoice"
            },
            {
              "text": " can be used as the boundaries of a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "countable range or as the lower bound of an iterable one-sided range. For",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "example, you can iterate over a range of ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": " and use sequence and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "collection methods.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var sum = 0",
            "for x in 1...100 {",
            "    sum += x",
            "}",
            "// sum == 5050",
            "",
            "let digits = (0..<10).map(String.init)",
            "// [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Conforming-to-the-Strideable-Protocol",
          "level": 1,
          "text": "Conforming to the Strideable Protocol",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To add ",
              "type": "text"
            },
            {
              "code": "Strideable",
              "type": "codeVoice"
            },
            {
              "text": " conformance to a custom type, choose a ",
              "type": "text"
            },
            {
              "code": "Stride",
              "type": "codeVoice"
            },
            {
              "text": " type",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that can represent the distance between two instances and implement the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "advanced(by:)",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "distance(to:)",
              "type": "codeVoice"
            },
            {
              "text": " methods. For example, this",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "hypothetical ",
              "type": "text"
            },
            {
              "code": "Date",
              "type": "codeVoice"
            },
            {
              "text": " type stores its value as the number of days before or",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "after January 1, 2000:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct Date: Equatable, CustomStringConvertible {",
            "    var daysAfterY2K: Int",
            "",
            "    var description: String {",
            "        // ...",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "Stride",
              "type": "codeVoice"
            },
            {
              "text": " type for ",
              "type": "text"
            },
            {
              "code": "Date",
              "type": "codeVoice"
            },
            {
              "text": " is ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": ", inferred from the parameter and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "return types of ",
              "type": "text"
            },
            {
              "code": "advanced(by:)",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "distance(to:)",
              "type": "codeVoice"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "extension Date: Strideable {",
            "    func advanced(by n: Int) -> Date {",
            "        var result = self",
            "        result.daysAfterY2K += n",
            "        return result",
            "    }",
            "",
            "    func distance(to other: Date) -> Int {",
            "        return other.daysAfterY2K - self.daysAfterY2K",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "Date",
              "type": "codeVoice"
            },
            {
              "text": " type can now be used with the ",
              "type": "text"
            },
            {
              "code": "stride(from:to:by:)",
              "type": "codeVoice"
            },
            {
              "text": " and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "stride(from:through:by:)",
              "type": "codeVoice"
            },
            {
              "text": " functions and as the bounds of an iterable",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "range.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let startDate = Date(daysAfterY2K: 0)   // January 1, 2000",
            "let endDate = Date(daysAfterY2K: 15)    // January 16, 2000",
            "",
            "for date in stride(from: startDate, to: endDate, by: 7) {",
            "    print(date)",
            "}",
            "// January 1, 2000",
            "// January 8, 2000",
            "// January 15, 2000"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The ",
                  "type": "text"
                },
                {
                  "code": "Strideable",
                  "type": "codeVoice"
                },
                {
                  "text": " protocol provides default implementations for",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "the equal-to (",
                  "type": "text"
                },
                {
                  "code": "==",
                  "type": "codeVoice"
                },
                {
                  "text": ") and less-than (",
                  "type": "text"
                },
                {
                  "code": "<",
                  "type": "codeVoice"
                },
                {
                  "text": ") operators that depend on the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "code": "Stride",
                  "type": "codeVoice"
                },
                {
                  "text": " typeâ€™s implementations. If a type conforming to ",
                  "type": "text"
                },
                {
                  "code": "Strideable",
                  "type": "codeVoice"
                },
                {
                  "text": " is",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "its own ",
                  "type": "text"
                },
                {
                  "code": "Stride",
                  "type": "codeVoice"
                },
                {
                  "text": " type, it must provide concrete implementations of the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "two operators to avoid infinite recursion.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/AdditiveArithmetic": {
      "abstract": [
        {
          "text": "A type with values that support addition and subtraction.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AdditiveArithmetic"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AdditiveArithmetic",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AdditiveArithmetic"
        }
      ],
      "role": "symbol",
      "title": "AdditiveArithmetic",
      "type": "topic",
      "url": "/documentation/swift/additivearithmetic"
    },
    "doc://com.apple.Swift/documentation/Swift/AutoreleasingUnsafeMutablePointer": {
      "abstract": [
        {
          "text": "A mutable pointer addressing an Objective-C reference that doesnâ€™t own its",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "target.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AutoreleasingUnsafeMutablePointer"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AutoreleasingUnsafeMutablePointer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AutoreleasingUnsafeMutablePointer"
        }
      ],
      "role": "symbol",
      "title": "AutoreleasingUnsafeMutablePointer",
      "type": "topic",
      "url": "/documentation/swift/autoreleasingunsafemutablepointer"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryFloatingPoint": {
      "abstract": [
        {
          "text": "A radix-2 (binary) floating-point type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BinaryFloatingPoint"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryFloatingPoint",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BinaryFloatingPoint"
        }
      ],
      "role": "symbol",
      "title": "BinaryFloatingPoint",
      "type": "topic",
      "url": "/documentation/swift/binaryfloatingpoint"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger": {
      "abstract": [
        {
          "text": "An integer type with a binary representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BinaryInteger"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BinaryInteger"
        }
      ],
      "role": "symbol",
      "title": "BinaryInteger",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger"
    },
    "doc://com.apple.Swift/documentation/Swift/Comparable": {
      "abstract": [
        {
          "text": "A type that can be compared using the relational operators ",
          "type": "text"
        },
        {
          "code": "<",
          "type": "codeVoice"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "code": "<=",
          "type": "codeVoice"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "code": ">=",
          "type": "codeVoice"
        },
        {
          "text": ",",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and ",
          "type": "text"
        },
        {
          "code": ">",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Comparable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Comparable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Comparable"
        }
      ],
      "role": "symbol",
      "title": "Comparable",
      "type": "topic",
      "url": "/documentation/swift/comparable"
    },
    "doc://com.apple.Swift/documentation/Swift/Double": {
      "abstract": [
        {
          "text": "A double-precision, floating-point value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Double"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Double",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Double"
        }
      ],
      "role": "symbol",
      "title": "Double",
      "type": "topic",
      "url": "/documentation/swift/double"
    },
    "doc://com.apple.Swift/documentation/Swift/Equatable": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Equatable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/swift/equatable"
    },
    "doc://com.apple.Swift/documentation/Swift/FixedWidthInteger": {
      "abstract": [
        {
          "text": "An integer type that uses a fixed size for every instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FixedWidthInteger"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/FixedWidthInteger",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FixedWidthInteger"
        }
      ],
      "role": "symbol",
      "title": "FixedWidthInteger",
      "type": "topic",
      "url": "/documentation/swift/fixedwidthinteger"
    },
    "doc://com.apple.Swift/documentation/Swift/Float": {
      "abstract": [
        {
          "text": "A single-precision, floating-point value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Float"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Float"
        }
      ],
      "role": "symbol",
      "title": "Float",
      "type": "topic",
      "url": "/documentation/swift/float"
    },
    "doc://com.apple.Swift/documentation/Swift/Float16": {
      "abstract": [
        {
          "text": "A half-precision (16b), floating-point value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Float16"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float16",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Float16"
        }
      ],
      "role": "symbol",
      "title": "Float16",
      "type": "topic",
      "url": "/documentation/swift/float16"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80": {
      "abstract": [
        {
          "text": "An extended-precision, floating-point value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Float80"
        }
      ],
      "role": "symbol",
      "title": "Float80",
      "type": "topic",
      "url": "/documentation/swift/float80"
    },
    "doc://com.apple.Swift/documentation/Swift/FloatingPoint": {
      "abstract": [
        {
          "text": "A floating-point numeric type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FloatingPoint"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/FloatingPoint",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FloatingPoint"
        }
      ],
      "role": "symbol",
      "title": "FloatingPoint",
      "type": "topic",
      "url": "/documentation/swift/floatingpoint"
    },
    "doc://com.apple.Swift/documentation/Swift/Int": {
      "abstract": [
        {
          "text": "A signed integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int"
        }
      ],
      "role": "symbol",
      "title": "Int",
      "type": "topic",
      "url": "/documentation/swift/int"
    },
    "doc://com.apple.Swift/documentation/Swift/Int128": {
      "abstract": [
        {
          "text": "A 128-bit signed integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int128"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int128",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int128"
        }
      ],
      "role": "symbol",
      "title": "Int128",
      "type": "topic",
      "url": "/documentation/swift/int128"
    },
    "doc://com.apple.Swift/documentation/Swift/Int16": {
      "abstract": [
        {
          "text": "A 16-bit signed integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int16"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int16",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int16"
        }
      ],
      "role": "symbol",
      "title": "Int16",
      "type": "topic",
      "url": "/documentation/swift/int16"
    },
    "doc://com.apple.Swift/documentation/Swift/Int32": {
      "abstract": [
        {
          "text": "A 32-bit signed integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int32"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int32",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int32"
        }
      ],
      "role": "symbol",
      "title": "Int32",
      "type": "topic",
      "url": "/documentation/swift/int32"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64": {
      "abstract": [
        {
          "text": "A 64-bit signed integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int64"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int64"
        }
      ],
      "role": "symbol",
      "title": "Int64",
      "type": "topic",
      "url": "/documentation/swift/int64"
    },
    "doc://com.apple.Swift/documentation/Swift/Int8": {
      "abstract": [
        {
          "text": "An 8-bit signed integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int8"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int8",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int8"
        }
      ],
      "role": "symbol",
      "title": "Int8",
      "type": "topic",
      "url": "/documentation/swift/int8"
    },
    "doc://com.apple.Swift/documentation/Swift/Numeric": {
      "abstract": [
        {
          "text": "A type with values that support multiplication.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Numeric"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Numeric",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Numeric"
        }
      ],
      "role": "symbol",
      "title": "Numeric",
      "type": "topic",
      "url": "/documentation/swift/numeric"
    },
    "doc://com.apple.Swift/documentation/Swift/SignedInteger": {
      "abstract": [
        {
          "text": "An integer type that can represent both positive and negative values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SignedInteger"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SignedInteger",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SignedInteger"
        }
      ],
      "role": "symbol",
      "title": "SignedInteger",
      "type": "topic",
      "url": "/documentation/swift/signedinteger"
    },
    "doc://com.apple.Swift/documentation/Swift/SignedNumeric": {
      "abstract": [
        {
          "text": "A numeric type with a negation operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SignedNumeric"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SignedNumeric",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SignedNumeric"
        }
      ],
      "role": "symbol",
      "title": "SignedNumeric",
      "type": "topic",
      "url": "/documentation/swift/signednumeric"
    },
    "doc://com.apple.Swift/documentation/Swift/Strideable": {
      "abstract": [
        {
          "text": "A type representing continuous, one-dimensional values that can be offset",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and measured.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Strideable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Strideable"
        }
      ],
      "role": "symbol",
      "title": "Strideable",
      "type": "topic",
      "url": "/documentation/swift/strideable"
    },
    "doc://com.apple.Swift/documentation/Swift/Strideable/+(_:_:)-8m1px": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "_Pointer",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "+"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sx6StrideQa",
          "text": "Stride"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable/+(_:_:)-8m1px",
      "kind": "symbol",
      "role": "symbol",
      "title": "+(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/strideable/+(_:_:)-8m1px"
    },
    "doc://com.apple.Swift/documentation/Swift/Strideable/+(_:_:)-94mlm": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "_Pointer",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "+"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sx6StrideQa",
          "text": "Stride"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable/+(_:_:)-94mlm",
      "kind": "symbol",
      "role": "symbol",
      "title": "+(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/strideable/+(_:_:)-94mlm"
    },
    "doc://com.apple.Swift/documentation/Swift/Strideable/+=(_:_:)": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "_Pointer",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "+="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sx6StrideQa",
          "text": "Stride"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable/+=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "+=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/strideable/+=(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Strideable/-(_:_:)-1kjns": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "_Pointer",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "-"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sx6StrideQa",
          "text": "Stride"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable/-(_:_:)-1kjns",
      "kind": "symbol",
      "role": "symbol",
      "title": "-(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/strideable/-(_:_:)-1kjns"
    },
    "doc://com.apple.Swift/documentation/Swift/Strideable/-(_:_:)-2mot7": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "_Pointer",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "-"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sx6StrideQa",
          "text": "Stride"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable/-(_:_:)-2mot7",
      "kind": "symbol",
      "role": "symbol",
      "title": "-(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/strideable/-(_:_:)-2mot7"
    },
    "doc://com.apple.Swift/documentation/Swift/Strideable/-=(_:_:)": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "_Pointer",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "-="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sx6StrideQa",
          "text": "Stride"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable/-=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "-=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/strideable/-=(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Strideable/Stride": {
      "abstract": [
        {
          "text": "A type that represents the distance between two values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Stride"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SL",
          "text": "Comparable"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s13SignedNumericP",
          "text": "SignedNumeric"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable/Stride",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "Stride",
      "type": "topic",
      "url": "/documentation/swift/strideable/stride"
    },
    "doc://com.apple.Swift/documentation/Swift/Strideable/advanced(by:)": {
      "abstract": [
        {
          "text": "Returns a value that is offset the specified distance from this value.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "advanced"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sx6StrideQa",
          "text": "Stride"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable/advanced(by:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "advanced(by:)",
      "type": "topic",
      "url": "/documentation/swift/strideable/advanced(by:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Strideable/distance(to:)": {
      "abstract": [
        {
          "text": "Returns the distance from this value to the given value, expressed as a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "stride.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "distance"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sx6StrideQa",
          "text": "Stride"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable/distance(to:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "distance(to:)",
      "type": "topic",
      "url": "/documentation/swift/strideable/distance(to:)"
    },
    "doc://com.apple.Swift/documentation/Swift/UInt": {
      "abstract": [
        {
          "text": "An unsigned integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UInt",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UInt"
        }
      ],
      "role": "symbol",
      "title": "UInt",
      "type": "topic",
      "url": "/documentation/swift/uint"
    },
    "doc://com.apple.Swift/documentation/Swift/UInt128": {
      "abstract": [
        {
          "text": "A 128-bit unsigned integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt128"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UInt128",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UInt128"
        }
      ],
      "role": "symbol",
      "title": "UInt128",
      "type": "topic",
      "url": "/documentation/swift/uint128"
    },
    "doc://com.apple.Swift/documentation/Swift/UInt16": {
      "abstract": [
        {
          "text": "A 16-bit unsigned integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt16"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UInt16",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UInt16"
        }
      ],
      "role": "symbol",
      "title": "UInt16",
      "type": "topic",
      "url": "/documentation/swift/uint16"
    },
    "doc://com.apple.Swift/documentation/Swift/UInt32": {
      "abstract": [
        {
          "text": "A 32-bit unsigned integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt32"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UInt32",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UInt32"
        }
      ],
      "role": "symbol",
      "title": "UInt32",
      "type": "topic",
      "url": "/documentation/swift/uint32"
    },
    "doc://com.apple.Swift/documentation/Swift/UInt64": {
      "abstract": [
        {
          "text": "A 64-bit unsigned integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt64"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UInt64",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UInt64"
        }
      ],
      "role": "symbol",
      "title": "UInt64",
      "type": "topic",
      "url": "/documentation/swift/uint64"
    },
    "doc://com.apple.Swift/documentation/Swift/UInt8": {
      "abstract": [
        {
          "text": "An 8-bit unsigned integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt8"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UInt8",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UInt8"
        }
      ],
      "role": "symbol",
      "title": "UInt8",
      "type": "topic",
      "url": "/documentation/swift/uint8"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeMutablePointer": {
      "abstract": [
        {
          "text": "A pointer for accessing and manipulating data of a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "specific type.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Pointee",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeMutablePointer"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeMutablePointer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeMutablePointer"
        }
      ],
      "role": "symbol",
      "title": "UnsafeMutablePointer",
      "type": "topic",
      "url": "/documentation/swift/unsafemutablepointer"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeMutableRawPointer": {
      "abstract": [
        {
          "text": "A raw pointer for accessing and manipulating untyped data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeMutableRawPointer"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeMutableRawPointer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeMutableRawPointer"
        }
      ],
      "role": "symbol",
      "title": "UnsafeMutableRawPointer",
      "type": "topic",
      "url": "/documentation/swift/unsafemutablerawpointer"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafePointer": {
      "abstract": [
        {
          "text": "A pointer for accessing data of a specific type.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Pointee",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafePointer"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafePointer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafePointer"
        }
      ],
      "role": "symbol",
      "title": "UnsafePointer",
      "type": "topic",
      "url": "/documentation/swift/unsafepointer"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawPointer": {
      "abstract": [
        {
          "text": "A raw pointer for accessing untyped data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeRawPointer"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawPointer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsafeRawPointer"
        }
      ],
      "role": "symbol",
      "title": "UnsafeRawPointer",
      "type": "topic",
      "url": "/documentation/swift/unsaferawpointer"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsignedInteger": {
      "abstract": [
        {
          "text": "An integer type that can represent only nonnegative values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsignedInteger"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsignedInteger",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnsignedInteger"
        }
      ],
      "role": "symbol",
      "title": "UnsignedInteger",
      "type": "topic",
      "url": "/documentation/swift/unsignedinteger"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Comparable",
        "doc://com.apple.Swift/documentation/Swift/Equatable"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    },
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BinaryFloatingPoint",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger",
        "doc://com.apple.Swift/documentation/Swift/FixedWidthInteger",
        "doc://com.apple.Swift/documentation/Swift/FloatingPoint",
        "doc://com.apple.Swift/documentation/Swift/SignedInteger",
        "doc://com.apple.Swift/documentation/Swift/UnsignedInteger"
      ],
      "kind": "relationships",
      "title": "Inherited By",
      "type": "inheritedBy"
    },
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/AutoreleasingUnsafeMutablePointer",
        "doc://com.apple.Swift/documentation/Swift/Double",
        "doc://com.apple.Swift/documentation/Swift/Float",
        "doc://com.apple.Swift/documentation/Swift/Float16",
        "doc://com.apple.Swift/documentation/Swift/Float80",
        "doc://com.apple.Swift/documentation/Swift/Int",
        "doc://com.apple.Swift/documentation/Swift/Int128",
        "doc://com.apple.Swift/documentation/Swift/Int16",
        "doc://com.apple.Swift/documentation/Swift/Int32",
        "doc://com.apple.Swift/documentation/Swift/Int64",
        "doc://com.apple.Swift/documentation/Swift/Int8",
        "doc://com.apple.Swift/documentation/Swift/UInt",
        "doc://com.apple.Swift/documentation/Swift/UInt128",
        "doc://com.apple.Swift/documentation/Swift/UInt16",
        "doc://com.apple.Swift/documentation/Swift/UInt32",
        "doc://com.apple.Swift/documentation/Swift/UInt64",
        "doc://com.apple.Swift/documentation/Swift/UInt8",
        "doc://com.apple.Swift/documentation/Swift/UnsafeMutablePointer",
        "doc://com.apple.Swift/documentation/Swift/UnsafeMutableRawPointer",
        "doc://com.apple.Swift/documentation/Swift/UnsafePointer",
        "doc://com.apple.Swift/documentation/Swift/UnsafeRawPointer"
      ],
      "kind": "relationships",
      "title": "Conforming Types",
      "type": "conformingTypes"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Basic-Arithmetic",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/AdditiveArithmetic",
        "doc://com.apple.Swift/documentation/Swift/Numeric",
        "doc://com.apple.Swift/documentation/Swift/SignedNumeric"
      ],
      "title": "Basic Arithmetic"
    }
  ],
  "topicSections": [
    {
      "anchor": "Getting-an-Offset-Value",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Strideable/advanced(by:)",
        "doc://com.apple.Swift/documentation/Swift/Strideable/+(_:_:)-8m1px",
        "doc://com.apple.Swift/documentation/Swift/Strideable/+(_:_:)-94mlm",
        "doc://com.apple.Swift/documentation/Swift/Strideable/-(_:_:)-1kjns",
        "doc://com.apple.Swift/documentation/Swift/Strideable/-(_:_:)-2mot7"
      ],
      "title": "Getting an Offset Value"
    },
    {
      "anchor": "Comparing-Values",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Strideable/distance(to:)"
      ],
      "title": "Comparing Values"
    },
    {
      "anchor": "Operators",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Strideable/+=(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Strideable/-=(_:_:)"
      ],
      "title": "Operators"
    },
    {
      "anchor": "Associated-Types",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Strideable/Stride"
      ],
      "title": "Associated Types"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/strideable"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
