{
  "abstract": [
    {
      "text": "Creates a regex component that matches a localized date string formatted in accordance with a format string, capturing it as a Foundation date.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/RegexComponent/date(format:locale:timeZone:calendar:twoDigitStartDate:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "conformance": {
      "availabilityPrefix": [
        {
          "text": "Available when",
          "type": "text"
        }
      ],
      "conformancePrefix": [
        {
          "text": "Conforms when",
          "type": "text"
        }
      ],
      "constraints": [
        {
          "code": "Self",
          "type": "codeVoice"
        },
        {
          "text": " is ",
          "type": "text"
        },
        {
          "code": "Date.ParseStrategy",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ]
    },
    "extendedModule": "Swift",
    "externalID": "s:17_StringProcessing14RegexComponentP10FoundationAD4DateV13ParseStrategyVRszrlE4date6format6locale8timeZone8calendar013twoDigitStartF0AhF06FormatA0V_AD6LocaleVAD04TimeM0VAD8CalendarVSgAFtFZ",
    "fragments": [
      {
        "kind": "keyword",
        "text": "static"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "date"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "format"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:10Foundation4DateV",
        "text": "Date"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:10Foundation4DateV12FormatStringV",
        "text": "FormatString"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "locale"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:10Foundation6LocaleV",
        "text": "Locale"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "timeZone"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:10Foundation8TimeZoneV",
        "text": "TimeZone"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "calendar"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:10Foundation8CalendarV",
        "text": "Calendar"
      },
      {
        "kind": "text",
        "text": "?, "
      },
      {
        "kind": "externalParam",
        "text": "twoDigitStartDate"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:10Foundation4DateV",
        "text": "Date"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Type Method",
    "symbolKind": "method",
    "title": "date(format:locale:timeZone:calendar:twoDigitStartDate:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "static"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "date"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "format"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:10Foundation4DateV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:10Foundation4DateV",
              "text": "Date"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:10Foundation4DateV12FormatStringV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:10Foundation4DateV12FormatStringV",
              "text": "FormatString"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "locale"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:10Foundation6LocaleV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:10Foundation6LocaleV",
              "text": "Locale"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "timeZone"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:10Foundation8TimeZoneV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:10Foundation8TimeZoneV",
              "text": "TimeZone"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "calendar"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:10Foundation8CalendarV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:10Foundation8CalendarV",
              "text": "Calendar"
            },
            {
              "kind": "text",
              "text": "? = nil, "
            },
            {
              "kind": "externalParam",
              "text": "twoDigitStartDate"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:10Foundation4DateV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:10Foundation4DateV",
              "text": "Date"
            },
            {
              "kind": "text",
              "text": " = Date(timeIntervalSince1970: 0)) -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/foundation/date/formatstring",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " to use when matching date substrings.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "format"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The locale to use when matching date substrings. Matching uses this locale to evaluate the order of date components. It also uses the locale’s language for date format styles that use words.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "locale"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The time zone to use when returning a captured ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/foundation/date",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ". The returned date’s time value is ",
                  "type": "text"
                },
                {
                  "code": "00:00:00",
                  "type": "codeVoice"
                },
                {
                  "text": " in this time zone.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "timeZone"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The calendar to use when matching date substrings. If ",
                  "type": "text"
                },
                {
                  "code": "nil",
                  "type": "codeVoice"
                },
                {
                  "text": ", matching uses the default calendar of the specified ",
                  "type": "text"
                },
                {
                  "code": "locale",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "calendar"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The earliest date a matched two-year date can represent. For example, with the default value of ",
                  "type": "text"
                },
                {
                  "code": "Date(timeIntervalSince1970: 0)",
                  "type": "codeVoice"
                },
                {
                  "text": ", the matcher treats ",
                  "type": "text"
                },
                {
                  "code": "22",
                  "type": "codeVoice"
                },
                {
                  "text": " as 2022, and ",
                  "type": "text"
                },
                {
                  "code": "84",
                  "type": "codeVoice"
                },
                {
                  "text": " as 1984. The matcher ignores this parameter for date substrings that contain year components with more than two digits.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "twoDigitStartDate"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A ",
              "type": "text"
            },
            {
              "code": "RegexComponent",
              "type": "codeVoice"
            },
            {
              "text": " that matches date substrings as Foundation ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/date",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " instances.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This method matches date substrings in accordance with a format from a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/date/formatstring",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If a time value follows the date substring, the matcher ignores it, treating it as any other character sequence. To match date and time substrings, use ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/dateTime(date:time:locale:timeZone:calendar:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If the date substring uses a two-digit year, the matcher uses the ",
              "type": "text"
            },
            {
              "code": "twoDigitStartDate",
              "type": "codeVoice"
            },
            {
              "text": " parameter, which defines the earliest date a string with a two-digit year can denote. The matcher ignores this parameter if the year contains more than two digits.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The following example creates a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Regex",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " that matches a date formatted with two-digit month, day, and year fields, and slash (",
              "type": "text"
            },
            {
              "code": "/",
              "type": "codeVoice"
            },
            {
              "text": ") separator characters. It sets midnight on January 1, 1970, as the ",
              "type": "text"
            },
            {
              "code": "twoDigitStartDate",
              "type": "codeVoice"
            },
            {
              "text": ", and ",
              "type": "text"
            },
            {
              "code": "PST",
              "type": "codeVoice"
            },
            {
              "text": " as the time zone. It then matches this regex against a source string containing a date with this format and a two-digit year, some whitespace, a substring, more whitespace, and a currency value. Because the source year ",
              "type": "text"
            },
            {
              "code": "76",
              "type": "codeVoice"
            },
            {
              "text": " is after ",
              "type": "text"
            },
            {
              "code": "thetwoDigitStartDate",
              "type": "codeVoice"
            },
            {
              "text": ", the date substring matches as ",
              "type": "text"
            },
            {
              "code": "1976",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let enUSLocale = Locale(languageCode: .english, languageRegion: .unitedStates)",
            "let source = \"4/1/76  Lemon-lime slushie      $0.40\"",
            "let matcher = Regex {",
            "    Capture {",
            "        One(.date(format: \"\\(month: .twoDigits)/\\(day: .twoDigits)/\\(year: .twoDigits)\",",
            "                  locale: enUSLocale,",
            "                  timeZone: TimeZone(identifier: \"PST\")!,",
            "                  twoDigitStartDate: try! Date(\"1970-01-01T00:00:00-0800\", strategy: .iso8601)))",
            "    }",
            "    OneOrMore(.horizontalWhitespace)",
            "    OneOrMore(.any)",
            "    OneOrMore(.horizontalWhitespace)",
            "    One(.localizedCurrency(code: Locale.Currency(\"USD\"),",
            "                           locale: enUSLocale))",
            "}",
            "",
            "let match = source.firstMatch(of: matcher)",
            "let date = match?.1 // date == Mar 1, 1976 at 12:00 AM (may vary based on current locale)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Regex": {
      "abstract": [
        {
          "text": "A regular expression.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Regex"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Regex",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Regex"
        }
      ],
      "role": "symbol",
      "title": "Regex",
      "type": "topic",
      "url": "/documentation/swift/regex"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent": {
      "abstract": [
        {
          "text": "A type that represents a regular expression.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RegexComponent"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RegexComponent"
        }
      ],
      "role": "symbol",
      "title": "RegexComponent",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/date(_:locale:timeZone:calendar:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches a localized date string formatted in accordance with a style, capturing it as a Foundation date.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ParseStrategy",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "date"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV11FormatStyleV",
          "text": "FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV11FormatStyleV0bD0V",
          "text": "DateStyle"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "timeZone"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8TimeZoneV",
          "text": "TimeZone"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "calendar"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8CalendarV",
          "text": "Calendar"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV13ParseStrategyV",
          "text": "ParseStrategy"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/date(_:locale:timeZone:calendar:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "date(_:locale:timeZone:calendar:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/date(_:locale:timezone:calendar:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/date(format:locale:timeZone:calendar:twoDigitStartDate:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches a localized date string formatted in accordance with a format string, capturing it as a Foundation date.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ParseStrategy",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "date"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "format"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV12FormatStringV",
          "text": "FormatString"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "timeZone"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8TimeZoneV",
          "text": "TimeZone"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "calendar"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8CalendarV",
          "text": "Calendar"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "twoDigitStartDate"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/date(format:locale:timeZone:calendar:twoDigitStartDate:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "date(format:locale:timeZone:calendar:twoDigitStartDate:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/date(format:locale:timezone:calendar:twodigitstartdate:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/dateTime(date:time:locale:timeZone:calendar:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches a localized date and time string, capturing it as a Foundation date.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ParseStrategy",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dateTime"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "date"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV11FormatStyleV",
          "text": "FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV11FormatStyleV0bD0V",
          "text": "DateStyle"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "time"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV11FormatStyleV",
          "text": "FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV11FormatStyleV04TimeD0V",
          "text": "TimeStyle"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "timeZone"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8TimeZoneV",
          "text": "TimeZone"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "calendar"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8CalendarV",
          "text": "Calendar"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV13ParseStrategyV",
          "text": "ParseStrategy"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/dateTime(date:time:locale:timeZone:calendar:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "dateTime(date:time:locale:timeZone:calendar:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/datetime(date:time:locale:timezone:calendar:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601": {
      "abstract": [
        {
          "text": "A regex component that matches a default ISO 8601-formatted date string, capturing it as a Foundation date.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ISO8601FormatStyle",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "iso8601"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601",
      "kind": "symbol",
      "role": "symbol",
      "title": "iso8601",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/iso8601"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601(timeZone:includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches an ISO 8601-formatted date string, capturing the matched substring as a Foundation date in the specified time zone.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ISO8601FormatStyle",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "iso8601"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "timeZone"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8TimeZoneV",
          "text": "TimeZone"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "includingFractionalSeconds"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "dateSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV0B9SeparatorO",
          "text": "DateSeparator"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "dateTimeSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV0B13TimeSeparatorO",
          "text": "DateTimeSeparator"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "timeSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV13TimeSeparatorO",
          "text": "TimeSeparator"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601(timeZone:includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "iso8601(timeZone:includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/iso8601(timezone:includingfractionalseconds:dateseparator:datetimeseparator:timeseparator:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601Date(timeZone:dateSeparator:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches an ISO 8601-formatted date string, capturing it as a Foundation date in the specified time zone.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ISO8601FormatStyle",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "iso8601Date"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "timeZone"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation8TimeZoneV",
          "text": "TimeZone"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "dateSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV0B9SeparatorO",
          "text": "DateSeparator"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601Date(timeZone:dateSeparator:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "iso8601Date(timeZone:dateSeparator:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/iso8601date(timezone:dateseparator:)"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601WithTimeZone(includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:)": {
      "abstract": [
        {
          "text": "Creates a regex component that matches an ISO 8601-formatted date string that includes a time zone component, capturing the matched substring as a Foundation date.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Date.ISO8601FormatStyle",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "iso8601WithTimeZone"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "includingFractionalSeconds"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "dateSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV0B9SeparatorO",
          "text": "DateSeparator"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "dateTimeSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV0B13TimeSeparatorO",
          "text": "DateTimeSeparator"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "timeSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV13TimeSeparatorO",
          "text": "TimeSeparator"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "timeZoneSeparator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV",
          "text": "ISO8601FormatStyle"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV18ISO8601FormatStyleV17TimeZoneSeparatorO",
          "text": "TimeZoneSeparator"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601WithTimeZone(includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "iso8601WithTimeZone(includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:)",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent/iso8601withtimezone(includingfractionalseconds:dateseparator:datetimeseparator:timeseparator:timezoneseparator:)"
    },
    "doc://com.apple.documentation/documentation/foundation/date": {
      "abstract": [
        {
          "text": "A specific point in time, independent of any calendar or time zone.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "Date"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/date",
      "kind": "symbol",
      "role": "symbol",
      "title": "Date",
      "type": "topic",
      "url": "/documentation/foundation/date"
    },
    "doc://com.apple.documentation/documentation/foundation/date/formatstring": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "Date.FormatString"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/date/formatstring",
      "kind": "symbol",
      "role": "symbol",
      "title": "Date.FormatString",
      "type": "topic",
      "url": "/documentation/foundation/date/formatstring"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:10Foundation4DateV": {
      "abstract": [
        {
          "text": "A specific point in time, independent of any calendar or time zone.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "Date"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:10Foundation4DateV",
      "kind": "symbol",
      "role": "symbol",
      "title": "Date",
      "type": "topic",
      "url": "/documentation/foundation/date"
    },
    "doc://com.externally.resolved.symbol/s:10Foundation4DateV12FormatStringV": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "Date.FormatString"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:10Foundation4DateV12FormatStringV",
      "kind": "symbol",
      "role": "symbol",
      "title": "Date.FormatString",
      "type": "topic",
      "url": "/documentation/foundation/date/formatstring"
    },
    "doc://com.externally.resolved.symbol/s:10Foundation6LocaleV": {
      "abstract": [
        {
          "text": "Information about linguistic, cultural, and technological conventions for use in formatting data for presentation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "Locale"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:10Foundation6LocaleV",
      "kind": "symbol",
      "role": "symbol",
      "title": "Locale",
      "type": "topic",
      "url": "/documentation/foundation/locale"
    },
    "doc://com.externally.resolved.symbol/s:10Foundation8CalendarV": {
      "abstract": [
        {
          "text": "A definition of the relationships between calendar units and absolute points in time, providing features for calculation and comparison of dates.   ",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "Calendar"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:10Foundation8CalendarV",
      "kind": "symbol",
      "role": "symbol",
      "title": "Calendar",
      "type": "topic",
      "url": "/documentation/foundation/calendar"
    },
    "doc://com.externally.resolved.symbol/s:10Foundation8TimeZoneV": {
      "abstract": [
        {
          "text": "Information about standard time conventions associated with a specific geopolitical region.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "TimeZone"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:10Foundation8TimeZoneV",
      "kind": "symbol",
      "role": "symbol",
      "title": "TimeZone",
      "type": "topic",
      "url": "/documentation/foundation/timezone"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Matching-dates-and-times",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/date(_:locale:timeZone:calendar:)",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/dateTime(date:time:locale:timeZone:calendar:)",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601Date(timeZone:dateSeparator:)",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601(timeZone:includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:)",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent/iso8601WithTimeZone(includingFractionalSeconds:dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:)"
      ],
      "title": "Matching dates and times"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/regexcomponent/date(format:locale:timezone:calendar:twodigitstartdate:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
