{
  "abstract": [
    {
      "text": "The memory layout of a type, describing its size, stride, and alignment.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/MemoryLayout"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:s12MemoryLayoutO",
    "fragments": [
      {
        "kind": "keyword",
        "text": "enum"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "MemoryLayout"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "MemoryLayout"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Enumeration",
    "symbolKind": "enum",
    "title": "MemoryLayout"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "enum"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MemoryLayout"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "T"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "T"
            },
            {
              "kind": "text",
              "text": " : ~Copyable"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can use ",
              "type": "text"
            },
            {
              "code": "MemoryLayout",
              "type": "codeVoice"
            },
            {
              "text": " as a source of information about a type when",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "allocating or binding memory using raw pointers. The following example",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "declares a ",
              "type": "text"
            },
            {
              "code": "Point",
              "type": "codeVoice"
            },
            {
              "text": " type with ",
              "type": "text"
            },
            {
              "code": "x",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "y",
              "type": "codeVoice"
            },
            {
              "text": " coordinates and a Boolean",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "isFilled",
              "type": "codeVoice"
            },
            {
              "text": " property.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct Point {",
            "    let x: Double",
            "    let y: Double",
            "    let isFilled: Bool",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The size, stride, and alignment of the ",
              "type": "text"
            },
            {
              "code": "Point",
              "type": "codeVoice"
            },
            {
              "text": " type are accessible as",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "static properties of ",
              "type": "text"
            },
            {
              "code": "MemoryLayout<Point>",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// MemoryLayout<Point>.size == 17",
            "// MemoryLayout<Point>.stride == 24",
            "// MemoryLayout<Point>.alignment == 8"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Always use a multiple of a typeâ€™s ",
              "type": "text"
            },
            {
              "code": "stride",
              "type": "codeVoice"
            },
            {
              "text": " instead of its ",
              "type": "text"
            },
            {
              "code": "size",
              "type": "codeVoice"
            },
            {
              "text": " when",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "allocating memory or accounting for the distance between instances in",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "memory. This example allocates uninitialized raw memory with space",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "for four instances of ",
              "type": "text"
            },
            {
              "code": "Point",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let count = 4",
            "let pointPointer = UnsafeMutableRawPointer.allocate(",
            "        byteCount: count * MemoryLayout<Point>.stride,",
            "        alignment: MemoryLayout<Point>.alignment)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/MemoryLayout": {
      "abstract": [
        {
          "text": "The memory layout of a type, describing its size, stride, and alignment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MemoryLayout"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MemoryLayout",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MemoryLayout"
        }
      ],
      "role": "symbol",
      "title": "MemoryLayout",
      "type": "topic",
      "url": "/documentation/swift/memorylayout"
    },
    "doc://com.apple.Swift/documentation/Swift/MemoryLayout/alignment": {
      "abstract": [
        {
          "text": "The default memory alignment of ",
          "type": "text"
        },
        {
          "code": "T",
          "type": "codeVoice"
        },
        {
          "text": ", in bytes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "alignment"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MemoryLayout/alignment",
      "kind": "symbol",
      "role": "symbol",
      "title": "alignment",
      "type": "topic",
      "url": "/documentation/swift/memorylayout/alignment"
    },
    "doc://com.apple.Swift/documentation/Swift/MemoryLayout/alignment(ofValue:)": {
      "abstract": [
        {
          "text": "Returns the default memory alignment of ",
          "type": "text"
        },
        {
          "code": "T",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "alignment"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "ofValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "borrowing"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MemoryLayout/alignment(ofValue:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "alignment(ofValue:)",
      "type": "topic",
      "url": "/documentation/swift/memorylayout/alignment(ofvalue:)"
    },
    "doc://com.apple.Swift/documentation/Swift/MemoryLayout/offset(of:)": {
      "abstract": [
        {
          "text": "Returns the offset of an inline stored property within a typeâ€™s in-memory",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "offset"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s14PartialKeyPathC",
          "text": "PartialKeyPath"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MemoryLayout/offset(of:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "offset(of:)",
      "type": "topic",
      "url": "/documentation/swift/memorylayout/offset(of:)"
    },
    "doc://com.apple.Swift/documentation/Swift/MemoryLayout/size": {
      "abstract": [
        {
          "text": "The contiguous memory footprint of ",
          "type": "text"
        },
        {
          "code": "T",
          "type": "codeVoice"
        },
        {
          "text": ", in bytes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "size"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MemoryLayout/size",
      "kind": "symbol",
      "role": "symbol",
      "title": "size",
      "type": "topic",
      "url": "/documentation/swift/memorylayout/size"
    },
    "doc://com.apple.Swift/documentation/Swift/MemoryLayout/size(ofValue:)": {
      "abstract": [
        {
          "text": "Returns the contiguous memory footprint of the given instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "size"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "ofValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "borrowing"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MemoryLayout/size(ofValue:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "size(ofValue:)",
      "type": "topic",
      "url": "/documentation/swift/memorylayout/size(ofvalue:)"
    },
    "doc://com.apple.Swift/documentation/Swift/MemoryLayout/stride": {
      "abstract": [
        {
          "text": "The number of bytes from the start of one instance of ",
          "type": "text"
        },
        {
          "code": "T",
          "type": "codeVoice"
        },
        {
          "text": " to the start of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the next when stored in contiguous memory or in an ",
          "type": "text"
        },
        {
          "code": "Array<T>",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "stride"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MemoryLayout/stride",
      "kind": "symbol",
      "role": "symbol",
      "title": "stride",
      "type": "topic",
      "url": "/documentation/swift/memorylayout/stride"
    },
    "doc://com.apple.Swift/documentation/Swift/MemoryLayout/stride(ofValue:)": {
      "abstract": [
        {
          "text": "Returns the number of bytes from the start of one instance of ",
          "type": "text"
        },
        {
          "code": "T",
          "type": "codeVoice"
        },
        {
          "text": " to the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "start of the next when stored in contiguous memory or in an ",
          "type": "text"
        },
        {
          "code": "Array<T>",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "stride"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "ofValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "borrowing"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MemoryLayout/stride(ofValue:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "stride(ofValue:)",
      "type": "topic",
      "url": "/documentation/swift/memorylayout/stride(ofvalue:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "T",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Copyable",
            "type": "codeVoice"
          },
          {
            "text": " and ",
            "type": "text"
          },
          {
            "code": "Escapable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Sendable"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "topicSections": [
    {
      "abstract": [
        {
          "text": "Use these static properties to access a typeâ€™s layout. For example, the size of a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "Double",
          "type": "codeVoice"
        },
        {
          "text": " instance is ",
          "type": "text"
        },
        {
          "code": "MemoryLayout<Double>.size",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "anchor": "Accessing-the-Layout-of-a-Type",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/MemoryLayout/size",
        "doc://com.apple.Swift/documentation/Swift/MemoryLayout/alignment",
        "doc://com.apple.Swift/documentation/Swift/MemoryLayout/stride"
      ],
      "title": "Accessing the Layout of a Type"
    },
    {
      "abstract": [
        {
          "text": "Pass an instance to these static methods to acess the layout for that instanceâ€™s",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "anchor": "Accessing-the-Layout-of-a-Value",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/MemoryLayout/stride(ofValue:)",
        "doc://com.apple.Swift/documentation/Swift/MemoryLayout/size(ofValue:)",
        "doc://com.apple.Swift/documentation/Swift/MemoryLayout/alignment(ofValue:)"
      ],
      "title": "Accessing the Layout of a Value"
    },
    {
      "anchor": "Querying-Type-Properties",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/MemoryLayout/offset(of:)"
      ],
      "title": "Querying Type Properties"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/memorylayout"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
