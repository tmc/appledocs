{
  "abstract": [
    {
      "text": "A Unicode string value that is a collection of characters.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    },
    "minor": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.2",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/String"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:SS",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "String"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "String"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "String"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "String"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A string is a series of characters, such as ",
              "type": "text"
            },
            {
              "code": "\"Swift\"",
              "type": "codeVoice"
            },
            {
              "text": ", that forms a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "collection. Strings in Swift are Unicode correct and locale insensitive,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and are designed to be efficient. The ",
              "type": "text"
            },
            {
              "code": "String",
              "type": "codeVoice"
            },
            {
              "text": " type bridges with the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Objective-C class ",
              "type": "text"
            },
            {
              "code": "NSString",
              "type": "codeVoice"
            },
            {
              "text": " and offers interoperability with C functions",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that works with strings.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You can create new strings using string literals or string interpolations.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "A ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "string literal",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " is a series of characters enclosed in quotes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let greeting = \"Welcome!\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "inlineContent": [
                {
                  "text": "String interpolations",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " are string literals that evaluate any included",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "expressions and convert the results to string form. String interpolations",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "give you an easy way to build a string from multiple pieces. Wrap each",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "expression in a string interpolation in parentheses, prefixed by a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "backslash.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let name = \"Rosa\"",
            "let personalizedGreeting = \"Welcome, \\(name)!\"",
            "// personalizedGreeting == \"Welcome, Rosa!\"",
            "",
            "let price = 2",
            "let number = 3",
            "let cookiePrice = \"\\(number) cookies: $\\(price * number).\"",
            "// cookiePrice == \"3 cookies: $6.\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Combine strings using the concatenation operator (",
              "type": "text"
            },
            {
              "code": "+",
              "type": "codeVoice"
            },
            {
              "text": ").",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let longerGreeting = greeting + \" We're glad you're here!\"",
            "// longerGreeting == \"Welcome! We're glad you're here!\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Multiline string literals are enclosed in three double quotation marks",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "(",
              "type": "text"
            },
            {
              "code": "\"\"\"",
              "type": "codeVoice"
            },
            {
              "text": "), with each delimiter on its own line. Indentation is stripped from",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "each line of a multiline string literal to match the indentation of the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "closing delimiter.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let banner = \"\"\"",
            "          __,",
            "         (           o  /) _/_",
            "          `.  , , , ,  //  /",
            "        (___)(_(_/_(_ //_ (__",
            "                     /)",
            "                    (/",
            "        \"\"\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Modifying-and-Comparing-Strings",
          "level": 1,
          "text": "Modifying and Comparing Strings",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Strings always have value semantics. Modifying a copy of a string leaves",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the original unaffected.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var otherGreeting = greeting",
            "otherGreeting += \" Have a nice time!\"",
            "// otherGreeting == \"Welcome! Have a nice time!\"",
            "",
            "print(greeting)",
            "// Prints \"Welcome!\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Comparing strings for equality using the equal-to operator (",
              "type": "text"
            },
            {
              "code": "==",
              "type": "codeVoice"
            },
            {
              "text": ") or a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "relational operator (like ",
              "type": "text"
            },
            {
              "code": "<",
              "type": "codeVoice"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "code": ">=",
              "type": "codeVoice"
            },
            {
              "text": ") is always performed using Unicode",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "canonical representation. As a result, different representations of a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "string compare as being equal.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let cafe1 = \"Cafe\\u{301}\"",
            "let cafe2 = \"Café\"",
            "print(cafe1 == cafe2)",
            "// Prints \"true\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The Unicode scalar value ",
              "type": "text"
            },
            {
              "code": "\"\\u{301}\"",
              "type": "codeVoice"
            },
            {
              "text": " modifies the preceding character to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "include an accent, so ",
              "type": "text"
            },
            {
              "code": "\"e\\u{301}\"",
              "type": "codeVoice"
            },
            {
              "text": " has the same canonical representation",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "as the single Unicode scalar value ",
              "type": "text"
            },
            {
              "code": "\"é\"",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Basic string operations are not sensitive to locale settings, ensuring that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "string comparisons and other operations always have a single, stable",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "result, allowing strings to be used as keys in ",
              "type": "text"
            },
            {
              "code": "Dictionary",
              "type": "codeVoice"
            },
            {
              "text": " instances and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "for other purposes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Accessing-String-Elements",
          "level": 1,
          "text": "Accessing String Elements",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A string is a collection of ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "extended grapheme clusters",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": ", which approximate",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "human-readable characters. Many individual characters, such as “é”, “김”,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "values are combined by Unicode’s boundary algorithms into extended",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "grapheme clusters, represented by the Swift ",
              "type": "text"
            },
            {
              "code": "Character",
              "type": "codeVoice"
            },
            {
              "text": " type. Each element",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of a string is represented by a ",
              "type": "text"
            },
            {
              "code": "Character",
              "type": "codeVoice"
            },
            {
              "text": " instance.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example, to retrieve the first word of a longer string, you can search",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "for a space and then create a substring from a prefix of the string up to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that point:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let name = \"Marie Curie\"",
            "let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex",
            "let firstName = name[..<firstSpace]",
            "// firstName == \"Marie\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "firstName",
              "type": "codeVoice"
            },
            {
              "text": " constant is an instance of the ",
              "type": "text"
            },
            {
              "code": "Substring",
              "type": "codeVoice"
            },
            {
              "text": " type—a type",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that represents substrings of a string while sharing the original string’s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "storage. Substrings present the same interface as strings.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "print(\"\\(name)'s first name has \\(firstName.count) letters.\")",
            "// Prints \"Marie Curie's first name has 5 letters.\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Accessing-a-Strings-Unicode-Representation",
          "level": 1,
          "text": "Accessing a String’s Unicode Representation",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If you need to access the contents of a string as encoded in different",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Unicode encodings, use one of the string’s ",
              "type": "text"
            },
            {
              "code": "unicodeScalars",
              "type": "codeVoice"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "code": "utf16",
              "type": "codeVoice"
            },
            {
              "text": ", or",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "utf8",
              "type": "codeVoice"
            },
            {
              "text": " properties. Each property provides access to a view of the string",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "as a series of code units, each encoded in a different Unicode encoding.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To demonstrate the different views available for every string, the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "following examples use this ",
              "type": "text"
            },
            {
              "code": "String",
              "type": "codeVoice"
            },
            {
              "text": " instance:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let cafe = \"Cafe\\u{301} du 🌍\"",
            "print(cafe)",
            "// Prints \"Café du 🌍\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "cafe",
              "type": "codeVoice"
            },
            {
              "text": " string is a collection of the nine characters that are visible",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "when the string is displayed.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "print(cafe.count)",
            "// Prints \"9\"",
            "print(Array(cafe))",
            "// Prints \"[\"C\", \"a\", \"f\", \"é\", \" \", \"d\", \"u\", \" \", \"🌍\"]\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Unicode-Scalar-View",
          "level": 2,
          "text": "Unicode Scalar View",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A string’s ",
              "type": "text"
            },
            {
              "code": "unicodeScalars",
              "type": "codeVoice"
            },
            {
              "text": " property is a collection of Unicode scalar",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "values, the 21-bit codes that are the basic unit of Unicode. Each scalar",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "value is represented by a ",
              "type": "text"
            },
            {
              "code": "Unicode.Scalar",
              "type": "codeVoice"
            },
            {
              "text": " instance and is equivalent to a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "UTF-32 code unit.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "print(cafe.unicodeScalars.count)",
            "// Prints \"10\"",
            "print(Array(cafe.unicodeScalars))",
            "// Prints \"[\"C\", \"a\", \"f\", \"e\", \"\\u{0301}\", \" \", \"d\", \"u\", \" \", \"\\u{0001F30D}\"]\"",
            "print(cafe.unicodeScalars.map { $0.value })",
            "// Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 127757]\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "unicodeScalars",
              "type": "codeVoice"
            },
            {
              "text": " view’s elements comprise each Unicode scalar value in",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the ",
              "type": "text"
            },
            {
              "code": "cafe",
              "type": "codeVoice"
            },
            {
              "text": " string. In particular, because ",
              "type": "text"
            },
            {
              "code": "cafe",
              "type": "codeVoice"
            },
            {
              "text": " was declared using the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "decomposed form of the ",
              "type": "text"
            },
            {
              "code": "\"é\"",
              "type": "codeVoice"
            },
            {
              "text": " character, ",
              "type": "text"
            },
            {
              "code": "unicodeScalars",
              "type": "codeVoice"
            },
            {
              "text": " contains the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scalar values for both the letter ",
              "type": "text"
            },
            {
              "code": "\"e\"",
              "type": "codeVoice"
            },
            {
              "text": " (101) and the accent character",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "\"´\"",
              "type": "codeVoice"
            },
            {
              "text": " (769).",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "UTF-16-View",
          "level": 2,
          "text": "UTF-16 View",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A string’s ",
              "type": "text"
            },
            {
              "code": "utf16",
              "type": "codeVoice"
            },
            {
              "text": " property is a collection of UTF-16 code units, the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "16-bit encoding form of the string’s Unicode scalar values. Each code unit",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is stored as a ",
              "type": "text"
            },
            {
              "code": "UInt16",
              "type": "codeVoice"
            },
            {
              "text": " instance.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "print(cafe.utf16.count)",
            "// Prints \"11\"",
            "print(Array(cafe.utf16))",
            "// Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 55356, 57101]\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The elements of the ",
              "type": "text"
            },
            {
              "code": "utf16",
              "type": "codeVoice"
            },
            {
              "text": " view are the code units for the string when",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "encoded in UTF-16. These elements match those accessed through indexed",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "NSString",
              "type": "codeVoice"
            },
            {
              "text": " APIs.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let nscafe = cafe as NSString",
            "print(nscafe.length)",
            "// Prints \"11\"",
            "print(nscafe.character(at: 3))",
            "// Prints \"101\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "UTF-8-View",
          "level": 2,
          "text": "UTF-8 View",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A string’s ",
              "type": "text"
            },
            {
              "code": "utf8",
              "type": "codeVoice"
            },
            {
              "text": " property is a collection of UTF-8 code units, the 8-bit",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "encoding form of the string’s Unicode scalar values. Each code unit is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "stored as a ",
              "type": "text"
            },
            {
              "code": "UInt8",
              "type": "codeVoice"
            },
            {
              "text": " instance.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "print(cafe.utf8.count)",
            "// Prints \"14\"",
            "print(Array(cafe.utf8))",
            "// Prints \"[67, 97, 102, 101, 204, 129, 32, 100, 117, 32, 240, 159, 140, 141]\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The elements of the ",
              "type": "text"
            },
            {
              "code": "utf8",
              "type": "codeVoice"
            },
            {
              "text": " view are the code units for the string when",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "encoded in UTF-8. This representation matches the one used when ",
              "type": "text"
            },
            {
              "code": "String",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instances are passed to C APIs.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let cLength = strlen(cafe)",
            "print(cLength)",
            "// Prints \"14\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Measuring-the-Length-of-a-String",
          "level": 1,
          "text": "Measuring the Length of a String",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When you need to know the length of a string, you must first consider what",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you’ll use the length for. Are you measuring the number of characters that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "will be displayed on the screen, or are you measuring the amount of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "storage needed for the string in a particular encoding? A single string",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "can have greatly differing lengths when measured by its different views.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example, an ASCII character like the capital letter ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "A",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " is represented",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "by a single element in each of its four views. The Unicode scalar value of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "A",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " is ",
              "type": "text"
            },
            {
              "code": "65",
              "type": "codeVoice"
            },
            {
              "text": ", which is small enough to fit in a single code unit in both",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "UTF-16 and UTF-8.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let capitalA = \"A\"",
            "print(capitalA.count)",
            "// Prints \"1\"",
            "print(capitalA.unicodeScalars.count)",
            "// Prints \"1\"",
            "print(capitalA.utf16.count)",
            "// Prints \"1\"",
            "print(capitalA.utf8.count)",
            "// Prints \"1\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "On the other hand, an emoji flag character is constructed from a pair of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Unicode scalar values, like ",
              "type": "text"
            },
            {
              "code": "\"\\u{1F1F5}\"",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "\"\\u{1F1F7}\"",
              "type": "codeVoice"
            },
            {
              "text": ". Each of these",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "code unit. As a result, each view of the string ",
              "type": "text"
            },
            {
              "code": "\"🇵🇷\"",
              "type": "codeVoice"
            },
            {
              "text": " reports a different",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "length.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let flag = \"🇵🇷\"",
            "print(flag.count)",
            "// Prints \"1\"",
            "print(flag.unicodeScalars.count)",
            "// Prints \"2\"",
            "print(flag.utf16.count)",
            "// Prints \"4\"",
            "print(flag.utf8.count)",
            "// Prints \"8\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "To check whether a string is empty, use its ",
              "type": "text"
            },
            {
              "code": "isEmpty",
              "type": "codeVoice"
            },
            {
              "text": " property instead of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "comparing the length of one of the views to ",
              "type": "text"
            },
            {
              "code": "0",
              "type": "codeVoice"
            },
            {
              "text": ". Unlike with ",
              "type": "text"
            },
            {
              "code": "isEmpty",
              "type": "codeVoice"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "calculating a view’s ",
              "type": "text"
            },
            {
              "code": "count",
              "type": "codeVoice"
            },
            {
              "text": " property requires iterating through the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "elements of the string.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Accessing-String-View-Elements",
          "level": 1,
          "text": "Accessing String View Elements",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To find individual elements of a string, use the appropriate view for your",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "task. For example, to retrieve the first word of a longer string, you can",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "search the string for a space and then create a new string from a prefix",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of the string up to that point.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let name = \"Marie Curie\"",
            "let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex",
            "let firstName = name[..<firstSpace]",
            "print(firstName)",
            "// Prints \"Marie\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Strings and their views share indices, so you can access the UTF-8 view of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the ",
              "type": "text"
            },
            {
              "code": "name",
              "type": "codeVoice"
            },
            {
              "text": " string using the same ",
              "type": "text"
            },
            {
              "code": "firstSpace",
              "type": "codeVoice"
            },
            {
              "text": " index.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "print(Array(name.utf8[..<firstSpace]))",
            "// Prints \"[77, 97, 114, 105, 101]\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Note that an index into one view may not have an exact corresponding",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "position in another view. For example, the ",
              "type": "text"
            },
            {
              "code": "flag",
              "type": "codeVoice"
            },
            {
              "text": " string declared above",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "comprises a single character, but is composed of eight code units when",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "encoded as UTF-8. The following code creates constants for the first and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "second positions in the ",
              "type": "text"
            },
            {
              "code": "flag.utf8",
              "type": "codeVoice"
            },
            {
              "text": " view. Accessing the ",
              "type": "text"
            },
            {
              "code": "utf8",
              "type": "codeVoice"
            },
            {
              "text": " view with",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "these indices yields the first and second code UTF-8 units.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let firstCodeUnit = flag.startIndex",
            "let secondCodeUnit = flag.utf8.index(after: firstCodeUnit)",
            "// flag.utf8[firstCodeUnit] == 240",
            "// flag.utf8[secondCodeUnit] == 159"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "When used to access the elements of the ",
              "type": "text"
            },
            {
              "code": "flag",
              "type": "codeVoice"
            },
            {
              "text": " string itself, however, the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "secondCodeUnit",
              "type": "codeVoice"
            },
            {
              "text": " index does not correspond to the position of a specific",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "character. Instead of only accessing the specific UTF-8 code unit, that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "index is treated as the position of the character at the index’s encoded",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "offset. In the case of ",
              "type": "text"
            },
            {
              "code": "secondCodeUnit",
              "type": "codeVoice"
            },
            {
              "text": ", that character is still the flag",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "itself.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "// flag[firstCodeUnit] == \"🇵🇷\"",
            "// flag[secondCodeUnit] == \"🇵🇷\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "If you need to validate that an index from one string’s view corresponds",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "with an exact position in another view, use the index’s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "samePosition(in:)",
              "type": "codeVoice"
            },
            {
              "text": " method or the ",
              "type": "text"
            },
            {
              "code": "init(_:within:)",
              "type": "codeVoice"
            },
            {
              "text": " initializer.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "if let exactIndex = secondCodeUnit.samePosition(in: flag) {",
            "    print(flag[exactIndex])",
            "} else {",
            "    print(\"No exact match for this position.\")",
            "}",
            "// Prints \"No exact match for this position.\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Performance-Optimizations",
          "level": 1,
          "text": "Performance Optimizations",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Although strings in Swift have value semantics, strings use a copy-on-write",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "strategy to store their data in a buffer. This buffer can then be shared",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "by different copies of a string. A string’s data is only copied lazily,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "upon mutation, when more than one string instance is using the same",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "buffer. Therefore, the first in any sequence of mutating operations may",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "cost O(",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "n",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": ") time and space.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When a string’s contiguous storage fills up, a new buffer must be allocated",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and data must be moved to the new storage. String buffers use an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "exponential growth strategy that makes appending to a string a constant",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "time operation when averaged over many append operations.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Bridging-Between-String-and-NSString",
          "level": 1,
          "text": "Bridging Between String and NSString",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Any ",
              "type": "text"
            },
            {
              "code": "String",
              "type": "codeVoice"
            },
            {
              "text": " instance can be bridged to ",
              "type": "text"
            },
            {
              "code": "NSString",
              "type": "codeVoice"
            },
            {
              "text": " using the type-cast",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "operator (",
              "type": "text"
            },
            {
              "code": "as",
              "type": "codeVoice"
            },
            {
              "text": "), and any ",
              "type": "text"
            },
            {
              "code": "String",
              "type": "codeVoice"
            },
            {
              "text": " instance that originates in Objective-C",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "may use an ",
              "type": "text"
            },
            {
              "code": "NSString",
              "type": "codeVoice"
            },
            {
              "text": " instance as its storage. Because any arbitrary",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "subclass of ",
              "type": "text"
            },
            {
              "code": "NSString",
              "type": "codeVoice"
            },
            {
              "text": " can become a ",
              "type": "text"
            },
            {
              "code": "String",
              "type": "codeVoice"
            },
            {
              "text": " instance, there are no",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "guarantees about representation or efficiency when a ",
              "type": "text"
            },
            {
              "code": "String",
              "type": "codeVoice"
            },
            {
              "text": " instance is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "backed by ",
              "type": "text"
            },
            {
              "code": "NSString",
              "type": "codeVoice"
            },
            {
              "text": " storage. Because ",
              "type": "text"
            },
            {
              "code": "NSString",
              "type": "codeVoice"
            },
            {
              "text": " is immutable, it is just",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "as though the storage was shared by a copy. The first in any sequence of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "mutating operations causes elements to be copied into unique, contiguous",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "storage which may cost O(",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "n",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": ") time and space, where ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "n",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " is the length of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the string’s encoded representation (or more, if the underlying ",
              "type": "text"
            },
            {
              "code": "NSString",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "has unusual performance characteristics).",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For more information about the Unicode terms used in this discussion, see",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the ",
              "type": "text"
            },
            {
              "identifier": "http://www.unicode.org/glossary/",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". In particular, this discussion",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "mentions ",
              "type": "text"
            },
            {
              "identifier": "http://www.unicode.org/glossary/#extended_grapheme_cluster",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "identifier": "http://www.unicode.org/glossary/#unicode_scalar_value",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", and ",
              "type": "text"
            },
            {
              "identifier": "http://www.unicode.org/glossary/#canonical_equivalent",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Array": {
      "abstract": [
        {
          "text": "An ordered, random-access collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Array"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Array",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Array"
        }
      ],
      "role": "symbol",
      "title": "Array",
      "type": "topic",
      "url": "/documentation/swift/array"
    },
    "doc://com.apple.Swift/documentation/Swift/BidirectionalCollection": {
      "abstract": [
        {
          "text": "A collection that supports backward as well as forward traversal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BidirectionalCollection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BidirectionalCollection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BidirectionalCollection"
        }
      ],
      "role": "symbol",
      "title": "BidirectionalCollection",
      "type": "topic",
      "url": "/documentation/swift/bidirectionalcollection"
    },
    "doc://com.apple.Swift/documentation/Swift/CVarArg": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements of a C ",
          "type": "text"
        },
        {
          "code": "va_list",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CVarArg",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/swift/cvararg"
    },
    "doc://com.apple.Swift/documentation/Swift/CodingKeyRepresentable": {
      "abstract": [
        {
          "text": "A type that can be converted to and from a coding key.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CodingKeyRepresentable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CodingKeyRepresentable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CodingKeyRepresentable"
        }
      ],
      "role": "symbol",
      "title": "CodingKeyRepresentable",
      "type": "topic",
      "url": "/documentation/swift/codingkeyrepresentable"
    },
    "doc://com.apple.Swift/documentation/Swift/Collection": {
      "abstract": [
        {
          "text": "A sequence whose elements can be traversed multiple times,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "nondestructively, and accessed by an indexed subscript.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Collection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Collection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Collection"
        }
      ],
      "role": "symbol",
      "title": "Collection",
      "type": "topic",
      "url": "/documentation/swift/collection"
    },
    "doc://com.apple.Swift/documentation/Swift/Comparable": {
      "abstract": [
        {
          "text": "A type that can be compared using the relational operators ",
          "type": "text"
        },
        {
          "code": "<",
          "type": "codeVoice"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "code": "<=",
          "type": "codeVoice"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "code": ">=",
          "type": "codeVoice"
        },
        {
          "text": ",",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and ",
          "type": "text"
        },
        {
          "code": ">",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Comparable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Comparable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Comparable"
        }
      ],
      "role": "symbol",
      "title": "Comparable",
      "type": "topic",
      "url": "/documentation/swift/comparable"
    },
    "doc://com.apple.Swift/documentation/Swift/Copyable": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Copyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/swift/copyable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customdebugstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomReflectable": {
      "abstract": [
        {
          "text": "A type that explicitly supplies its own mirror.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "role": "symbol",
      "title": "CustomReflectable",
      "type": "topic",
      "url": "/documentation/swift/customreflectable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/Decodable": {
      "abstract": [
        {
          "text": "A type that can decode itself from an external representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Decodable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Decodable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Decodable"
        }
      ],
      "role": "symbol",
      "title": "Decodable",
      "type": "topic",
      "url": "/documentation/swift/decodable"
    },
    "doc://com.apple.Swift/documentation/Swift/Dictionary": {
      "abstract": [
        {
          "text": "A collection whose elements are key-value pairs.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Dictionary"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Dictionary",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Dictionary"
        }
      ],
      "role": "symbol",
      "title": "Dictionary",
      "type": "topic",
      "url": "/documentation/swift/dictionary"
    },
    "doc://com.apple.Swift/documentation/Swift/Double": {
      "abstract": [
        {
          "text": "A double-precision, floating-point value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Double"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Double",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Double"
        }
      ],
      "role": "symbol",
      "title": "Double",
      "type": "topic",
      "url": "/documentation/swift/double"
    },
    "doc://com.apple.Swift/documentation/Swift/Encodable": {
      "abstract": [
        {
          "text": "A type that can encode itself to an external representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Encodable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Encodable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Encodable"
        }
      ],
      "role": "symbol",
      "title": "Encodable",
      "type": "topic",
      "url": "/documentation/swift/encodable"
    },
    "doc://com.apple.Swift/documentation/Swift/Equatable": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Equatable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/swift/equatable"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByExtendedGraphemeClusterLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with a string literal containing a single",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "extended grapheme cluster.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByExtendedGraphemeClusterLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByExtendedGraphemeClusterLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByExtendedGraphemeClusterLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByExtendedGraphemeClusterLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebyextendedgraphemeclusterliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByStringInterpolation": {
      "abstract": [
        {
          "text": "A type that can be initialized by string interpolation with a string",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "literal that includes expressions.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByStringInterpolation"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByStringInterpolation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByStringInterpolation"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByStringInterpolation",
      "type": "topic",
      "url": "/documentation/swift/expressiblebystringinterpolation"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByStringLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with a string literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByStringLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByStringLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByStringLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByStringLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebystringliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByUnicodeScalarLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with a string literal containing a single",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "Unicode scalar value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByUnicodeScalarLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByUnicodeScalarLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByUnicodeScalarLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByUnicodeScalarLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebyunicodescalarliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/Hashable": {
      "abstract": [
        {
          "text": "A type that can be hashed into a ",
          "type": "text"
        },
        {
          "code": "Hasher",
          "type": "codeVoice"
        },
        {
          "text": " to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Hashable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/swift/hashable"
    },
    "doc://com.apple.Swift/documentation/Swift/Int": {
      "abstract": [
        {
          "text": "A signed integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int"
        }
      ],
      "role": "symbol",
      "title": "Int",
      "type": "topic",
      "url": "/documentation/swift/int"
    },
    "doc://com.apple.Swift/documentation/Swift/LosslessStringConvertible": {
      "abstract": [
        {
          "text": "A type that can be represented as a string in a lossless, unambiguous way.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LosslessStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/LosslessStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LosslessStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "LosslessStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/losslessstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/MirrorPath": {
      "abstract": [
        {
          "text": "A protocol for legitimate arguments to ",
          "type": "text"
        },
        {
          "code": "Mirror",
          "type": "codeVoice"
        },
        {
          "text": "’s ",
          "type": "text"
        },
        {
          "code": "descendant",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "method.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MirrorPath"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MirrorPath",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MirrorPath"
        }
      ],
      "role": "symbol",
      "title": "MirrorPath",
      "type": "topic",
      "url": "/documentation/swift/mirrorpath"
    },
    "doc://com.apple.Swift/documentation/Swift/RangeReplaceableCollection": {
      "abstract": [
        {
          "text": "A collection that supports replacement of an arbitrary subrange of elements",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "with the elements of another collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RangeReplaceableCollection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RangeReplaceableCollection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RangeReplaceableCollection"
        }
      ],
      "role": "symbol",
      "title": "RangeReplaceableCollection",
      "type": "topic",
      "url": "/documentation/swift/rangereplaceablecollection"
    },
    "doc://com.apple.Swift/documentation/Swift/RegexComponent": {
      "abstract": [
        {
          "text": "A type that represents a regular expression.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RegexComponent"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RegexComponent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RegexComponent"
        }
      ],
      "role": "symbol",
      "title": "RegexComponent",
      "type": "topic",
      "url": "/documentation/swift/regexcomponent"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.Swift/documentation/Swift/Sequence": {
      "abstract": [
        {
          "text": "A type that provides sequential, iterated access to its elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sequence"
        }
      ],
      "role": "symbol",
      "title": "Sequence",
      "type": "topic",
      "url": "/documentation/swift/sequence"
    },
    "doc://com.apple.Swift/documentation/Swift/String": {
      "abstract": [
        {
          "text": "A Unicode string value that is a collection of characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "String"
        }
      ],
      "role": "symbol",
      "title": "String",
      "type": "topic",
      "url": "/documentation/swift/string"
    },
    "doc://com.apple.Swift/documentation/Swift/String/!=(_:_:)-1bb05": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether two values are not equal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "!="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/!=(_:_:)-1bb05",
      "kind": "symbol",
      "role": "symbol",
      "title": "!=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/!=(_:_:)-1bb05"
    },
    "doc://com.apple.Swift/documentation/Swift/String/!=(_:_:)-frzf": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "!="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "RHS"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "RHS"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/!=(_:_:)-frzf",
      "kind": "symbol",
      "role": "symbol",
      "title": "!=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/!=(_:_:)-frzf"
    },
    "doc://com.apple.Swift/documentation/Swift/String/+(_:_:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "+"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/+(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "+(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/+(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/+(_:_:)-6h59y": {
      "abstract": [
        {
          "text": "Creates a new collection by concatenating the elements of a sequence and a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "+"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Other"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "Other"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/+(_:_:)-6h59y",
      "kind": "symbol",
      "role": "symbol",
      "title": "+(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/+(_:_:)-6h59y"
    },
    "doc://com.apple.Swift/documentation/Swift/String/+(_:_:)-9fm57": {
      "abstract": [
        {
          "text": "Creates a new collection by concatenating the elements of two collections.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "+"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Other"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Other"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/+(_:_:)-9fm57",
      "kind": "symbol",
      "role": "symbol",
      "title": "+(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/+(_:_:)-9fm57"
    },
    "doc://com.apple.Swift/documentation/Swift/String/+(_:_:)-n329": {
      "abstract": [
        {
          "text": "Creates a new collection by concatenating the elements of a collection and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "a sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "+"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Other"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Other"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/+(_:_:)-n329",
      "kind": "symbol",
      "role": "symbol",
      "title": "+(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/+(_:_:)-n329"
    },
    "doc://com.apple.Swift/documentation/Swift/String/+=(_:_:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "+="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/+=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "+=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/+=(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/+=(_:_:)-676gx": {
      "abstract": [
        {
          "text": "Appends the elements of a sequence to a range-replaceable collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "+="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Other"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Other"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/+=(_:_:)-676gx",
      "kind": "symbol",
      "role": "symbol",
      "title": "+=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/+=(_:_:)-676gx"
    },
    "doc://com.apple.Swift/documentation/Swift/String/...(_:)-4mm4o": {
      "abstract": [
        {
          "text": "Returns a partial range up to, and including, its upper bound.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "..."
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s19PartialRangeThroughV",
          "text": "PartialRangeThrough"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/...(_:)-4mm4o",
      "kind": "symbol",
      "role": "symbol",
      "title": "...(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/'...(_:)-4mm4o"
    },
    "doc://com.apple.Swift/documentation/Swift/String/...(_:)-6ct5g": {
      "abstract": [
        {
          "text": "Returns a partial range extending upward from a lower bound.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "..."
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s16PartialRangeFromV",
          "text": "PartialRangeFrom"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/...(_:)-6ct5g",
      "kind": "symbol",
      "role": "symbol",
      "title": "...(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/'...(_:)-6ct5g"
    },
    "doc://com.apple.Swift/documentation/Swift/String/...(_:_:)": {
      "abstract": [
        {
          "text": "Returns a closed range that contains both of its bounds.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "..."
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SN",
          "text": "ClosedRange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/...(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "...(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/'...(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/==(_:_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether two values are equal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "=="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/==(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "==(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/==(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/==(_:_:)-8kzxf": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "=="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "RHS"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "RHS"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/==(_:_:)-8kzxf",
      "kind": "symbol",
      "role": "symbol",
      "title": "==(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/==(_:_:)-8kzxf"
    },
    "doc://com.apple.Swift/documentation/Swift/String/BidirectionalCollection-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/BidirectionalCollection-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "BidirectionalCollection Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/bidirectionalcollection-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/CharacterView": {
      "abstract": [
        {
          "text": "A view of a string’s contents as a collection of characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CharacterView"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/CharacterView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CharacterView"
        }
      ],
      "role": "symbol",
      "title": "String.CharacterView",
      "type": "topic",
      "url": "/documentation/swift/string/characterview"
    },
    "doc://com.apple.Swift/documentation/Swift/String/CodingKeyRepresentable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/CodingKeyRepresentable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CodingKeyRepresentable Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/codingkeyrepresentable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Collection-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Collection-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Collection Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/collection-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Comparable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Comparable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Comparable Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/comparable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Comparator": {
      "abstract": [
        {
          "text": "A ",
          "type": "text"
        },
        {
          "code": "String",
          "type": "codeVoice"
        },
        {
          "text": " comparison performed using the given comparison options",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and locale.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Comparator"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Comparator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Comparator"
        }
      ],
      "role": "symbol",
      "title": "String.Comparator",
      "type": "topic",
      "url": "/documentation/swift/string/comparator"
    },
    "doc://com.apple.Swift/documentation/Swift/String/CompareOptions": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CompareOptions"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/CompareOptions",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CompareOptions"
        }
      ],
      "role": "symbol",
      "title": "String.CompareOptions",
      "type": "topic",
      "url": "/documentation/swift/string/compareoptions"
    },
    "doc://com.apple.Swift/documentation/Swift/String/CustomDebugStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/CustomDebugStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomDebugStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/customdebugstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/CustomReflectable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/CustomReflectable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomReflectable Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/customreflectable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/CustomStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/CustomStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/customstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/CustomTestStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/CustomTestStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomTestStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/customteststringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/CustomURLRepresentationParameterConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/CustomURLRepresentationParameterConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomURLRepresentationParameterConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/customurlrepresentationparameterconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Decodable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Decodable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Decodable Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/decodable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Encodable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Encodable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Encodable Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/encodable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Encoding": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Encoding"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Encoding",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Encoding"
        }
      ],
      "role": "symbol",
      "title": "String.Encoding",
      "type": "topic",
      "url": "/documentation/swift/string/encoding"
    },
    "doc://com.apple.Swift/documentation/Swift/String/EncodingConversionOptions": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EncodingConversionOptions"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/EncodingConversionOptions",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EncodingConversionOptions"
        }
      ],
      "role": "symbol",
      "title": "String.EncodingConversionOptions",
      "type": "topic",
      "url": "/documentation/swift/string/encodingconversionoptions"
    },
    "doc://com.apple.Swift/documentation/Swift/String/EntityIdentifierConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/EntityIdentifierConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "EntityIdentifierConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/entityidentifierconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/EnumerationOptions": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EnumerationOptions"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/EnumerationOptions",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EnumerationOptions"
        }
      ],
      "role": "symbol",
      "title": "String.EnumerationOptions",
      "type": "topic",
      "url": "/documentation/swift/string/enumerationoptions"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Equatable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Equatable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Equatable Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/equatable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/ExpressibleByExtendedGraphemeClusterLiteral-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/expressiblebyextendedgraphemeclusterliteral-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/ExpressibleByStringInterpolation-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/ExpressibleByStringInterpolation-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByStringInterpolation Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/expressiblebystringinterpolation-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/ExpressibleByStringLiteral-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/ExpressibleByStringLiteral-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByStringLiteral Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/expressiblebystringliteral-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/ExpressibleByUnicodeScalarLiteral-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/ExpressibleByUnicodeScalarLiteral-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByUnicodeScalarLiteral Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/expressiblebyunicodescalarliteral-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Hashable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Hashable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Hashable Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/hashable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Index": {
      "abstract": [
        {
          "text": "A position of a character or code unit in a string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Index"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Index",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Index"
        }
      ],
      "role": "symbol",
      "title": "String.Index",
      "type": "topic",
      "url": "/documentation/swift/string/index"
    },
    "doc://com.apple.Swift/documentation/Swift/String/IndexDistance": {
      "abstract": [
        {
          "text": "A type that represents the number of steps between two ",
          "type": "text"
        },
        {
          "code": "String.Index",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values, where one value is reachable from the other.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "IndexDistance"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/IndexDistance",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IndexDistance"
        }
      ],
      "role": "symbol",
      "title": "String.IndexDistance",
      "type": "topic",
      "url": "/documentation/swift/string/indexdistance"
    },
    "doc://com.apple.Swift/documentation/Swift/String/IntentInputOptions": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "IntentInputOptions"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/IntentInputOptions",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IntentInputOptions"
        }
      ],
      "role": "symbol",
      "title": "String.IntentInputOptions",
      "type": "topic",
      "url": "/documentation/swift/string/intentinputoptions"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Iterator": {
      "abstract": [
        {
          "text": "A type that provides the collection’s iteration interface and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "encapsulates its iteration state.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Iterator"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Iterator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Iterator"
        }
      ],
      "role": "symbol",
      "title": "String.Iterator",
      "type": "topic",
      "url": "/documentation/swift/string/iterator"
    },
    "doc://com.apple.Swift/documentation/Swift/String/LocalizationOptions": {
      "abstract": [
        {
          "text": "Options to apply when initializing a localized string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LocalizationOptions"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/LocalizationOptions",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LocalizationOptions"
        }
      ],
      "role": "symbol",
      "title": "String.LocalizationOptions",
      "type": "topic",
      "url": "/documentation/swift/string/localizationoptions"
    },
    "doc://com.apple.Swift/documentation/Swift/String/LocalizationValue": {
      "abstract": [
        {
          "text": "A reference to a localizable string, with optional string interpolation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LocalizationValue"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/LocalizationValue",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LocalizationValue"
        }
      ],
      "role": "symbol",
      "title": "String.LocalizationValue",
      "type": "topic",
      "url": "/documentation/swift/string/localizationvalue"
    },
    "doc://com.apple.Swift/documentation/Swift/String/LosslessStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/LosslessStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "LosslessStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/losslessstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/MLDataValueConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/MLDataValueConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "MLDataValueConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/mldatavalueconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/MLIdentifier-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/MLIdentifier-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "MLIdentifier Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/mlidentifier-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Output": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Output"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Output",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Output"
        }
      ],
      "role": "symbol",
      "title": "String.Output",
      "type": "topic",
      "url": "/documentation/swift/string/output"
    },
    "doc://com.apple.Swift/documentation/Swift/String/RangeReplaceableCollection-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/RangeReplaceableCollection-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "RangeReplaceableCollection Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/rangereplaceablecollection-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/RegexComponent-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/RegexComponent-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "RegexComponent Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/regexcomponent-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Sequence-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Sequence-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Sequence Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/sequence-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Specification": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Specification"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Specification",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Specification"
        }
      ],
      "role": "symbol",
      "title": "String.Specification",
      "type": "topic",
      "url": "/documentation/swift/string/specification"
    },
    "doc://com.apple.Swift/documentation/Swift/String/StandardComparator": {
      "abstract": [
        {
          "text": "Compares ",
          "type": "text"
        },
        {
          "code": "String",
          "type": "codeVoice"
        },
        {
          "text": "s using one of a fixed set of standard comparison",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "algorithms.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "StandardComparator"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/StandardComparator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StandardComparator"
        }
      ],
      "role": "symbol",
      "title": "String.StandardComparator",
      "type": "topic",
      "url": "/documentation/swift/string/standardcomparator"
    },
    "doc://com.apple.Swift/documentation/Swift/String/StringProtocol-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/StringProtocol-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "StringProtocol Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/stringprotocol-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/TextOutputStream-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/TextOutputStream-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "TextOutputStream Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/textoutputstream-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/TextOutputStreamable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/TextOutputStreamable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "TextOutputStreamable Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/textoutputstreamable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/Transferable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/Transferable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Transferable Implementations",
      "type": "topic",
      "url": "/documentation/swift/string/transferable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UTF16View": {
      "abstract": [
        {
          "text": "A view of a string’s contents as a collection of UTF-16 code units.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UTF16View"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UTF16View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UTF16View"
        }
      ],
      "role": "symbol",
      "title": "String.UTF16View",
      "type": "topic",
      "url": "/documentation/swift/string/utf16view"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UTF8View": {
      "abstract": [
        {
          "text": "A view of a string’s contents as a collection of UTF-8 code units.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UTF8View"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UTF8View",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UTF8View"
        }
      ],
      "role": "symbol",
      "title": "String.UTF8View",
      "type": "topic",
      "url": "/documentation/swift/string/utf8view"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarIndex": {
      "abstract": [
        {
          "text": "The index type for a string’s ",
          "type": "text"
        },
        {
          "code": "unicodeScalars",
          "type": "codeVoice"
        },
        {
          "text": " view.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnicodeScalarIndex"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarIndex",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnicodeScalarIndex"
        }
      ],
      "role": "symbol",
      "title": "String.UnicodeScalarIndex",
      "type": "topic",
      "url": "/documentation/swift/string/unicodescalarindex"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView": {
      "abstract": [
        {
          "text": "A view of a string’s contents as a collection of Unicode scalar values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnicodeScalarView"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnicodeScalarView"
        }
      ],
      "role": "symbol",
      "title": "String.UnicodeScalarView",
      "type": "topic",
      "url": "/documentation/swift/string/unicodescalarview"
    },
    "doc://com.apple.Swift/documentation/Swift/String/UnwrappedType": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnwrappedType"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/UnwrappedType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnwrappedType"
        }
      ],
      "role": "symbol",
      "title": "String.UnwrappedType",
      "type": "topic",
      "url": "/documentation/swift/string/unwrappedtype"
    },
    "doc://com.apple.Swift/documentation/Swift/String/ValueType": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ValueType"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/ValueType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ValueType"
        }
      ],
      "role": "symbol",
      "title": "String.ValueType",
      "type": "topic",
      "url": "/documentation/swift/string/valuetype"
    },
    "doc://com.apple.Swift/documentation/Swift/String/allSatisfy(_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether every element of a sequence",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "satisfies a given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "allSatisfy"
        },
        {
          "kind": "text",
          "text": "(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/allSatisfy(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "allSatisfy(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/allsatisfy(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/append(_:)-4xa8f": {
      "abstract": [
        {
          "text": "Appends the given string to this string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "append"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/append(_:)-4xa8f",
      "kind": "symbol",
      "role": "symbol",
      "title": "append(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/append(_:)-4xa8f"
    },
    "doc://com.apple.Swift/documentation/Swift/String/append(_:)-4xi3j": {
      "abstract": [
        {
          "text": "Appends the given character to the string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "append"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SJ",
          "text": "Character"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/append(_:)-4xi3j",
      "kind": "symbol",
      "role": "symbol",
      "title": "append(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/append(_:)-4xi3j"
    },
    "doc://com.apple.Swift/documentation/Swift/String/append(contentsOf:)-7est5": {
      "abstract": [
        {
          "text": "Appends the characters in the given sequence to the string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "append"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "contentsOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/append(contentsOf:)-7est5",
      "kind": "symbol",
      "role": "symbol",
      "title": "append(contentsOf:)",
      "type": "topic",
      "url": "/documentation/swift/string/append(contentsof:)-7est5"
    },
    "doc://com.apple.Swift/documentation/Swift/String/append(contentsOf:)-9foms": {
      "abstract": [
        {
          "text": "Adds the elements of a sequence or collection to the end of this",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "append"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "contentsOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/append(contentsOf:)-9foms",
      "kind": "symbol",
      "role": "symbol",
      "title": "append(contentsOf:)",
      "type": "topic",
      "url": "/documentation/swift/string/append(contentsof:)-9foms"
    },
    "doc://com.apple.Swift/documentation/Swift/String/append(contentsOf:)-9vb4t": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "append"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "contentsOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Ss",
          "text": "Substring"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/append(contentsOf:)-9vb4t",
      "kind": "symbol",
      "role": "symbol",
      "title": "append(contentsOf:)",
      "type": "topic",
      "url": "/documentation/swift/string/append(contentsof:)-9vb4t"
    },
    "doc://com.apple.Swift/documentation/Swift/String/append(contentsOf:)-oxek": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "append"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "contentsOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/append(contentsOf:)-oxek",
      "kind": "symbol",
      "role": "symbol",
      "title": "append(contentsOf:)",
      "type": "topic",
      "url": "/documentation/swift/string/append(contentsof:)-oxek"
    },
    "doc://com.apple.Swift/documentation/Swift/String/applying(_:)": {
      "abstract": [
        {
          "text": "Applies the given difference to this collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "applying"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s20CollectionDifferenceV",
          "text": "CollectionDifference"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/applying(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "applying(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/applying(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/availableStringEncodings": {
      "abstract": [
        {
          "text": "An array of the encodings that strings support in the application’s",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "environment.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "availableStringEncodings"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE8EncodingV",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/availableStringEncodings",
      "kind": "symbol",
      "role": "symbol",
      "title": "availableStringEncodings",
      "type": "topic",
      "url": "/documentation/swift/string/availablestringencodings"
    },
    "doc://com.apple.Swift/documentation/Swift/String/characters": {
      "abstract": [
        {
          "text": "A view of the string’s contents as a collection of characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "characters"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/characters",
      "kind": "symbol",
      "role": "symbol",
      "title": "characters",
      "type": "topic",
      "url": "/documentation/swift/string/characters"
    },
    "doc://com.apple.Swift/documentation/Swift/String/compactMap(_:)": {
      "abstract": [
        {
          "text": "Returns an array containing the non-",
          "type": "text"
        },
        {
          "code": "nil",
          "type": "codeVoice"
        },
        {
          "text": " results of calling the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "transformation with each element of this sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "compactMap"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": "?) "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/compactMap(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "compactMap(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/compactmap(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/contains(_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the sequence contains the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given element.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Equatable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "contains"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/contains(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "contains(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/contains(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/contains(where:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the sequence contains an",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "element that satisfies the given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "contains"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "where"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/contains(where:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "contains(where:)",
      "type": "topic",
      "url": "/documentation/swift/string/contains(where:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/count": {
      "abstract": [
        {
          "text": "The number of characters in a string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "count"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/count",
      "kind": "symbol",
      "role": "symbol",
      "title": "count",
      "type": "topic",
      "url": "/documentation/swift/string/count"
    },
    "doc://com.apple.Swift/documentation/Swift/String/customMirror": {
      "abstract": [
        {
          "text": "A mirror that reflects the ",
          "type": "text"
        },
        {
          "code": "String",
          "type": "codeVoice"
        },
        {
          "text": " instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "customMirror"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6MirrorV",
          "text": "Mirror"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/customMirror",
      "kind": "symbol",
      "role": "symbol",
      "title": "customMirror",
      "type": "topic",
      "url": "/documentation/swift/string/custommirror"
    },
    "doc://com.apple.Swift/documentation/Swift/String/customPlaygroundQuickLook": {
      "abstract": [
        {
          "text": "A custom playground Quick Look for the ",
          "type": "text"
        },
        {
          "code": "String",
          "type": "codeVoice"
        },
        {
          "text": " instance.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "customPlaygroundQuickLook"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "_PlaygroundQuickLook"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/customPlaygroundQuickLook",
      "kind": "symbol",
      "role": "symbol",
      "title": "customPlaygroundQuickLook",
      "type": "topic",
      "url": "/documentation/swift/string/customplaygroundquicklook"
    },
    "doc://com.apple.Swift/documentation/Swift/String/data(using:allowLossyConversion:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "data"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "using"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE8EncodingV",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "allowLossyConversion"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DataV",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/data(using:allowLossyConversion:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "data(using:allowLossyConversion:)",
      "type": "topic",
      "url": "/documentation/swift/string/data(using:allowlossyconversion:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/dataValue": {
      "abstract": [
        {
          "text": "The value of the conforming type’s instance wrapped in a data value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dataValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:8CreateML11MLDataValueO",
          "text": "MLDataValue"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/dataValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "dataValue",
      "type": "topic",
      "url": "/documentation/swift/string/datavalue"
    },
    "doc://com.apple.Swift/documentation/Swift/String/dataValueType": {
      "abstract": [
        {
          "text": "The underlying type the conforming type uses when it wraps itself in a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "data value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dataValueType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:8CreateML11MLDataValueO",
          "text": "MLDataValue"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:8CreateML11MLDataValueO0D4TypeO",
          "text": "ValueType"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/dataValueType",
      "kind": "symbol",
      "role": "symbol",
      "title": "dataValueType",
      "type": "topic",
      "url": "/documentation/swift/string/datavaluetype"
    },
    "doc://com.apple.Swift/documentation/Swift/String/debugDescription": {
      "abstract": [
        {
          "text": "A representation of the string that is suitable for debugging.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "debugDescription"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/debugDescription",
      "kind": "symbol",
      "role": "symbol",
      "title": "debugDescription",
      "type": "topic",
      "url": "/documentation/swift/string/debugdescription"
    },
    "doc://com.apple.Swift/documentation/Swift/String/decodeCString(_:as:repairingInvalidCodeUnits:)-2l7u6": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "decodeCString"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s16_UnicodeEncodingP8CodeUnitQa",
          "text": "CodeUnit"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "as"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "repairingInvalidCodeUnits"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> (result"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", repairsMade"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/decodeCString(_:as:repairingInvalidCodeUnits:)-2l7u6",
      "kind": "symbol",
      "role": "symbol",
      "title": "decodeCString(_:as:repairingInvalidCodeUnits:)",
      "type": "topic",
      "url": "/documentation/swift/string/decodecstring(_:as:repairinginvalidcodeunits:)-2l7u6"
    },
    "doc://com.apple.Swift/documentation/Swift/String/decodeCString(_:as:repairingInvalidCodeUnits:)-3mvvy": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "decodeCString"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ">(["
        },
        {
          "kind": "typeIdentifier",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s16_UnicodeEncodingP8CodeUnitQa",
          "text": "CodeUnit"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "as"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "repairingInvalidCodeUnits"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> (result"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", repairsMade"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/decodeCString(_:as:repairingInvalidCodeUnits:)-3mvvy",
      "kind": "symbol",
      "role": "symbol",
      "title": "decodeCString(_:as:repairingInvalidCodeUnits:)",
      "type": "topic",
      "url": "/documentation/swift/string/decodecstring(_:as:repairinginvalidcodeunits:)-3mvvy"
    },
    "doc://com.apple.Swift/documentation/Swift/String/decodeCString(_:as:repairingInvalidCodeUnits:)-46n2p": {
      "abstract": [
        {
          "text": "Creates a new string by copying the null-terminated data referenced by",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the given pointer using the specified encoding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "decodeCString"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s16_UnicodeEncodingP8CodeUnitQa",
          "text": "CodeUnit"
        },
        {
          "kind": "text",
          "text": ">?, "
        },
        {
          "kind": "externalParam",
          "text": "as"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "repairingInvalidCodeUnits"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> (result"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", repairsMade"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/decodeCString(_:as:repairingInvalidCodeUnits:)-46n2p",
      "kind": "symbol",
      "role": "symbol",
      "title": "decodeCString(_:as:repairingInvalidCodeUnits:)",
      "type": "topic",
      "url": "/documentation/swift/string/decodecstring(_:as:repairinginvalidcodeunits:)-46n2p"
    },
    "doc://com.apple.Swift/documentation/Swift/String/decodeCString(_:as:repairingInvalidCodeUnits:)-9pdmv": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "decodeCString"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "as"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "externalParam",
          "text": "repairingInvalidCodeUnits"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> (result"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", repairsMade"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/decodeCString(_:as:repairingInvalidCodeUnits:)-9pdmv",
      "kind": "symbol",
      "role": "symbol",
      "title": "decodeCString(_:as:repairingInvalidCodeUnits:)",
      "type": "topic",
      "url": "/documentation/swift/string/decodecstring(_:as:repairinginvalidcodeunits:)-9pdmv"
    },
    "doc://com.apple.Swift/documentation/Swift/String/defaultCStringEncoding": {
      "abstract": [
        {
          "text": "The C-string encoding assumed for any method accepting a C string as an",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "argument.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "defaultCStringEncoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE8EncodingV",
          "text": "Encoding"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/defaultCStringEncoding",
      "kind": "symbol",
      "role": "symbol",
      "title": "defaultCStringEncoding",
      "type": "topic",
      "url": "/documentation/swift/string/defaultcstringencoding"
    },
    "doc://com.apple.Swift/documentation/Swift/String/defaultResolverSpecification": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "defaultResolverSpecification"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10AppIntents21ResolverSpecificationP",
          "text": "ResolverSpecification"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/defaultResolverSpecification",
      "kind": "symbol",
      "role": "symbol",
      "title": "defaultResolverSpecification",
      "type": "topic",
      "url": "/documentation/swift/string/defaultresolverspecification"
    },
    "doc://com.apple.Swift/documentation/Swift/String/description": {
      "abstract": [
        {
          "text": "The value of this string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "description"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/description",
      "kind": "symbol",
      "role": "symbol",
      "title": "description",
      "type": "topic",
      "url": "/documentation/swift/string/description"
    },
    "doc://com.apple.Swift/documentation/Swift/String/difference(from:)": {
      "abstract": [
        {
          "text": "Returns the difference needed to produce this collection’s ordered",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements from the given collection.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Equatable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "difference"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s20CollectionDifferenceV",
          "text": "CollectionDifference"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/difference(from:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "difference(from:)",
      "type": "topic",
      "url": "/documentation/swift/string/difference(from:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/difference(from:by:)": {
      "abstract": [
        {
          "text": "Returns the difference needed to produce this collection’s ordered",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements from the given collection, using the given predicate as an",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "equivalence test.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "difference"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s20CollectionDifferenceV",
          "text": "CollectionDifference"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/difference(from:by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "difference(from:by:)",
      "type": "topic",
      "url": "/documentation/swift/string/difference(from:by:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/distance(from:to:)": {
      "abstract": [
        {
          "text": "Returns the distance between two indices.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "distance"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/distance(from:to:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "distance(from:to:)",
      "type": "topic",
      "url": "/documentation/swift/string/distance(from:to:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/drop(while:)": {
      "abstract": [
        {
          "text": "Returns a subsequence by skipping elements while ",
          "type": "text"
        },
        {
          "code": "predicate",
          "type": "codeVoice"
        },
        {
          "text": " returns",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": " and returning the remaining elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "drop"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "while"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl11SubSequenceQa",
          "text": "SubSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/drop(while:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "drop(while:)",
      "type": "topic",
      "url": "/documentation/swift/string/drop(while:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/dropFirst(_:)": {
      "abstract": [
        {
          "text": "Returns a subsequence containing all but the given number of initial",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dropFirst"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl11SubSequenceQa",
          "text": "SubSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/dropFirst(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "dropFirst(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/dropfirst(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/dropLast(_:)": {
      "abstract": [
        {
          "text": "Returns a subsequence containing all but the specified number of final",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dropLast"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl11SubSequenceQa",
          "text": "SubSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/dropLast(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "dropLast(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/droplast(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/elementsEqual(_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether this sequence and another",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence contain the same elements in the same order.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Equatable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "elementsEqual"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/elementsEqual(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "elementsEqual(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/elementsequal(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/elementsEqual(_:by:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether this sequence and another",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence contain equivalent elements in the same order, using the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "predicate as the equivalence test.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "elementsEqual"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/elementsEqual(_:by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "elementsEqual(_:by:)",
      "type": "topic",
      "url": "/documentation/swift/string/elementsequal(_:by:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/encode(to:)": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/encode(to:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/string/encode(to:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/endIndex": {
      "abstract": [
        {
          "text": "A string’s “past the end” position—that is, the position one greater",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "than the last valid subscript argument.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "endIndex"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/endIndex",
      "kind": "symbol",
      "role": "symbol",
      "title": "endIndex",
      "type": "topic",
      "url": "/documentation/swift/string/endindex"
    },
    "doc://com.apple.Swift/documentation/Swift/String/enumerated()": {
      "abstract": [
        {
          "text": "Returns a sequence of pairs (",
          "type": "text"
        },
        {
          "inlineContent": [
            {
              "text": "n",
              "type": "text"
            }
          ],
          "type": "emphasis"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "inlineContent": [
            {
              "text": "x",
              "type": "text"
            }
          ],
          "type": "emphasis"
        },
        {
          "text": "), where ",
          "type": "text"
        },
        {
          "inlineContent": [
            {
              "text": "n",
              "type": "text"
            }
          ],
          "type": "emphasis"
        },
        {
          "text": " represents a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "consecutive integer starting at zero and ",
          "type": "text"
        },
        {
          "inlineContent": [
            {
              "text": "x",
              "type": "text"
            }
          ],
          "type": "emphasis"
        },
        {
          "text": " represents an element of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "enumerated"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s18EnumeratedSequenceV",
          "text": "EnumeratedSequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/enumerated()",
      "kind": "symbol",
      "role": "symbol",
      "title": "enumerated()",
      "type": "topic",
      "url": "/documentation/swift/string/enumerated()"
    },
    "doc://com.apple.Swift/documentation/Swift/String/filter(_:)": {
      "abstract": [
        {
          "text": "Returns a new collection of the same type containing, in order, the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements of the original collection that satisfy the given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "filter"
        },
        {
          "kind": "text",
          "text": "(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/filter(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "filter(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/filter(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/first": {
      "abstract": [
        {
          "text": "The first element of the collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "first"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/first",
      "kind": "symbol",
      "role": "symbol",
      "title": "first",
      "type": "topic",
      "url": "/documentation/swift/string/first"
    },
    "doc://com.apple.Swift/documentation/Swift/String/first(where:)": {
      "abstract": [
        {
          "text": "Returns the first element of the sequence that satisfies the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "first"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "where"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/first(where:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "first(where:)",
      "type": "topic",
      "url": "/documentation/swift/string/first(where:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/firstIndex(of:)": {
      "abstract": [
        {
          "text": "Returns the first index where the specified value appears in the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "collection.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Equatable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "firstIndex"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/firstIndex(of:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "firstIndex(of:)",
      "type": "topic",
      "url": "/documentation/swift/string/firstindex(of:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/firstIndex(where:)": {
      "abstract": [
        {
          "text": "Returns the first index in which an element of the collection satisfies",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "firstIndex"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "where"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/firstIndex(where:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "firstIndex(where:)",
      "type": "topic",
      "url": "/documentation/swift/string/firstindex(where:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/flatMap(_:)-6chuq": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "flatMap"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": "?) "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "ElementOfResult"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/flatMap(_:)-6chuq",
      "kind": "symbol",
      "role": "symbol",
      "title": "flatMap(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/flatmap(_:)-6chuq"
    },
    "doc://com.apple.Swift/documentation/Swift/String/flatMap(_:)-i3m9": {
      "abstract": [
        {
          "text": "Returns an array containing the concatenated results of calling the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given transformation with each element of this sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "flatMap"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "SegmentOfResult"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "SegmentOfResult"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "SegmentOfResult"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/flatMap(_:)-i3m9",
      "kind": "symbol",
      "role": "symbol",
      "title": "flatMap(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/flatmap(_:)-i3m9"
    },
    "doc://com.apple.Swift/documentation/Swift/String/forEach(_:)": {
      "abstract": [
        {
          "text": "Calls the given closure on each element in the sequence in the same order",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "as a ",
          "type": "text"
        },
        {
          "code": "for",
          "type": "codeVoice"
        },
        {
          "text": "-",
          "type": "text"
        },
        {
          "code": "in",
          "type": "codeVoice"
        },
        {
          "text": " loop.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "forEach"
        },
        {
          "kind": "text",
          "text": "(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/forEach(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "forEach(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/foreach(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/formIndex(_:offsetBy:)": {
      "abstract": [
        {
          "text": "Offsets the given index by the specified distance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "formIndex"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "offsetBy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/formIndex(_:offsetBy:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "formIndex(_:offsetBy:)",
      "type": "topic",
      "url": "/documentation/swift/string/formindex(_:offsetby:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/formIndex(_:offsetBy:limitedBy:)": {
      "abstract": [
        {
          "text": "Offsets the given index by the specified distance, or so that it equals",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the given limiting index.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "formIndex"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "offsetBy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "limitedBy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/formIndex(_:offsetBy:limitedBy:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "formIndex(_:offsetBy:limitedBy:)",
      "type": "topic",
      "url": "/documentation/swift/string/formindex(_:offsetby:limitedby:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/formIndex(after:)": {
      "abstract": [
        {
          "text": "Replaces the given index with its successor.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "formIndex"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "after"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/formIndex(after:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "formIndex(after:)",
      "type": "topic",
      "url": "/documentation/swift/string/formindex(after:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/formIndex(before:)": {
      "abstract": [
        {
          "text": "Replaces the given index with its predecessor.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "formIndex"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "before"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/formIndex(before:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "formIndex(before:)",
      "type": "topic",
      "url": "/documentation/swift/string/formindex(before:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/hasPrefix(_:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hasPrefix"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/hasPrefix(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "hasPrefix(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/hasprefix(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/hasSuffix(_:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hasSuffix"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/hasSuffix(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "hasSuffix(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/hassuffix(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/hash(into:)": {
      "abstract": [
        {
          "text": "Hashes the essential components of this value by feeding them into the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given hasher.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hash"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "into"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6HasherV",
          "text": "Hasher"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/hash(into:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "hash(into:)",
      "type": "topic",
      "url": "/documentation/swift/string/hash(into:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/hashValue": {
      "abstract": [
        {
          "text": "The hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hashValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/hashValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "hashValue",
      "type": "topic",
      "url": "/documentation/swift/string/hashvalue"
    },
    "doc://com.apple.Swift/documentation/Swift/String/identifierValue": {
      "abstract": [
        {
          "text": "The value of the unique identifier wrapped in a data value.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "identifierValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:8CreateML11MLDataValueO",
          "text": "MLDataValue"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/identifierValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "identifierValue",
      "type": "topic",
      "url": "/documentation/swift/string/identifiervalue"
    },
    "doc://com.apple.Swift/documentation/Swift/String/index(_:offsetBy:)": {
      "abstract": [
        {
          "text": "Returns an index that is the specified distance from the given index.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "index"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "offsetBy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/index(_:offsetBy:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "index(_:offsetBy:)",
      "type": "topic",
      "url": "/documentation/swift/string/index(_:offsetby:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/index(_:offsetBy:limitedBy:)": {
      "abstract": [
        {
          "text": "Returns an index that is the specified distance from the given index,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "unless that distance is beyond a given limiting index.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "index"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "offsetBy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "limitedBy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/index(_:offsetBy:limitedBy:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "index(_:offsetBy:limitedBy:)",
      "type": "topic",
      "url": "/documentation/swift/string/index(_:offsetby:limitedby:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/index(after:)": {
      "abstract": [
        {
          "text": "Returns the position immediately after the given index.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "index"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "after"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/index(after:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "index(after:)",
      "type": "topic",
      "url": "/documentation/swift/string/index(after:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/index(before:)": {
      "abstract": [
        {
          "text": "Returns the position immediately before the given index.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "index"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "before"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/index(before:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "index(before:)",
      "type": "topic",
      "url": "/documentation/swift/string/index(before:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/index(of:)": {
      "abstract": [
        {
          "text": "Returns the first index where the specified value appears in the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "collection.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Equatable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "index"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/index(of:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "index(of:)",
      "type": "topic",
      "url": "/documentation/swift/string/index(of:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/indices-swift.property": {
      "abstract": [
        {
          "text": "The indices that are valid for subscripting the collection, in ascending",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "order.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Indices",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "DefaultIndices<Self>",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "indices"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SI",
          "text": "DefaultIndices"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/indices-swift.property",
      "kind": "symbol",
      "role": "symbol",
      "title": "indices",
      "type": "topic",
      "url": "/documentation/swift/string/indices-swift.property"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init()": {
      "abstract": [
        {
          "text": "Creates an empty string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init()",
      "kind": "symbol",
      "role": "symbol",
      "title": "init()",
      "type": "topic",
      "url": "/documentation/swift/string/init()"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-11jx3": {
      "abstract": [
        {
          "text": "Creates a String having the given content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Ss",
          "text": "Substring"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Ss17UnicodeScalarViewV",
          "text": "UnicodeScalarView"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-11jx3",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-11jx3"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-14lv5": {
      "abstract": [
        {
          "text": "Creates a new string from the given substring.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Ss",
          "text": "Substring"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-14lv5",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-14lv5"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-1ip93": {
      "abstract": [
        {
          "text": "Creates a new instance of a collection containing the elements of a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-1ip93",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-1ip93"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-1ywfq": {
      "abstract": [
        {
          "text": "Creates an instance from the description of a given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "LosslessStringConvertible",
          "type": "codeVoice"
        },
        {
          "text": " instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-1ywfq",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-1ywfq"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-2t931": {
      "abstract": [
        {
          "text": "Creates a string corresponding to the given collection of Unicode",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "scalars.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS17UnicodeScalarViewV",
          "text": "UnicodeScalarView"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-2t931",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-2t931"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-3a5mh": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8FilePathV",
          "text": "FilePath"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-3a5mh",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-3a5mh"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-50pwi": {
      "abstract": [
        {
          "text": "Creates a new string containing the characters in the given sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-50pwi",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-50pwi"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-5a5lw": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSString",
          "text": "NSString"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-5a5lw",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-5a5lw"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-5ruqx": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5SliceV",
          "text": "Slice"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation16AttributedStringV",
          "text": "AttributedString"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation16AttributedStringV13CharacterViewV",
          "text": "CharacterView"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-5ruqx",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-5ruqx"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-6sprj": {
      "abstract": [
        {
          "text": "Creates a string corresponding to the given sequence of UTF-8 code units.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS8UTF8ViewV",
          "text": "UTF8View"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-6sprj",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-6sprj"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-83bub": {
      "abstract": [
        {
          "text": "Creates a String having the given content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Ss",
          "text": "Substring"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Ss8UTF8ViewV",
          "text": "UTF8View"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-83bub",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-83bub"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-8ay23": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7UnicodeO",
          "text": "Unicode"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7UnicodeO6ScalarV",
          "text": "Scalar"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-8ay23",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-8ay23"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-8og6g": {
      "abstract": [
        {
          "text": "Creates a new string containing the characters in the given sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-8og6g",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-8og6g"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-8v3fo": {
      "abstract": [
        {
          "text": "Creates a string containing the given character.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SJ",
          "text": "Character"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-8v3fo",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-8v3fo"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-expd": {
      "abstract": [
        {
          "text": "Creates a String having the given content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Ss",
          "text": "Substring"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Ss9UTF16ViewV",
          "text": "UTF16View"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-expd",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-expd"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:)-wbcx": {
      "abstract": [
        {
          "text": "Creates a string corresponding to the given sequence of UTF-16 code units.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS9UTF16ViewV",
          "text": "UTF16View"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:)-wbcx",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:)-wbcx"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(_:radix:uppercase:)": {
      "abstract": [
        {
          "text": "Creates a string representing the given value in base 10, or some other",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "specified base.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "radix"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "uppercase"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(_:radix:uppercase:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:radix:uppercase:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(_:radix:uppercase:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(bytes:encoding:)": {
      "abstract": [
        {
          "text": "Creates a new string equivalent to the given bytes interpreted in the specified encoding.",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "Note: This API does not interpret embedded nulls as termination of the string. Use ",
          "type": "text"
        },
        {
          "code": "String?(validatingCString:)",
          "type": "codeVoice"
        },
        {
          "text": " instead for null-terminated C strings.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "bytes"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "encoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE8EncodingV",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(bytes:encoding:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(bytes:encoding:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(bytes:encoding:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(bytesNoCopy:length:encoding:freeWhenDone:)": {
      "abstract": [
        {
          "text": "Creates a new string that contains the specified number of bytes from the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given buffer, interpreted in the specified encoding, and optionally",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "frees the buffer.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "bytesNoCopy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sv",
          "text": "UnsafeMutableRawPointer"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "length"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "encoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE8EncodingV",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "freeWhenDone"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(bytesNoCopy:length:encoding:freeWhenDone:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(bytesNoCopy:length:encoding:freeWhenDone:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(bytesnocopy:length:encoding:freewhendone:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-1gatt": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "cString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-1gatt",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(cString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(cstring:)-1gatt"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-295hy": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "cString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5UInt8V",
          "text": "UInt8"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-295hy",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(cString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(cstring:)-295hy"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-2p84k": {
      "abstract": [
        {
          "text": "Creates a new string by copying the null-terminated UTF-8 data referenced",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "by the given pointer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "cString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-2p84k",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(cString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(cstring:)-2p84k"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-472zs": {
      "abstract": [
        {
          "text": "Creates a new string by copying the null-terminated UTF-8 data referenced",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "by the given array.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "cString"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5UInt8V",
          "text": "UInt8"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-472zs",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(cString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(cstring:)-472zs"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-54awj": {
      "abstract": [
        {
          "text": "Creates a new string by copying the null-terminated UTF-8 data referenced",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "by the given array.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "cString"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-54awj",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(cString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(cstring:)-54awj"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-6kr8s": {
      "abstract": [
        {
          "text": "Creates a new string by copying the null-terminated UTF-8 data referenced",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "by the given pointer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "cString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5UInt8V",
          "text": "UInt8"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-6kr8s",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(cString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(cstring:)-6kr8s"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-cgw2": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "cString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-cgw2",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(cString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(cstring:)-cgw2"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(cString:encoding:)-358mb": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "cString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "encoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE8EncodingV",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(cString:encoding:)-358mb",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(cString:encoding:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(cstring:encoding:)-358mb"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(cString:encoding:)-3h7bc": {
      "abstract": [
        {
          "text": "Produces a string by copying the null-terminated bytes",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "in a given array, interpreted according to a given encoding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "cString"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "encoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE8EncodingV",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(cString:encoding:)-3h7bc",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(cString:encoding:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(cstring:encoding:)-3h7bc"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(cString:encoding:)-3qgzd": {
      "abstract": [
        {
          "text": "Produces a string by copying the null-terminated bytes",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "in a given C array, interpreted according to a given encoding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "cString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "encoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE8EncodingV",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(cString:encoding:)-3qgzd",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(cString:encoding:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(cstring:encoding:)-3qgzd"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(cString:encoding:)-4ydt6": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "cString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "encoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE8EncodingV",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(cString:encoding:)-4ydt6",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(cString:encoding:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(cstring:encoding:)-4ydt6"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(contentsOf:)": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "contentsOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(contentsOf:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(contentsOf:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(contentsof:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(contentsOf:encoding:)": {
      "abstract": [
        {
          "text": "Produces a string created by reading data from a given URL interpreted using a given encoding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "contentsOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "encoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE8EncodingV",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(contentsOf:encoding:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(contentsOf:encoding:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(contentsof:encoding:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(contentsOf:usedEncoding:)": {
      "abstract": [
        {
          "text": "Produces a string created by reading data from a given URL and returns by reference the encoding used to interpret the data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "contentsOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "usedEncoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE8EncodingV",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(contentsOf:usedEncoding:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(contentsOf:usedEncoding:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(contentsof:usedencoding:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(contentsOfFile:)": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "contentsOfFile"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(contentsOfFile:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(contentsOfFile:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(contentsoffile:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(contentsOfFile:encoding:)": {
      "abstract": [
        {
          "text": "Produces a string created by reading data from the file at a given path interpreted using a given encoding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "contentsOfFile"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "encoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE8EncodingV",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(contentsOfFile:encoding:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(contentsOfFile:encoding:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(contentsoffile:encoding:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(contentsOfFile:usedEncoding:)": {
      "abstract": [
        {
          "text": "Produces a string created by reading data from the file at a given path and returns by reference the encoding used to interpret the file.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "contentsOfFile"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "usedEncoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE8EncodingV",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(contentsOfFile:usedEncoding:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(contentsOfFile:usedEncoding:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(contentsoffile:usedencoding:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(data:encoding:)": {
      "abstract": [
        {
          "text": "Returns a ",
          "type": "text"
        },
        {
          "code": "String",
          "type": "codeVoice"
        },
        {
          "text": " initialized by converting given ",
          "type": "text"
        },
        {
          "code": "data",
          "type": "codeVoice"
        },
        {
          "text": " into",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "Unicode characters using a given ",
          "type": "text"
        },
        {
          "code": "encoding",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "data"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DataV",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "encoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE8EncodingV",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(data:encoding:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(data:encoding:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(data:encoding:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(decoding:)-364r2": {
      "abstract": [
        {
          "text": "On Unix, creates the string ",
          "type": "text"
        },
        {
          "code": "\"/\"",
          "type": "codeVoice"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "decoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8FilePathV",
          "text": "FilePath"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8FilePathV4RootV",
          "text": "Root"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(decoding:)-364r2",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(decoding:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(decoding:)-364r2"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(decoding:)-9xh58": {
      "abstract": [
        {
          "text": "Creates a string by interpreting the path component’s content as UTF-8 on",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "Unix and UTF-16 on Windows.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "decoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8FilePathV",
          "text": "FilePath"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8FilePathV9ComponentV",
          "text": "Component"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(decoding:)-9xh58",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(decoding:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(decoding:)-9xh58"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(decoding:)-nm7v": {
      "abstract": [
        {
          "text": "Creates a string by interpreting the file path’s content as UTF-8 on Unix",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and UTF-16 on Windows.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "decoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8FilePathV",
          "text": "FilePath"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(decoding:)-nm7v",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(decoding:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(decoding:)-nm7v"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(decoding:as:)": {
      "abstract": [
        {
          "text": "Creates a string from the given Unicode code units in the specified",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "encoding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "decoding"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "as"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ".Type)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(decoding:as:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(decoding:as:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(decoding:as:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(decodingCString:as:)-2zmjc": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "decodingCString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "as"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ".Type)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(decodingCString:as:)-2zmjc",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(decodingCString:as:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(decodingcstring:as:)-2zmjc"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(decodingCString:as:)-534rp": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "decodingCString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s16_UnicodeEncodingP8CodeUnitQa",
          "text": "CodeUnit"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "as"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ".Type)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(decodingCString:as:)-534rp",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(decodingCString:as:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(decodingcstring:as:)-534rp"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(decodingCString:as:)-8way7": {
      "abstract": [
        {
          "text": "Creates a new string by copying the null-terminated sequence of code units",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "referenced by the given array.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "decodingCString"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s16_UnicodeEncodingP8CodeUnitQa",
          "text": "CodeUnit"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "as"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ".Type)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(decodingCString:as:)-8way7",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(decodingCString:as:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(decodingcstring:as:)-8way7"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(describing:)-588wb": {
      "abstract": [
        {
          "text": "Creates a string representing the given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Subject"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "describing"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Subject"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(describing:)-588wb",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(describing:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(describing:)-588wb"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(describing:)-67ncf": {
      "abstract": [
        {
          "text": "Creates a string representing the given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Subject"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "describing"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Subject"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(describing:)-67ncf",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(describing:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(describing:)-67ncf"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(describing:)-6ttci": {
      "abstract": [
        {
          "text": "Creates a string representing the given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Subject"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "describing"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Subject"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(describing:)-6ttci",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(describing:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(describing:)-6ttci"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(describing:)-hsqw": {
      "abstract": [
        {
          "text": "Creates a string representing the given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Subject"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "describing"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Subject"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(describing:)-hsqw",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(describing:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(describing:)-hsqw"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(describingForTest:)": {
      "abstract": [
        {
          "text": "Initialize this instance so that it can be presented in a test’s output.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "describingForTest"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(describingForTest:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(describingForTest:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(describingfortest:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(extendedGraphemeClusterLiteral:)": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "ExtendedGraphemeClusterLiteralType",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Self.StringLiteralType",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "extendedGraphemeClusterLiteral"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s26ExpressibleByStringLiteralP0cD4TypeQa",
          "text": "StringLiteralType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(extendedGraphemeClusterLiteral:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(extendedGraphemeClusterLiteral:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(extendedgraphemeclusterliteral:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(format:_:)": {
      "abstract": [
        {
          "text": "Returns a ",
          "type": "text"
        },
        {
          "code": "String",
          "type": "codeVoice"
        },
        {
          "text": " object initialized by using a given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "format string as a template into which the remaining argument",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values are substituted.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "format"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7CVarArgP",
          "text": "CVarArg"
        },
        {
          "kind": "text",
          "text": "...)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(format:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(format:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(format:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(format:arguments:)": {
      "abstract": [
        {
          "text": "Returns a ",
          "type": "text"
        },
        {
          "code": "String",
          "type": "codeVoice"
        },
        {
          "text": " object initialized by using a given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "format string as a template into which the remaining argument",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values are substituted according to the user’s default locale.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "format"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "arguments"
        },
        {
          "kind": "text",
          "text": ": [any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7CVarArgP",
          "text": "CVarArg"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(format:arguments:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(format:arguments:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(format:arguments:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(format:locale:_:)": {
      "abstract": [
        {
          "text": "Returns a ",
          "type": "text"
        },
        {
          "code": "String",
          "type": "codeVoice"
        },
        {
          "text": " object initialized by using a given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "format string as a template into which the remaining argument",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values are substituted according to given locale information.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "format"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": "?, any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7CVarArgP",
          "text": "CVarArg"
        },
        {
          "kind": "text",
          "text": "...)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(format:locale:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(format:locale:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(format:locale:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(format:locale:arguments:)": {
      "abstract": [
        {
          "text": "Returns a ",
          "type": "text"
        },
        {
          "code": "String",
          "type": "codeVoice"
        },
        {
          "text": " object initialized by using a given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "format string as a template into which the remaining argument",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values are substituted according to given locale information.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "format"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "arguments"
        },
        {
          "kind": "text",
          "text": ": [any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7CVarArgP",
          "text": "CVarArg"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(format:locale:arguments:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(format:locale:arguments:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(format:locale:arguments:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(from:)-gcys": {
      "abstract": [
        {
          "text": "Creates an instance of the conforming type from a data value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:8CreateML11MLDataValueO",
          "text": "MLDataValue"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(from:)-gcys",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(from:)-gcys"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(from:)-qki5": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(from:)-qki5",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(from:)-qki5"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(localized:)": {
      "abstract": [
        {
          "text": "Creates a localized string from a localized string resource.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "localized"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation23LocalizedStringResourceV",
          "text": "LocalizedStringResource"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(localized:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(localized:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(localized:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(localized:defaultValue:options:table:bundle:locale:comment:)": {
      "abstract": [
        {
          "text": "Creates a localized string from an arbitrary static string key, applying the specified options.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "localized"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12StaticStringV",
          "text": "StaticString"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "defaultValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE17LocalizationValueV",
          "text": "LocalizationValue"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "options"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE19LocalizationOptionsV",
          "text": "LocalizationOptions"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "table"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "bundle"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSBundle",
          "text": "Bundle"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "comment"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12StaticStringV",
          "text": "StaticString"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(localized:defaultValue:options:table:bundle:locale:comment:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(localized:defaultValue:options:table:bundle:locale:comment:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(localized:defaultvalue:options:table:bundle:locale:comment:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(localized:defaultValue:table:bundle:locale:comment:)": {
      "abstract": [
        {
          "text": "Creates a localized string from an arbitrary static string key.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "localized"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12StaticStringV",
          "text": "StaticString"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "defaultValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE17LocalizationValueV",
          "text": "LocalizationValue"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "table"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "bundle"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSBundle",
          "text": "Bundle"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "comment"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12StaticStringV",
          "text": "StaticString"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(localized:defaultValue:table:bundle:locale:comment:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(localized:defaultValue:table:bundle:locale:comment:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(localized:defaultvalue:table:bundle:locale:comment:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(localized:options:)": {
      "abstract": [
        {
          "text": "Creates a localized string from a localized string resource, applying the specified options.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "localized"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation23LocalizedStringResourceV",
          "text": "LocalizedStringResource"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "options"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE19LocalizationOptionsV",
          "text": "LocalizationOptions"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(localized:options:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(localized:options:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(localized:options:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(localized:options:table:bundle:locale:comment:)": {
      "abstract": [
        {
          "text": "Creates a localized string from an interpolated string, applying the specified options.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "localized"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE17LocalizationValueV",
          "text": "LocalizationValue"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "options"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE19LocalizationOptionsV",
          "text": "LocalizationOptions"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "table"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "bundle"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSBundle",
          "text": "Bundle"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "comment"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12StaticStringV",
          "text": "StaticString"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(localized:options:table:bundle:locale:comment:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(localized:options:table:bundle:locale:comment:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(localized:options:table:bundle:locale:comment:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(localized:table:bundle:locale:comment:)": {
      "abstract": [
        {
          "text": "Creates a localized string from an interpolated string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "localized"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE17LocalizationValueV",
          "text": "LocalizationValue"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "table"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "bundle"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSBundle",
          "text": "Bundle"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "locale"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation6LocaleV",
          "text": "Locale"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "comment"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12StaticStringV",
          "text": "StaticString"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(localized:table:bundle:locale:comment:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(localized:table:bundle:locale:comment:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(localized:table:bundle:locale:comment:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(platformString:)-341sr": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "platformString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(platformString:)-341sr",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(platformString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(platformstring:)-341sr"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(platformString:)-36ydz": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "platformString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8CInteropO",
          "text": "CInterop"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8CInteropO12PlatformChara",
          "text": "PlatformChar"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(platformString:)-36ydz",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(platformString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(platformstring:)-36ydz"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(platformString:)-5j2y3": {
      "abstract": [
        {
          "text": "Creates a string by interpreting the null-terminated platform string as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "UTF-8 on Unix and UTF-16 on Windows.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "platformString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8CInteropO",
          "text": "CInterop"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8CInteropO12PlatformChara",
          "text": "PlatformChar"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(platformString:)-5j2y3",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(platformString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(platformstring:)-5j2y3"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(platformString:)-7hjry": {
      "abstract": [
        {
          "text": "Creates a string by interpreting the null-terminated platform string as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "UTF-8 on Unix and UTF-16 on Windows.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "platformString"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8CInteropO",
          "text": "CInterop"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8CInteropO12PlatformChara",
          "text": "PlatformChar"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(platformString:)-7hjry",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(platformString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(platformstring:)-7hjry"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(reflecting:)": {
      "abstract": [
        {
          "text": "Creates a string with a detailed representation of the given value,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "suitable for debugging.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Subject"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "reflecting"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Subject"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(reflecting:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(reflecting:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(reflecting:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(repeating:count:)-11bpi": {
      "abstract": [
        {
          "text": "Creates a string representing the given character repeated the specified",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "number of times.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "repeating"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SJ",
          "text": "Character"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "count"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(repeating:count:)-11bpi",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(repeating:count:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(repeating:count:)-11bpi"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(repeating:count:)-23xjt": {
      "abstract": [
        {
          "text": "Creates a new string representing the given string repeated the specified",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "number of times.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "repeating"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "count"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(repeating:count:)-23xjt",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(repeating:count:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(repeating:count:)-23xjt"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(stringInterpolation:)": {
      "abstract": [
        {
          "text": "Creates a new instance from an interpolated string literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "stringInterpolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s26DefaultStringInterpolationV",
          "text": "DefaultStringInterpolation"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(stringInterpolation:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(stringInterpolation:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(stringinterpolation:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(stringLiteral:)": {
      "abstract": [
        {
          "text": "Creates an instance initialized to the given string value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "stringLiteral"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(stringLiteral:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(stringLiteral:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(stringliteral:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(unicodeScalarLiteral:)": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "ExtendedGraphemeClusterLiteralType",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Self.UnicodeScalarLiteralType",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "unicodeScalarLiteral"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s43ExpressibleByExtendedGraphemeClusterLiteralP0cdeF4TypeQa",
          "text": "ExtendedGraphemeClusterLiteralType"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(unicodeScalarLiteral:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(unicodeScalarLiteral:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(unicodescalarliteral:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(unsafeUninitializedCapacity:initializingUTF8With:)": {
      "abstract": [
        {
          "text": "Creates a new string with the specified capacity in UTF-8 code units, and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "then calls the given closure with a buffer covering the string’s",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "uninitialized memory.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "unsafeUninitializedCapacity"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "initializingUTF8With"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sr",
          "text": "UnsafeMutableBufferPointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5UInt8V",
          "text": "UInt8"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(unsafeUninitializedCapacity:initializingUTF8With:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(unsafeUninitializedCapacity:initializingUTF8With:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(unsafeuninitializedcapacity:initializingutf8with:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(utf16CodeUnits:count:)": {
      "abstract": [
        {
          "text": "Creates a new string that contains the specified number of characters",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "from the given C array of Unicode characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "utf16CodeUnits"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@unichar",
          "text": "unichar"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "count"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(utf16CodeUnits:count:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(utf16CodeUnits:count:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(utf16codeunits:count:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(utf16CodeUnitsNoCopy:count:freeWhenDone:)": {
      "abstract": [
        {
          "text": "Creates a new string that contains the specified number of characters",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "from the given C array of UTF-16 code units.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "utf16CodeUnitsNoCopy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@unichar",
          "text": "unichar"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "count"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "freeWhenDone"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(utf16CodeUnitsNoCopy:count:freeWhenDone:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(utf16CodeUnitsNoCopy:count:freeWhenDone:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(utf16codeunitsnocopy:count:freewhendone:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(utf8String:)-3mcco": {
      "abstract": [
        {
          "text": "Creates a string by copying the data from a given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "null-terminated C array of UTF8-encoded bytes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "utf8String"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(utf8String:)-3mcco",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(utf8String:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(utf8string:)-3mcco"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(utf8String:)-5v4k8": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "utf8String"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(utf8String:)-5v4k8",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(utf8String:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(utf8string:)-5v4k8"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(utf8String:)-7t980": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "utf8String"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(utf8String:)-7t980",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(utf8String:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(utf8string:)-7t980"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(utf8String:)-8qmaq": {
      "abstract": [
        {
          "text": "Creates a string by copying the data from a given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "null-terminated array of UTF8-encoded bytes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "utf8String"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(utf8String:)-8qmaq",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(utf8String:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(utf8string:)-8qmaq"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validating:)-6r2j9": {
      "abstract": [
        {
          "text": "On Unix, creates the string ",
          "type": "text"
        },
        {
          "code": "\"/\"",
          "type": "codeVoice"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validating"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8FilePathV",
          "text": "FilePath"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8FilePathV4RootV",
          "text": "Root"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validating:)-6r2j9",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validating:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validating:)-6r2j9"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validating:)-95n8b": {
      "abstract": [
        {
          "text": "Creates a string from a path component, validating its contents as UTF-8",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "on Unix and UTF-16 on Windows.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validating"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8FilePathV",
          "text": "FilePath"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8FilePathV9ComponentV",
          "text": "Component"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validating:)-95n8b",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validating:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validating:)-95n8b"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validating:)-9dx2b": {
      "abstract": [
        {
          "text": "Creates a string from a file path, validating its contents as UTF-8 on",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "Unix and UTF-16 on Windows.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validating"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8FilePathV",
          "text": "FilePath"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validating:)-9dx2b",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validating:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validating:)-9dx2b"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validating:as:)-5cw2c": {
      "abstract": [
        {
          "text": "Creates a new string by copying and validating the sequence of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "code units passed in, according to the specified encoding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?<"
        },
        {
          "kind": "genericParameter",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "validating"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST",
          "text": "Sequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Int8V",
          "text": "Int8"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "as"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ".Type)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validating:as:)-5cw2c",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validating:as:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validating:as:)-5cw2c"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validating:as:)-84qr9": {
      "abstract": [
        {
          "text": "Creates a new string by copying and validating the sequence of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "code units passed in, according to the specified encoding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?<"
        },
        {
          "kind": "genericParameter",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "validating"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST",
          "text": "Sequence"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "as"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ".Type)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validating:as:)-84qr9",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validating:as:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validating:as:)-84qr9"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validatingCString:)-1x5p0": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validatingCString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validatingCString:)-1x5p0",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validatingCString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validatingcstring:)-1x5p0"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validatingCString:)-7gjlg": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validatingCString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validatingCString:)-7gjlg",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validatingCString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validatingcstring:)-7gjlg"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validatingCString:)-98wra": {
      "abstract": [
        {
          "text": "Creates a new string by copying and validating the null-terminated UTF-8",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "data referenced by the given array.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validatingCString"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validatingCString:)-98wra",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validatingCString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validatingcstring:)-98wra"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validatingCString:)-992vo": {
      "abstract": [
        {
          "text": "Creates a new string by copying and validating the null-terminated UTF-8",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "data referenced by the given pointer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validatingCString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validatingCString:)-992vo",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validatingCString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validatingcstring:)-992vo"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validatingPlatformString:)-2920w": {
      "abstract": [
        {
          "text": "Creates a string by interpreting the null-terminated platform string as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "UTF-8 on Unix and UTF-16 on Windows.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validatingPlatformString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8CInteropO",
          "text": "CInterop"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8CInteropO12PlatformChara",
          "text": "PlatformChar"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validatingPlatformString:)-2920w",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validatingPlatformString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validatingplatformstring:)-2920w"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validatingPlatformString:)-8x1kn": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validatingPlatformString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8CInteropO",
          "text": "CInterop"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8CInteropO12PlatformChara",
          "text": "PlatformChar"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validatingPlatformString:)-8x1kn",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validatingPlatformString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validatingplatformstring:)-8x1kn"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validatingPlatformString:)-91z6f": {
      "abstract": [
        {
          "text": "Creates a string by interpreting the null-terminated platform string as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "UTF-8 on Unix and UTF-16 on Windows.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validatingPlatformString"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8CInteropO",
          "text": "CInterop"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8CInteropO12PlatformChara",
          "text": "PlatformChar"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validatingPlatformString:)-91z6f",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validatingPlatformString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validatingplatformstring:)-91z6f"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validatingPlatformString:)-go44": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validatingPlatformString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validatingPlatformString:)-go44",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validatingPlatformString:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validatingplatformstring:)-go44"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validatingUTF8:)-208fn": {
      "abstract": [
        {
          "text": "Creates a new string by copying and validating the null-terminated UTF-8",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "data referenced by the given pointer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validatingUTF8"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validatingUTF8:)-208fn",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validatingUTF8:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validatingutf8:)-208fn"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validatingUTF8:)-2m5lb": {
      "abstract": [
        {
          "text": "Creates a new string by copying and validating the null-terminated UTF-8",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "data referenced by the given array.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validatingUTF8"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validatingUTF8:)-2m5lb",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validatingUTF8:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validatingutf8:)-2m5lb"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validatingUTF8:)-2o7g5": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validatingUTF8"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validatingUTF8:)-2o7g5",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validatingUTF8:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validatingutf8:)-2o7g5"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validatingUTF8:)-6i0in": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validatingUTF8"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8FilePathV",
          "text": "FilePath"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validatingUTF8:)-6i0in",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validatingUTF8:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validatingutf8:)-6i0in"
    },
    "doc://com.apple.Swift/documentation/Swift/String/init(validatingUTF8:)-8awk3": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "validatingUTF8"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/init(validatingUTF8:)-8awk3",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(validatingUTF8:)",
      "type": "topic",
      "url": "/documentation/swift/string/init(validatingutf8:)-8awk3"
    },
    "doc://com.apple.Swift/documentation/Swift/String/insert(_:at:)": {
      "abstract": [
        {
          "text": "Inserts a new character at the specified position.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "insert"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SJ",
          "text": "Character"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "at"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/insert(_:at:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "insert(_:at:)",
      "type": "topic",
      "url": "/documentation/swift/string/insert(_:at:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/insert(_:at:)-88yqh": {
      "abstract": [
        {
          "text": "Inserts a new element into the collection at the specified position.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "insert"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "at"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/insert(_:at:)-88yqh",
      "kind": "symbol",
      "role": "symbol",
      "title": "insert(_:at:)",
      "type": "topic",
      "url": "/documentation/swift/string/insert(_:at:)-88yqh"
    },
    "doc://com.apple.Swift/documentation/Swift/String/insert(contentsOf:at:)": {
      "abstract": [
        {
          "text": "Inserts a collection of characters at the specified position.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "insert"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "contentsOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "at"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/insert(contentsOf:at:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "insert(contentsOf:at:)",
      "type": "topic",
      "url": "/documentation/swift/string/insert(contentsof:at:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/insert(contentsOf:at:)-rdu9": {
      "abstract": [
        {
          "text": "Inserts the elements of a sequence into the collection at the specified",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "position.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "insert"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "contentsOf"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "at"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/insert(contentsOf:at:)-rdu9",
      "kind": "symbol",
      "role": "symbol",
      "title": "insert(contentsOf:at:)",
      "type": "topic",
      "url": "/documentation/swift/string/insert(contentsof:at:)-rdu9"
    },
    "doc://com.apple.Swift/documentation/Swift/String/isContiguousUTF8": {
      "abstract": [
        {
          "text": "Returns whether this string is capable of providing access to",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "validly-encoded UTF-8 contents in contiguous memory in O(1) time.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isContiguousUTF8"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/isContiguousUTF8",
      "kind": "symbol",
      "role": "symbol",
      "title": "isContiguousUTF8",
      "type": "topic",
      "url": "/documentation/swift/string/iscontiguousutf8"
    },
    "doc://com.apple.Swift/documentation/Swift/String/isEmpty": {
      "abstract": [
        {
          "text": "A Boolean value indicating whether a string has no characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isEmpty"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/isEmpty",
      "kind": "symbol",
      "role": "symbol",
      "title": "isEmpty",
      "type": "topic",
      "url": "/documentation/swift/string/isempty"
    },
    "doc://com.apple.Swift/documentation/Swift/String/last": {
      "abstract": [
        {
          "text": "The last element of the collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "last"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/last",
      "kind": "symbol",
      "role": "symbol",
      "title": "last",
      "type": "topic",
      "url": "/documentation/swift/string/last"
    },
    "doc://com.apple.Swift/documentation/Swift/String/last(where:)": {
      "abstract": [
        {
          "text": "Returns the last element of the sequence that satisfies the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "last"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "where"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/last(where:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "last(where:)",
      "type": "topic",
      "url": "/documentation/swift/string/last(where:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/lastIndex(of:)": {
      "abstract": [
        {
          "text": "Returns the last index where the specified value appears in the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "collection.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Equatable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "lastIndex"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/lastIndex(of:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "lastIndex(of:)",
      "type": "topic",
      "url": "/documentation/swift/string/lastindex(of:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/lastIndex(where:)": {
      "abstract": [
        {
          "text": "Returns the index of the last element in the collection that matches the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "lastIndex"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "where"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/lastIndex(where:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "lastIndex(where:)",
      "type": "topic",
      "url": "/documentation/swift/string/lastindex(where:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/lazy": {
      "abstract": [
        {
          "text": "A sequence containing the same elements as this sequence,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "but on which some operations, such as ",
          "type": "text"
        },
        {
          "code": "map",
          "type": "codeVoice"
        },
        {
          "text": " and ",
          "type": "text"
        },
        {
          "code": "filter",
          "type": "codeVoice"
        },
        {
          "text": ", are",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "implemented lazily.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "lazy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12LazySequenceV",
          "text": "LazySequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/lazy",
      "kind": "symbol",
      "role": "symbol",
      "title": "lazy",
      "type": "topic",
      "url": "/documentation/swift/string/lazy"
    },
    "doc://com.apple.Swift/documentation/Swift/String/lexicographicallyPrecedes(_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the sequence precedes another",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence in a lexicographical (dictionary) ordering, using the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "less-than operator (",
          "type": "text"
        },
        {
          "code": "<",
          "type": "codeVoice"
        },
        {
          "text": ") to compare elements.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Comparable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "lexicographicallyPrecedes"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/lexicographicallyPrecedes(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "lexicographicallyPrecedes(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/lexicographicallyprecedes(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/lexicographicallyPrecedes(_:by:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the sequence precedes another",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence in a lexicographical (dictionary) ordering, using the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "predicate to compare elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "lexicographicallyPrecedes"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "OtherSequence"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/lexicographicallyPrecedes(_:by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "lexicographicallyPrecedes(_:by:)",
      "type": "topic",
      "url": "/documentation/swift/string/lexicographicallyprecedes(_:by:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/localizedName(of:)": {
      "abstract": [
        {
          "text": "Returns a human-readable string giving the name of the specified encoding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "localizedName"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS10FoundationE8EncodingV",
          "text": "Encoding"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/localizedName(of:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "localizedName(of:)",
      "type": "topic",
      "url": "/documentation/swift/string/localizedname(of:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/localizedStringWithFormat(_:_:)": {
      "abstract": [
        {
          "text": "Returns a string created by using a given format string as a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "template into which the remaining argument values are substituted",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "according to the user’s default locale.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "localizedStringWithFormat"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7CVarArgP",
          "text": "CVarArg"
        },
        {
          "kind": "text",
          "text": "...) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/localizedStringWithFormat(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "localizedStringWithFormat(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/localizedstringwithformat(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/lowercased()": {
      "abstract": [
        {
          "text": "Returns a lowercase version of the string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "lowercased"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/lowercased()",
      "kind": "symbol",
      "role": "symbol",
      "title": "lowercased()",
      "type": "topic",
      "url": "/documentation/swift/string/lowercased()"
    },
    "doc://com.apple.Swift/documentation/Swift/String/makeContiguousUTF8()": {
      "abstract": [
        {
          "text": "If this string is not contiguous, make it so. If this mutates the string,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "it will invalidate any pre-existing indices.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "makeContiguousUTF8"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/makeContiguousUTF8()",
      "kind": "symbol",
      "role": "symbol",
      "title": "makeContiguousUTF8()",
      "type": "topic",
      "url": "/documentation/swift/string/makecontiguousutf8()"
    },
    "doc://com.apple.Swift/documentation/Swift/String/makeIterator()": {
      "abstract": [
        {
          "text": "Returns an iterator over the elements of the collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "makeIterator"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS8IteratorV",
          "text": "Iterator"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/makeIterator()",
      "kind": "symbol",
      "role": "symbol",
      "title": "makeIterator()",
      "type": "topic",
      "url": "/documentation/swift/string/makeiterator()"
    },
    "doc://com.apple.Swift/documentation/Swift/String/max()": {
      "abstract": [
        {
          "text": "Returns the maximum element in the sequence.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Comparable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "max"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/max()",
      "kind": "symbol",
      "role": "symbol",
      "title": "max()",
      "type": "topic",
      "url": "/documentation/swift/string/max()"
    },
    "doc://com.apple.Swift/documentation/Swift/String/max(_:_:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "max"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/max(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "max(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/max(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/max(by:)": {
      "abstract": [
        {
          "text": "Returns the maximum element in the sequence, using the given predicate",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "as the comparison between elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "max"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/max(by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "max(by:)",
      "type": "topic",
      "url": "/documentation/swift/string/max(by:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/min()": {
      "abstract": [
        {
          "text": "Returns the minimum element in the sequence.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Comparable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "min"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/min()",
      "kind": "symbol",
      "role": "symbol",
      "title": "min()",
      "type": "topic",
      "url": "/documentation/swift/string/min()"
    },
    "doc://com.apple.Swift/documentation/Swift/String/min(_:_:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "min"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/min(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "min(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/min(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/min(by:)": {
      "abstract": [
        {
          "text": "Returns the minimum element in the sequence, using the given predicate as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the comparison between elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "min"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/min(by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "min(by:)",
      "type": "topic",
      "url": "/documentation/swift/string/min(by:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/popLast()": {
      "abstract": [
        {
          "text": "Removes and returns the last element of the collection.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "BidirectionalCollection",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "popLast"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/popLast()",
      "kind": "symbol",
      "role": "symbol",
      "title": "popLast()",
      "type": "topic",
      "url": "/documentation/swift/string/poplast()"
    },
    "doc://com.apple.Swift/documentation/Swift/String/prefix(_:)": {
      "abstract": [
        {
          "text": "Returns a subsequence, up to the specified maximum length, containing",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the initial elements of the collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "prefix"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl11SubSequenceQa",
          "text": "SubSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/prefix(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "prefix(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/prefix(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/prefix(through:)": {
      "abstract": [
        {
          "text": "Returns a subsequence from the start of the collection through the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "specified position.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "prefix"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "through"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl11SubSequenceQa",
          "text": "SubSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/prefix(through:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "prefix(through:)",
      "type": "topic",
      "url": "/documentation/swift/string/prefix(through:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/prefix(upTo:)": {
      "abstract": [
        {
          "text": "Returns a subsequence from the start of the collection up to, but not",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "including, the specified position.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "prefix"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "upTo"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl11SubSequenceQa",
          "text": "SubSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/prefix(upTo:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "prefix(upTo:)",
      "type": "topic",
      "url": "/documentation/swift/string/prefix(upto:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/prefix(while:)": {
      "abstract": [
        {
          "text": "Returns a subsequence containing the initial elements until ",
          "type": "text"
        },
        {
          "code": "predicate",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "returns ",
          "type": "text"
        },
        {
          "code": "false",
          "type": "codeVoice"
        },
        {
          "text": " and skipping the remaining elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "prefix"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "while"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl11SubSequenceQa",
          "text": "SubSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/prefix(while:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "prefix(while:)",
      "type": "topic",
      "url": "/documentation/swift/string/prefix(while:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/randomElement()": {
      "abstract": [
        {
          "text": "Returns a random element of the collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "randomElement"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/randomElement()",
      "kind": "symbol",
      "role": "symbol",
      "title": "randomElement()",
      "type": "topic",
      "url": "/documentation/swift/string/randomelement()"
    },
    "doc://com.apple.Swift/documentation/Swift/String/randomElement(using:)": {
      "abstract": [
        {
          "text": "Returns a random element of the collection, using the given generator as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "a source for randomness.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "randomElement"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "using"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/randomElement(using:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "randomElement(using:)",
      "type": "topic",
      "url": "/documentation/swift/string/randomelement(using:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/reduce(_:_:)": {
      "abstract": [
        {
          "text": "Returns the result of combining the elements of the sequence using the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given closure.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "reduce"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/reduce(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "reduce(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/reduce(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/reduce(into:_:)": {
      "abstract": [
        {
          "text": "Returns the result of combining the elements of the sequence using the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given closure.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "reduce"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "into"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> ()) "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/reduce(into:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "reduce(into:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/reduce(into:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/remove(at:)": {
      "abstract": [
        {
          "text": "Removes and returns the character at the specified position.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "remove"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "at"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SJ",
          "text": "Character"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/remove(at:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "remove(at:)",
      "type": "topic",
      "url": "/documentation/swift/string/remove(at:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/remove(at:)-5g0wm": {
      "abstract": [
        {
          "text": "Removes and returns the element at the specified position.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "remove"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "at"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/remove(at:)-5g0wm",
      "kind": "symbol",
      "role": "symbol",
      "title": "remove(at:)",
      "type": "topic",
      "url": "/documentation/swift/string/remove(at:)-5g0wm"
    },
    "doc://com.apple.Swift/documentation/Swift/String/removeAll(keepingCapacity:)": {
      "abstract": [
        {
          "text": "Replaces this string with the empty string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeAll"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "keepingCapacity"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/removeAll(keepingCapacity:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "removeAll(keepingCapacity:)",
      "type": "topic",
      "url": "/documentation/swift/string/removeall(keepingcapacity:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/removeAll(where:)": {
      "abstract": [
        {
          "text": "Removes all the elements that satisfy the given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeAll"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "where"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/removeAll(where:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "removeAll(where:)",
      "type": "topic",
      "url": "/documentation/swift/string/removeall(where:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/removeFirst()": {
      "abstract": [
        {
          "text": "Removes and returns the first element of the collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeFirst"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/removeFirst()",
      "kind": "symbol",
      "role": "symbol",
      "title": "removeFirst()",
      "type": "topic",
      "url": "/documentation/swift/string/removefirst()"
    },
    "doc://com.apple.Swift/documentation/Swift/String/removeFirst(_:)": {
      "abstract": [
        {
          "text": "Removes the specified number of elements from the beginning of the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeFirst"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/removeFirst(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "removeFirst(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/removefirst(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/removeLast()": {
      "abstract": [
        {
          "text": "Removes and returns the last element of the collection.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "BidirectionalCollection",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeLast"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/removeLast()",
      "kind": "symbol",
      "role": "symbol",
      "title": "removeLast()",
      "type": "topic",
      "url": "/documentation/swift/string/removelast()"
    },
    "doc://com.apple.Swift/documentation/Swift/String/removeLast(_:)": {
      "abstract": [
        {
          "text": "Removes the specified number of elements from the end of the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "collection.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "BidirectionalCollection",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeLast"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/removeLast(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "removeLast(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/removelast(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/removeSubrange(_:)": {
      "abstract": [
        {
          "text": "Removes the characters in the given range.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeSubrange"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sn",
          "text": "Range"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/removeSubrange(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "removeSubrange(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/removesubrange(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/removeSubrange(_:)-8maxn": {
      "abstract": [
        {
          "text": "Removes the elements in the specified subrange from the collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeSubrange"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sn",
          "text": "Range"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ">)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/removeSubrange(_:)-8maxn",
      "kind": "symbol",
      "role": "symbol",
      "title": "removeSubrange(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/removesubrange(_:)-8maxn"
    },
    "doc://com.apple.Swift/documentation/Swift/String/removeSubrange(_:)-9twng": {
      "abstract": [
        {
          "text": "Removes the elements in the specified subrange from the collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeSubrange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/removeSubrange(_:)-9twng",
      "kind": "symbol",
      "role": "symbol",
      "title": "removeSubrange(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/removesubrange(_:)-9twng"
    },
    "doc://com.apple.Swift/documentation/Swift/String/replaceSubrange(_:with:)": {
      "abstract": [
        {
          "text": "Replaces the text within the specified bounds with the given characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "replaceSubrange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sn",
          "text": "Range"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/replaceSubrange(_:with:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "replaceSubrange(_:with:)",
      "type": "topic",
      "url": "/documentation/swift/string/replacesubrange(_:with:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/replaceSubrange(_:with:)-72947": {
      "abstract": [
        {
          "text": "Replaces the specified subrange of elements with the given collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "replaceSubrange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/replaceSubrange(_:with:)-72947",
      "kind": "symbol",
      "role": "symbol",
      "title": "replaceSubrange(_:with:)",
      "type": "topic",
      "url": "/documentation/swift/string/replacesubrange(_:with:)-72947"
    },
    "doc://com.apple.Swift/documentation/Swift/String/reserveCapacity(_:)": {
      "abstract": [
        {
          "text": "Reserves enough space in the string’s underlying storage to store the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "specified number of ASCII characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "reserveCapacity"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/reserveCapacity(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "reserveCapacity(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/reservecapacity(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/reversed()": {
      "abstract": [
        {
          "text": "Returns a view presenting the elements of the collection in reverse",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "order.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "reversed"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s18ReversedCollectionV",
          "text": "ReversedCollection"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/reversed()",
      "kind": "symbol",
      "role": "symbol",
      "title": "reversed()",
      "type": "topic",
      "url": "/documentation/swift/string/reversed()"
    },
    "doc://com.apple.Swift/documentation/Swift/String/shuffled()": {
      "abstract": [
        {
          "text": "Returns the elements of the sequence, shuffled.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "shuffled"
        },
        {
          "kind": "text",
          "text": "() -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/shuffled()",
      "kind": "symbol",
      "role": "symbol",
      "title": "shuffled()",
      "type": "topic",
      "url": "/documentation/swift/string/shuffled()"
    },
    "doc://com.apple.Swift/documentation/Swift/String/shuffled(using:)": {
      "abstract": [
        {
          "text": "Returns the elements of the sequence, shuffled using the given generator",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "as a source for randomness.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "shuffled"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "using"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/shuffled(using:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "shuffled(using:)",
      "type": "topic",
      "url": "/documentation/swift/string/shuffled(using:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/sorted()": {
      "abstract": [
        {
          "text": "Returns the elements of the sequence, sorted.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Comparable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sorted"
        },
        {
          "kind": "text",
          "text": "() -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/sorted()",
      "kind": "symbol",
      "role": "symbol",
      "title": "sorted()",
      "type": "topic",
      "url": "/documentation/swift/string/sorted()"
    },
    "doc://com.apple.Swift/documentation/Swift/String/sorted(by:)": {
      "abstract": [
        {
          "text": "Returns the elements of the sequence, sorted using the given predicate as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the comparison between elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sorted"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/sorted(by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "sorted(by:)",
      "type": "topic",
      "url": "/documentation/swift/string/sorted(by:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/split(maxSplits:omittingEmptySubsequences:whereSeparator:)": {
      "abstract": [
        {
          "text": "Returns the longest possible subsequences of the collection, in order,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "that don’t contain elements satisfying the given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "split"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "maxSplits"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "omittingEmptySubsequences"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "whereSeparator"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl11SubSequenceQa",
          "text": "SubSequence"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/split(maxSplits:omittingEmptySubsequences:whereSeparator:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "split(maxSplits:omittingEmptySubsequences:whereSeparator:)",
      "type": "topic",
      "url": "/documentation/swift/string/split(maxsplits:omittingemptysubsequences:whereseparator:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/split(separator:maxSplits:omittingEmptySubsequences:)": {
      "abstract": [
        {
          "text": "Returns the longest possible subsequences of the collection, in order,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "around elements equal to the given element.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Equatable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "split"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "separator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "maxSplits"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "omittingEmptySubsequences"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> ["
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl11SubSequenceQa",
          "text": "SubSequence"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/split(separator:maxSplits:omittingEmptySubsequences:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "split(separator:maxSplits:omittingEmptySubsequences:)",
      "type": "topic",
      "url": "/documentation/swift/string/split(separator:maxsplits:omittingemptysubsequences:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/startIndex": {
      "abstract": [
        {
          "text": "The position of the first character in a nonempty string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "startIndex"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/startIndex",
      "kind": "symbol",
      "role": "symbol",
      "title": "startIndex",
      "type": "topic",
      "url": "/documentation/swift/string/startindex"
    },
    "doc://com.apple.Swift/documentation/Swift/String/starts(with:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the initial elements of the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence are the same as the elements in another sequence.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Element",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Equatable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "starts"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "PossiblePrefix"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "PossiblePrefix"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/starts(with:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "starts(with:)",
      "type": "topic",
      "url": "/documentation/swift/string/starts(with:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/starts(with:by:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the initial elements of the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence are equivalent to the elements in another sequence, using",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the given predicate as the equivalence test.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "starts"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "PossiblePrefix"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "PossiblePrefix"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "PossiblePrefix"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/starts(with:by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "starts(with:by:)",
      "type": "topic",
      "url": "/documentation/swift/string/starts(with:by:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/subscript(_:)-2so14": {
      "abstract": [
        {
          "text": "Accesses a contiguous subrange of the collection’s elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "subscript"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sn",
          "text": "Range"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Ss",
          "text": "Substring"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/subscript(_:)-2so14",
      "kind": "symbol",
      "role": "symbol",
      "title": "subscript(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/subscript(_:)-2so14"
    },
    "doc://com.apple.Swift/documentation/Swift/String/subscript(_:)-4al9c": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "subscript"
        },
        {
          "kind": "text",
          "text": "(("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s15UnboundedRange_O",
          "text": "UnboundedRange_"
        },
        {
          "kind": "text",
          "text": ") -> ()) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl11SubSequenceQa",
          "text": "SubSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/subscript(_:)-4al9c",
      "kind": "symbol",
      "role": "symbol",
      "title": "subscript(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/subscript(_:)-4al9c"
    },
    "doc://com.apple.Swift/documentation/Swift/String/subscript(_:)-4h7s3": {
      "abstract": [
        {
          "text": "Accesses the contiguous subrange of the collection’s elements specified",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "by a range expression.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "subscript"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl11SubSequenceQa",
          "text": "SubSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/subscript(_:)-4h7s3",
      "kind": "symbol",
      "role": "symbol",
      "title": "subscript(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/subscript(_:)-4h7s3"
    },
    "doc://com.apple.Swift/documentation/Swift/String/subscript(_:)-lc0v": {
      "abstract": [
        {
          "text": "Accesses the character at the given position.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "subscript"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS5IndexV",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SJ",
          "text": "Character"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/subscript(_:)-lc0v",
      "kind": "symbol",
      "role": "symbol",
      "title": "subscript(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/subscript(_:)-lc0v"
    },
    "doc://com.apple.Swift/documentation/Swift/String/suffix(_:)": {
      "abstract": [
        {
          "text": "Returns a subsequence, up to the given maximum length, containing the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "final elements of the collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "suffix"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl11SubSequenceQa",
          "text": "SubSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/suffix(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "suffix(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/suffix(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/suffix(from:)": {
      "abstract": [
        {
          "text": "Returns a subsequence from the specified position to the end of the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "suffix"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl5IndexQa",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl11SubSequenceQa",
          "text": "SubSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/suffix(from:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "suffix(from:)",
      "type": "topic",
      "url": "/documentation/swift/string/suffix(from:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/underestimatedCount": {
      "abstract": [
        {
          "text": "A value less than or equal to the number of elements in the collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "underestimatedCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/underestimatedCount",
      "kind": "symbol",
      "role": "symbol",
      "title": "underestimatedCount",
      "type": "topic",
      "url": "/documentation/swift/string/underestimatedcount"
    },
    "doc://com.apple.Swift/documentation/Swift/String/unicodeScalars": {
      "abstract": [
        {
          "text": "The string’s value represented as a collection of Unicode scalar values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "unicodeScalars"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS17UnicodeScalarViewV",
          "text": "UnicodeScalarView"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/unicodeScalars",
      "kind": "symbol",
      "role": "symbol",
      "title": "unicodeScalars",
      "type": "topic",
      "url": "/documentation/swift/string/unicodescalars"
    },
    "doc://com.apple.Swift/documentation/Swift/String/uppercased()": {
      "abstract": [
        {
          "text": "Returns an uppercase version of the string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "uppercased"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/uppercased()",
      "kind": "symbol",
      "role": "symbol",
      "title": "uppercased()",
      "type": "topic",
      "url": "/documentation/swift/string/uppercased()"
    },
    "doc://com.apple.Swift/documentation/Swift/String/utf16": {
      "abstract": [
        {
          "text": "A UTF-16 encoding of ",
          "type": "text"
        },
        {
          "code": "self",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "utf16"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS9UTF16ViewV",
          "text": "UTF16View"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/utf16",
      "kind": "symbol",
      "role": "symbol",
      "title": "utf16",
      "type": "topic",
      "url": "/documentation/swift/string/utf16"
    },
    "doc://com.apple.Swift/documentation/Swift/String/utf8": {
      "abstract": [
        {
          "text": "A UTF-8 encoding of ",
          "type": "text"
        },
        {
          "code": "self",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "utf8"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS8UTF8ViewV",
          "text": "UTF8View"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/utf8",
      "kind": "symbol",
      "role": "symbol",
      "title": "utf8",
      "type": "topic",
      "url": "/documentation/swift/string/utf8"
    },
    "doc://com.apple.Swift/documentation/Swift/String/utf8CString": {
      "abstract": [
        {
          "text": "A contiguously stored null-terminated UTF-8 representation of the string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "utf8CString"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s15ContiguousArrayV",
          "text": "ContiguousArray"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/utf8CString",
      "kind": "symbol",
      "role": "symbol",
      "title": "utf8CString",
      "type": "topic",
      "url": "/documentation/swift/string/utf8cstring"
    },
    "doc://com.apple.Swift/documentation/Swift/String/withCString(_:)": {
      "abstract": [
        {
          "text": "Calls the given closure with a pointer to the contents of the string,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "represented as a null-terminated sequence of UTF-8 code units.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withCString"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Int8V",
          "text": "Int8"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/withCString(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withCString(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/withcstring(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/withCString(encodedAs:_:)": {
      "abstract": [
        {
          "text": "Calls the given closure with a pointer to the contents of the string,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "represented as a null-terminated sequence of code units.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withCString"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "TargetEncoding"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "encodedAs"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "TargetEncoding"
        },
        {
          "kind": "text",
          "text": ".Type, ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "TargetEncoding"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s16_UnicodeEncodingP8CodeUnitQa",
          "text": "CodeUnit"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/withCString(encodedAs:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withCString(encodedAs:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/withcstring(encodedas:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/withContiguousStorageIfAvailable(_:)": {
      "abstract": [
        {
          "text": "Executes a closure on the sequence’s contiguous storage.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withContiguousStorageIfAvailable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SR",
          "text": "UnsafeBufferPointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/withContiguousStorageIfAvailable(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withContiguousStorageIfAvailable(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/withcontiguousstorageifavailable(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/withMutableCharacters(_:)": {
      "abstract": [
        {
          "text": "Applies the given closure to a mutable view of the string’s characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withMutableCharacters"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/withMutableCharacters(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withMutableCharacters(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/withmutablecharacters(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/withPlatformString(_:)": {
      "abstract": [
        {
          "text": "Calls the given closure with a pointer to the contents of the string,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "represented as a null-terminated platform string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withPlatformString"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8CInteropO",
          "text": "CInterop"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6System8CInteropO12PlatformChara",
          "text": "PlatformChar"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/withPlatformString(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withPlatformString(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/withplatformstring(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/withUTF8(_:)": {
      "abstract": [
        {
          "text": "Runs ",
          "type": "text"
        },
        {
          "code": "body",
          "type": "codeVoice"
        },
        {
          "text": " over the content of this string in contiguous memory. If this",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "string is not contiguous, this will first make it contiguous, which will",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "also speed up subsequent access. If this mutates the string,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "it will invalidate any pre-existing indices.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withUTF8"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">(("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SR",
          "text": "UnsafeBufferPointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5UInt8V",
          "text": "UInt8"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/withUTF8(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withUTF8(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/withutf8(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/write(_:)": {
      "abstract": [
        {
          "text": "Appends the given string to this string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "write"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/write(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "write(_:)",
      "type": "topic",
      "url": "/documentation/swift/string/write(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/write(to:)": {
      "abstract": [
        {
          "text": "Writes the string into the given output stream.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "write"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Target"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Target"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/write(to:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "write(to:)",
      "type": "topic",
      "url": "/documentation/swift/string/write(to:)"
    },
    "doc://com.apple.Swift/documentation/Swift/String/~=(_:_:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "~="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Ss",
          "text": "Substring"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String/~=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "~=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/string/~=(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/StringProtocol": {
      "abstract": [
        {
          "text": "A type that can represent a string as a collection of characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "StringProtocol"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StringProtocol",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StringProtocol"
        }
      ],
      "role": "symbol",
      "title": "StringProtocol",
      "type": "topic",
      "url": "/documentation/swift/stringprotocol"
    },
    "doc://com.apple.Swift/documentation/Swift/Substring": {
      "abstract": [
        {
          "text": "A slice of a string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Substring"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Substring",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Substring"
        }
      ],
      "role": "symbol",
      "title": "Substring",
      "type": "topic",
      "url": "/documentation/swift/substring"
    },
    "doc://com.apple.Swift/documentation/Swift/TextOutputStream": {
      "abstract": [
        {
          "text": "A type that can be the target of text-streaming operations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TextOutputStream"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TextOutputStream",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TextOutputStream"
        }
      ],
      "role": "symbol",
      "title": "TextOutputStream",
      "type": "topic",
      "url": "/documentation/swift/textoutputstream"
    },
    "doc://com.apple.Swift/documentation/Swift/TextOutputStreamable": {
      "abstract": [
        {
          "text": "A source of text-streaming operations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TextOutputStreamable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TextOutputStreamable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TextOutputStreamable"
        }
      ],
      "role": "symbol",
      "title": "TextOutputStreamable",
      "type": "topic",
      "url": "/documentation/swift/textoutputstreamable"
    },
    "doc://com.apple.Swift/documentation/Swift/swift-standard-library": {
      "abstract": [
        {
          "text": "Solve complex problems and write high-performance, readable code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/swift-standard-library",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Swift Standard Library",
      "type": "topic",
      "url": "/documentation/swift/swift-standard-library"
    },
    "doc://com.apple.documentation/documentation/foundation/nsmutablestring": {
      "abstract": [
        {
          "text": "A dynamic plain-text Unicode string object, for use instead of a  variable in cases that require reference semantics. ",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSMutableString"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsmutablestring",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSMutableString",
      "type": "topic",
      "url": "/documentation/foundation/nsmutablestring"
    },
    "doc://com.apple.documentation/documentation/foundation/nsstring": {
      "abstract": [
        {
          "text": "A static, plain-text Unicode string object which you use when you need reference semantics or other Foundation-specific behavior. ",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSString"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsstring",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSString",
      "type": "topic",
      "url": "/documentation/foundation/nsstring"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:10AppIntents27EntityIdentifierConvertibleP": {
      "abstract": [
        {
          "text": "An interface for converting between an entity’s identifier and its string representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EntityIdentifierConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:10AppIntents27EntityIdentifierConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "EntityIdentifierConvertible",
      "type": "topic",
      "url": "/documentation/AppIntents/EntityIdentifierConvertible"
    },
    "doc://com.externally.resolved.symbol/s:10AppIntents43CustomURLRepresentationParameterConvertibleP": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomURLRepresentationParameterConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:10AppIntents43CustomURLRepresentationParameterConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomURLRepresentationParameterConvertible",
      "type": "topic",
      "url": "/documentation/AppIntents/CustomURLRepresentationParameterConvertible"
    },
    "doc://com.externally.resolved.symbol/s:16CoreTransferable0B0P": {
      "abstract": [
        {
          "text": "A protocol that describes how a type interacts with transport APIs such as drag and drop or copy and paste.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Transferable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:16CoreTransferable0B0P",
      "kind": "symbol",
      "role": "symbol",
      "title": "Transferable",
      "type": "topic",
      "url": "/documentation/CoreTransferable/Transferable"
    },
    "doc://com.externally.resolved.symbol/s:17RealityFoundation12BindableDataP": {
      "abstract": [
        {
          "text": "An opaque base protocol for bindable data objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BindableData"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:17RealityFoundation12BindableDataP",
      "kind": "symbol",
      "role": "symbol",
      "title": "BindableData",
      "type": "topic",
      "url": "/documentation/RealityKit/BindableData"
    },
    "doc://com.externally.resolved.symbol/s:6Charts26PrimitivePlottableProtocolP": {
      "abstract": [
        {
          "text": "A type that represents the primitive plottable types supported by the framework. Don’t use this type directly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PrimitivePlottableProtocol"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6Charts9PlottableP",
          "text": "Plottable"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": " == "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6Charts9PlottableP09PrimitiveB0Qa",
          "text": "PrimitivePlottable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:6Charts26PrimitivePlottableProtocolP",
      "kind": "symbol",
      "role": "symbol",
      "title": "PrimitivePlottableProtocol",
      "type": "topic",
      "url": "/documentation/Charts/PrimitivePlottableProtocol"
    },
    "doc://com.externally.resolved.symbol/s:6Charts9PlottableP": {
      "abstract": [
        {
          "text": "A type that can serve as data to plot in a chart.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Plottable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:6Charts9PlottableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Plottable",
      "type": "topic",
      "url": "/documentation/Charts/Plottable"
    },
    "doc://com.externally.resolved.symbol/s:7Testing27CustomTestStringConvertibleP": {
      "abstract": [
        {
          "text": "A protocol describing types with a custom string representation when presented as part of a test’s output.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomTestStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7Testing27CustomTestStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomTestStringConvertible",
      "type": "topic",
      "url": "/documentation/Testing/CustomTestStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:8CloudKit21CKRecordValueProtocolP": {
      "abstract": [
        {
          "text": "A description of a CloudKit record value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CKRecordValueProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:8CloudKit21CKRecordValueProtocolP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CKRecordValueProtocol",
      "type": "topic",
      "url": "/documentation/CloudKit/CKRecordValueProtocol"
    },
    "doc://com.externally.resolved.symbol/s:8CreateML12MLIdentifierP": {
      "abstract": [
        {
          "text": "A type the Create ML framework can use as a machine learning identifier.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MLIdentifier"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:8CreateML12MLIdentifierP",
      "kind": "symbol",
      "role": "symbol",
      "title": "MLIdentifier",
      "type": "topic",
      "url": "/documentation/CreateML/MLIdentifier"
    },
    "doc://com.externally.resolved.symbol/s:8CreateML22MLDataValueConvertibleP": {
      "abstract": [
        {
          "text": "A type that can convert itself to and from a data value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MLDataValueConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:8CreateML22MLDataValueConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "MLDataValueConvertible",
      "type": "topic",
      "url": "/documentation/CreateML/MLDataValueConvertible"
    },
    "doc://com.externally.resolved.symbol/s:8MusicKit0A34LibraryRequestFilterValueEquatableP": {
      "abstract": [
        {
          "text": "A protocol for types of values your app can use with equality filters when fetching items using a music library request.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MusicLibraryRequestFilterValueEquatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:8MusicKit0A34LibraryRequestFilterValueEquatableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "MusicLibraryRequestFilterValueEquatable",
      "type": "topic",
      "url": "/documentation/MusicKit/MusicLibraryRequestFilterValueEquatable"
    },
    "http://www.unicode.org/glossary/": {
      "identifier": "http://www.unicode.org/glossary/",
      "title": "Unicode.org glossary",
      "titleInlineContent": [
        {
          "text": "Unicode.org glossary",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "http://www.unicode.org/glossary/"
    },
    "http://www.unicode.org/glossary/#canonical_equivalent": {
      "identifier": "http://www.unicode.org/glossary/#canonical_equivalent",
      "title": "canonical equivalence",
      "titleInlineContent": [
        {
          "text": "canonical equivalence",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "http://www.unicode.org/glossary/#canonical_equivalent"
    },
    "http://www.unicode.org/glossary/#extended_grapheme_cluster": {
      "identifier": "http://www.unicode.org/glossary/#extended_grapheme_cluster",
      "title": "extended grapheme clusters",
      "titleInlineContent": [
        {
          "text": "extended grapheme clusters",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "http://www.unicode.org/glossary/#extended_grapheme_cluster"
    },
    "http://www.unicode.org/glossary/#unicode_scalar_value": {
      "identifier": "http://www.unicode.org/glossary/#unicode_scalar_value",
      "title": "Unicode scalar values",
      "titleInlineContent": [
        {
          "text": "Unicode scalar",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "http://www.unicode.org/glossary/#unicode_scalar_value"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BidirectionalCollection",
        "doc://com.externally.resolved.symbol/s:17RealityFoundation12BindableDataP",
        "doc://com.externally.resolved.symbol/s:8CloudKit21CKRecordValueProtocolP",
        "doc://com.apple.Swift/documentation/Swift/CVarArg",
        "doc://com.apple.Swift/documentation/Swift/CodingKeyRepresentable",
        "doc://com.apple.Swift/documentation/Swift/Collection",
        "doc://com.apple.Swift/documentation/Swift/Comparable",
        "doc://com.apple.Swift/documentation/Swift/Copyable",
        "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible",
        "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
        "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
        "doc://com.externally.resolved.symbol/s:7Testing27CustomTestStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:10AppIntents43CustomURLRepresentationParameterConvertibleP",
        "doc://com.apple.Swift/documentation/Swift/Decodable",
        "doc://com.apple.Swift/documentation/Swift/Encodable",
        "doc://com.externally.resolved.symbol/s:10AppIntents27EntityIdentifierConvertibleP",
        "doc://com.apple.Swift/documentation/Swift/Equatable",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByExtendedGraphemeClusterLiteral",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByStringInterpolation",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByStringLiteral",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByUnicodeScalarLiteral",
        "doc://com.apple.Swift/documentation/Swift/Hashable",
        "doc://com.apple.Swift/documentation/Swift/LosslessStringConvertible",
        "doc://com.externally.resolved.symbol/s:8CreateML22MLDataValueConvertibleP",
        "doc://com.externally.resolved.symbol/s:8CreateML12MLIdentifierP",
        "doc://com.apple.Swift/documentation/Swift/MirrorPath",
        "doc://com.externally.resolved.symbol/s:8MusicKit0A34LibraryRequestFilterValueEquatableP",
        "doc://com.externally.resolved.symbol/s:6Charts9PlottableP",
        "doc://com.externally.resolved.symbol/s:6Charts26PrimitivePlottableProtocolP",
        "doc://com.apple.Swift/documentation/Swift/RangeReplaceableCollection",
        "doc://com.apple.Swift/documentation/Swift/RegexComponent",
        "doc://com.apple.Swift/documentation/Swift/Sendable",
        "doc://com.apple.Swift/documentation/Swift/Sequence",
        "doc://com.apple.Swift/documentation/Swift/StringProtocol",
        "doc://com.apple.Swift/documentation/Swift/TextOutputStream",
        "doc://com.apple.Swift/documentation/Swift/TextOutputStreamable",
        "doc://com.externally.resolved.symbol/s:16CoreTransferable0B0P"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Standard-Library",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int",
        "doc://com.apple.Swift/documentation/Swift/Double",
        "doc://com.apple.Swift/documentation/Swift/Array",
        "doc://com.apple.Swift/documentation/Swift/Dictionary",
        "doc://com.apple.Swift/documentation/Swift/swift-standard-library"
      ],
      "title": "Standard Library"
    }
  ],
  "topicSections": [
    {
      "abstract": [
        {
          "text": "In addition to creating a string from a single string literal, you can also create",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "an empty string, a string containing an existing group of characters, or a string",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "repeating the contents of another string.",
          "type": "text"
        }
      ],
      "anchor": "Creating-a-String",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/init(decoding:)-nm7v",
        "doc://com.apple.Swift/documentation/Swift/String/init()",
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-8v3fo",
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-8og6g",
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-1ip93",
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-50pwi",
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-14lv5",
        "doc://com.apple.Swift/documentation/Swift/String/init(repeating:count:)-23xjt",
        "doc://com.apple.Swift/documentation/Swift/String/init(repeating:count:)-11bpi",
        "doc://com.apple.Swift/documentation/Swift/String/init(unsafeUninitializedCapacity:initializingUTF8With:)"
      ],
      "title": "Creating a String"
    },
    {
      "anchor": "Inspecting-a-String",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/isEmpty",
        "doc://com.apple.Swift/documentation/Swift/String/count"
      ],
      "title": "Inspecting a String"
    },
    {
      "anchor": "Creating-a-String-from-Unicode-Data",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-8ay23",
        "doc://com.apple.Swift/documentation/Swift/String/init(data:encoding:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(validatingUTF8:)-208fn",
        "doc://com.apple.Swift/documentation/Swift/String/init(validating:as:)-84qr9",
        "doc://com.apple.Swift/documentation/Swift/String/init(validating:as:)-5cw2c",
        "doc://com.apple.Swift/documentation/Swift/String/init(utf8String:)-8qmaq",
        "doc://com.apple.Swift/documentation/Swift/String/init(utf8String:)-3mcco",
        "doc://com.apple.Swift/documentation/Swift/String/init(utf16CodeUnits:count:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(utf16CodeUnitsNoCopy:count:freeWhenDone:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(decoding:as:)"
      ],
      "title": "Creating a String from Unicode Data"
    },
    {
      "anchor": "Creating-a-String-Using-Formats",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/init(format:_:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(format:arguments:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(format:locale:_:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(format:locale:arguments:)",
        "doc://com.apple.Swift/documentation/Swift/String/localizedStringWithFormat(_:_:)"
      ],
      "title": "Creating a String Using Formats"
    },
    {
      "anchor": "Creating-a-Localized-String",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/init(localized:table:bundle:locale:comment:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(localized:options:table:bundle:locale:comment:)",
        "doc://com.apple.Swift/documentation/Swift/String/LocalizationValue",
        "doc://com.apple.Swift/documentation/Swift/String/LocalizationOptions",
        "doc://com.apple.Swift/documentation/Swift/String/init(localized:defaultValue:table:bundle:locale:comment:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(localized:defaultValue:options:table:bundle:locale:comment:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(localized:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(localized:options:)"
      ],
      "title": "Creating a Localized String"
    },
    {
      "anchor": "Converting-Numeric-Values",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/init(_:radix:uppercase:)"
      ],
      "title": "Converting Numeric Values"
    },
    {
      "anchor": "Converting-a-C-String",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/init(bytes:encoding:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(bytesNoCopy:length:encoding:freeWhenDone:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(validatingCString:)-992vo",
        "doc://com.apple.Swift/documentation/Swift/String/init(validatingCString:)-98wra",
        "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-2p84k",
        "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-6kr8s",
        "doc://com.apple.Swift/documentation/Swift/String/init(cString:encoding:)-3h7bc",
        "doc://com.apple.Swift/documentation/Swift/String/init(cString:encoding:)-3qgzd",
        "doc://com.apple.Swift/documentation/Swift/String/init(decodingCString:as:)-8way7",
        "doc://com.apple.Swift/documentation/Swift/String/decodeCString(_:as:repairingInvalidCodeUnits:)-46n2p"
      ],
      "title": "Converting a C String"
    },
    {
      "anchor": "Converting-Other-Types-to-Strings",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-1ywfq",
        "doc://com.apple.Swift/documentation/Swift/String/init(describing:)-588wb",
        "doc://com.apple.Swift/documentation/Swift/String/init(describing:)-hsqw",
        "doc://com.apple.Swift/documentation/Swift/String/init(describing:)-6ttci",
        "doc://com.apple.Swift/documentation/Swift/String/init(describing:)-67ncf",
        "doc://com.apple.Swift/documentation/Swift/String/init(reflecting:)"
      ],
      "title": "Converting Other Types to Strings"
    },
    {
      "anchor": "Creating-a-String-from-a-File-or-URL",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/init(contentsOf:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(contentsOf:encoding:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(contentsOf:usedEncoding:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(contentsOfFile:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(contentsOfFile:encoding:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(contentsOfFile:usedEncoding:)"
      ],
      "title": "Creating a String from a File or URL"
    },
    {
      "anchor": "Writing-to-a-File-or-URL",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/write(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/write(to:)"
      ],
      "title": "Writing to a File or URL"
    },
    {
      "anchor": "Appending-Strings-and-Characters",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/append(_:)-4xa8f",
        "doc://com.apple.Swift/documentation/Swift/String/append(_:)-4xi3j",
        "doc://com.apple.Swift/documentation/Swift/String/append(contentsOf:)-oxek",
        "doc://com.apple.Swift/documentation/Swift/String/append(contentsOf:)-9vb4t",
        "doc://com.apple.Swift/documentation/Swift/String/append(contentsOf:)-7est5",
        "doc://com.apple.Swift/documentation/Swift/String/append(contentsOf:)-9foms",
        "doc://com.apple.Swift/documentation/Swift/String/reserveCapacity(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/+(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/String/+=(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/String/+(_:_:)-6h59y",
        "doc://com.apple.Swift/documentation/Swift/String/+(_:_:)-n329",
        "doc://com.apple.Swift/documentation/Swift/String/+(_:_:)-9fm57",
        "doc://com.apple.Swift/documentation/Swift/String/+=(_:_:)-676gx"
      ],
      "title": "Appending Strings and Characters"
    },
    {
      "anchor": "Inserting-Characters",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/insert(_:at:)",
        "doc://com.apple.Swift/documentation/Swift/String/insert(_:at:)-88yqh",
        "doc://com.apple.Swift/documentation/Swift/String/insert(contentsOf:at:)-rdu9",
        "doc://com.apple.Swift/documentation/Swift/String/insert(contentsOf:at:)"
      ],
      "title": "Inserting Characters"
    },
    {
      "anchor": "Replacing-Substrings",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/replaceSubrange(_:with:)",
        "doc://com.apple.Swift/documentation/Swift/String/replaceSubrange(_:with:)-72947"
      ],
      "title": "Replacing Substrings"
    },
    {
      "anchor": "Removing-Substrings",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/remove(at:)",
        "doc://com.apple.Swift/documentation/Swift/String/remove(at:)-5g0wm",
        "doc://com.apple.Swift/documentation/Swift/String/removeAll(keepingCapacity:)",
        "doc://com.apple.Swift/documentation/Swift/String/removeAll(where:)",
        "doc://com.apple.Swift/documentation/Swift/String/removeFirst()",
        "doc://com.apple.Swift/documentation/Swift/String/removeFirst(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/removeLast()",
        "doc://com.apple.Swift/documentation/Swift/String/removeLast(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/removeSubrange(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/removeSubrange(_:)-8maxn",
        "doc://com.apple.Swift/documentation/Swift/String/removeSubrange(_:)-9twng",
        "doc://com.apple.Swift/documentation/Swift/String/filter(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/drop(while:)",
        "doc://com.apple.Swift/documentation/Swift/String/dropFirst(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/dropLast(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/popLast()"
      ],
      "title": "Removing Substrings"
    },
    {
      "anchor": "Changing-Case",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/lowercased()",
        "doc://com.apple.Swift/documentation/Swift/String/uppercased()"
      ],
      "title": "Changing Case"
    },
    {
      "abstract": [
        {
          "text": "Comparing strings using the equal-to operator (==) or a relational operator (like",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "< and >=) is always performed using the Unicode canonical representation, so",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "that different representations of a string compare as being equal.",
          "type": "text"
        }
      ],
      "anchor": "Comparing-Strings-Using-Operators",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/==(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/String/==(_:_:)-8kzxf",
        "doc://com.apple.Swift/documentation/Swift/String/!=(_:_:)-1bb05",
        "doc://com.apple.Swift/documentation/Swift/String/!=(_:_:)-frzf",
        "doc://com.apple.Swift/documentation/Swift/String/~=(_:_:)"
      ],
      "title": "Comparing Strings Using Operators"
    },
    {
      "anchor": "Comparing-Characters",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/elementsEqual(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/elementsEqual(_:by:)",
        "doc://com.apple.Swift/documentation/Swift/String/starts(with:)",
        "doc://com.apple.Swift/documentation/Swift/String/starts(with:by:)",
        "doc://com.apple.Swift/documentation/Swift/String/lexicographicallyPrecedes(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/lexicographicallyPrecedes(_:by:)"
      ],
      "title": "Comparing Characters"
    },
    {
      "anchor": "Creating-and-Applying-Differences",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/applying(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/difference(from:)",
        "doc://com.apple.Swift/documentation/Swift/String/difference(from:by:)"
      ],
      "title": "Creating and Applying Differences"
    },
    {
      "anchor": "Finding-Substrings",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/hasPrefix(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/hasSuffix(_:)"
      ],
      "title": "Finding Substrings"
    },
    {
      "anchor": "Finding-Characters",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/contains(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/allSatisfy(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/contains(where:)",
        "doc://com.apple.Swift/documentation/Swift/String/first(where:)",
        "doc://com.apple.Swift/documentation/Swift/String/firstIndex(of:)",
        "doc://com.apple.Swift/documentation/Swift/String/firstIndex(where:)",
        "doc://com.apple.Swift/documentation/Swift/String/last(where:)",
        "doc://com.apple.Swift/documentation/Swift/String/lastIndex(of:)",
        "doc://com.apple.Swift/documentation/Swift/String/lastIndex(where:)",
        "doc://com.apple.Swift/documentation/Swift/String/max()",
        "doc://com.apple.Swift/documentation/Swift/String/max(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/String/max(by:)",
        "doc://com.apple.Swift/documentation/Swift/String/min()",
        "doc://com.apple.Swift/documentation/Swift/String/min(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/String/min(by:)"
      ],
      "title": "Finding Characters"
    },
    {
      "anchor": "Getting-Substrings",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/subscript(_:)-2so14",
        "doc://com.apple.Swift/documentation/Swift/String/subscript(_:)-4h7s3",
        "doc://com.apple.Swift/documentation/Swift/String/subscript(_:)-4al9c",
        "doc://com.apple.Swift/documentation/Swift/String/prefix(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/prefix(through:)",
        "doc://com.apple.Swift/documentation/Swift/String/prefix(upTo:)",
        "doc://com.apple.Swift/documentation/Swift/String/prefix(while:)",
        "doc://com.apple.Swift/documentation/Swift/String/suffix(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/suffix(from:)"
      ],
      "title": "Getting Substrings"
    },
    {
      "anchor": "Splitting-a-String",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/split(separator:maxSplits:omittingEmptySubsequences:)",
        "doc://com.apple.Swift/documentation/Swift/String/split(maxSplits:omittingEmptySubsequences:whereSeparator:)"
      ],
      "title": "Splitting a String"
    },
    {
      "anchor": "Getting-Characters-and-Bytes",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/subscript(_:)-lc0v",
        "doc://com.apple.Swift/documentation/Swift/String/first",
        "doc://com.apple.Swift/documentation/Swift/String/last",
        "doc://com.apple.Swift/documentation/Swift/String/randomElement()",
        "doc://com.apple.Swift/documentation/Swift/String/randomElement(using:)"
      ],
      "title": "Getting Characters and Bytes"
    },
    {
      "anchor": "Working-with-Encodings",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/availableStringEncodings",
        "doc://com.apple.Swift/documentation/Swift/String/defaultCStringEncoding",
        "doc://com.apple.Swift/documentation/Swift/String/localizedName(of:)",
        "doc://com.apple.Swift/documentation/Swift/String/isContiguousUTF8",
        "doc://com.apple.Swift/documentation/Swift/String/makeContiguousUTF8()",
        "doc://com.apple.Swift/documentation/Swift/String/withUTF8(_:)"
      ],
      "title": "Working with Encodings"
    },
    {
      "anchor": "Working-with-String-Views",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/unicodeScalars",
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-2t931",
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-11jx3",
        "doc://com.apple.Swift/documentation/Swift/String/utf16",
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-wbcx",
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-expd",
        "doc://com.apple.Swift/documentation/Swift/String/utf8",
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-6sprj",
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-83bub"
      ],
      "title": "Working with String Views"
    },
    {
      "anchor": "Transforming-a-Strings-Characters",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/compactMap(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/flatMap(_:)-i3m9",
        "doc://com.apple.Swift/documentation/Swift/String/flatMap(_:)-6chuq",
        "doc://com.apple.Swift/documentation/Swift/String/reduce(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/String/reduce(into:_:)",
        "doc://com.apple.Swift/documentation/Swift/String/lazy"
      ],
      "title": "Transforming a String’s Characters"
    },
    {
      "anchor": "Iterating-over-a-Strings-Characters",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/forEach(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/enumerated()",
        "doc://com.apple.Swift/documentation/Swift/String/makeIterator()",
        "doc://com.apple.Swift/documentation/Swift/String/underestimatedCount"
      ],
      "title": "Iterating over a String’s Characters"
    },
    {
      "anchor": "Reordering-a-Strings-Characters",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/sorted()",
        "doc://com.apple.Swift/documentation/Swift/String/sorted(by:)",
        "doc://com.apple.Swift/documentation/Swift/String/reversed()",
        "doc://com.apple.Swift/documentation/Swift/String/shuffled()",
        "doc://com.apple.Swift/documentation/Swift/String/shuffled(using:)"
      ],
      "title": "Reordering a String’s Characters"
    },
    {
      "anchor": "Getting-C-Strings",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/utf8CString",
        "doc://com.apple.Swift/documentation/Swift/String/withCString(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/withCString(encodedAs:_:)"
      ],
      "title": "Getting C Strings"
    },
    {
      "anchor": "Working-with-Paths",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-3a5mh",
        "doc://com.apple.Swift/documentation/Swift/String/init(validatingUTF8:)-6i0in"
      ],
      "title": "Working with Paths"
    },
    {
      "anchor": "Manipulating-Indices",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/startIndex",
        "doc://com.apple.Swift/documentation/Swift/String/endIndex",
        "doc://com.apple.Swift/documentation/Swift/String/index(after:)",
        "doc://com.apple.Swift/documentation/Swift/String/formIndex(after:)",
        "doc://com.apple.Swift/documentation/Swift/String/index(before:)",
        "doc://com.apple.Swift/documentation/Swift/String/formIndex(before:)",
        "doc://com.apple.Swift/documentation/Swift/String/index(_:offsetBy:)",
        "doc://com.apple.Swift/documentation/Swift/String/index(_:offsetBy:limitedBy:)",
        "doc://com.apple.Swift/documentation/Swift/String/formIndex(_:offsetBy:)",
        "doc://com.apple.Swift/documentation/Swift/String/formIndex(_:offsetBy:limitedBy:)",
        "doc://com.apple.Swift/documentation/Swift/String/distance(from:to:)",
        "doc://com.apple.Swift/documentation/Swift/String/indices-swift.property"
      ],
      "title": "Manipulating Indices"
    },
    {
      "anchor": "Creating-a-Range-Expression",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/...(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/String/...(_:)-4mm4o",
        "doc://com.apple.Swift/documentation/Swift/String/...(_:)-6ct5g"
      ],
      "title": "Creating a Range Expression"
    },
    {
      "anchor": "Encoding-and-Decoding",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/encode(to:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(from:)-qki5"
      ],
      "title": "Encoding and Decoding"
    },
    {
      "anchor": "Describing-a-String",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/description",
        "doc://com.apple.Swift/documentation/Swift/String/debugDescription",
        "doc://com.apple.Swift/documentation/Swift/String/customMirror",
        "doc://com.apple.Swift/documentation/Swift/String/hashValue",
        "doc://com.apple.Swift/documentation/Swift/String/hash(into:)"
      ],
      "title": "Describing a String"
    },
    {
      "anchor": "Using-a-String-as-a-Data-Value",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/init(from:)-gcys",
        "doc://com.apple.Swift/documentation/Swift/String/dataValue",
        "doc://com.apple.Swift/documentation/Swift/String/identifierValue",
        "doc://com.apple.Swift/documentation/Swift/String/dataValueType"
      ],
      "title": "Using a String as a Data Value"
    },
    {
      "anchor": "Infrequently-Used-Functionality",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/index(of:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-5a5lw",
        "doc://com.apple.Swift/documentation/Swift/String/init(stringInterpolation:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(stringLiteral:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(unicodeScalarLiteral:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(extendedGraphemeClusterLiteral:)",
        "doc://com.apple.Swift/documentation/Swift/String/customPlaygroundQuickLook",
        "doc://com.apple.Swift/documentation/Swift/String/withContiguousStorageIfAvailable(_:)"
      ],
      "title": "Infrequently Used Functionality"
    },
    {
      "abstract": [
        {
          "text": "Use bridged reference types when you need reference semantics or Foundation-specific",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "behavior.",
          "type": "text"
        }
      ],
      "anchor": "Reference-Types",
      "identifiers": [
        "doc://com.apple.documentation/documentation/foundation/nsstring",
        "doc://com.apple.documentation/documentation/foundation/nsmutablestring"
      ],
      "title": "Reference Types"
    },
    {
      "anchor": "Related-String-Types",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Substring",
        "doc://com.apple.Swift/documentation/Swift/StringProtocol",
        "doc://com.apple.Swift/documentation/Swift/String/Index",
        "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarView",
        "doc://com.apple.Swift/documentation/Swift/String/UTF16View",
        "doc://com.apple.Swift/documentation/Swift/String/UTF8View",
        "doc://com.apple.Swift/documentation/Swift/String/Iterator",
        "doc://com.apple.Swift/documentation/Swift/String/Encoding"
      ],
      "title": "Related String Types"
    },
    {
      "anchor": "Structures",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/Comparator",
        "doc://com.apple.Swift/documentation/Swift/String/IntentInputOptions",
        "doc://com.apple.Swift/documentation/Swift/String/StandardComparator"
      ],
      "title": "Structures"
    },
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/init(_:)-5ruqx",
        "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-1gatt",
        "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-295hy",
        "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-472zs",
        "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-54awj",
        "doc://com.apple.Swift/documentation/Swift/String/init(cString:)-cgw2",
        "doc://com.apple.Swift/documentation/Swift/String/init(cString:encoding:)-358mb",
        "doc://com.apple.Swift/documentation/Swift/String/init(cString:encoding:)-4ydt6",
        "doc://com.apple.Swift/documentation/Swift/String/init(decoding:)-364r2",
        "doc://com.apple.Swift/documentation/Swift/String/init(decoding:)-9xh58",
        "doc://com.apple.Swift/documentation/Swift/String/init(decodingCString:as:)-2zmjc",
        "doc://com.apple.Swift/documentation/Swift/String/init(decodingCString:as:)-534rp",
        "doc://com.apple.Swift/documentation/Swift/String/init(describingForTest:)",
        "doc://com.apple.Swift/documentation/Swift/String/init(platformString:)-341sr",
        "doc://com.apple.Swift/documentation/Swift/String/init(platformString:)-36ydz",
        "doc://com.apple.Swift/documentation/Swift/String/init(platformString:)-5j2y3",
        "doc://com.apple.Swift/documentation/Swift/String/init(platformString:)-7hjry",
        "doc://com.apple.Swift/documentation/Swift/String/init(utf8String:)-5v4k8",
        "doc://com.apple.Swift/documentation/Swift/String/init(utf8String:)-7t980",
        "doc://com.apple.Swift/documentation/Swift/String/init(validating:)-6r2j9",
        "doc://com.apple.Swift/documentation/Swift/String/init(validating:)-95n8b",
        "doc://com.apple.Swift/documentation/Swift/String/init(validating:)-9dx2b",
        "doc://com.apple.Swift/documentation/Swift/String/init(validatingCString:)-1x5p0",
        "doc://com.apple.Swift/documentation/Swift/String/init(validatingCString:)-7gjlg",
        "doc://com.apple.Swift/documentation/Swift/String/init(validatingPlatformString:)-2920w",
        "doc://com.apple.Swift/documentation/Swift/String/init(validatingPlatformString:)-8x1kn",
        "doc://com.apple.Swift/documentation/Swift/String/init(validatingPlatformString:)-91z6f",
        "doc://com.apple.Swift/documentation/Swift/String/init(validatingPlatformString:)-go44",
        "doc://com.apple.Swift/documentation/Swift/String/init(validatingUTF8:)-2m5lb",
        "doc://com.apple.Swift/documentation/Swift/String/init(validatingUTF8:)-2o7g5",
        "doc://com.apple.Swift/documentation/Swift/String/init(validatingUTF8:)-8awk3"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/characters"
      ],
      "title": "Instance Properties"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/data(using:allowLossyConversion:)",
        "doc://com.apple.Swift/documentation/Swift/String/withMutableCharacters(_:)",
        "doc://com.apple.Swift/documentation/Swift/String/withPlatformString(_:)"
      ],
      "title": "Instance Methods"
    },
    {
      "anchor": "Type-Aliases",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/CharacterView",
        "doc://com.apple.Swift/documentation/Swift/String/CompareOptions",
        "doc://com.apple.Swift/documentation/Swift/String/EncodingConversionOptions",
        "doc://com.apple.Swift/documentation/Swift/String/EnumerationOptions",
        "doc://com.apple.Swift/documentation/Swift/String/IndexDistance",
        "doc://com.apple.Swift/documentation/Swift/String/Output",
        "doc://com.apple.Swift/documentation/Swift/String/Specification",
        "doc://com.apple.Swift/documentation/Swift/String/UnicodeScalarIndex",
        "doc://com.apple.Swift/documentation/Swift/String/UnwrappedType",
        "doc://com.apple.Swift/documentation/Swift/String/ValueType"
      ],
      "title": "Type Aliases"
    },
    {
      "anchor": "Type-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/defaultResolverSpecification"
      ],
      "title": "Type Properties"
    },
    {
      "anchor": "Type-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/decodeCString(_:as:repairingInvalidCodeUnits:)-2l7u6",
        "doc://com.apple.Swift/documentation/Swift/String/decodeCString(_:as:repairingInvalidCodeUnits:)-3mvvy",
        "doc://com.apple.Swift/documentation/Swift/String/decodeCString(_:as:repairingInvalidCodeUnits:)-9pdmv"
      ],
      "title": "Type Methods"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/String/BidirectionalCollection-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/CodingKeyRepresentable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/Collection-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/Comparable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/CustomDebugStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/CustomReflectable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/CustomStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/CustomTestStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/CustomURLRepresentationParameterConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/Decodable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/Encodable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/EntityIdentifierConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/Equatable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/ExpressibleByStringInterpolation-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/ExpressibleByStringLiteral-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/ExpressibleByUnicodeScalarLiteral-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/Hashable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/LosslessStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/MLDataValueConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/MLIdentifier-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/RangeReplaceableCollection-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/RegexComponent-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/Sequence-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/StringProtocol-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/TextOutputStream-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/TextOutputStreamable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/String/Transferable-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1foundation~1nsstring/abstract",
          "value": [
            {
              "text": "A static, plain-text Unicode string object.",
              "type": "text"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1foundation~1nsmutablestring/abstract",
          "value": [
            {
              "text": "A dynamic plain-text Unicode string object.",
              "type": "text"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/string"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
