{
  "abstract": [
    {
      "text": "Returns a specific descendant of the reflected subject, or ",
      "type": "text"
    },
    {
      "code": "nil",
      "type": "codeVoice"
    },
    {
      "text": " if no",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "such descendant exists.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/Mirror"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/Mirror/descendant(_:_:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Swift",
    "externalID": "s:s6MirrorV10descendantyypSgs0A4Path_p_sAE_pdtF",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "descendant"
      },
      {
        "kind": "text",
        "text": "(any "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s10MirrorPathP",
        "text": "MirrorPath"
      },
      {
        "kind": "text",
        "text": ", any "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s10MirrorPathP",
        "text": "MirrorPath"
      },
      {
        "kind": "text",
        "text": "...) -> "
      },
      {
        "kind": "keyword",
        "text": "Any"
      },
      {
        "kind": "text",
        "text": "?"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "descendant(_:_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "descendant"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "first"
            },
            {
              "kind": "text",
              "text": ": any "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/MirrorPath",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s10MirrorPathP",
              "text": "MirrorPath"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "rest"
            },
            {
              "kind": "text",
              "text": ": any "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/MirrorPath",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s10MirrorPathP",
              "text": "MirrorPath"
            },
            {
              "kind": "text",
              "text": "...) -> "
            },
            {
              "kind": "keyword",
              "text": "Any"
            },
            {
              "kind": "text",
              "text": "?"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The first mirror path component to access.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "first"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Any remaining mirror path components.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "rest"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The descendant of this mirror specified by the given mirror",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "path components if such a descendant exists; otherwise, ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Pass a variadic list of string and integer arguments. Each string",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "argument selects the first child with a matching label. Each integer",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "argument selects the child at that offset. For example, passing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "1, \"two\", 3",
              "type": "codeVoice"
            },
            {
              "text": " as arguments to ",
              "type": "text"
            },
            {
              "code": "myMirror.descendant(_:_:)",
              "type": "codeVoice"
            },
            {
              "text": " is equivalent",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var result: Any? = nil",
            "let children = myMirror.children",
            "if let i0 = children.index(",
            "    children.startIndex, offsetBy: 1, limitedBy: children.endIndex),",
            "    i0 != children.endIndex",
            "{",
            "    let grandChildren = Mirror(reflecting: children[i0].value).children",
            "    if let i1 = grandChildren.firstIndex(where: { $0.label == \"two\" }) {",
            "        let greatGrandChildren =",
            "            Mirror(reflecting: grandChildren[i1].value).children",
            "        if let i2 = greatGrandChildren.index(",
            "            greatGrandChildren.startIndex,",
            "            offsetBy: 3,",
            "            limitedBy: greatGrandChildren.endIndex),",
            "            i2 != greatGrandChildren.endIndex",
            "        {",
            "            // Success!",
            "            result = greatGrandChildren[i2].value",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "This function is suitable for exploring the structure of a mirror in a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "REPL or playground, but is not intended to be efficient. The efficiency",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of finding each element in the argument list depends on the argument",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "type and the capabilities of the each level of the mirror’s ",
              "type": "text"
            },
            {
              "code": "children",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "collections. Each string argument requires a linear search, and unless",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the underlying collection supports random-access traversal, each integer",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "argument also requires a linear operation.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Mirror": {
      "abstract": [
        {
          "text": "A representation of the substructure and display style of an instance of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "any type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Mirror"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Mirror",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Mirror"
        }
      ],
      "role": "symbol",
      "title": "Mirror",
      "type": "topic",
      "url": "/documentation/swift/mirror"
    },
    "doc://com.apple.Swift/documentation/Swift/Mirror/descendant(_:_:)": {
      "abstract": [
        {
          "text": "Returns a specific descendant of the reflected subject, or ",
          "type": "text"
        },
        {
          "code": "nil",
          "type": "codeVoice"
        },
        {
          "text": " if no",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "such descendant exists.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "descendant"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s10MirrorPathP",
          "text": "MirrorPath"
        },
        {
          "kind": "text",
          "text": ", any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s10MirrorPathP",
          "text": "MirrorPath"
        },
        {
          "kind": "text",
          "text": "...) -> "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Mirror/descendant(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "descendant(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/mirror/descendant(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/MirrorPath": {
      "abstract": [
        {
          "text": "A protocol for legitimate arguments to ",
          "type": "text"
        },
        {
          "code": "Mirror",
          "type": "codeVoice"
        },
        {
          "text": "’s ",
          "type": "text"
        },
        {
          "code": "descendant",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "method.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MirrorPath"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MirrorPath",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MirrorPath"
        }
      ],
      "role": "symbol",
      "title": "MirrorPath",
      "type": "topic",
      "url": "/documentation/swift/mirrorpath"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Querying-Descendants",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/MirrorPath"
      ],
      "title": "Querying Descendants"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/mirror/descendant(_:_:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
