{
  "abstract": [
    {
      "text": "A type that iterates over a collection using its indices.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/IndexingIterator"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:s16IndexingIteratorV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "IndexingIterator"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "IndexingIterator"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "IndexingIterator"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "IndexingIterator"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Elements"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Elements"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Collection",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sl",
              "text": "Collection"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "IndexingIterator",
              "type": "codeVoice"
            },
            {
              "text": " type is the default iterator for any collection that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "doesn’t declare its own. It acts as an iterator by using a collection’s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "indices to step over each value in the collection. Most collections in the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "standard library use ",
              "type": "text"
            },
            {
              "code": "IndexingIterator",
              "type": "codeVoice"
            },
            {
              "text": " as their iterator.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "By default, any custom collection type you create will inherit a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "makeIterator()",
              "type": "codeVoice"
            },
            {
              "text": " method that returns an ",
              "type": "text"
            },
            {
              "code": "IndexingIterator",
              "type": "codeVoice"
            },
            {
              "text": " instance,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "making it unnecessary to declare your own. When creating a custom",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "collection type, add the minimal requirements of the ",
              "type": "text"
            },
            {
              "code": "Collection",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "protocol: starting and ending indices and a subscript for accessing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "elements. With those elements defined, the inherited ",
              "type": "text"
            },
            {
              "code": "makeIterator()",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method satisfies the requirements of the ",
              "type": "text"
            },
            {
              "code": "Sequence",
              "type": "codeVoice"
            },
            {
              "text": " protocol.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Here’s an example of a type that declares the minimal requirements for a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "collection. The ",
              "type": "text"
            },
            {
              "code": "CollectionOfTwo",
              "type": "codeVoice"
            },
            {
              "text": " structure is a fixed-size collection",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that always holds two elements of a specific type.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct CollectionOfTwo<Element>: Collection {",
            "    let elements: (Element, Element)",
            "",
            "    init(_ first: Element, _ second: Element) {",
            "        self.elements = (first, second)",
            "    }",
            "",
            "    var startIndex: Int { return 0 }",
            "    var endIndex: Int   { return 2 }",
            "",
            "    subscript(index: Int) -> Element {",
            "        switch index {",
            "        case 0: return elements.0",
            "        case 1: return elements.1",
            "        default: fatalError(\"Index out of bounds.\")",
            "        }",
            "    }",
            "    ",
            "    func index(after i: Int) -> Int {",
            "        precondition(i < endIndex, \"Can't advance beyond endIndex\")",
            "        return i + 1",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Because ",
              "type": "text"
            },
            {
              "code": "CollectionOfTwo",
              "type": "codeVoice"
            },
            {
              "text": " doesn’t define its own ",
              "type": "text"
            },
            {
              "code": "makeIterator()",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method or ",
              "type": "text"
            },
            {
              "code": "Iterator",
              "type": "codeVoice"
            },
            {
              "text": " associated type, it uses the default iterator type,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "IndexingIterator",
              "type": "codeVoice"
            },
            {
              "text": ". This example shows how a ",
              "type": "text"
            },
            {
              "code": "CollectionOfTwo",
              "type": "codeVoice"
            },
            {
              "text": " instance",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "can be created holding the values of a point, and then iterated over",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "using a ",
              "type": "text"
            },
            {
              "code": "for",
              "type": "codeVoice"
            },
            {
              "text": "-",
              "type": "text"
            },
            {
              "code": "in",
              "type": "codeVoice"
            },
            {
              "text": " loop.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let point = CollectionOfTwo(15.0, 20.0)",
            "for element in point {",
            "    print(element)",
            "}",
            "// Prints \"15.0\"",
            "// Prints \"20.0\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Collection": {
      "abstract": [
        {
          "text": "A sequence whose elements can be traversed multiple times,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "nondestructively, and accessed by an indexed subscript.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Collection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Collection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Collection"
        }
      ],
      "role": "symbol",
      "title": "Collection",
      "type": "topic",
      "url": "/documentation/swift/collection"
    },
    "doc://com.apple.Swift/documentation/Swift/Copyable": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Elements",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Collection",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Copyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/swift/copyable"
    },
    "doc://com.apple.Swift/documentation/Swift/EnumeratedIterator": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EnumeratedIterator"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/EnumeratedIterator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EnumeratedIterator"
        }
      ],
      "role": "symbol",
      "title": "EnumeratedIterator",
      "type": "topic",
      "url": "/documentation/swift/enumeratediterator"
    },
    "doc://com.apple.Swift/documentation/Swift/IndexingIterator": {
      "abstract": [
        {
          "text": "A type that iterates over a collection using its indices.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "IndexingIterator"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/IndexingIterator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IndexingIterator"
        }
      ],
      "role": "symbol",
      "title": "IndexingIterator",
      "type": "topic",
      "url": "/documentation/swift/indexingiterator"
    },
    "doc://com.apple.Swift/documentation/Swift/IndexingIterator/IteratorProtocol-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/IndexingIterator/IteratorProtocol-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "IteratorProtocol Implementations",
      "type": "topic",
      "url": "/documentation/swift/indexingiterator/iteratorprotocol-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/IndexingIterator/Sequence-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/IndexingIterator/Sequence-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Sequence Implementations",
      "type": "topic",
      "url": "/documentation/swift/indexingiterator/sequence-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/IndexingIterator/SubSequence": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Elements",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Collection",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SubSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/IndexingIterator/SubSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SubSequence"
        }
      ],
      "role": "symbol",
      "title": "IndexingIterator.SubSequence",
      "type": "topic",
      "url": "/documentation/swift/indexingiterator/subsequence"
    },
    "doc://com.apple.Swift/documentation/Swift/IteratorProtocol": {
      "abstract": [
        {
          "text": "A type that supplies the values of a sequence one at a time.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Elements",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Collection",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "IteratorProtocol"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/IteratorProtocol",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IteratorProtocol"
        }
      ],
      "role": "symbol",
      "title": "IteratorProtocol",
      "type": "topic",
      "url": "/documentation/swift/iteratorprotocol"
    },
    "doc://com.apple.Swift/documentation/Swift/IteratorSequence": {
      "abstract": [
        {
          "text": "A sequence built around an iterator of type ",
          "type": "text"
        },
        {
          "code": "Base",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "IteratorSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/IteratorSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IteratorSequence"
        }
      ],
      "role": "symbol",
      "title": "IteratorSequence",
      "type": "topic",
      "url": "/documentation/swift/iteratorsequence"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Elements",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Collection",
            "type": "codeVoice"
          },
          {
            "text": ", ",
            "type": "text"
          },
          {
            "code": "Elements",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Sendable",
            "type": "codeVoice"
          },
          {
            "text": ", and ",
            "type": "text"
          },
          {
            "code": "Elements.Index",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Sendable",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.Swift/documentation/Swift/Sequence": {
      "abstract": [
        {
          "text": "A type that provides sequential, iterated access to its elements.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Elements",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "Collection",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sequence"
        }
      ],
      "role": "symbol",
      "title": "Sequence",
      "type": "topic",
      "url": "/documentation/swift/sequence"
    },
    "doc://com.apple.Swift/documentation/Swift/SetIterator": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SetIterator"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SetIterator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SetIterator"
        }
      ],
      "role": "symbol",
      "title": "SetIterator",
      "type": "topic",
      "url": "/documentation/swift/setiterator"
    },
    "doc://com.apple.Swift/documentation/Swift/StrideThroughIterator": {
      "abstract": [
        {
          "text": "An iterator for a ",
          "type": "text"
        },
        {
          "code": "StrideThrough",
          "type": "codeVoice"
        },
        {
          "text": " instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "StrideThroughIterator"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StrideThroughIterator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StrideThroughIterator"
        }
      ],
      "role": "symbol",
      "title": "StrideThroughIterator",
      "type": "topic",
      "url": "/documentation/swift/stridethroughiterator"
    },
    "doc://com.apple.Swift/documentation/Swift/StrideToIterator": {
      "abstract": [
        {
          "text": "An iterator for a ",
          "type": "text"
        },
        {
          "code": "StrideTo",
          "type": "codeVoice"
        },
        {
          "text": " instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "StrideToIterator"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StrideToIterator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StrideToIterator"
        }
      ],
      "role": "symbol",
      "title": "StrideToIterator",
      "type": "topic",
      "url": "/documentation/swift/stridetoiterator"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Copyable",
        "doc://com.apple.Swift/documentation/Swift/IteratorProtocol",
        "doc://com.apple.Swift/documentation/Swift/Sendable",
        "doc://com.apple.Swift/documentation/Swift/Sequence"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Indices-and-Iterators",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/IteratorSequence",
        "doc://com.apple.Swift/documentation/Swift/EnumeratedIterator",
        "doc://com.apple.Swift/documentation/Swift/SetIterator",
        "doc://com.apple.Swift/documentation/Swift/StrideThroughIterator",
        "doc://com.apple.Swift/documentation/Swift/StrideToIterator"
      ],
      "title": "Indices and Iterators"
    }
  ],
  "topicSections": [
    {
      "anchor": "Type-Aliases",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/IndexingIterator/SubSequence"
      ],
      "title": "Type Aliases"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/IndexingIterator/IteratorProtocol-Implementations",
        "doc://com.apple.Swift/documentation/Swift/IndexingIterator/Sequence-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/indexingiterator"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
