{
  "abstract": [
    {
      "text": "A signed integer value type.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/Int"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:Si",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Int"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Int"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "Int"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Int"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "On 32-bit platforms, ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": " is the same size as ",
              "type": "text"
            },
            {
              "code": "Int32",
              "type": "codeVoice"
            },
            {
              "text": ", and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "on 64-bit platforms, ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": " is the same size as ",
              "type": "text"
            },
            {
              "code": "Int64",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/AdditiveArithmetic": {
      "abstract": [
        {
          "text": "A type with values that support addition and subtraction.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AdditiveArithmetic"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AdditiveArithmetic",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AdditiveArithmetic"
        }
      ],
      "role": "symbol",
      "title": "AdditiveArithmetic",
      "type": "topic",
      "url": "/documentation/swift/additivearithmetic"
    },
    "doc://com.apple.Swift/documentation/Swift/Array": {
      "abstract": [
        {
          "text": "An ordered, random-access collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Array"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Array",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Array"
        }
      ],
      "role": "symbol",
      "title": "Array",
      "type": "topic",
      "url": "/documentation/swift/array"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger": {
      "abstract": [
        {
          "text": "An integer type with a binary representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BinaryInteger"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BinaryInteger"
        }
      ],
      "role": "symbol",
      "title": "BinaryInteger",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger"
    },
    "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "role": "symbol",
      "title": "BitwiseCopyable",
      "type": "topic",
      "url": "/documentation/swift/bitwisecopyable"
    },
    "doc://com.apple.Swift/documentation/Swift/CVarArg": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements of a C ",
          "type": "text"
        },
        {
          "code": "va_list",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CVarArg",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/swift/cvararg"
    },
    "doc://com.apple.Swift/documentation/Swift/CodingKeyRepresentable": {
      "abstract": [
        {
          "text": "A type that can be converted to and from a coding key.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CodingKeyRepresentable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CodingKeyRepresentable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CodingKeyRepresentable"
        }
      ],
      "role": "symbol",
      "title": "CodingKeyRepresentable",
      "type": "topic",
      "url": "/documentation/swift/codingkeyrepresentable"
    },
    "doc://com.apple.Swift/documentation/Swift/Comparable": {
      "abstract": [
        {
          "text": "A type that can be compared using the relational operators ",
          "type": "text"
        },
        {
          "code": "<",
          "type": "codeVoice"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "code": "<=",
          "type": "codeVoice"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "code": ">=",
          "type": "codeVoice"
        },
        {
          "text": ",",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and ",
          "type": "text"
        },
        {
          "code": ">",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Comparable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Comparable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Comparable"
        }
      ],
      "role": "symbol",
      "title": "Comparable",
      "type": "topic",
      "url": "/documentation/swift/comparable"
    },
    "doc://com.apple.Swift/documentation/Swift/Copyable": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Copyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/swift/copyable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomReflectable": {
      "abstract": [
        {
          "text": "A type that explicitly supplies its own mirror.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "role": "symbol",
      "title": "CustomReflectable",
      "type": "topic",
      "url": "/documentation/swift/customreflectable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/Decodable": {
      "abstract": [
        {
          "text": "A type that can decode itself from an external representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Decodable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Decodable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Decodable"
        }
      ],
      "role": "symbol",
      "title": "Decodable",
      "type": "topic",
      "url": "/documentation/swift/decodable"
    },
    "doc://com.apple.Swift/documentation/Swift/Dictionary": {
      "abstract": [
        {
          "text": "A collection whose elements are key-value pairs.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Dictionary"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Dictionary",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Dictionary"
        }
      ],
      "role": "symbol",
      "title": "Dictionary",
      "type": "topic",
      "url": "/documentation/swift/dictionary"
    },
    "doc://com.apple.Swift/documentation/Swift/Double": {
      "abstract": [
        {
          "text": "A double-precision, floating-point value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Double"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Double",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Double"
        }
      ],
      "role": "symbol",
      "title": "Double",
      "type": "topic",
      "url": "/documentation/swift/double"
    },
    "doc://com.apple.Swift/documentation/Swift/Encodable": {
      "abstract": [
        {
          "text": "A type that can encode itself to an external representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Encodable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Encodable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Encodable"
        }
      ],
      "role": "symbol",
      "title": "Encodable",
      "type": "topic",
      "url": "/documentation/swift/encodable"
    },
    "doc://com.apple.Swift/documentation/Swift/Equatable": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Equatable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/swift/equatable"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with an integer literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByIntegerLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByIntegerLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByIntegerLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebyintegerliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/FixedWidthInteger": {
      "abstract": [
        {
          "text": "An integer type that uses a fixed size for every instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FixedWidthInteger"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/FixedWidthInteger",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FixedWidthInteger"
        }
      ],
      "role": "symbol",
      "title": "FixedWidthInteger",
      "type": "topic",
      "url": "/documentation/swift/fixedwidthinteger"
    },
    "doc://com.apple.Swift/documentation/Swift/Hashable": {
      "abstract": [
        {
          "text": "A type that can be hashed into a ",
          "type": "text"
        },
        {
          "code": "Hasher",
          "type": "codeVoice"
        },
        {
          "text": " to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Hashable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/swift/hashable"
    },
    "doc://com.apple.Swift/documentation/Swift/Int": {
      "abstract": [
        {
          "text": "A signed integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int"
        }
      ],
      "role": "symbol",
      "title": "Int",
      "type": "topic",
      "url": "/documentation/swift/int"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/!=(_:_:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "!="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/!=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "!=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int/!=(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/&__=(_:_:)-2i06i": {
      "abstract": [
        {
          "text": "Calculates the result of shifting a value’s binary representation the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "specified number of digits to the right, masking the shift amount to the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type’s bit width, and stores the result in the left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "&>>="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/&__=(_:_:)-2i06i",
      "kind": "symbol",
      "role": "symbol",
      "title": "&>>=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int/&__=(_:_:)-2i06i"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/&__=(_:_:)-58orm": {
      "abstract": [
        {
          "text": "Returns the result of shifting a value’s binary representation the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "specified number of digits to the left, masking the shift amount to the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type’s bit width, and stores the result in the left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "&<<="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/&__=(_:_:)-58orm",
      "kind": "symbol",
      "role": "symbol",
      "title": "&<<=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int/&__=(_:_:)-58orm"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/AdditiveArithmetic-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/AdditiveArithmetic-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "AdditiveArithmetic Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/additivearithmetic-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/AtomicRepresentable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/AtomicRepresentable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "AtomicRepresentable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/atomicrepresentable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/BinaryInteger-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/BinaryInteger-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "BinaryInteger Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/binaryinteger-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/CodingKeyRepresentable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/CodingKeyRepresentable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CodingKeyRepresentable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/codingkeyrepresentable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/Comparable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/Comparable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Comparable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/comparable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/CustomReflectable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/CustomReflectable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomReflectable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/customreflectable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/CustomURLRepresentationParameterConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/CustomURLRepresentationParameterConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomURLRepresentationParameterConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/customurlrepresentationparameterconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/Decodable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/Decodable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Decodable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/decodable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/Encodable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/Encodable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Encodable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/encodable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/EntityIdentifierConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/EntityIdentifierConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "EntityIdentifierConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/entityidentifierconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/Equatable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/Equatable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Equatable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/equatable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/ExpressibleByIntegerLiteral-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/ExpressibleByIntegerLiteral-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByIntegerLiteral Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/expressiblebyintegerliteral-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/FixedWidthInteger-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/FixedWidthInteger-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "FixedWidthInteger Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/fixedwidthinteger-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/Hashable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/Hashable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Hashable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/hashable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/IntegerLiteralType": {
      "abstract": [
        {
          "text": "A type that represents an integer literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "IntegerLiteralType"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/IntegerLiteralType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IntegerLiteralType"
        }
      ],
      "role": "symbol",
      "title": "Int.IntegerLiteralType",
      "type": "topic",
      "url": "/documentation/swift/int/integerliteraltype"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/MLDataValueConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/MLDataValueConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "MLDataValueConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/mldatavalueconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/MLIdentifier-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/MLIdentifier-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "MLIdentifier Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/mlidentifier-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/Magnitude-swift.typealias": {
      "abstract": [
        {
          "text": "A type that can represent the absolute value of any possible value of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "this type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Magnitude"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/Magnitude-swift.typealias",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Magnitude"
        }
      ],
      "role": "symbol",
      "title": "Int.Magnitude",
      "type": "topic",
      "url": "/documentation/swift/int/magnitude-swift.typealias"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/SIMD16Storage": {
      "abstract": [
        {
          "text": "Storage for a vector of 16 integers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SIMD16Storage"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/SIMD16Storage",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SIMD16Storage"
        }
      ],
      "role": "symbol",
      "title": "Int.SIMD16Storage",
      "type": "topic",
      "url": "/documentation/swift/int/simd16storage"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/SIMD2Storage": {
      "abstract": [
        {
          "text": "Storage for a vector of two integers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SIMD2Storage"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/SIMD2Storage",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SIMD2Storage"
        }
      ],
      "role": "symbol",
      "title": "Int.SIMD2Storage",
      "type": "topic",
      "url": "/documentation/swift/int/simd2storage"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/SIMD32Storage": {
      "abstract": [
        {
          "text": "Storage for a vector of 32 integers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SIMD32Storage"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/SIMD32Storage",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SIMD32Storage"
        }
      ],
      "role": "symbol",
      "title": "Int.SIMD32Storage",
      "type": "topic",
      "url": "/documentation/swift/int/simd32storage"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/SIMD4Storage": {
      "abstract": [
        {
          "text": "Storage for a vector of four integers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SIMD4Storage"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/SIMD4Storage",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SIMD4Storage"
        }
      ],
      "role": "symbol",
      "title": "Int.SIMD4Storage",
      "type": "topic",
      "url": "/documentation/swift/int/simd4storage"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/SIMD64Storage": {
      "abstract": [
        {
          "text": "Storage for a vector of 64 integers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SIMD64Storage"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/SIMD64Storage",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SIMD64Storage"
        }
      ],
      "role": "symbol",
      "title": "Int.SIMD64Storage",
      "type": "topic",
      "url": "/documentation/swift/int/simd64storage"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/SIMD8Storage": {
      "abstract": [
        {
          "text": "Storage for a vector of eight integers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SIMD8Storage"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/SIMD8Storage",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SIMD8Storage"
        }
      ],
      "role": "symbol",
      "title": "Int.SIMD8Storage",
      "type": "topic",
      "url": "/documentation/swift/int/simd8storage"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/SIMDMaskScalar": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SIMDMaskScalar"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/SIMDMaskScalar",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SIMDMaskScalar"
        }
      ],
      "role": "symbol",
      "title": "Int.SIMDMaskScalar",
      "type": "topic",
      "url": "/documentation/swift/int/simdmaskscalar"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/SIMDScalar-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/SIMDScalar-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "SIMDScalar Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/simdscalar-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/SignedInteger-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/SignedInteger-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "SignedInteger Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/signedinteger-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/SignedNumeric-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/SignedNumeric-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "SignedNumeric Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/signednumeric-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/Specification": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Specification"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/Specification",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Specification"
        }
      ],
      "role": "symbol",
      "title": "Int.Specification",
      "type": "topic",
      "url": "/documentation/swift/int/specification"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/Stride": {
      "abstract": [
        {
          "text": "A type that represents the distance between two values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Stride"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/Stride",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Stride"
        }
      ],
      "role": "symbol",
      "title": "Int.Stride",
      "type": "topic",
      "url": "/documentation/swift/int/stride"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/Strideable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/Strideable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Strideable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int/strideable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/UnwrappedType": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnwrappedType"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/UnwrappedType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "UnwrappedType"
        }
      ],
      "role": "symbol",
      "title": "Int.UnwrappedType",
      "type": "topic",
      "url": "/documentation/swift/int/unwrappedtype"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/ValueType": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ValueType"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/ValueType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ValueType"
        }
      ],
      "role": "symbol",
      "title": "Int.ValueType",
      "type": "topic",
      "url": "/documentation/swift/int/valuetype"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/Words-swift.struct": {
      "abstract": [
        {
          "text": "A type that represents the words of this integer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Words"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/Words-swift.struct",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Words"
        }
      ],
      "role": "symbol",
      "title": "Int.Words",
      "type": "topic",
      "url": "/documentation/swift/int/words-swift.struct"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/_(_:_:)-3wpum": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the value of the first",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "argument is less than that of the second argument.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "<"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/_(_:_:)-3wpum",
      "kind": "symbol",
      "role": "symbol",
      "title": "<(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int/_(_:_:)-3wpum"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/_=(_:_:)-1ypi9": {
      "abstract": [
        {
          "text": "Stores the result of performing a bitwise XOR operation on the two given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values in the left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "^="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/_=(_:_:)-1ypi9",
      "kind": "symbol",
      "role": "symbol",
      "title": "^=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int/_=(_:_:)-1ypi9"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/_=(_:_:)-30t77": {
      "abstract": [
        {
          "text": "Divides the first value by the second and stores the remainder in the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "%="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/_=(_:_:)-30t77",
      "kind": "symbol",
      "role": "symbol",
      "title": "%=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int/_=(_:_:)-30t77"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/_=(_:_:)-4b29i": {
      "abstract": [
        {
          "text": "Stores the result of performing a bitwise OR operation on the two given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values in the left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "|="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/_=(_:_:)-4b29i",
      "kind": "symbol",
      "role": "symbol",
      "title": "|=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int/_=(_:_:)-4b29i"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/addingReportingOverflow(_:)": {
      "abstract": [
        {
          "text": "Returns the sum of this value and the given value, along with a Boolean",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value indicating whether overflow occurred in the operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "addingReportingOverflow"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> (partialValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", overflow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/addingReportingOverflow(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "addingReportingOverflow(_:)",
      "type": "topic",
      "url": "/documentation/swift/int/addingreportingoverflow(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/advanced(by:)": {
      "abstract": [
        {
          "text": "Returns a value that is offset the specified distance from this value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "advanced"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/advanced(by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "advanced(by:)",
      "type": "topic",
      "url": "/documentation/swift/int/advanced(by:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/bigEndian": {
      "abstract": [
        {
          "text": "The big-endian representation of this integer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bigEndian"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/bigEndian",
      "kind": "symbol",
      "role": "symbol",
      "title": "bigEndian",
      "type": "topic",
      "url": "/documentation/swift/int/bigendian"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/bitWidth": {
      "abstract": [
        {
          "text": "The number of bits used for the underlying binary representation of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values of this type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bitWidth"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/bitWidth",
      "kind": "symbol",
      "role": "symbol",
      "title": "bitWidth",
      "type": "topic",
      "url": "/documentation/swift/int/bitwidth"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/bitWidth-swift.property": {
      "abstract": [
        {
          "text": "The number of bits in the current binary representation of this value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bitWidth"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/bitWidth-swift.property",
      "kind": "symbol",
      "role": "symbol",
      "title": "bitWidth",
      "type": "topic",
      "url": "/documentation/swift/int/bitwidth-swift.property"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/byteSwapped": {
      "abstract": [
        {
          "text": "A representation of this integer with the byte order swapped.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "byteSwapped"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/byteSwapped",
      "kind": "symbol",
      "role": "symbol",
      "title": "byteSwapped",
      "type": "topic",
      "url": "/documentation/swift/int/byteswapped"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/customMirror": {
      "abstract": [
        {
          "text": "A mirror that reflects the ",
          "type": "text"
        },
        {
          "code": "Int",
          "type": "codeVoice"
        },
        {
          "text": " instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "customMirror"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6MirrorV",
          "text": "Mirror"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/customMirror",
      "kind": "symbol",
      "role": "symbol",
      "title": "customMirror",
      "type": "topic",
      "url": "/documentation/swift/int/custommirror"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/customPlaygroundQuickLook": {
      "abstract": [
        {
          "text": "A custom playground Quick Look for the ",
          "type": "text"
        },
        {
          "code": "Int",
          "type": "codeVoice"
        },
        {
          "text": " instance.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "customPlaygroundQuickLook"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "_PlaygroundQuickLook"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/customPlaygroundQuickLook",
      "kind": "symbol",
      "role": "symbol",
      "title": "customPlaygroundQuickLook",
      "type": "topic",
      "url": "/documentation/swift/int/customplaygroundquicklook"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/dataValue": {
      "abstract": [
        {
          "text": "The value of the conforming type’s instance wrapped in a data value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dataValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:8CreateML11MLDataValueO",
          "text": "MLDataValue"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/dataValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "dataValue",
      "type": "topic",
      "url": "/documentation/swift/int/datavalue"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/dataValueType": {
      "abstract": [
        {
          "text": "The underlying type the conforming type uses when it wraps itself in a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "data value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dataValueType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:8CreateML11MLDataValueO",
          "text": "MLDataValue"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:8CreateML11MLDataValueO0D4TypeO",
          "text": "ValueType"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/dataValueType",
      "kind": "symbol",
      "role": "symbol",
      "title": "dataValueType",
      "type": "topic",
      "url": "/documentation/swift/int/datavaluetype"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/defaultResolverSpecification": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "defaultResolverSpecification"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10AppIntents21ResolverSpecificationP",
          "text": "ResolverSpecification"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/defaultResolverSpecification",
      "kind": "symbol",
      "role": "symbol",
      "title": "defaultResolverSpecification",
      "type": "topic",
      "url": "/documentation/swift/int/defaultresolverspecification"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/description": {
      "abstract": [
        {
          "text": "A textual representation of this value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "description"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/description",
      "kind": "symbol",
      "role": "symbol",
      "title": "description",
      "type": "topic",
      "url": "/documentation/swift/int/description"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/distance(to:)": {
      "abstract": [
        {
          "text": "Returns the distance from this value to the given value, expressed as a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "stride.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "distance"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/distance(to:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "distance(to:)",
      "type": "topic",
      "url": "/documentation/swift/int/distance(to:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/dividedReportingOverflow(by:)": {
      "abstract": [
        {
          "text": "Returns the quotient obtained by dividing this value by the given value,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "along with a Boolean value indicating whether overflow occurred in the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dividedReportingOverflow"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> (partialValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", overflow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/dividedReportingOverflow(by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "dividedReportingOverflow(by:)",
      "type": "topic",
      "url": "/documentation/swift/int/dividedreportingoverflow(by:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/dividingFullWidth(_:)": {
      "abstract": [
        {
          "text": "Returns a tuple containing the quotient and remainder of dividing the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given value by this value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dividingFullWidth"
        },
        {
          "kind": "text",
          "text": "((high"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", low"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si9Magnitudea",
          "text": "Magnitude"
        },
        {
          "kind": "text",
          "text": ")) -> (quotient"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", remainder"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/dividingFullWidth(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "dividingFullWidth(_:)",
      "type": "topic",
      "url": "/documentation/swift/int/dividingfullwidth(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/encode(to:)": {
      "abstract": [
        {
          "text": "Encodes this value into the given encoder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7EncoderP",
          "text": "Encoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/encode(to:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "encode(to:)",
      "type": "topic",
      "url": "/documentation/swift/int/encode(to:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/hash(into:)": {
      "abstract": [
        {
          "text": "Hashes the essential components of this value by feeding them into the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given hasher.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hash"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "into"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6HasherV",
          "text": "Hasher"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/hash(into:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "hash(into:)",
      "type": "topic",
      "url": "/documentation/swift/int/hash(into:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/hashValue": {
      "abstract": [
        {
          "text": "The hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hashValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/hashValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "hashValue",
      "type": "topic",
      "url": "/documentation/swift/int/hashvalue"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/identifierValue": {
      "abstract": [
        {
          "text": "The value of the unique identifier wrapped in a data value.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "identifierValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:8CreateML11MLDataValueO",
          "text": "MLDataValue"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/identifierValue",
      "kind": "symbol",
      "role": "symbol",
      "title": "identifierValue",
      "type": "topic",
      "url": "/documentation/swift/int/identifiervalue"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init()": {
      "abstract": [
        {
          "text": "Creates a new value equal to zero.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init()",
      "kind": "symbol",
      "role": "symbol",
      "title": "init()",
      "type": "topic",
      "url": "/documentation/swift/int/init()"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-2hmii": {
      "abstract": [
        {
          "text": "Creates a new integer value from the given string.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-2hmii",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(_:)-2hmii"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-2oscb": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, rounding toward",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "zero.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sf",
          "text": "Float"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-2oscb",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(_:)-2oscb"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-3huv0": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, rounding toward",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "zero.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float16V",
          "text": "Float16"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-3huv0",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(_:)-3huv0"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-3mb3q": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSNumber",
          "text": "NSNumber"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-3mb3q",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(_:)-3mb3q"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-4ekvl": {
      "abstract": [
        {
          "text": "Creates a new instance from the given integer.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "FixedWidthInteger",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-4ekvl",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(_:)-4ekvl"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-5q6q5": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14CoreFoundation7CGFloatV",
          "text": "CGFloat"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-5q6q5",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(_:)-5q6q5"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-66i0w": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, rounding toward",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "zero.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-66i0w",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(_:)-66i0w"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-6gt9z": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-6gt9z",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(_:)-6gt9z"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-8vbwo": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, rounding toward",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "zero.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sd",
          "text": "Double"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-8vbwo",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(_:)-8vbwo"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(_:radix:)": {
      "abstract": [
        {
          "text": "Creates a new integer value from the given string and radix.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "radix"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(_:radix:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:radix:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(_:radix:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(bigEndian:)": {
      "abstract": [
        {
          "text": "Creates an integer from its big-endian representation, changing the byte",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "order if necessary.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "bigEndian"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(bigEndian:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(bigEndian:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(bigendian:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(bitPattern:)-2i0qy": {
      "abstract": [
        {
          "text": "Creates a new value with the bit pattern of the given pointer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "P"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "bitPattern"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "P"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(bitPattern:)-2i0qy",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(bitPattern:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(bitpattern:)-2i0qy"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(bitPattern:)-2o9co": {
      "abstract": [
        {
          "text": "Creates an integer that captures the full value of the given object",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "identifier.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "bitPattern"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SO",
          "text": "ObjectIdentifier"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(bitPattern:)-2o9co",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(bitPattern:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(bitpattern:)-2o9co"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(bitPattern:)-5qm7a": {
      "abstract": [
        {
          "text": "Creates a new value with the bit pattern of the given pointer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "bitPattern"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s13OpaquePointerV",
          "text": "OpaquePointer"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(bitPattern:)-5qm7a",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(bitPattern:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(bitpattern:)-5qm7a"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(bitPattern:)-72037": {
      "abstract": [
        {
          "text": "Creates a new instance with the same memory representation as the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "bitPattern"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Su",
          "text": "UInt"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(bitPattern:)-72037",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(bitPattern:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(bitpattern:)-72037"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(clamping:)": {
      "abstract": [
        {
          "text": "Creates a new instance with the representable value that’s closest to the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given integer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Other"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "clamping"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Other"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(clamping:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(clamping:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(clamping:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-177ax": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSNumber",
          "text": "NSNumber"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-177ax",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(exactly:)-177ax"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-5kot1": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, if it can be",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "represented exactly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-5kot1",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(exactly:)-5kot1"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-5xh2s": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, if it can be",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "represented exactly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float16V",
          "text": "Float16"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-5xh2s",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(exactly:)-5xh2s"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-77kq8": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, if it can be",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "represented exactly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sd",
          "text": "Double"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-77kq8",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(exactly:)-77kq8"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-7qdwf": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, if it can be",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "represented exactly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sf",
          "text": "Float"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-7qdwf",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(exactly:)-7qdwf"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-7yhn6": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-7yhn6",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(exactly:)-7yhn6"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-b1dy": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "FixedWidthInteger",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-b1dy",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(exactly:)-b1dy"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(from:)-5ru5": {
      "abstract": [
        {
          "text": "Creates a new instance by decoding from the given decoder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(from:)-5ru5",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(from:)-5ru5"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(from:)-kl1p": {
      "abstract": [
        {
          "text": "Creates an instance of the conforming type from a data value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:8CreateML11MLDataValueO",
          "text": "MLDataValue"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(from:)-kl1p",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(from:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(from:)-kl1p"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(integerLiteral:)": {
      "abstract": [],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "_ExpressibleByBuiltinIntegerLiteral",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "integerLiteral"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(integerLiteral:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(integerLiteral:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(integerliteral:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(littleEndian:)": {
      "abstract": [
        {
          "text": "Creates an integer from its little-endian representation, changing the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "byte order if necessary.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "littleEndian"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(littleEndian:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(littleEndian:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(littleendian:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(truncating:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "truncating"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSNumber",
          "text": "NSNumber"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(truncating:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(truncating:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(truncating:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/init(truncatingIfNeeded:)": {
      "abstract": [
        {
          "text": "Creates a new instance from the bit pattern of the given instance by",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sign-extending or truncating to fit this type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "truncatingIfNeeded"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/init(truncatingIfNeeded:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(truncatingIfNeeded:)",
      "type": "topic",
      "url": "/documentation/swift/int/init(truncatingifneeded:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/isMultiple(of:)": {
      "abstract": [
        {
          "text": "Returns ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": " if this value is a multiple of the given value, and ",
          "type": "text"
        },
        {
          "code": "false",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "otherwise.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "FixedWidthInteger",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isMultiple"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/isMultiple(of:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "isMultiple(of:)",
      "type": "topic",
      "url": "/documentation/swift/int/ismultiple(of:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/isSigned": {
      "abstract": [
        {
          "text": "A Boolean value indicating whether this type is a signed integer type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isSigned"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/isSigned",
      "kind": "symbol",
      "role": "symbol",
      "title": "isSigned",
      "type": "topic",
      "url": "/documentation/swift/int/issigned"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/leadingZeroBitCount": {
      "abstract": [
        {
          "text": "The number of leading zeros in this value’s binary representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "leadingZeroBitCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/leadingZeroBitCount",
      "kind": "symbol",
      "role": "symbol",
      "title": "leadingZeroBitCount",
      "type": "topic",
      "url": "/documentation/swift/int/leadingzerobitcount"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/littleEndian": {
      "abstract": [
        {
          "text": "The little-endian representation of this integer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "littleEndian"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/littleEndian",
      "kind": "symbol",
      "role": "symbol",
      "title": "littleEndian",
      "type": "topic",
      "url": "/documentation/swift/int/littleendian"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/magnitude-swift.property": {
      "abstract": [
        {
          "text": "The magnitude of this value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "magnitude"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Su",
          "text": "UInt"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/magnitude-swift.property",
      "kind": "symbol",
      "role": "symbol",
      "title": "magnitude",
      "type": "topic",
      "url": "/documentation/swift/int/magnitude-swift.property"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/max": {
      "abstract": [
        {
          "text": "The maximum representable integer in this type.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "FixedWidthInteger",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "max"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/max",
      "kind": "symbol",
      "role": "symbol",
      "title": "max",
      "type": "topic",
      "url": "/documentation/swift/int/max"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/min": {
      "abstract": [
        {
          "text": "The minimum representable integer in this type.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "FixedWidthInteger",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "min"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/min",
      "kind": "symbol",
      "role": "symbol",
      "title": "min",
      "type": "topic",
      "url": "/documentation/swift/int/min"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/multipliedFullWidth(by:)": {
      "abstract": [
        {
          "text": "Returns a tuple containing the high and low parts of the result of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "multiplying this value by the given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "multipliedFullWidth"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> (high"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", low"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si9Magnitudea",
          "text": "Magnitude"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/multipliedFullWidth(by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "multipliedFullWidth(by:)",
      "type": "topic",
      "url": "/documentation/swift/int/multipliedfullwidth(by:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/multipliedReportingOverflow(by:)": {
      "abstract": [
        {
          "text": "Returns the product of this value and the given value, along with a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "Boolean value indicating whether overflow occurred in the operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "multipliedReportingOverflow"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> (partialValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", overflow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/multipliedReportingOverflow(by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "multipliedReportingOverflow(by:)",
      "type": "topic",
      "url": "/documentation/swift/int/multipliedreportingoverflow(by:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/negate()": {
      "abstract": [
        {
          "text": "Replaces this value with its additive inverse.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "negate"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/negate()",
      "kind": "symbol",
      "role": "symbol",
      "title": "negate()",
      "type": "topic",
      "url": "/documentation/swift/int/negate()"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/nonzeroBitCount": {
      "abstract": [
        {
          "text": "The number of bits equal to 1 in this value’s binary representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "nonzeroBitCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/nonzeroBitCount",
      "kind": "symbol",
      "role": "symbol",
      "title": "nonzeroBitCount",
      "type": "topic",
      "url": "/documentation/swift/int/nonzerobitcount"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/quotientAndRemainder(dividingBy:)": {
      "abstract": [
        {
          "text": "Returns the quotient and remainder of this value divided by the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "quotientAndRemainder"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "dividingBy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ") -> (quotient"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ", remainder"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/quotientAndRemainder(dividingBy:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "quotientAndRemainder(dividingBy:)",
      "type": "topic",
      "url": "/documentation/swift/int/quotientandremainder(dividingby:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/random(in:)-8zzqh": {
      "abstract": [
        {
          "text": "Returns a random value within the specified range.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "random"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "in"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SN",
          "text": "ClosedRange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/random(in:)-8zzqh",
      "kind": "symbol",
      "role": "symbol",
      "title": "random(in:)",
      "type": "topic",
      "url": "/documentation/swift/int/random(in:)-8zzqh"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/random(in:)-9mjpw": {
      "abstract": [
        {
          "text": "Returns a random value within the specified range.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "random"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "in"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sn",
          "text": "Range"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/random(in:)-9mjpw",
      "kind": "symbol",
      "role": "symbol",
      "title": "random(in:)",
      "type": "topic",
      "url": "/documentation/swift/int/random(in:)-9mjpw"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/random(in:using:)-3dwv4": {
      "abstract": [
        {
          "text": "Returns a random value within the specified range, using the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "generator as a source for randomness.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "random"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "in"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SN",
          "text": "ClosedRange"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "using"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/random(in:using:)-3dwv4",
      "kind": "symbol",
      "role": "symbol",
      "title": "random(in:using:)",
      "type": "topic",
      "url": "/documentation/swift/int/random(in:using:)-3dwv4"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/random(in:using:)-4lsb5": {
      "abstract": [
        {
          "text": "Returns a random value within the specified range, using the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "generator as a source for randomness.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "random"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "in"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sn",
          "text": "Range"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "using"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/random(in:using:)-4lsb5",
      "kind": "symbol",
      "role": "symbol",
      "title": "random(in:using:)",
      "type": "topic",
      "url": "/documentation/swift/int/random(in:using:)-4lsb5"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/remainderReportingOverflow(dividingBy:)": {
      "abstract": [
        {
          "text": "Returns the remainder after dividing this value by the given value, along",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "with a Boolean value indicating whether overflow occurred during division.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "remainderReportingOverflow"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "dividingBy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> (partialValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", overflow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/remainderReportingOverflow(dividingBy:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "remainderReportingOverflow(dividingBy:)",
      "type": "topic",
      "url": "/documentation/swift/int/remainderreportingoverflow(dividingby:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/signum()": {
      "abstract": [
        {
          "text": "Returns ",
          "type": "text"
        },
        {
          "code": "-1",
          "type": "codeVoice"
        },
        {
          "text": " if this value is negative and ",
          "type": "text"
        },
        {
          "code": "1",
          "type": "codeVoice"
        },
        {
          "text": " if it’s positive;",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "otherwise, ",
          "type": "text"
        },
        {
          "code": "0",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "signum"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/signum()",
      "kind": "symbol",
      "role": "symbol",
      "title": "signum()",
      "type": "topic",
      "url": "/documentation/swift/int/signum()"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/subtractingReportingOverflow(_:)": {
      "abstract": [
        {
          "text": "Returns the difference obtained by subtracting the given value from this",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value, along with a Boolean value indicating whether overflow occurred in",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "subtractingReportingOverflow"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> (partialValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", overflow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/subtractingReportingOverflow(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "subtractingReportingOverflow(_:)",
      "type": "topic",
      "url": "/documentation/swift/int/subtractingreportingoverflow(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/trailingZeroBitCount": {
      "abstract": [
        {
          "text": "The number of trailing zeros in this value’s binary representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "trailingZeroBitCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/trailingZeroBitCount",
      "kind": "symbol",
      "role": "symbol",
      "title": "trailingZeroBitCount",
      "type": "topic",
      "url": "/documentation/swift/int/trailingzerobitcount"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/words-swift.property": {
      "abstract": [
        {
          "text": "A collection containing the words of this value’s binary",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "representation, in order from the least significant to most significant.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "words"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si5WordsV",
          "text": "Words"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/words-swift.property",
      "kind": "symbol",
      "role": "symbol",
      "title": "words",
      "type": "topic",
      "url": "/documentation/swift/int/words-swift.property"
    },
    "doc://com.apple.Swift/documentation/Swift/Int/zero": {
      "abstract": [
        {
          "text": "The zero value.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "ExpressibleByIntegerLiteral",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "zero"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int/zero",
      "kind": "symbol",
      "role": "symbol",
      "title": "zero",
      "type": "topic",
      "url": "/documentation/swift/int/zero"
    },
    "doc://com.apple.Swift/documentation/Swift/LosslessStringConvertible": {
      "abstract": [
        {
          "text": "A type that can be represented as a string in a lossless, unambiguous way.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LosslessStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/LosslessStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LosslessStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "LosslessStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/losslessstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/MirrorPath": {
      "abstract": [
        {
          "text": "A protocol for legitimate arguments to ",
          "type": "text"
        },
        {
          "code": "Mirror",
          "type": "codeVoice"
        },
        {
          "text": "’s ",
          "type": "text"
        },
        {
          "code": "descendant",
          "type": "codeVoice"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "method.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MirrorPath"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/MirrorPath",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MirrorPath"
        }
      ],
      "role": "symbol",
      "title": "MirrorPath",
      "type": "topic",
      "url": "/documentation/swift/mirrorpath"
    },
    "doc://com.apple.Swift/documentation/Swift/Numeric": {
      "abstract": [
        {
          "text": "A type with values that support multiplication.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Numeric"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Numeric",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Numeric"
        }
      ],
      "role": "symbol",
      "title": "Numeric",
      "type": "topic",
      "url": "/documentation/swift/numeric"
    },
    "doc://com.apple.Swift/documentation/Swift/SIMDScalar": {
      "abstract": [
        {
          "text": "A type that can be used as an element in a SIMD vector.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SIMDScalar"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SIMDScalar",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SIMDScalar"
        }
      ],
      "role": "symbol",
      "title": "SIMDScalar",
      "type": "topic",
      "url": "/documentation/swift/simdscalar"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.Swift/documentation/Swift/SignedInteger": {
      "abstract": [
        {
          "text": "An integer type that can represent both positive and negative values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SignedInteger"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SignedInteger",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SignedInteger"
        }
      ],
      "role": "symbol",
      "title": "SignedInteger",
      "type": "topic",
      "url": "/documentation/swift/signedinteger"
    },
    "doc://com.apple.Swift/documentation/Swift/SignedNumeric": {
      "abstract": [
        {
          "text": "A numeric type with a negation operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SignedNumeric"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SignedNumeric",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SignedNumeric"
        }
      ],
      "role": "symbol",
      "title": "SignedNumeric",
      "type": "topic",
      "url": "/documentation/swift/signednumeric"
    },
    "doc://com.apple.Swift/documentation/Swift/Strideable": {
      "abstract": [
        {
          "text": "A type representing continuous, one-dimensional values that can be offset",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and measured.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Strideable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Strideable"
        }
      ],
      "role": "symbol",
      "title": "Strideable",
      "type": "topic",
      "url": "/documentation/swift/strideable"
    },
    "doc://com.apple.Swift/documentation/Swift/String": {
      "abstract": [
        {
          "text": "A Unicode string value that is a collection of characters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/String",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "String"
        }
      ],
      "role": "symbol",
      "title": "String",
      "type": "topic",
      "url": "/documentation/swift/string"
    },
    "doc://com.apple.Swift/documentation/Swift/abs(_:)": {
      "abstract": [
        {
          "text": "Returns the absolute value of the given number.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "abs"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/abs(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "abs(_:)",
      "type": "topic",
      "url": "/documentation/swift/abs(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/integer-operators": {
      "abstract": [
        {
          "text": "Perform arithmetic and bitwise operations or compare values.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/integer-operators",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Integer Operators",
      "type": "topic",
      "url": "/documentation/swift/integer-operators"
    },
    "doc://com.apple.Swift/documentation/Swift/swift-standard-library": {
      "abstract": [
        {
          "text": "Solve complex problems and write high-performance, readable code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/swift-standard-library",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Swift Standard Library",
      "type": "topic",
      "url": "/documentation/swift/swift-standard-library"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicRepresentable": {
      "abstract": [
        {
          "text": "A type that supports atomic operations through a separate atomic storage",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AtomicRepresentable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicRepresentable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AtomicRepresentable"
        }
      ],
      "role": "symbol",
      "title": "AtomicRepresentable",
      "type": "topic",
      "url": "/documentation/synchronization/atomicrepresentable"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:10AppIntents23RangeComparablePropertyP": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RangeComparableProperty"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "text": "_IntentValue"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SL",
          "text": "Comparable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:10AppIntents23RangeComparablePropertyP",
      "kind": "symbol",
      "role": "symbol",
      "title": "RangeComparableProperty",
      "type": "topic",
      "url": "/documentation/AppIntents/RangeComparableProperty"
    },
    "doc://com.externally.resolved.symbol/s:10AppIntents27EntityIdentifierConvertibleP": {
      "abstract": [
        {
          "text": "An interface for converting between an entity’s identifier and its string representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EntityIdentifierConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:10AppIntents27EntityIdentifierConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "EntityIdentifierConvertible",
      "type": "topic",
      "url": "/documentation/AppIntents/EntityIdentifierConvertible"
    },
    "doc://com.externally.resolved.symbol/s:10AppIntents43CustomURLRepresentationParameterConvertibleP": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomURLRepresentationParameterConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:10AppIntents43CustomURLRepresentationParameterConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomURLRepresentationParameterConvertible",
      "type": "topic",
      "url": "/documentation/AppIntents/CustomURLRepresentationParameterConvertible"
    },
    "doc://com.externally.resolved.symbol/s:17RealityFoundation12BindableDataP": {
      "abstract": [
        {
          "text": "An opaque base protocol for bindable data objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BindableData"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:17RealityFoundation12BindableDataP",
      "kind": "symbol",
      "role": "symbol",
      "title": "BindableData",
      "type": "topic",
      "url": "/documentation/RealityKit/BindableData"
    },
    "doc://com.externally.resolved.symbol/s:6Charts26PrimitivePlottableProtocolP": {
      "abstract": [
        {
          "text": "A type that represents the primitive plottable types supported by the framework. Don’t use this type directly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PrimitivePlottableProtocol"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6Charts9PlottableP",
          "text": "Plottable"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": " == "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6Charts9PlottableP09PrimitiveB0Qa",
          "text": "PrimitivePlottable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:6Charts26PrimitivePlottableProtocolP",
      "kind": "symbol",
      "role": "symbol",
      "title": "PrimitivePlottableProtocol",
      "type": "topic",
      "url": "/documentation/Charts/PrimitivePlottableProtocol"
    },
    "doc://com.externally.resolved.symbol/s:6Charts9PlottableP": {
      "abstract": [
        {
          "text": "A type that can serve as data to plot in a chart.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Plottable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:6Charts9PlottableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Plottable",
      "type": "topic",
      "url": "/documentation/Charts/Plottable"
    },
    "doc://com.externally.resolved.symbol/s:6CoreML23MLTensorRangeExpressionP": {
      "abstract": [
        {
          "text": "A type that can be used to slice a dimension of a tensor. Don’t use this type directly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MLTensorRangeExpression"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s8SendableP",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:6CoreML23MLTensorRangeExpressionP",
      "kind": "symbol",
      "role": "symbol",
      "title": "MLTensorRangeExpression",
      "type": "topic",
      "url": "/documentation/CoreML/MLTensorRangeExpression"
    },
    "doc://com.externally.resolved.symbol/s:8CloudKit21CKRecordValueProtocolP": {
      "abstract": [
        {
          "text": "A description of a CloudKit record value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CKRecordValueProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:8CloudKit21CKRecordValueProtocolP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CKRecordValueProtocol",
      "type": "topic",
      "url": "/documentation/CloudKit/CKRecordValueProtocol"
    },
    "doc://com.externally.resolved.symbol/s:8CreateML12MLIdentifierP": {
      "abstract": [
        {
          "text": "A type the Create ML framework can use as a machine learning identifier.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MLIdentifier"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:8CreateML12MLIdentifierP",
      "kind": "symbol",
      "role": "symbol",
      "title": "MLIdentifier",
      "type": "topic",
      "url": "/documentation/CreateML/MLIdentifier"
    },
    "doc://com.externally.resolved.symbol/s:8CreateML22MLDataValueConvertibleP": {
      "abstract": [
        {
          "text": "A type that can convert itself to and from a data value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MLDataValueConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:8CreateML22MLDataValueConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "MLDataValueConvertible",
      "type": "topic",
      "url": "/documentation/CreateML/MLDataValueConvertible"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/AdditiveArithmetic",
        "doc://com.apple.Swift/documentation/Synchronization/AtomicRepresentable",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger",
        "doc://com.externally.resolved.symbol/s:17RealityFoundation12BindableDataP",
        "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
        "doc://com.externally.resolved.symbol/s:8CloudKit21CKRecordValueProtocolP",
        "doc://com.apple.Swift/documentation/Swift/CVarArg",
        "doc://com.apple.Swift/documentation/Swift/CodingKeyRepresentable",
        "doc://com.apple.Swift/documentation/Swift/Comparable",
        "doc://com.apple.Swift/documentation/Swift/Copyable",
        "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
        "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
        "doc://com.externally.resolved.symbol/s:10AppIntents43CustomURLRepresentationParameterConvertibleP",
        "doc://com.apple.Swift/documentation/Swift/Decodable",
        "doc://com.apple.Swift/documentation/Swift/Encodable",
        "doc://com.externally.resolved.symbol/s:10AppIntents27EntityIdentifierConvertibleP",
        "doc://com.apple.Swift/documentation/Swift/Equatable",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral",
        "doc://com.apple.Swift/documentation/Swift/FixedWidthInteger",
        "doc://com.apple.Swift/documentation/Swift/Hashable",
        "doc://com.apple.Swift/documentation/Swift/LosslessStringConvertible",
        "doc://com.externally.resolved.symbol/s:8CreateML22MLDataValueConvertibleP",
        "doc://com.externally.resolved.symbol/s:8CreateML12MLIdentifierP",
        "doc://com.externally.resolved.symbol/s:6CoreML23MLTensorRangeExpressionP",
        "doc://com.apple.Swift/documentation/Swift/MirrorPath",
        "doc://com.apple.Swift/documentation/Swift/Numeric",
        "doc://com.externally.resolved.symbol/s:6Charts9PlottableP",
        "doc://com.externally.resolved.symbol/s:6Charts26PrimitivePlottableProtocolP",
        "doc://com.externally.resolved.symbol/s:10AppIntents23RangeComparablePropertyP",
        "doc://com.apple.Swift/documentation/Swift/SIMDScalar",
        "doc://com.apple.Swift/documentation/Swift/Sendable",
        "doc://com.apple.Swift/documentation/Swift/SignedInteger",
        "doc://com.apple.Swift/documentation/Swift/SignedNumeric",
        "doc://com.apple.Swift/documentation/Swift/Strideable"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Standard-Library",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Double",
        "doc://com.apple.Swift/documentation/Swift/String",
        "doc://com.apple.Swift/documentation/Swift/Array",
        "doc://com.apple.Swift/documentation/Swift/Dictionary",
        "doc://com.apple.Swift/documentation/Swift/swift-standard-library"
      ],
      "title": "Standard Library"
    }
  ],
  "topicSections": [
    {
      "anchor": "Converting-Integers",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-4ekvl",
        "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-b1dy",
        "doc://com.apple.Swift/documentation/Swift/Int/init(clamping:)",
        "doc://com.apple.Swift/documentation/Swift/Int/init(truncatingIfNeeded:)",
        "doc://com.apple.Swift/documentation/Swift/Int/init(bitPattern:)-72037",
        "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-177ax",
        "doc://com.apple.Swift/documentation/Swift/Int/init(truncating:)"
      ],
      "title": "Converting Integers"
    },
    {
      "anchor": "Converting-Floating-Point-Values",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-6gt9z",
        "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-8vbwo",
        "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-2oscb",
        "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-3huv0",
        "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-66i0w",
        "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-5q6q5"
      ],
      "title": "Converting Floating-Point Values"
    },
    {
      "abstract": [
        {
          "text": "These initializers result in ",
          "type": "text"
        },
        {
          "code": "nil",
          "type": "codeVoice"
        },
        {
          "text": " if the value passed can’t be represented without",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "any loss of precision.",
          "type": "text"
        }
      ],
      "anchor": "Converting-with-No-Loss-of-Precision",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-7yhn6",
        "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-77kq8",
        "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-7qdwf",
        "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-5xh2s",
        "doc://com.apple.Swift/documentation/Swift/Int/init(exactly:)-5kot1"
      ],
      "title": "Converting with No Loss of Precision"
    },
    {
      "anchor": "Converting-Strings",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-2hmii",
        "doc://com.apple.Swift/documentation/Swift/Int/init(_:radix:)"
      ],
      "title": "Converting Strings"
    },
    {
      "anchor": "Creating-a-Random-Integer",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/random(in:)-9mjpw",
        "doc://com.apple.Swift/documentation/Swift/Int/random(in:using:)-4lsb5",
        "doc://com.apple.Swift/documentation/Swift/Int/random(in:)-8zzqh",
        "doc://com.apple.Swift/documentation/Swift/Int/random(in:using:)-3dwv4"
      ],
      "title": "Creating a Random Integer"
    },
    {
      "anchor": "Performing-Calculations",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/integer-operators",
        "doc://com.apple.Swift/documentation/Swift/Int/negate()",
        "doc://com.apple.Swift/documentation/Swift/Int/quotientAndRemainder(dividingBy:)",
        "doc://com.apple.Swift/documentation/Swift/Int/isMultiple(of:)"
      ],
      "title": "Performing Calculations"
    },
    {
      "abstract": [
        {
          "text": "These methods return the result of an operation, and a flag indicating whether the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "operation overflowed the bounds of the type.",
          "type": "text"
        }
      ],
      "anchor": "Performing-Calculations-with-Overflow",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/addingReportingOverflow(_:)",
        "doc://com.apple.Swift/documentation/Swift/Int/subtractingReportingOverflow(_:)",
        "doc://com.apple.Swift/documentation/Swift/Int/multipliedReportingOverflow(by:)",
        "doc://com.apple.Swift/documentation/Swift/Int/dividedReportingOverflow(by:)",
        "doc://com.apple.Swift/documentation/Swift/Int/remainderReportingOverflow(dividingBy:)"
      ],
      "title": "Performing Calculations with Overflow"
    },
    {
      "anchor": "Performing-Double-Width-Calculations",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/multipliedFullWidth(by:)",
        "doc://com.apple.Swift/documentation/Swift/Int/dividingFullWidth(_:)"
      ],
      "title": "Performing Double-Width Calculations"
    },
    {
      "anchor": "Finding-the-Sign-and-Magnitude",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/magnitude-swift.property",
        "doc://com.apple.Swift/documentation/Swift/Int/Magnitude-swift.typealias",
        "doc://com.apple.Swift/documentation/Swift/abs(_:)",
        "doc://com.apple.Swift/documentation/Swift/Int/signum()"
      ],
      "title": "Finding the Sign and Magnitude"
    },
    {
      "anchor": "Accessing-Numeric-Constants",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/zero",
        "doc://com.apple.Swift/documentation/Swift/Int/min",
        "doc://com.apple.Swift/documentation/Swift/Int/max",
        "doc://com.apple.Swift/documentation/Swift/Int/isSigned"
      ],
      "title": "Accessing Numeric Constants"
    },
    {
      "anchor": "Working-with-Byte-Order",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/byteSwapped",
        "doc://com.apple.Swift/documentation/Swift/Int/littleEndian",
        "doc://com.apple.Swift/documentation/Swift/Int/bigEndian",
        "doc://com.apple.Swift/documentation/Swift/Int/init(littleEndian:)",
        "doc://com.apple.Swift/documentation/Swift/Int/init(bigEndian:)"
      ],
      "title": "Working with Byte Order"
    },
    {
      "anchor": "Working-with-Binary-Representation",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/bitWidth",
        "doc://com.apple.Swift/documentation/Swift/Int/bitWidth-swift.property",
        "doc://com.apple.Swift/documentation/Swift/Int/nonzeroBitCount",
        "doc://com.apple.Swift/documentation/Swift/Int/leadingZeroBitCount",
        "doc://com.apple.Swift/documentation/Swift/Int/trailingZeroBitCount",
        "doc://com.apple.Swift/documentation/Swift/Int/words-swift.property",
        "doc://com.apple.Swift/documentation/Swift/Int/Words-swift.struct"
      ],
      "title": "Working with Binary Representation"
    },
    {
      "abstract": [
        {
          "text": "These initializers create an integer with the bit pattern of the memory address of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "a pointer or class instance.",
          "type": "text"
        }
      ],
      "anchor": "Working-with-Memory-Addresses",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/init(bitPattern:)-2i0qy",
        "doc://com.apple.Swift/documentation/Swift/Int/init(bitPattern:)-2o9co",
        "doc://com.apple.Swift/documentation/Swift/Int/init(bitPattern:)-5qm7a"
      ],
      "title": "Working with Memory Addresses"
    },
    {
      "anchor": "Encoding-and-Decoding-Values",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/encode(to:)",
        "doc://com.apple.Swift/documentation/Swift/Int/init(from:)-5ru5"
      ],
      "title": "Encoding and Decoding Values"
    },
    {
      "anchor": "Describing-an-Integer",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/description",
        "doc://com.apple.Swift/documentation/Swift/Int/hash(into:)",
        "doc://com.apple.Swift/documentation/Swift/Int/customMirror"
      ],
      "title": "Describing an Integer"
    },
    {
      "anchor": "Using-an-Integer-as-a-Data-Value",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/init(from:)-kl1p",
        "doc://com.apple.Swift/documentation/Swift/Int/dataValue",
        "doc://com.apple.Swift/documentation/Swift/Int/identifierValue",
        "doc://com.apple.Swift/documentation/Swift/Int/dataValueType"
      ],
      "title": "Using an Integer as a Data Value"
    },
    {
      "anchor": "Infrequently-Used-Functionality",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/init()",
        "doc://com.apple.Swift/documentation/Swift/Int/init(integerLiteral:)",
        "doc://com.apple.Swift/documentation/Swift/Int/IntegerLiteralType",
        "doc://com.apple.Swift/documentation/Swift/Int/distance(to:)",
        "doc://com.apple.Swift/documentation/Swift/Int/advanced(by:)",
        "doc://com.apple.Swift/documentation/Swift/Int/Stride",
        "doc://com.apple.Swift/documentation/Swift/Int/hashValue"
      ],
      "title": "Infrequently Used Functionality"
    },
    {
      "anchor": "Deprecated",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/customPlaygroundQuickLook",
        "doc://com.apple.Swift/documentation/Swift/Int/init(_:)-3mb3q"
      ],
      "title": "Deprecated"
    },
    {
      "anchor": "SIMD-Supporting-Types",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/SIMDMaskScalar",
        "doc://com.apple.Swift/documentation/Swift/Int/SIMD2Storage",
        "doc://com.apple.Swift/documentation/Swift/Int/SIMD4Storage",
        "doc://com.apple.Swift/documentation/Swift/Int/SIMD8Storage",
        "doc://com.apple.Swift/documentation/Swift/Int/SIMD16Storage",
        "doc://com.apple.Swift/documentation/Swift/Int/SIMD32Storage",
        "doc://com.apple.Swift/documentation/Swift/Int/SIMD64Storage"
      ],
      "title": "SIMD-Supporting Types"
    },
    {
      "anchor": "Operators",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/!=(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Int/&__=(_:_:)-2i06i",
        "doc://com.apple.Swift/documentation/Swift/Int/&__=(_:_:)-58orm",
        "doc://com.apple.Swift/documentation/Swift/Int/_(_:_:)-3wpum",
        "doc://com.apple.Swift/documentation/Swift/Int/_=(_:_:)-1ypi9",
        "doc://com.apple.Swift/documentation/Swift/Int/_=(_:_:)-30t77",
        "doc://com.apple.Swift/documentation/Swift/Int/_=(_:_:)-4b29i"
      ],
      "title": "Operators"
    },
    {
      "anchor": "Type-Aliases",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/Specification",
        "doc://com.apple.Swift/documentation/Swift/Int/UnwrappedType",
        "doc://com.apple.Swift/documentation/Swift/Int/ValueType"
      ],
      "title": "Type Aliases"
    },
    {
      "anchor": "Type-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/defaultResolverSpecification"
      ],
      "title": "Type Properties"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int/AdditiveArithmetic-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/AtomicRepresentable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/BinaryInteger-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/CodingKeyRepresentable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/Comparable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/CustomReflectable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/CustomURLRepresentationParameterConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/Decodable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/Encodable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/EntityIdentifierConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/Equatable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/ExpressibleByIntegerLiteral-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/FixedWidthInteger-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/Hashable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/MLDataValueConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/MLIdentifier-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/SIMDScalar-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/SignedInteger-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/SignedNumeric-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int/Strideable-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/int"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
