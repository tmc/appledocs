{
  "abstract": [
    {
      "text": "Converts description definitions to a debugger Type Summary.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/DebugDescription()"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:s16DebugDescriptionyycfm",
    "fragments": [
      {
        "kind": "keyword",
        "text": "macro"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "DebugDescription"
      },
      {
        "kind": "text",
        "text": "()"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Macro",
    "symbolKind": "macro",
    "title": "DebugDescription()"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@attached"
            },
            {
              "kind": "text",
              "text": "(member) "
            },
            {
              "kind": "attribute",
              "text": "@attached"
            },
            {
              "kind": "text",
              "text": "(memberAttribute) "
            },
            {
              "kind": "keyword",
              "text": "macro"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "DebugDescription"
            },
            {
              "kind": "text",
              "text": "()"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This macro converts compatible description implementations written in Swift",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to an LLDB format known as a Type Summary. A Type Summary is LLDB’s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "equivalent to ",
              "type": "text"
            },
            {
              "code": "debugDescription",
              "type": "codeVoice"
            },
            {
              "text": ", with the distinction that it does not",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "execute code inside the debugged process. By avoiding code execution,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "descriptions can be produced faster, without potential side effects, and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "shown in situations where code execution is not performed, such as the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "variable list of an IDE.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Consider this an example. This ",
              "type": "text"
            },
            {
              "code": "Team",
              "type": "codeVoice"
            },
            {
              "text": " struct has a ",
              "type": "text"
            },
            {
              "code": "debugDescription",
              "type": "codeVoice"
            },
            {
              "text": " which",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "summarizes some key details, such as the team’s name. The debugger only",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "computes this string on demand - typically via the ",
              "type": "text"
            },
            {
              "code": "po",
              "type": "codeVoice"
            },
            {
              "text": " command. By applying",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the ",
              "type": "text"
            },
            {
              "code": "DebugDescription",
              "type": "codeVoice"
            },
            {
              "text": " macro, a matching Type Summary is constructed. This",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "allows the user to show a string like “Rams [11-2]”, without executing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "debugDescription",
              "type": "codeVoice"
            },
            {
              "text": ". This improves the usability, performance, and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "reliability of the debugging experience.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@DebugDescription",
            "struct Team: CustomDebugStringConvertible {",
            "   var name: String",
            "   var wins, losses: Int",
            "",
            "   var debugDescription: String {",
            "       \"\\(name) [\\(wins)-\\(losses)]\"",
            "   }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "DebugDescription",
              "type": "codeVoice"
            },
            {
              "text": " macro supports both ",
              "type": "text"
            },
            {
              "code": "debugDescription",
              "type": "codeVoice"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "code": "description",
              "type": "codeVoice"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "as well as a third option: a property named ",
              "type": "text"
            },
            {
              "code": "lldbDescription",
              "type": "codeVoice"
            },
            {
              "text": ". The first",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "two are implemented when conforming to the ",
              "type": "text"
            },
            {
              "code": "CustomDebugStringConvertible",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and ",
              "type": "text"
            },
            {
              "code": "CustomStringConvertible",
              "type": "codeVoice"
            },
            {
              "text": " protocols. The additional ",
              "type": "text"
            },
            {
              "code": "lldbDescription",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "property is useful when both ",
              "type": "text"
            },
            {
              "code": "debugDescription",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "description",
              "type": "codeVoice"
            },
            {
              "text": " are",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "implemented, but don’t meet the requirements of the ",
              "type": "text"
            },
            {
              "code": "DebugDescription",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "macro. If ",
              "type": "text"
            },
            {
              "code": "lldbDescription",
              "type": "codeVoice"
            },
            {
              "text": " is implemented, ",
              "type": "text"
            },
            {
              "code": "DebugDescription",
              "type": "codeVoice"
            },
            {
              "text": " choose it",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "over ",
              "type": "text"
            },
            {
              "code": "debugDescription",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "description",
              "type": "codeVoice"
            },
            {
              "text": ". Likewise, ",
              "type": "text"
            },
            {
              "code": "debugDescription",
              "type": "codeVoice"
            },
            {
              "text": " is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "preferred over ",
              "type": "text"
            },
            {
              "code": "description",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Description-Requirements",
          "level": 3,
          "text": "Description Requirements",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The description implementation has the following requirements:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The body of the description implementation must a single string",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "expression. String concatenation is not supported, use string interpolation",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "instead.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "String interpolation can reference stored properties only, functions calls",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "and other arbitrary computation are not supported. Of note, conditional",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "logic and computed properties are not supported.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Overloaded string interpolation cannot be used.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomLeafReflectable": {
      "abstract": [
        {
          "text": "A type that explicitly supplies its own mirror, but whose",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "descendant classes are not represented in the mirror unless they",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "also override ",
          "type": "text"
        },
        {
          "code": "customMirror",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomLeafReflectable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomLeafReflectable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomLeafReflectable"
        }
      ],
      "role": "symbol",
      "title": "CustomLeafReflectable",
      "type": "topic",
      "url": "/documentation/swift/customleafreflectable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomPlaygroundDisplayConvertible": {
      "abstract": [
        {
          "text": "A type that supplies a custom description for playground logging.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomPlaygroundDisplayConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomPlaygroundDisplayConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomPlaygroundDisplayConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomPlaygroundDisplayConvertible",
      "type": "topic",
      "url": "/documentation/swift/customplaygrounddisplayconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomReflectable": {
      "abstract": [
        {
          "text": "A type that explicitly supplies its own mirror.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "role": "symbol",
      "title": "CustomReflectable",
      "type": "topic",
      "url": "/documentation/swift/customreflectable"
    },
    "doc://com.apple.Swift/documentation/Swift/DebugDescription()": {
      "abstract": [
        {
          "text": "Converts description definitions to a debugger Type Summary.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DebugDescription"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/DebugDescription()",
      "kind": "symbol",
      "role": "symbol",
      "title": "DebugDescription()",
      "type": "topic",
      "url": "/documentation/swift/debugdescription()"
    },
    "doc://com.apple.Swift/documentation/Swift/PlaygroundQuickLook": {
      "abstract": [
        {
          "text": "The sum of types that can be used as a Quick Look representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PlaygroundQuickLook"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/PlaygroundQuickLook",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "PlaygroundQuickLook"
        }
      ],
      "role": "symbol",
      "title": "PlaygroundQuickLook",
      "type": "topic",
      "url": "/documentation/swift/playgroundquicklook"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Customizing-Your-Types-Reflection",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
        "doc://com.apple.Swift/documentation/Swift/CustomLeafReflectable",
        "doc://com.apple.Swift/documentation/Swift/CustomPlaygroundDisplayConvertible",
        "doc://com.apple.Swift/documentation/Swift/PlaygroundQuickLook"
      ],
      "title": "Customizing Your Type’s Reflection"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/debugdescription()"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
