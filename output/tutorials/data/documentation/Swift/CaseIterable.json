{
  "abstract": [
    {
      "text": "A type that provides a collection of all of its values.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/CaseIterable"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:s12CaseIterableP",
    "fragments": [
      {
        "kind": "keyword",
        "text": "protocol"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "CaseIterable"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "CaseIterable"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Protocol",
    "symbolKind": "protocol",
    "title": "CaseIterable"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "CaseIterable"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Types that conform to the ",
              "type": "text"
            },
            {
              "code": "CaseIterable",
              "type": "codeVoice"
            },
            {
              "text": " protocol are typically",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "enumerations without associated values. When using a ",
              "type": "text"
            },
            {
              "code": "CaseIterable",
              "type": "codeVoice"
            },
            {
              "text": " type,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you can access a collection of all of the type’s cases by using the type’s",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "allCases",
              "type": "codeVoice"
            },
            {
              "text": " property.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For example, the ",
              "type": "text"
            },
            {
              "code": "CompassDirection",
              "type": "codeVoice"
            },
            {
              "text": " enumeration declared in this example",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "conforms to ",
              "type": "text"
            },
            {
              "code": "CaseIterable",
              "type": "codeVoice"
            },
            {
              "text": ". You access the number of cases and the cases",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "themselves through ",
              "type": "text"
            },
            {
              "code": "CompassDirection.allCases",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "enum CompassDirection: CaseIterable {",
            "    case north, south, east, west",
            "}",
            "",
            "print(\"There are \\(CompassDirection.allCases.count) directions.\")",
            "// Prints \"There are 4 directions.\"",
            "let caseList = CompassDirection.allCases",
            "                               .map({ \"\\($0)\" })",
            "                               .joined(separator: \", \")",
            "// caseList == \"north, south, east, west\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Conforming-to-the-CaseIterable-Protocol",
          "level": 1,
          "text": "Conforming to the CaseIterable Protocol",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The compiler can automatically provide an implementation of the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "CaseIterable",
              "type": "codeVoice"
            },
            {
              "text": " requirements for any enumeration without associated values",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or ",
              "type": "text"
            },
            {
              "code": "@available",
              "type": "codeVoice"
            },
            {
              "text": " attributes on its cases. The synthesized ",
              "type": "text"
            },
            {
              "code": "allCases",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "collection provides the cases in order of their declaration.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You can take advantage of this compiler support when defining your own",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "custom enumeration by declaring conformance to ",
              "type": "text"
            },
            {
              "code": "CaseIterable",
              "type": "codeVoice"
            },
            {
              "text": " in the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "enumeration’s original declaration. The ",
              "type": "text"
            },
            {
              "code": "CompassDirection",
              "type": "codeVoice"
            },
            {
              "text": " example above",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "demonstrates this automatic implementation.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/CaseIterable": {
      "abstract": [
        {
          "text": "A type that provides a collection of all of its values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CaseIterable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CaseIterable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CaseIterable"
        }
      ],
      "role": "symbol",
      "title": "CaseIterable",
      "type": "topic",
      "url": "/documentation/swift/caseiterable"
    },
    "doc://com.apple.Swift/documentation/Swift/CaseIterable/AllCases-swift.associatedtype": {
      "abstract": [
        {
          "text": "A type that can represent a collection of all values of this type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AllCases"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sl",
          "text": "Collection"
        },
        {
          "kind": "text",
          "text": " = ["
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CaseIterable/AllCases-swift.associatedtype",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "AllCases",
      "type": "topic",
      "url": "/documentation/swift/caseiterable/allcases-swift.associatedtype"
    },
    "doc://com.apple.Swift/documentation/Swift/CaseIterable/allCases-swift.type.property": {
      "abstract": [
        {
          "text": "A collection of all values of this type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "allCases"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s12CaseIterableP8AllCasesQa",
          "text": "AllCases"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CaseIterable/allCases-swift.type.property",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "allCases",
      "type": "topic",
      "url": "/documentation/swift/caseiterable/allcases-swift.type.property"
    },
    "doc://com.apple.Swift/documentation/Swift/RawRepresentable": {
      "abstract": [
        {
          "text": "A type that can be converted to and from an associated raw value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RawRepresentable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RawRepresentable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RawRepresentable"
        }
      ],
      "role": "symbol",
      "title": "RawRepresentable",
      "type": "topic",
      "url": "/documentation/swift/rawrepresentable"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Raw-Representation",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/RawRepresentable"
      ],
      "title": "Raw Representation"
    }
  ],
  "topicSections": [
    {
      "anchor": "Accessing-Cases",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CaseIterable/allCases-swift.type.property",
        "doc://com.apple.Swift/documentation/Swift/CaseIterable/AllCases-swift.associatedtype"
      ],
      "title": "Accessing Cases"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/caseiterable"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
