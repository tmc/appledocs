{
  "abstract": [
    {
      "text": "Use imported C types or call C variadic functions.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    },
    "minor": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.2",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/swift-standard-library"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/c-interoperability"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "role": "collectionGroup",
    "roleHeading": "API Collection",
    "title": "C Interoperability"
  },
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/AutoreleasingUnsafeMutablePointer": {
      "abstract": [
        {
          "text": "A mutable pointer addressing an Objective-C reference that doesn’t own its",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "target.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AutoreleasingUnsafeMutablePointer"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AutoreleasingUnsafeMutablePointer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AutoreleasingUnsafeMutablePointer"
        }
      ],
      "role": "symbol",
      "title": "AutoreleasingUnsafeMutablePointer",
      "type": "topic",
      "url": "/documentation/swift/autoreleasingunsafemutablepointer"
    },
    "doc://com.apple.Swift/documentation/Swift/CBool": {
      "abstract": [
        {
          "text": "The C ‘_Bool’ and C++ ‘bool’ type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CBool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CBool",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CBool"
        }
      ],
      "role": "symbol",
      "title": "CBool",
      "type": "topic",
      "url": "/documentation/swift/cbool"
    },
    "doc://com.apple.Swift/documentation/Swift/CChar": {
      "abstract": [
        {
          "text": "The C ‘char’ type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CChar"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CChar",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CChar"
        }
      ],
      "role": "symbol",
      "title": "CChar",
      "type": "topic",
      "url": "/documentation/swift/cchar"
    },
    "doc://com.apple.Swift/documentation/Swift/CChar16": {
      "abstract": [
        {
          "text": "The C++11 ‘char16_t’ type, which has UTF-16 encoding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CChar16"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CChar16",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CChar16"
        }
      ],
      "role": "symbol",
      "title": "CChar16",
      "type": "topic",
      "url": "/documentation/swift/cchar16"
    },
    "doc://com.apple.Swift/documentation/Swift/CChar32": {
      "abstract": [
        {
          "text": "The C++11 ‘char32_t’ type, which has UTF-32 encoding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CChar32"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CChar32",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CChar32"
        }
      ],
      "role": "symbol",
      "title": "CChar32",
      "type": "topic",
      "url": "/documentation/swift/cchar32"
    },
    "doc://com.apple.Swift/documentation/Swift/CDouble": {
      "abstract": [
        {
          "text": "The C ‘double’ type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CDouble"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CDouble",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CDouble"
        }
      ],
      "role": "symbol",
      "title": "CDouble",
      "type": "topic",
      "url": "/documentation/swift/cdouble"
    },
    "doc://com.apple.Swift/documentation/Swift/CFloat": {
      "abstract": [
        {
          "text": "The C ‘float’ type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CFloat"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CFloat",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CFloat"
        }
      ],
      "role": "symbol",
      "title": "CFloat",
      "type": "topic",
      "url": "/documentation/swift/cfloat"
    },
    "doc://com.apple.Swift/documentation/Swift/CFloat16": {
      "abstract": [
        {
          "text": "The C ‘_Float16’ type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CFloat16"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CFloat16",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CFloat16"
        }
      ],
      "role": "symbol",
      "title": "CFloat16",
      "type": "topic",
      "url": "/documentation/swift/cfloat16"
    },
    "doc://com.apple.Swift/documentation/Swift/CInt": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CInt"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CInt",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CInt"
        }
      ],
      "role": "symbol",
      "title": "CInt",
      "type": "topic",
      "url": "/documentation/swift/cint"
    },
    "doc://com.apple.Swift/documentation/Swift/CLong": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CLong"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CLong",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CLong"
        }
      ],
      "role": "symbol",
      "title": "CLong",
      "type": "topic",
      "url": "/documentation/swift/clong"
    },
    "doc://com.apple.Swift/documentation/Swift/CLongDouble": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CLongDouble"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CLongDouble",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CLongDouble"
        }
      ],
      "role": "symbol",
      "title": "CLongDouble",
      "type": "topic",
      "url": "/documentation/swift/clongdouble"
    },
    "doc://com.apple.Swift/documentation/Swift/CLongLong": {
      "abstract": [
        {
          "text": "The C ‘long long’ type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CLongLong"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CLongLong",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CLongLong"
        }
      ],
      "role": "symbol",
      "title": "CLongLong",
      "type": "topic",
      "url": "/documentation/swift/clonglong"
    },
    "doc://com.apple.Swift/documentation/Swift/CShort": {
      "abstract": [
        {
          "text": "The C ‘short’ type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CShort"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CShort",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CShort"
        }
      ],
      "role": "symbol",
      "title": "CShort",
      "type": "topic",
      "url": "/documentation/swift/cshort"
    },
    "doc://com.apple.Swift/documentation/Swift/CSignedChar": {
      "abstract": [
        {
          "text": "The C ‘signed char’ type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CSignedChar"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CSignedChar",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CSignedChar"
        }
      ],
      "role": "symbol",
      "title": "CSignedChar",
      "type": "topic",
      "url": "/documentation/swift/csignedchar"
    },
    "doc://com.apple.Swift/documentation/Swift/CUnsignedChar": {
      "abstract": [
        {
          "text": "The C ‘unsigned char’ type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CUnsignedChar"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CUnsignedChar",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CUnsignedChar"
        }
      ],
      "role": "symbol",
      "title": "CUnsignedChar",
      "type": "topic",
      "url": "/documentation/swift/cunsignedchar"
    },
    "doc://com.apple.Swift/documentation/Swift/CUnsignedInt": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CUnsignedInt"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CUnsignedInt",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CUnsignedInt"
        }
      ],
      "role": "symbol",
      "title": "CUnsignedInt",
      "type": "topic",
      "url": "/documentation/swift/cunsignedint"
    },
    "doc://com.apple.Swift/documentation/Swift/CUnsignedLong": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CUnsignedLong"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CUnsignedLong",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CUnsignedLong"
        }
      ],
      "role": "symbol",
      "title": "CUnsignedLong",
      "type": "topic",
      "url": "/documentation/swift/cunsignedlong"
    },
    "doc://com.apple.Swift/documentation/Swift/CUnsignedLongLong": {
      "abstract": [
        {
          "text": "The C ‘unsigned long long’ type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CUnsignedLongLong"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CUnsignedLongLong",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CUnsignedLongLong"
        }
      ],
      "role": "symbol",
      "title": "CUnsignedLongLong",
      "type": "topic",
      "url": "/documentation/swift/cunsignedlonglong"
    },
    "doc://com.apple.Swift/documentation/Swift/CUnsignedShort": {
      "abstract": [
        {
          "text": "The C ‘unsigned short’ type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CUnsignedShort"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CUnsignedShort",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CUnsignedShort"
        }
      ],
      "role": "symbol",
      "title": "CUnsignedShort",
      "type": "topic",
      "url": "/documentation/swift/cunsignedshort"
    },
    "doc://com.apple.Swift/documentation/Swift/CVaListPointer": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVaListPointer"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CVaListPointer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CVaListPointer"
        }
      ],
      "role": "symbol",
      "title": "CVaListPointer",
      "type": "topic",
      "url": "/documentation/swift/cvalistpointer"
    },
    "doc://com.apple.Swift/documentation/Swift/CVarArg": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements of a C ",
          "type": "text"
        },
        {
          "code": "va_list",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CVarArg",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/swift/cvararg"
    },
    "doc://com.apple.Swift/documentation/Swift/CWideChar": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CWideChar"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CWideChar",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CWideChar"
        }
      ],
      "role": "symbol",
      "title": "CWideChar",
      "type": "topic",
      "url": "/documentation/swift/cwidechar"
    },
    "doc://com.apple.Swift/documentation/Swift/OpaquePointer": {
      "abstract": [
        {
          "text": "A wrapper around an opaque C pointer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "OpaquePointer"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/OpaquePointer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "OpaquePointer"
        }
      ],
      "role": "symbol",
      "title": "OpaquePointer",
      "type": "topic",
      "url": "/documentation/swift/opaquepointer"
    },
    "doc://com.apple.Swift/documentation/Swift/concurrency": {
      "abstract": [
        {
          "text": "Perform asynchronous and parallel operations.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/concurrency",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Concurrency",
      "type": "topic",
      "url": "/documentation/swift/concurrency"
    },
    "doc://com.apple.Swift/documentation/Swift/debugging-and-reflection": {
      "abstract": [
        {
          "text": "Fortify your code with runtime checks, and examine your values’ runtime representation.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/debugging-and-reflection",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Debugging and Reflection",
      "type": "topic",
      "url": "/documentation/swift/debugging-and-reflection"
    },
    "doc://com.apple.Swift/documentation/Swift/getVaList(_:)": {
      "abstract": [
        {
          "text": "Returns a ",
          "type": "text"
        },
        {
          "code": "CVaListPointer",
          "type": "codeVoice"
        },
        {
          "text": " that is backed by autoreleased storage, built",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "from the given array of arguments.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "getVaList"
        },
        {
          "kind": "text",
          "text": "([any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7CVarArgP",
          "text": "CVarArg"
        },
        {
          "kind": "text",
          "text": "]) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s14CVaListPointerV",
          "text": "CVaListPointer"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/getVaList(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "getVaList(_:)",
      "type": "topic",
      "url": "/documentation/swift/getvalist(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/input-and-output": {
      "abstract": [
        {
          "text": "Print values to the console, read from and write to text streams, and use command",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "line arguments.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/input-and-output",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Input and Output",
      "type": "topic",
      "url": "/documentation/swift/input-and-output"
    },
    "doc://com.apple.Swift/documentation/Swift/key-path-expressions": {
      "abstract": [
        {
          "text": "Use key-path expressions to access properties dynamically.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/key-path-expressions",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Key-Path Expressions",
      "type": "topic",
      "url": "/documentation/swift/key-path-expressions"
    },
    "doc://com.apple.Swift/documentation/Swift/macros": {
      "abstract": [
        {
          "text": "Generate boilerplate code and perform other compile-time operations.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/macros",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Macros",
      "type": "topic",
      "url": "/documentation/swift/macros"
    },
    "doc://com.apple.Swift/documentation/Swift/manual-memory-management": {
      "abstract": [
        {
          "text": "Allocate and manage memory manually.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/manual-memory-management",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Manual Memory Management",
      "type": "topic",
      "url": "/documentation/swift/manual-memory-management"
    },
    "doc://com.apple.Swift/documentation/Swift/operator-declarations": {
      "abstract": [
        {
          "text": "Work with prefix, postfix, and infix operators.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/operator-declarations",
      "kind": "article",
      "role": "article",
      "title": "Operator Declarations",
      "type": "topic",
      "url": "/documentation/swift/operator-declarations"
    },
    "doc://com.apple.Swift/documentation/Swift/swift-standard-library": {
      "abstract": [
        {
          "text": "Solve complex problems and write high-performance, readable code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/swift-standard-library",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Swift Standard Library",
      "type": "topic",
      "url": "/documentation/swift/swift-standard-library"
    },
    "doc://com.apple.Swift/documentation/Swift/type-casting-and-existential-types": {
      "abstract": [
        {
          "text": "Perform casts between types or represent values of any type.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/type-casting-and-existential-types",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Type Casting and Existential Types",
      "type": "topic",
      "url": "/documentation/swift/type-casting-and-existential-types"
    },
    "doc://com.apple.Swift/documentation/Swift/withUnsafeBytes(of:_:)-5gesg": {
      "abstract": [
        {
          "text": "Invokes the given closure with a buffer pointer covering the raw bytes of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the given argument.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withUnsafeBytes"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "borrowing"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SW",
          "text": "UnsafeRawBufferPointer"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withUnsafeBytes(of:_:)-5gesg",
      "kind": "symbol",
      "role": "symbol",
      "title": "withUnsafeBytes(of:_:)",
      "type": "topic",
      "url": "/documentation/swift/withunsafebytes(of:_:)-5gesg"
    },
    "doc://com.apple.Swift/documentation/Swift/withUnsafeBytes(of:_:)-5zxtl": {
      "abstract": [
        {
          "text": "Invokes the given closure with a buffer pointer covering the raw bytes of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the given argument.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withUnsafeBytes"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SW",
          "text": "UnsafeRawBufferPointer"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withUnsafeBytes(of:_:)-5zxtl",
      "kind": "symbol",
      "role": "symbol",
      "title": "withUnsafeBytes(of:_:)",
      "type": "topic",
      "url": "/documentation/swift/withunsafebytes(of:_:)-5zxtl"
    },
    "doc://com.apple.Swift/documentation/Swift/withUnsafeMutableBytes(of:_:)": {
      "abstract": [
        {
          "text": "Invokes the given closure with a mutable buffer pointer covering the raw",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "bytes of the given argument.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withUnsafeMutableBytes"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "of"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sw",
          "text": "UnsafeMutableRawBufferPointer"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withUnsafeMutableBytes(of:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withUnsafeMutableBytes(of:_:)",
      "type": "topic",
      "url": "/documentation/swift/withunsafemutablebytes(of:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withUnsafeMutablePointer(to:_:)": {
      "abstract": [
        {
          "text": "Calls the given closure with a mutable pointer to the given argument.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withUnsafeMutablePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sp",
          "text": "UnsafeMutablePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withUnsafeMutablePointer(to:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withUnsafeMutablePointer(to:_:)",
      "type": "topic",
      "url": "/documentation/swift/withunsafemutablepointer(to:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/withUnsafePointer(to:_:)-35wrn": {
      "abstract": [
        {
          "text": "Invokes the given closure with a pointer to the given argument.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withUnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "borrowing"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withUnsafePointer(to:_:)-35wrn",
      "kind": "symbol",
      "role": "symbol",
      "title": "withUnsafePointer(to:_:)",
      "type": "topic",
      "url": "/documentation/swift/withunsafepointer(to:_:)-35wrn"
    },
    "doc://com.apple.Swift/documentation/Swift/withUnsafePointer(to:_:)-9fjn6": {
      "abstract": [
        {
          "text": "Invokes the given closure with a pointer to the given argument.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withUnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Result"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withUnsafePointer(to:_:)-9fjn6",
      "kind": "symbol",
      "role": "symbol",
      "title": "withUnsafePointer(to:_:)",
      "type": "topic",
      "url": "/documentation/swift/withunsafepointer(to:_:)-9fjn6"
    },
    "doc://com.apple.Swift/documentation/Swift/withVaList(_:_:)": {
      "abstract": [
        {
          "text": "Invokes the given closure with a C ",
          "type": "text"
        },
        {
          "code": "va_list",
          "type": "codeVoice"
        },
        {
          "text": " argument derived from the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given array of arguments.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "withVaList"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">([any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7CVarArgP",
          "text": "CVarArg"
        },
        {
          "kind": "text",
          "text": "], ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s14CVaListPointerV",
          "text": "CVaListPointer"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/withVaList(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "withVaList(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/withvalist(_:_:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Programming-Tasks",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/input-and-output",
        "doc://com.apple.Swift/documentation/Swift/debugging-and-reflection",
        "doc://com.apple.Swift/documentation/Swift/macros",
        "doc://com.apple.Swift/documentation/Swift/concurrency",
        "doc://com.apple.Swift/documentation/Swift/key-path-expressions",
        "doc://com.apple.Swift/documentation/Swift/manual-memory-management",
        "doc://com.apple.Swift/documentation/Swift/type-casting-and-existential-types",
        "doc://com.apple.Swift/documentation/Swift/operator-declarations"
      ],
      "title": "Programming Tasks"
    }
  ],
  "topicSections": [
    {
      "anchor": "C-and-Objective-C-Pointers",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/OpaquePointer",
        "doc://com.apple.Swift/documentation/Swift/AutoreleasingUnsafeMutablePointer"
      ],
      "title": "C and Objective-C Pointers"
    },
    {
      "anchor": "C-Variadic-Functions",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/withVaList(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/CVaListPointer",
        "doc://com.apple.Swift/documentation/Swift/CVarArg",
        "doc://com.apple.Swift/documentation/Swift/getVaList(_:)"
      ],
      "title": "C Variadic Functions"
    },
    {
      "abstract": [
        {
          "text": "Access a pointer to a variable in memory for explicit passing to C functions.",
          "type": "text"
        }
      ],
      "anchor": "Pointers-to-Values",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/withUnsafePointer(to:_:)-9fjn6",
        "doc://com.apple.Swift/documentation/Swift/withUnsafePointer(to:_:)-35wrn",
        "doc://com.apple.Swift/documentation/Swift/withUnsafeMutablePointer(to:_:)",
        "doc://com.apple.Swift/documentation/Swift/withUnsafeBytes(of:_:)-5zxtl",
        "doc://com.apple.Swift/documentation/Swift/withUnsafeBytes(of:_:)-5gesg",
        "doc://com.apple.Swift/documentation/Swift/withUnsafeMutableBytes(of:_:)"
      ],
      "title": "Pointers to Values"
    },
    {
      "anchor": "Aliases-for-Imported-C-Types",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CBool",
        "doc://com.apple.Swift/documentation/Swift/CChar",
        "doc://com.apple.Swift/documentation/Swift/CChar16",
        "doc://com.apple.Swift/documentation/Swift/CChar32",
        "doc://com.apple.Swift/documentation/Swift/CDouble",
        "doc://com.apple.Swift/documentation/Swift/CLongDouble",
        "doc://com.apple.Swift/documentation/Swift/CFloat",
        "doc://com.apple.Swift/documentation/Swift/CFloat16",
        "doc://com.apple.Swift/documentation/Swift/CInt",
        "doc://com.apple.Swift/documentation/Swift/CLong",
        "doc://com.apple.Swift/documentation/Swift/CLongLong",
        "doc://com.apple.Swift/documentation/Swift/CShort",
        "doc://com.apple.Swift/documentation/Swift/CSignedChar",
        "doc://com.apple.Swift/documentation/Swift/CUnsignedChar",
        "doc://com.apple.Swift/documentation/Swift/CUnsignedInt",
        "doc://com.apple.Swift/documentation/Swift/CUnsignedLong",
        "doc://com.apple.Swift/documentation/Swift/CUnsignedLongLong",
        "doc://com.apple.Swift/documentation/Swift/CUnsignedShort",
        "doc://com.apple.Swift/documentation/Swift/CWideChar"
      ],
      "title": "Aliases for Imported C Types"
    }
  ]
}
