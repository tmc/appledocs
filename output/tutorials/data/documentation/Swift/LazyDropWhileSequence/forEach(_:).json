{
  "abstract": [
    {
      "text": "Calls the given closure on each element in the sequence in the same order",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "as a ",
      "type": "text"
    },
    {
      "code": "for",
      "type": "codeVoice"
    },
    {
      "text": "-",
      "type": "text"
    },
    {
      "code": "in",
      "type": "codeVoice"
    },
    {
      "text": " loop.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/LazyDropWhileSequence"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/LazyDropWhileSequence/forEach(_:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Swift",
    "externalID": "s:STsE7forEachyyy7ElementQzKXEKF::SYNTHESIZED::s:s21LazyDropWhileSequenceV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "forEach"
      },
      {
        "kind": "text",
        "text": "(("
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:ST7ElementQa",
        "text": "Element"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s4Voida",
        "text": "Void"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "rethrows"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "forEach(_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "forEach"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "body"
            },
            {
              "kind": "text",
              "text": ": ("
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Sequence/Element",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:ST7ElementQa",
              "text": "Element"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Void",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s4Voida",
              "text": "Void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "rethrows"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A closure that takes an element of the sequence as a",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "parameter.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "body"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The two loops in the following example produce the same output:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let numberWords = [\"one\", \"two\", \"three\"]",
            "for word in numberWords {",
            "    print(word)",
            "}",
            "// Prints \"one\"",
            "// Prints \"two\"",
            "// Prints \"three\"",
            "",
            "numberWords.forEach { word in",
            "    print(word)",
            "}",
            "// Same as above"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Using the ",
              "type": "text"
            },
            {
              "code": "forEach",
              "type": "codeVoice"
            },
            {
              "text": " method is distinct from a ",
              "type": "text"
            },
            {
              "code": "for",
              "type": "codeVoice"
            },
            {
              "text": "-",
              "type": "text"
            },
            {
              "code": "in",
              "type": "codeVoice"
            },
            {
              "text": " loop in two",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "important ways:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "You cannot use a ",
                      "type": "text"
                    },
                    {
                      "code": "break",
                      "type": "codeVoice"
                    },
                    {
                      "text": " or ",
                      "type": "text"
                    },
                    {
                      "code": "continue",
                      "type": "codeVoice"
                    },
                    {
                      "text": " statement to exit the current",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "call of the ",
                      "type": "text"
                    },
                    {
                      "code": "body",
                      "type": "codeVoice"
                    },
                    {
                      "text": " closure or skip subsequent calls.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Using the ",
                      "type": "text"
                    },
                    {
                      "code": "return",
                      "type": "codeVoice"
                    },
                    {
                      "text": " statement in the ",
                      "type": "text"
                    },
                    {
                      "code": "body",
                      "type": "codeVoice"
                    },
                    {
                      "text": " closure will exit only from",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "the current call to ",
                      "type": "text"
                    },
                    {
                      "code": "body",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", not from any outer scope, and won’t skip",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "subsequent calls.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "orderedList"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/LazyDropWhileSequence": {
      "abstract": [
        {
          "text": "A sequence whose elements consist of the elements that follow the initial",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "consecutive elements of some base sequence that satisfy a given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LazyDropWhileSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/LazyDropWhileSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LazyDropWhileSequence"
        }
      ],
      "role": "symbol",
      "title": "LazyDropWhileSequence",
      "type": "topic",
      "url": "/documentation/swift/lazydropwhilesequence"
    },
    "doc://com.apple.Swift/documentation/Swift/LazyDropWhileSequence/forEach(_:)": {
      "abstract": [
        {
          "text": "Calls the given closure on each element in the sequence in the same order",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "as a ",
          "type": "text"
        },
        {
          "code": "for",
          "type": "codeVoice"
        },
        {
          "text": "-",
          "type": "text"
        },
        {
          "code": "in",
          "type": "codeVoice"
        },
        {
          "text": " loop.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "forEach"
        },
        {
          "kind": "text",
          "text": "(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ST7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "rethrows"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/LazyDropWhileSequence/forEach(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "forEach(_:)",
      "type": "topic",
      "url": "/documentation/swift/lazydropwhilesequence/foreach(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Sequence/Element": {
      "abstract": [
        {
          "text": "A type representing the sequence’s elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Element"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sequence/Element",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "Element",
      "type": "topic",
      "url": "/documentation/swift/sequence/element"
    },
    "doc://com.apple.Swift/documentation/Swift/Void": {
      "abstract": [
        {
          "text": "The return type of functions that don’t explicitly specify a return type,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "that is, an empty tuple ",
          "type": "text"
        },
        {
          "code": "()",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Void"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Void",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Void"
        }
      ],
      "role": "symbol",
      "title": "Void",
      "type": "topic",
      "url": "/documentation/swift/void"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/swift/lazydropwhilesequence/foreach(_:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
