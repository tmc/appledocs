{
  "abstract": [
    {
      "text": "An immutable arbitrary-precision signed integer.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/StaticBigInt"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:s12StaticBigIntV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "StaticBigInt"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "StaticBigInt"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.4",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.4",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.4",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.3",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.4",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.4",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "StaticBigInt"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "StaticBigInt"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "code": "StaticBigInt",
              "type": "codeVoice"
            },
            {
              "text": " is primarily intended to be used as the associated type of an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "ExpressibleByIntegerLiteral",
              "type": "codeVoice"
            },
            {
              "text": " conformance.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "extension UInt256: ExpressibleByIntegerLiteral {",
            "    public init(integerLiteral value: StaticBigInt) {",
            "        precondition(",
            "            value.signum() >= 0 && value.bitWidth <= 1 + Self.bitWidth,",
            "            \"integer overflow: '\\(value)' as '\\(Self.self)'\"",
            "        )",
            "        self.words = Words()",
            "        for wordIndex in 0..<Words.count {",
            "            self.words[wordIndex] = value[wordIndex]",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "role": "symbol",
      "title": "BitwiseCopyable",
      "type": "topic",
      "url": "/documentation/swift/bitwisecopyable"
    },
    "doc://com.apple.Swift/documentation/Swift/Copyable": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Copyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/swift/copyable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customdebugstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomReflectable": {
      "abstract": [
        {
          "text": "A type that explicitly supplies its own mirror.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "role": "symbol",
      "title": "CustomReflectable",
      "type": "topic",
      "url": "/documentation/swift/customreflectable"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByBooleanLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with the Boolean literals ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": " and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "false",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByBooleanLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByBooleanLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByBooleanLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByBooleanLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebybooleanliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByFloatLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with a floating-point literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByFloatLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByFloatLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByFloatLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByFloatLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebyfloatliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with an integer literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByIntegerLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByIntegerLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByIntegerLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebyintegerliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByNilLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized using the nil literal, ",
          "type": "text"
        },
        {
          "code": "nil",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByNilLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByNilLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByNilLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByNilLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebynilliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.Swift/documentation/Swift/StaticBigInt": {
      "abstract": [
        {
          "text": "An immutable arbitrary-precision signed integer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "StaticBigInt"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StaticBigInt",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StaticBigInt"
        }
      ],
      "role": "symbol",
      "title": "StaticBigInt",
      "type": "topic",
      "url": "/documentation/swift/staticbigint"
    },
    "doc://com.apple.Swift/documentation/Swift/StaticBigInt/CustomDebugStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StaticBigInt/CustomDebugStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomDebugStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/staticbigint/customdebugstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/StaticBigInt/CustomReflectable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StaticBigInt/CustomReflectable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomReflectable Implementations",
      "type": "topic",
      "url": "/documentation/swift/staticbigint/customreflectable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/StaticBigInt/ExpressibleByIntegerLiteral-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StaticBigInt/ExpressibleByIntegerLiteral-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByIntegerLiteral Implementations",
      "type": "topic",
      "url": "/documentation/swift/staticbigint/expressiblebyintegerliteral-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/StaticBigInt/IntegerLiteralType": {
      "abstract": [
        {
          "text": "A type that represents an integer literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "IntegerLiteralType"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StaticBigInt/IntegerLiteralType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IntegerLiteralType"
        }
      ],
      "role": "symbol",
      "title": "StaticBigInt.IntegerLiteralType",
      "type": "topic",
      "url": "/documentation/swift/staticbigint/integerliteraltype"
    },
    "doc://com.apple.Swift/documentation/Swift/StaticBigInt/bitWidth": {
      "abstract": [
        {
          "text": "Returns the minimal number of bits in this value’s binary representation,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "including the sign bit, and excluding the sign extension.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bitWidth"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StaticBigInt/bitWidth",
      "kind": "symbol",
      "role": "symbol",
      "title": "bitWidth",
      "type": "topic",
      "url": "/documentation/swift/staticbigint/bitwidth"
    },
    "doc://com.apple.Swift/documentation/Swift/StaticBigInt/signum()": {
      "abstract": [
        {
          "text": "Indicates the value’s sign.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "signum"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StaticBigInt/signum()",
      "kind": "symbol",
      "role": "symbol",
      "title": "signum()",
      "type": "topic",
      "url": "/documentation/swift/staticbigint/signum()"
    },
    "doc://com.apple.Swift/documentation/Swift/StaticBigInt/subscript(_:)": {
      "abstract": [
        {
          "text": "Returns a 32-bit or 64-bit word of this value’s binary representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "subscript"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Su",
          "text": "UInt"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StaticBigInt/subscript(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "subscript(_:)",
      "type": "topic",
      "url": "/documentation/swift/staticbigint/subscript(_:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
        "doc://com.apple.Swift/documentation/Swift/Copyable",
        "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible",
        "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral",
        "doc://com.apple.Swift/documentation/Swift/Sendable"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Value-Literals",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByFloatLiteral",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByBooleanLiteral",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByNilLiteral"
      ],
      "title": "Value Literals"
    }
  ],
  "topicSections": [
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/StaticBigInt/bitWidth"
      ],
      "title": "Instance Properties"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/StaticBigInt/signum()"
      ],
      "title": "Instance Methods"
    },
    {
      "anchor": "Subscripts",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/StaticBigInt/subscript(_:)"
      ],
      "title": "Subscripts"
    },
    {
      "anchor": "Type-Aliases",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/StaticBigInt/IntegerLiteralType"
      ],
      "title": "Type Aliases"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/StaticBigInt/CustomDebugStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/StaticBigInt/CustomReflectable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/StaticBigInt/ExpressibleByIntegerLiteral-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/staticbigint"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
