{
  "abstract": [
    {
      "text": "Omits elements from the base sequence until a given error-throwing closure",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "returns false, after which it passes through all remaining elements.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/AsyncSequence"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/AsyncSequence/drop(while:)-67kgo"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "Swift",
    "externalID": "s:Sci12_ConcurrencyE4drop5whileAA30AsyncThrowingDropWhileSequenceVyxGSb7ElementQzYaKc_tF",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "drop"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "while"
      },
      {
        "kind": "text",
        "text": ": ("
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sci7ElementQa",
        "text": "Element"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "async"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sb",
        "text": "Bool"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:12_Concurrency30AsyncThrowingDropWhileSequenceV",
        "text": "AsyncThrowingDropWhileSequence"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": ">"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "drop(while:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@preconcurrency"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "drop"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "while"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "predicate"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "@escaping"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncSequence/Element",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sci7ElementQa",
              "text": "Element"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncThrowingDropWhileSequence",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:12_Concurrency30AsyncThrowingDropWhileSequenceV",
              "text": "AsyncThrowingDropWhileSequence"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "An error-throwing closure that takes an element as",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "a parameter and returns a Boolean value indicating whether to drop the",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "element from the modified sequence.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "predicate"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "An asynchronous sequence that skips over values until the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "provided closure returns ",
              "type": "text"
            },
            {
              "code": "false",
              "type": "codeVoice"
            },
            {
              "text": " or throws an error.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use ",
              "type": "text"
            },
            {
              "code": "drop(while:)",
              "type": "codeVoice"
            },
            {
              "text": " to omit elements from an asynchronous sequence until",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the element received meets a condition you specify. If the closure you",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "provide throws an error, the sequence produces no elements and throws",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the error instead.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In this example, an asynchronous sequence called ",
              "type": "text"
            },
            {
              "code": "Counter",
              "type": "codeVoice"
            },
            {
              "text": " produces ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "values from ",
              "type": "text"
            },
            {
              "code": "1",
              "type": "codeVoice"
            },
            {
              "text": " to ",
              "type": "text"
            },
            {
              "code": "10",
              "type": "codeVoice"
            },
            {
              "text": ". The predicate passed to the ",
              "type": "text"
            },
            {
              "code": "drop(while:)",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method throws an error if it encounters an even number, and otherwise",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "returns ",
              "type": "text"
            },
            {
              "code": "true",
              "type": "codeVoice"
            },
            {
              "text": " while it receives elements less than ",
              "type": "text"
            },
            {
              "code": "5",
              "type": "codeVoice"
            },
            {
              "text": ". Because the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "predicate throws when it receives ",
              "type": "text"
            },
            {
              "code": "2",
              "type": "codeVoice"
            },
            {
              "text": " from the base sequence, this example",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "throws without ever printing anything.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "do {",
            "    let stream = Counter(howHigh: 10)",
            "        .drop {",
            "            if $0 % 2 == 0 {",
            "                throw EvenError()",
            "            }",
            "            return $0 < 5",
            "        }",
            "    for try await number in stream {",
            "        print(number)",
            "    }",
            "} catch {",
            "    print(error)",
            "}",
            "// Prints \"EvenError()\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "After the predicate returns ",
              "type": "text"
            },
            {
              "code": "false",
              "type": "codeVoice"
            },
            {
              "text": ", the sequence never executes it again,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and from then on the sequence passes through elements from its underlying",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "sequence. A predicate that throws an error also never executes again.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/AsyncDropFirstSequence": {
      "abstract": [
        {
          "text": "An asynchronous sequence which omits a specified number of elements from the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "base asynchronous sequence, then passes through all remaining elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AsyncDropFirstSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncDropFirstSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AsyncDropFirstSequence"
        }
      ],
      "role": "symbol",
      "title": "AsyncDropFirstSequence",
      "type": "topic",
      "url": "/documentation/swift/asyncdropfirstsequence"
    },
    "doc://com.apple.Swift/documentation/Swift/AsyncDropWhileSequence": {
      "abstract": [
        {
          "text": "An asynchronous sequence which omits elements from the base sequence until a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given closure returns false, after which it passes through all remaining",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AsyncDropWhileSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncDropWhileSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AsyncDropWhileSequence"
        }
      ],
      "role": "symbol",
      "title": "AsyncDropWhileSequence",
      "type": "topic",
      "url": "/documentation/swift/asyncdropwhilesequence"
    },
    "doc://com.apple.Swift/documentation/Swift/AsyncFilterSequence": {
      "abstract": [
        {
          "text": "An asynchronous sequence that contains, in order, the elements of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the base sequence that satisfy a given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AsyncFilterSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncFilterSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AsyncFilterSequence"
        }
      ],
      "role": "symbol",
      "title": "AsyncFilterSequence",
      "type": "topic",
      "url": "/documentation/swift/asyncfiltersequence"
    },
    "doc://com.apple.Swift/documentation/Swift/AsyncSequence": {
      "abstract": [
        {
          "text": "A type that provides asynchronous, sequential, iterated access to its",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AsyncSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AsyncSequence"
        }
      ],
      "role": "symbol",
      "title": "AsyncSequence",
      "type": "topic",
      "url": "/documentation/swift/asyncsequence"
    },
    "doc://com.apple.Swift/documentation/Swift/AsyncSequence/Element": {
      "abstract": [
        {
          "text": "The type of element produced by this asynchronous sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Element"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncSequence/Element",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "Element",
      "type": "topic",
      "url": "/documentation/swift/asyncsequence/element"
    },
    "doc://com.apple.Swift/documentation/Swift/AsyncSequence/drop(while:)-67kgo": {
      "abstract": [
        {
          "text": "Omits elements from the base sequence until a given error-throwing closure",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "returns false, after which it passes through all remaining elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "drop"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "while"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sci7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12_Concurrency30AsyncThrowingDropWhileSequenceV",
          "text": "AsyncThrowingDropWhileSequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncSequence/drop(while:)-67kgo",
      "kind": "symbol",
      "role": "symbol",
      "title": "drop(while:)",
      "type": "topic",
      "url": "/documentation/swift/asyncsequence/drop(while:)-67kgo"
    },
    "doc://com.apple.Swift/documentation/Swift/AsyncSequence/drop(while:)-9sp3b": {
      "abstract": [
        {
          "text": "Omits elements from the base asynchronous sequence until a given closure",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "returns false, after which it passes through all remaining elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "drop"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "while"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sci7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12_Concurrency22AsyncDropWhileSequenceV",
          "text": "AsyncDropWhileSequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncSequence/drop(while:)-9sp3b",
      "kind": "symbol",
      "role": "symbol",
      "title": "drop(while:)",
      "type": "topic",
      "url": "/documentation/swift/asyncsequence/drop(while:)-9sp3b"
    },
    "doc://com.apple.Swift/documentation/Swift/AsyncSequence/dropFirst(_:)": {
      "abstract": [
        {
          "text": "Omits a specified number of elements from the base asynchronous sequence,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "then passes through all remaining elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dropFirst"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12_Concurrency22AsyncDropFirstSequenceV",
          "text": "AsyncDropFirstSequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncSequence/dropFirst(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "dropFirst(_:)",
      "type": "topic",
      "url": "/documentation/swift/asyncsequence/dropfirst(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/AsyncSequence/filter(_:)-2cc0l": {
      "abstract": [
        {
          "text": "Creates an asynchronous sequence that contains, in order, the elements of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the base sequence that satisfy the given error-throwing predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "filter"
        },
        {
          "kind": "text",
          "text": "(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sci7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12_Concurrency27AsyncThrowingFilterSequenceV",
          "text": "AsyncThrowingFilterSequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncSequence/filter(_:)-2cc0l",
      "kind": "symbol",
      "role": "symbol",
      "title": "filter(_:)",
      "type": "topic",
      "url": "/documentation/swift/asyncsequence/filter(_:)-2cc0l"
    },
    "doc://com.apple.Swift/documentation/Swift/AsyncSequence/filter(_:)-435af": {
      "abstract": [
        {
          "text": "Creates an asynchronous sequence that contains, in order, the elements of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the base sequence that satisfy the given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "filter"
        },
        {
          "kind": "text",
          "text": "(("
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sci7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12_Concurrency19AsyncFilterSequenceV",
          "text": "AsyncFilterSequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncSequence/filter(_:)-435af",
      "kind": "symbol",
      "role": "symbol",
      "title": "filter(_:)",
      "type": "topic",
      "url": "/documentation/swift/asyncsequence/filter(_:)-435af"
    },
    "doc://com.apple.Swift/documentation/Swift/AsyncThrowingDropWhileSequence": {
      "abstract": [
        {
          "text": "An asynchronous sequence which omits elements from the base sequence until a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given error-throwing closure returns false, after which it passes through",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "all remaining elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AsyncThrowingDropWhileSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncThrowingDropWhileSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AsyncThrowingDropWhileSequence"
        }
      ],
      "role": "symbol",
      "title": "AsyncThrowingDropWhileSequence",
      "type": "topic",
      "url": "/documentation/swift/asyncthrowingdropwhilesequence"
    },
    "doc://com.apple.Swift/documentation/Swift/AsyncThrowingFilterSequence": {
      "abstract": [
        {
          "text": "An asynchronous sequence that contains, in order, the elements of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the base sequence that satisfy the given error-throwing predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AsyncThrowingFilterSequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AsyncThrowingFilterSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AsyncThrowingFilterSequence"
        }
      ],
      "role": "symbol",
      "title": "AsyncThrowingFilterSequence",
      "type": "topic",
      "url": "/documentation/swift/asyncthrowingfiltersequence"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool": {
      "abstract": [
        {
          "text": "A value type whose instances are either ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": " or ",
          "type": "text"
        },
        {
          "code": "false",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Bool"
        }
      ],
      "role": "symbol",
      "title": "Bool",
      "type": "topic",
      "url": "/documentation/swift/bool"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Excluding-Elements",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/AsyncSequence/dropFirst(_:)",
        "doc://com.apple.Swift/documentation/Swift/AsyncDropFirstSequence",
        "doc://com.apple.Swift/documentation/Swift/AsyncSequence/drop(while:)-9sp3b",
        "doc://com.apple.Swift/documentation/Swift/AsyncDropWhileSequence",
        "doc://com.apple.Swift/documentation/Swift/AsyncThrowingDropWhileSequence",
        "doc://com.apple.Swift/documentation/Swift/AsyncSequence/filter(_:)-435af",
        "doc://com.apple.Swift/documentation/Swift/AsyncFilterSequence",
        "doc://com.apple.Swift/documentation/Swift/AsyncSequence/filter(_:)-2cc0l",
        "doc://com.apple.Swift/documentation/Swift/AsyncThrowingFilterSequence"
      ],
      "title": "Excluding Elements"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/asyncsequence/drop(while:)-67kgo"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
