{
  "abstract": [
    {
      "text": "Allow values of your type to be expressed using different kinds of literals.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/swift-standard-library"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/initialization-with-literals"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "role": "collectionGroup",
    "roleHeading": "API Collection",
    "title": "Initialization with Literals"
  },
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/DefaultStringInterpolation": {
      "abstract": [
        {
          "text": "Represents a string literal with interpolations while it is being built up.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DefaultStringInterpolation"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/DefaultStringInterpolation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DefaultStringInterpolation"
        }
      ],
      "role": "symbol",
      "title": "DefaultStringInterpolation",
      "type": "topic",
      "url": "/documentation/swift/defaultstringinterpolation"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByArrayLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized using an array literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByArrayLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByArrayLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByArrayLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByArrayLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebyarrayliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByBooleanLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with the Boolean literals ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": " and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "code": "false",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByBooleanLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByBooleanLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByBooleanLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByBooleanLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebybooleanliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByDictionaryLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized using a dictionary literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByDictionaryLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByDictionaryLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByDictionaryLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByDictionaryLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebydictionaryliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByExtendedGraphemeClusterLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with a string literal containing a single",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "extended grapheme cluster.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByExtendedGraphemeClusterLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByExtendedGraphemeClusterLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByExtendedGraphemeClusterLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByExtendedGraphemeClusterLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebyextendedgraphemeclusterliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByFloatLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with a floating-point literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByFloatLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByFloatLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByFloatLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByFloatLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebyfloatliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with an integer literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByIntegerLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByIntegerLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByIntegerLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebyintegerliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByNilLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized using the nil literal, ",
          "type": "text"
        },
        {
          "code": "nil",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByNilLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByNilLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByNilLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByNilLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebynilliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByStringInterpolation": {
      "abstract": [
        {
          "text": "A type that can be initialized by string interpolation with a string",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "literal that includes expressions.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByStringInterpolation"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByStringInterpolation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByStringInterpolation"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByStringInterpolation",
      "type": "topic",
      "url": "/documentation/swift/expressiblebystringinterpolation"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByStringLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with a string literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByStringLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByStringLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByStringLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByStringLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebystringliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByUnicodeScalarLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with a string literal containing a single",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "Unicode scalar value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByUnicodeScalarLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByUnicodeScalarLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByUnicodeScalarLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByUnicodeScalarLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebyunicodescalarliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/StaticBigInt": {
      "abstract": [
        {
          "text": "An immutable arbitrary-precision signed integer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "StaticBigInt"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StaticBigInt",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StaticBigInt"
        }
      ],
      "role": "symbol",
      "title": "StaticBigInt",
      "type": "topic",
      "url": "/documentation/swift/staticbigint"
    },
    "doc://com.apple.Swift/documentation/Swift/StringInterpolationProtocol": {
      "abstract": [
        {
          "text": "Represents the contents of a string literal with interpolations while it’s",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "being built up.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "StringInterpolationProtocol"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/StringInterpolationProtocol",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "StringInterpolationProtocol"
        }
      ],
      "role": "symbol",
      "title": "StringInterpolationProtocol",
      "type": "topic",
      "url": "/documentation/swift/stringinterpolationprotocol"
    },
    "doc://com.apple.Swift/documentation/Swift/basic-behaviors": {
      "abstract": [
        {
          "text": "Use your custom types in operations that depend on testing for equality or order",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and as members of sets and dictionaries.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/basic-behaviors",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Basic Behaviors",
      "type": "topic",
      "url": "/documentation/swift/basic-behaviors"
    },
    "doc://com.apple.Swift/documentation/Swift/default-literal-types": {
      "abstract": [
        {
          "text": "Type aliases representing the concrete type that a literal takes when no other type",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "information is provided.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/default-literal-types",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Default Literal Types",
      "type": "topic",
      "url": "/documentation/swift/default-literal-types"
    },
    "doc://com.apple.Swift/documentation/Swift/encoding-decoding-and-serialization": {
      "abstract": [
        {
          "text": "Serialize and deserialize instances of your types with implicit or customized encoding.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/encoding-decoding-and-serialization",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Encoding, Decoding, and Serialization",
      "type": "topic",
      "url": "/documentation/swift/encoding-decoding-and-serialization"
    },
    "doc://com.apple.Swift/documentation/Swift/swift-standard-library": {
      "abstract": [
        {
          "text": "Solve complex problems and write high-performance, readable code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/swift-standard-library",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Swift Standard Library",
      "type": "topic",
      "url": "/documentation/swift/swift-standard-library"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Tools-for-Your-Types",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/basic-behaviors",
        "doc://com.apple.Swift/documentation/Swift/encoding-decoding-and-serialization"
      ],
      "title": "Tools for Your Types"
    }
  ],
  "topicSections": [
    {
      "anchor": "Collection-Literals",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByArrayLiteral",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByDictionaryLiteral"
      ],
      "title": "Collection Literals"
    },
    {
      "anchor": "Value-Literals",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByFloatLiteral",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByBooleanLiteral",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByNilLiteral",
        "doc://com.apple.Swift/documentation/Swift/StaticBigInt"
      ],
      "title": "Value Literals"
    },
    {
      "anchor": "String-Literals",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByStringLiteral",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByExtendedGraphemeClusterLiteral",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByUnicodeScalarLiteral",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByStringInterpolation",
        "doc://com.apple.Swift/documentation/Swift/StringInterpolationProtocol",
        "doc://com.apple.Swift/documentation/Swift/DefaultStringInterpolation"
      ],
      "title": "String Literals"
    },
    {
      "anchor": "Default-Types-for-Literals",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/default-literal-types"
      ],
      "title": "Default Types for Literals"
    }
  ]
}
