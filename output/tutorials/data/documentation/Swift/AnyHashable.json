{
  "abstract": [
    {
      "text": "A type-erased hashable value.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/AnyHashable"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:s11AnyHashableV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "AnyHashable"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "AnyHashable"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "AnyHashable"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "AnyHashable"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "AnyHashable",
              "type": "codeVoice"
            },
            {
              "text": " type forwards equality comparisons and hashing operations",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to an underlying hashable value, hiding the type of the wrapped value.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Where conversion using ",
              "type": "text"
            },
            {
              "code": "as",
              "type": "codeVoice"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "code": "as?",
              "type": "codeVoice"
            },
            {
              "text": " is possible between two types (such as",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "Int",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "NSNumber",
              "type": "codeVoice"
            },
            {
              "text": "), ",
              "type": "text"
            },
            {
              "code": "AnyHashable",
              "type": "codeVoice"
            },
            {
              "text": " uses a canonical representation of the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "type-erased value so that instances wrapping the same value of either type",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "compare as equal. For example, ",
              "type": "text"
            },
            {
              "code": "AnyHashable(42)",
              "type": "codeVoice"
            },
            {
              "text": " compares as equal to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "AnyHashable(42 as NSNumber)",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You can store mixed-type keys in dictionaries and other collections that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "require ",
              "type": "text"
            },
            {
              "code": "Hashable",
              "type": "codeVoice"
            },
            {
              "text": " conformance by wrapping mixed-type keys in",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "AnyHashable",
              "type": "codeVoice"
            },
            {
              "text": " instances:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let descriptions: [AnyHashable: Any] = [",
            "    42: \"an Int\",",
            "    43 as Int8: \"an Int8\",",
            "    [\"a\", \"b\"] as Set: \"a set of strings\"",
            "]",
            "print(descriptions[42]!)                // prints \"an Int\"",
            "print(descriptions[42 as Int8]!)        // prints \"an Int\"",
            "print(descriptions[43 as Int8]!)        // prints \"an Int8\"",
            "print(descriptions[44])                 // prints \"nil\"",
            "print(descriptions[[\"a\", \"b\"] as Set]!) // prints \"a set of strings\""
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Note that ",
              "type": "text"
            },
            {
              "code": "AnyHashable",
              "type": "codeVoice"
            },
            {
              "text": " does not guarantee that it preserves the hash",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "encoding of wrapped values. Do not rely on ",
              "type": "text"
            },
            {
              "code": "AnyHashable",
              "type": "codeVoice"
            },
            {
              "text": " generating such",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "compatible hashes, as the hash encoding that it uses may change between any",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "two releases of the standard library.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyBidirectionalCollection": {
      "abstract": [
        {
          "text": "A type-erased wrapper over any collection with indices that",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "support bidirectional traversal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AnyBidirectionalCollection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyBidirectionalCollection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AnyBidirectionalCollection"
        }
      ],
      "role": "symbol",
      "title": "AnyBidirectionalCollection",
      "type": "topic",
      "url": "/documentation/swift/anybidirectionalcollection"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyCollection": {
      "abstract": [
        {
          "text": "A type-erased wrapper over any collection with indices that",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "support forward traversal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AnyCollection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyCollection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AnyCollection"
        }
      ],
      "role": "symbol",
      "title": "AnyCollection",
      "type": "topic",
      "url": "/documentation/swift/anycollection"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyHashable": {
      "abstract": [
        {
          "text": "A type-erased hashable value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AnyHashable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyHashable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AnyHashable"
        }
      ],
      "role": "symbol",
      "title": "AnyHashable",
      "type": "topic",
      "url": "/documentation/swift/anyhashable"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyHashable/CustomDebugStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyHashable/CustomDebugStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomDebugStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/anyhashable/customdebugstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyHashable/CustomReflectable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyHashable/CustomReflectable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomReflectable Implementations",
      "type": "topic",
      "url": "/documentation/swift/anyhashable/customreflectable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyHashable/CustomStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyHashable/CustomStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/anyhashable/customstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyHashable/Equatable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyHashable/Equatable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Equatable Implementations",
      "type": "topic",
      "url": "/documentation/swift/anyhashable/equatable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyHashable/Hashable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyHashable/Hashable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Hashable Implementations",
      "type": "topic",
      "url": "/documentation/swift/anyhashable/hashable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyHashable/base": {
      "abstract": [
        {
          "text": "The value wrapped by this instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "base"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "Any"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyHashable/base",
      "kind": "symbol",
      "role": "symbol",
      "title": "base",
      "type": "topic",
      "url": "/documentation/swift/anyhashable/base"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyHashable/init(_:)": {
      "abstract": [
        {
          "text": "Creates a type-erased hashable value that wraps the given instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "H"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "H"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyHashable/init(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/anyhashable/init(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyIndex": {
      "abstract": [
        {
          "text": "A wrapper over an underlying index that hides the specific underlying type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AnyIndex"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyIndex",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AnyIndex"
        }
      ],
      "role": "symbol",
      "title": "AnyIndex",
      "type": "topic",
      "url": "/documentation/swift/anyindex"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyIterator": {
      "abstract": [
        {
          "text": "A type-erased iterator of ",
          "type": "text"
        },
        {
          "code": "Element",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AnyIterator"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyIterator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AnyIterator"
        }
      ],
      "role": "symbol",
      "title": "AnyIterator",
      "type": "topic",
      "url": "/documentation/swift/anyiterator"
    },
    "doc://com.apple.Swift/documentation/Swift/AnyRandomAccessCollection": {
      "abstract": [
        {
          "text": "A type-erased wrapper over any collection with indices that",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "support random access traversal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AnyRandomAccessCollection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnyRandomAccessCollection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AnyRandomAccessCollection"
        }
      ],
      "role": "symbol",
      "title": "AnyRandomAccessCollection",
      "type": "topic",
      "url": "/documentation/swift/anyrandomaccesscollection"
    },
    "doc://com.apple.Swift/documentation/Swift/AnySequence": {
      "abstract": [
        {
          "text": "A type-erased sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AnySequence"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AnySequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AnySequence"
        }
      ],
      "role": "symbol",
      "title": "AnySequence",
      "type": "topic",
      "url": "/documentation/swift/anysequence"
    },
    "doc://com.apple.Swift/documentation/Swift/Copyable": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Copyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/swift/copyable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customdebugstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomReflectable": {
      "abstract": [
        {
          "text": "A type that explicitly supplies its own mirror.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "role": "symbol",
      "title": "CustomReflectable",
      "type": "topic",
      "url": "/documentation/swift/customreflectable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/Equatable": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Equatable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/swift/equatable"
    },
    "doc://com.apple.Swift/documentation/Swift/Hashable": {
      "abstract": [
        {
          "text": "A type that can be hashed into a ",
          "type": "text"
        },
        {
          "code": "Hasher",
          "type": "codeVoice"
        },
        {
          "text": " to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Hashable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/swift/hashable"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Copyable",
        "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible",
        "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
        "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
        "doc://com.apple.Swift/documentation/Swift/Equatable",
        "doc://com.apple.Swift/documentation/Swift/Hashable"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Type-Erasing-Wrappers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/AnySequence",
        "doc://com.apple.Swift/documentation/Swift/AnyCollection",
        "doc://com.apple.Swift/documentation/Swift/AnyBidirectionalCollection",
        "doc://com.apple.Swift/documentation/Swift/AnyRandomAccessCollection",
        "doc://com.apple.Swift/documentation/Swift/AnyIterator",
        "doc://com.apple.Swift/documentation/Swift/AnyIndex"
      ],
      "title": "Type-Erasing Wrappers"
    }
  ],
  "topicSections": [
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/AnyHashable/init(_:)"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/AnyHashable/base"
      ],
      "title": "Instance Properties"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/AnyHashable/CustomDebugStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/AnyHashable/CustomReflectable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/AnyHashable/CustomStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/AnyHashable/Equatable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/AnyHashable/Hashable-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/anyhashable"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
