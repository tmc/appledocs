{
  "abstract": [
    {
      "text": "Wait for the next child task to complete,",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "and return the value it returned.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/TaskGroup"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/TaskGroup/next(isolation:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:ScG4next9isolationxSgScA_pSgYi_tYaF",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "next"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "isolation"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "keyword",
        "text": "isolated"
      },
      {
        "kind": "text",
        "text": " (any "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:ScA",
        "text": "Actor"
      },
      {
        "kind": "text",
        "text": ")?) "
      },
      {
        "kind": "keyword",
        "text": "async"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "ChildTaskResult"
      },
      {
        "kind": "text",
        "text": "?"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.15",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "next(isolation:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "text",
              "text": "@backDeployed(before: macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0)\n"
            },
            {
              "kind": "keyword",
              "text": "mutating"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "next"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "isolation"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "isolated"
            },
            {
              "kind": "text",
              "text": " (any "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Actor",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:ScA",
              "text": "Actor"
            },
            {
              "kind": "text",
              "text": ")? = #isolation) "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "ChildTaskResult"
            },
            {
              "kind": "text",
              "text": "?"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The value returned by the next child task that completes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The values returned by successive calls to this method",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "appear in the order that the tasks ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "completed",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "not in the order that those tasks were added to the task group.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For example:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "group.addTask { 1 }",
            "group.addTask { 2 }",
            "",
            "print(await group.next())",
            "// Prints either \"2\" or \"1\"."
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "If there arenâ€™t any pending tasks in the task group,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "this method returns ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": ",",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "which lets you write the following",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to wait for a single task to complete:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "if let first = try await group.next() {",
            "   return first",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "It also lets you write code like the following",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to wait for all the child tasks to complete,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "collecting the values they returned:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "while let value = try await group.next() {",
            "   collected += value",
            "}",
            "return collected"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Awaiting on an empty group",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "immediate returns ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " without suspending.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You can also use a ",
              "type": "text"
            },
            {
              "code": "for",
              "type": "codeVoice"
            },
            {
              "text": "-",
              "type": "text"
            },
            {
              "code": "await",
              "type": "codeVoice"
            },
            {
              "text": "-",
              "type": "text"
            },
            {
              "code": "in",
              "type": "codeVoice"
            },
            {
              "text": " loop to collect results of a task group:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "for await try value in group {",
            "    collected += value",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Donâ€™t call this method from outside the task",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "where you created this task group.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "In most cases, the Swift type system prevents this mistake.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For example, because the ",
              "type": "text"
            },
            {
              "code": "add(priority:operation:)",
              "type": "codeVoice"
            },
            {
              "text": " method is mutating,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that method canâ€™t be called from a concurrent execution context like a child task.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Actor": {
      "abstract": [
        {
          "text": "Common protocol to which all actors conform.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Actor"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Actor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Actor"
        }
      ],
      "role": "symbol",
      "title": "Actor",
      "type": "topic",
      "url": "/documentation/swift/actor"
    },
    "doc://com.apple.Swift/documentation/Swift/TaskGroup": {
      "abstract": [
        {
          "text": "A group that contains dynamically created child tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TaskGroup"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskGroup",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TaskGroup"
        }
      ],
      "role": "symbol",
      "title": "TaskGroup",
      "type": "topic",
      "url": "/documentation/swift/taskgroup"
    },
    "doc://com.apple.Swift/documentation/Swift/TaskGroup/isEmpty": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether the group has any remaining tasks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isEmpty"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskGroup/isEmpty",
      "kind": "symbol",
      "role": "symbol",
      "title": "isEmpty",
      "type": "topic",
      "url": "/documentation/swift/taskgroup/isempty"
    },
    "doc://com.apple.Swift/documentation/Swift/TaskGroup/next(isolation:)": {
      "abstract": [
        {
          "text": "Wait for the next child task to complete,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and return the value it returned.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "next"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?) "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "ChildTaskResult"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskGroup/next(isolation:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "next(isolation:)",
      "type": "topic",
      "url": "/documentation/swift/taskgroup/next(isolation:)"
    },
    "doc://com.apple.Swift/documentation/Swift/TaskGroup/waitForAll(isolation:)": {
      "abstract": [
        {
          "text": "Wait for all of the groupâ€™s remaining tasks to complete.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "waitForAll"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "isolation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "isolated"
        },
        {
          "kind": "text",
          "text": " (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScA",
          "text": "Actor"
        },
        {
          "kind": "text",
          "text": ")?) "
        },
        {
          "kind": "keyword",
          "text": "async"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TaskGroup/waitForAll(isolation:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "waitForAll(isolation:)",
      "type": "topic",
      "url": "/documentation/swift/taskgroup/waitforall(isolation:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Accessing-Individual-Results",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/TaskGroup/isEmpty",
        "doc://com.apple.Swift/documentation/Swift/TaskGroup/waitForAll(isolation:)"
      ],
      "title": "Accessing Individual Results"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/taskgroup/next(isolation:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
