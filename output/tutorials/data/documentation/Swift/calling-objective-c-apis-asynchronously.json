{
  "abstract": [
    {
      "text": "Learn how functions and methods that take a completion handler are converted to Swift",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "asynchronous functions.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/calling-objective-c-apis-asynchronously"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Calling Objective-C APIs Asynchronously"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "In Cocoa, methods that perform asynchronous operations take a completion handler",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "as their last parameter, and the method calls that block after the operation finishes",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to return a result or an error. Swift 5.5 and later automatically translates Objective-C",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "methods that take completion handlers into asynchronous methods using Swift’s native",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "concurrency support, in addition to importing the callback-based version of the method",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "into Swift. Because both Swift methods have the same behavior, they share the same",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "page in the documentation.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For information about asynchronous functions, see ",
              "type": "text"
            },
            {
              "identifier": "https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in The Swift Programming Language.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Understand-How-Swift-Imports-Completion-Handlers",
          "level": 3,
          "text": "Understand How Swift Imports Completion Handlers",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Swift imports Objective-C methods that take a completion handler as two related Swift",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "methods: a method that takes a closure, and an asynchronous method that doesn’t take",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a closure. For example, consider the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/PassKit/PKPaymentAuthorizationController/present(completion:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method from PassKit. In Objective-C, it’s declared like this:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "- (void)presentWithCompletion:(void (^)(BOOL success))completion;"
          ],
          "syntax": "occ",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "However, in Swift, it’s imported as two methods:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func present(completion: ((Bool) -> Void)? = nil)",
            "",
            "func present() async -> Bool"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The first version, ",
              "type": "text"
            },
            {
              "code": "present(completion:)",
              "type": "codeVoice"
            },
            {
              "text": ", has a return type of ",
              "type": "text"
            },
            {
              "code": "Void",
              "type": "codeVoice"
            },
            {
              "text": " and takes",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a completion handler. The second version, ",
              "type": "text"
            },
            {
              "code": "present()",
              "type": "codeVoice"
            },
            {
              "text": ", returns a Boolean value and",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is an asynchronous method.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Methods whose completion handlers populate a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/nserror",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "pointer parameter also become throwing methods in Swift, as described in ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/about-imported-cocoa-error-parameters",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "NSError",
              "type": "codeVoice"
            },
            {
              "text": " parameter on an asynchronous throwing method must also be nullable,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "which indicates that the parameter is used only to communicate an error. For example,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "consider the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/urlsessionstreamtask/1411602-write",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method from ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/urlsessionstreamtask",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "In Objective-C, it’s declared like this:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "- (void)writeData:(NSData *)data",
            "          timeout:(NSTimeInterval)timeout",
            "completionHandler:(void (^) (NSError * _Nullable error))completionHandler;"
          ],
          "syntax": "occ",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "As in the previous example, Swift imports this Objective-C method as two methods:",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "an asynchronous method that takes a closure, and an asynchronous throwing method.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func write(",
            "    _ data: Data, ",
            "    timeout: TimeInterval, ",
            "    completionHandler: @escaping (Error?) -> Void",
            ")",
            "",
            "func write(_ data: Data, timeout: TimeInterval) async throws"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Methods whose completion handlers take multiple arguments become methods that return",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "a tuple. For example, the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/PassKit/PKPassLibrary/sign(_:using:completion:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method from PassKit is declared like this in Objective-C:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "- (void)signData:(NSData *)signData ",
            "withSecureElementPass:(PKSecureElementPass *)secureElementPass ",
            "      completion:(void (^)(NSData *signedData, NSData *signature, NSError *error))completion;"
          ],
          "syntax": "occ",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "In Swift it‘s imported as two methods, an asychronous method that takes a closure",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and an asynchronous throwing method that returns a tuple:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func sign(",
            "    _ signData: Data, ",
            "    using secureElementPass: PKSecureElementPass, ",
            "    completion: @escaping (Data?, Data?, Error?) -> Void",
            ")",
            "",
            "func sign(_ signData: Data, ",
            "    using secureElementPass: PKSecureElementPass",
            ") async throws -> (Data, Data)"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Understand-the-Conversion-Rules",
          "level": 3,
          "text": "Understand the Conversion Rules",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The method that takes a completion handler must meet the following requirements:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The method has a ",
                      "type": "text"
                    },
                    {
                      "code": "void",
                      "type": "codeVoice"
                    },
                    {
                      "text": " return type.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The block has a ",
                      "type": "text"
                    },
                    {
                      "code": "void",
                      "type": "codeVoice"
                    },
                    {
                      "text": " return type.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The block is called exactly once, on all possible paths of control flow.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "If the method has only one parameter and its selector ends with one of the following",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "suffixes, Swift imports the method as an asynchronous method:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "WithCompletion",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "WithCompletionHandler",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "WithCompletionBlock",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "WithReplyTo",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "WithReply",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "If the method has more than one parameter, and the last parameter’s selector piece",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is one of the following, Swift imports the method as an asynchronous method:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "completion",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "withCompletion",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "completionHandler",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "withCompletionHandler",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "completionBlock",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "withCompletionBlock",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "replyTo",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "withReplyTo",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "reply",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "replyTo",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "The name of the Swift method is modified from the Objective-C method as follows:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The selector piece for the completion handler is removed.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "If the selector starts with ",
                      "type": "text"
                    },
                    {
                      "code": "get",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", that prefix is removed and leading initialisms",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "are converted to lowercase.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "If the selector ends with ",
                      "type": "text"
                    },
                    {
                      "code": "Asynchronously",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", that suffix is removed.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "If the method calls its completion handler with a nullable parameter, the asynchronous",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "version in Swift is marked with the ",
                      "type": "text"
                    },
                    {
                      "code": "@discardableResult",
                      "type": "codeVoice"
                    },
                    {
                      "text": " attribute.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/about-imported-cocoa-error-parameters": {
      "abstract": [
        {
          "text": "Learn how Cocoa error parameters are converted to Swift throwing methods.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/about-imported-cocoa-error-parameters",
      "kind": "article",
      "role": "article",
      "title": "About Imported Cocoa Error Parameters",
      "type": "topic",
      "url": "/documentation/swift/about-imported-cocoa-error-parameters"
    },
    "doc://com.apple.Swift/documentation/Swift/cocoa-design-patterns": {
      "abstract": [
        {
          "text": "Adopt and interoperate with Cocoa design patterns in your Swift apps.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/cocoa-design-patterns",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Cocoa Design Patterns",
      "type": "topic",
      "url": "/documentation/swift/cocoa-design-patterns"
    },
    "doc://com.apple.Swift/documentation/Swift/handling-dynamically-typed-methods-and-objects-in-swift": {
      "abstract": [
        {
          "text": "Cast instances of the Objective-C ",
          "type": "text"
        },
        {
          "code": "id",
          "type": "codeVoice"
        },
        {
          "text": " type to a specific Swift type.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/handling-dynamically-typed-methods-and-objects-in-swift",
      "kind": "article",
      "role": "article",
      "title": "Handling Dynamically Typed Methods and Objects in Swift",
      "type": "topic",
      "url": "/documentation/swift/handling-dynamically-typed-methods-and-objects-in-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/imported-c-and-objective-c-apis": {
      "abstract": [
        {
          "text": "Use native Swift syntax to interoperate with types and functions in C and Objective-C.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/imported-c-and-objective-c-apis",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Imported C and Objective-C APIs",
      "type": "topic",
      "url": "/documentation/swift/imported-c-and-objective-c-apis"
    },
    "doc://com.apple.Swift/documentation/Swift/migrating-your-objective-c-code-to-swift": {
      "abstract": [
        {
          "text": "Learn the recommended steps to migrate your code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/migrating-your-objective-c-code-to-swift",
      "kind": "article",
      "role": "article",
      "title": "Migrating Your Objective-C Code to Swift",
      "type": "topic",
      "url": "/documentation/swift/migrating-your-objective-c-code-to-swift"
    },
    "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization": {
      "abstract": [
        {
          "text": "Apply macros to your Objective-C APIs to customize how they’re imported into Swift.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Objective-C and C Code Customization",
      "type": "topic",
      "url": "/documentation/swift/objective-c-and-c-code-customization"
    },
    "doc://com.apple.Swift/documentation/Swift/using-objective-c-runtime-features-in-swift": {
      "abstract": [
        {
          "text": "Use selectors and key paths to interact with dynamic Objective-C APIs.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/using-objective-c-runtime-features-in-swift",
      "kind": "article",
      "role": "article",
      "title": "Using Objective-C Runtime Features in Swift",
      "type": "topic",
      "url": "/documentation/swift/using-objective-c-runtime-features-in-swift"
    },
    "doc://com.apple.documentation/documentation/PassKit/PKPassLibrary/sign(_:using:completion:)": {
      "abstract": [
        {
          "text": "Signs an opaque value using a cryptographic signature.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sign"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "_"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "signData"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DataV",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "using"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "secureElementPass"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)PKSecureElementPass",
          "text": "PKSecureElementPass"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "completion"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "@escaping"
        },
        {
          "kind": "text",
          "text": " ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DataV",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DataV",
          "text": "Data"
        },
        {
          "kind": "text",
          "text": "?, (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ")?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/PassKit/PKPassLibrary/sign(_:using:completion:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "sign(_:using:completion:)",
      "type": "topic",
      "url": "/documentation/PassKit/PKPassLibrary/sign(_:using:completion:)"
    },
    "doc://com.apple.documentation/documentation/PassKit/PKPaymentAuthorizationController/present(completion:)": {
      "abstract": [
        {
          "text": "Presents the payment sheet modally over your app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "present"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "completion"
        },
        {
          "kind": "text",
          "text": ": (("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ")? = nil)"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/PassKit/PKPaymentAuthorizationController/present(completion:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "present(completion:)",
      "type": "topic",
      "url": "/documentation/PassKit/PKPaymentAuthorizationController/present(completion:)"
    },
    "doc://com.apple.documentation/documentation/foundation/nserror": {
      "abstract": [
        {
          "text": "Information about an error condition including a domain, a domain-specific error code, and application-specific information.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSError"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nserror",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSError",
      "type": "topic",
      "url": "/documentation/foundation/nserror"
    },
    "doc://com.apple.documentation/documentation/foundation/urlsessionstreamtask": {
      "abstract": [
        {
          "text": "A URL session task that is stream-based.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "URLSessionStreamTask"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/urlsessionstreamtask",
      "kind": "symbol",
      "role": "symbol",
      "title": "URLSessionStreamTask",
      "type": "topic",
      "url": "/documentation/foundation/urlsessionstreamtask"
    },
    "doc://com.apple.documentation/documentation/foundation/urlsessionstreamtask/1411602-write": {
      "abstract": [
        {
          "text": "Asynchronously writes the specified data to the stream, and calls a handler upon completion.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "write"
        },
        {
          "kind": "text",
          "text": "(Data, "
        },
        {
          "kind": "identifier",
          "text": "timeout"
        },
        {
          "kind": "text",
          "text": ": TimeInterval, "
        },
        {
          "kind": "identifier",
          "text": "completionHandler"
        },
        {
          "kind": "text",
          "text": ": ((any Error)?) -> Void)"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/urlsessionstreamtask/1411602-write",
      "kind": "symbol",
      "role": "symbol",
      "title": "write(_:timeout:completionHandler:)",
      "type": "topic",
      "url": "/documentation/foundation/urlsessionstreamtask/1411602-write"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html": {
      "identifier": "https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html",
      "title": "Concurrency",
      "titleInlineContent": [
        {
          "text": "Concurrency",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Language-Interoperability-with-Objective-C-and-C",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/objective-c-and-c-code-customization",
        "doc://com.apple.Swift/documentation/Swift/migrating-your-objective-c-code-to-swift",
        "doc://com.apple.Swift/documentation/Swift/cocoa-design-patterns",
        "doc://com.apple.Swift/documentation/Swift/handling-dynamically-typed-methods-and-objects-in-swift",
        "doc://com.apple.Swift/documentation/Swift/using-objective-c-runtime-features-in-swift",
        "doc://com.apple.Swift/documentation/Swift/imported-c-and-objective-c-apis"
      ],
      "title": "Language Interoperability with Objective-C and C"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1PassKit~1PKPassLibrary~1sign(_:using:completion:)/title",
          "value": "signData:withSecureElementPass:completion:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1PassKit~1PKPassLibrary~1sign(_:using:completion:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "signData:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSData",
              "text": "NSData"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "signData"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "withSecureElementPass:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)PKSecureElementPass",
              "text": "PKSecureElementPass"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "secureElementPass"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "completion:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": " (^)("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSData",
              "text": "NSData"
            },
            {
              "kind": "text",
              "text": " * "
            },
            {
              "kind": "internalParam",
              "text": "signedData"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSData",
              "text": "NSData"
            },
            {
              "kind": "text",
              "text": " * "
            },
            {
              "kind": "internalParam",
              "text": "signature"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSError",
              "text": "NSError"
            },
            {
              "kind": "text",
              "text": " * "
            },
            {
              "kind": "internalParam",
              "text": "error"
            },
            {
              "kind": "text",
              "text": ")) "
            },
            {
              "kind": "internalParam",
              "text": "completion"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1foundation~1urlsessionstreamtask/title",
          "value": "NSURLSessionStreamTask"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1foundation~1urlsessionstreamtask~11411602-write/title",
          "value": "writeData:timeout:completionHandler:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1PassKit~1PKPaymentAuthorizationController~1present(completion:)/title",
          "value": "presentWithCompletion:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1PassKit~1PKPaymentAuthorizationController~1present(completion:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "presentWithCompletion:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": " (^)("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BOOL",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "success"
            },
            {
              "kind": "text",
              "text": ")) "
            },
            {
              "kind": "internalParam",
              "text": "completion"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
