{
  "abstract": [
    {
      "text": "Use these functions with numeric values and other comparable types.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/swift-standard-library",
        "doc://com.apple.Swift/documentation/Swift/numbers-and-basic-values"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/global-numeric-functions"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "role": "collectionGroup",
    "roleHeading": "API Collection",
    "title": "Global Numeric Functions"
  },
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/abs(_:)": {
      "abstract": [
        {
          "text": "Returns the absolute value of the given number.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "abs"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/abs(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "abs(_:)",
      "type": "topic",
      "url": "/documentation/swift/abs(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/max(_:_:)": {
      "abstract": [
        {
          "text": "Returns the greater of two comparable values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "max"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/max(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "max(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/max(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/max(_:_:_:_:)": {
      "abstract": [
        {
          "text": "Returns the greatest argument passed.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "max"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "...) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/max(_:_:_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "max(_:_:_:_:)",
      "type": "topic",
      "url": "/documentation/swift/max(_:_:_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/min(_:_:)": {
      "abstract": [
        {
          "text": "Returns the lesser of two comparable values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "min"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/min(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "min(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/min(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/min(_:_:_:_:)": {
      "abstract": [
        {
          "text": "Returns the least argument passed.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "min"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "...) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/min(_:_:_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "min(_:_:_:_:)",
      "type": "topic",
      "url": "/documentation/swift/min(_:_:_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/numbers-and-basic-values": {
      "abstract": [
        {
          "text": "Model data with numbers, Boolean values, and other fundamental types.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/numbers-and-basic-values",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Numbers and Basic Values",
      "type": "topic",
      "url": "/documentation/swift/numbers-and-basic-values"
    },
    "doc://com.apple.Swift/documentation/Swift/numeric-protocols": {
      "abstract": [
        {
          "text": "Write generic code that works with any numeric type.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/numeric-protocols",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Numeric Protocols",
      "type": "topic",
      "url": "/documentation/swift/numeric-protocols"
    },
    "doc://com.apple.Swift/documentation/Swift/simd-vector-types": {
      "abstract": [
        {
          "text": "Work with fixed-width vectors of fixed-width numeric types of different sizes.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/simd-vector-types",
      "kind": "article",
      "role": "collectionGroup",
      "title": "SIMD Vector Types",
      "type": "topic",
      "url": "/documentation/swift/simd-vector-types"
    },
    "doc://com.apple.Swift/documentation/Swift/special-use-numeric-types": {
      "abstract": [
        {
          "text": "Work with fixed-width numeric types of different sizes.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/special-use-numeric-types",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Special-Use Numeric Types",
      "type": "topic",
      "url": "/documentation/swift/special-use-numeric-types"
    },
    "doc://com.apple.Swift/documentation/Swift/swift-standard-library": {
      "abstract": [
        {
          "text": "Solve complex problems and write high-performance, readable code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/swift-standard-library",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Swift Standard Library",
      "type": "topic",
      "url": "/documentation/swift/swift-standard-library"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Advanced-Numerics",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/numeric-protocols",
        "doc://com.apple.Swift/documentation/Swift/special-use-numeric-types",
        "doc://com.apple.Swift/documentation/Swift/simd-vector-types"
      ],
      "title": "Advanced Numerics"
    }
  ],
  "topicSections": [
    {
      "anchor": "Choosing-the-Smallest-and-Largest-Value",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/min(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/min(_:_:_:_:)",
        "doc://com.apple.Swift/documentation/Swift/max(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/max(_:_:_:_:)"
      ],
      "title": "Choosing the Smallest and Largest Value"
    },
    {
      "anchor": "Finding-the-Absolute-Value",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/abs(_:)"
      ],
      "title": "Finding the Absolute Value"
    }
  ]
}
