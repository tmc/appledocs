{"variants":[{"paths":["/documentation/swift/setalgebra"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc://com.apple.Swift/documentation/Swift/SetAlgebra","interfaceLanguage":"swift"},"abstract":[{"text":"A type that provides mathematical set operations.","type":"text"}],"hierarchy":{"paths":[["doc://com.apple.documentation/documentation/technologies","doc://com.apple.Swift/documentation/Swift"]]},"relationshipsSections":[{"identifiers":["doc://com.apple.Swift/documentation/Swift/Equatable","doc://com.apple.Swift/documentation/Swift/ExpressibleByArrayLiteral"],"title":"Inherits From","type":"inheritsFrom","kind":"relationships"},{"identifiers":["doc://com.apple.Swift/documentation/Swift/OptionSet"],"title":"Inherited By","type":"inheritedBy","kind":"relationships"},{"identifiers":["doc://com.apple.Swift/documentation/Swift/Set"],"title":"Conforming Types","type":"conformingTypes","kind":"relationships"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"topicSections":[{"identifiers":["doc://com.apple.Swift/documentation/Swift/SetAlgebra/init()"],"anchor":"Creating-a-Set","title":"Creating a Set"},{"identifiers":["doc://com.apple.Swift/documentation/Swift/SetAlgebra/contains(_:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/Element"],"anchor":"Testing-for-Membership","title":"Testing for Membership"},{"identifiers":["doc://com.apple.Swift/documentation/Swift/SetAlgebra/insert(_:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/update(with:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/remove(_:)"],"anchor":"Adding-and-Removing-Elements","title":"Adding and Removing Elements"},{"identifiers":["doc://com.apple.Swift/documentation/Swift/SetAlgebra/union(_:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/formUnion(_:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/intersection(_:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/formIntersection(_:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/symmetricDifference(_:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/formSymmetricDifference(_:)"],"anchor":"Combining-Sets","title":"Combining Sets"},{"identifiers":["doc://com.apple.Swift/documentation/Swift/SetAlgebra/isStrictSubset(of:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/isStrictSuperset(of:)"],"anchor":"Comparing-Sets","title":"Comparing Sets"},{"identifiers":["doc://com.apple.Swift/documentation/Swift/SetAlgebra/init(_:)"],"anchor":"Initializers","title":"Initializers","generated":true},{"identifiers":["doc://com.apple.Swift/documentation/Swift/SetAlgebra/isEmpty"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"identifiers":["doc://com.apple.Swift/documentation/Swift/SetAlgebra/isDisjoint(with:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/isSubset(of:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/isSuperset(of:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/subtract(_:)","doc://com.apple.Swift/documentation/Swift/SetAlgebra/subtracting(_:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true}],"metadata":{"platforms":[{"name":"iOS","introducedAt":"8.0","deprecated":false,"unavailable":false,"beta":false},{"name":"iPadOS","introducedAt":"8.0","deprecated":false,"unavailable":false,"beta":false},{"name":"Mac Catalyst","introducedAt":"13.0","deprecated":false,"unavailable":false,"beta":false},{"name":"macOS","introducedAt":"10.10","deprecated":false,"unavailable":false,"beta":false},{"name":"tvOS","introducedAt":"9.0","deprecated":false,"unavailable":false,"beta":false},{"name":"visionOS","introducedAt":"1.0","deprecated":false,"unavailable":false,"beta":false},{"name":"watchOS","introducedAt":"2.0","deprecated":false,"unavailable":false,"beta":false}],"symbolKind":"protocol","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SetAlgebra","kind":"identifier"}],"modules":[{"name":"Swift"}],"title":"SetAlgebra","externalID":"s:s10SetAlgebraP","navigatorTitle":[{"text":"SetAlgebra","kind":"identifier"}],"role":"symbol"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SetAlgebra","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/Element","text":"Element"},{"kind":"text","text":"> : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SQ","identifier":"doc://com.apple.Swift/documentation/Swift/Equatable","text":"Equatable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s25ExpressibleByArrayLiteralP","identifier":"doc://com.apple.Swift/documentation/Swift/ExpressibleByArrayLiteral","text":"ExpressibleByArrayLiteral"}],"platforms":["iOS","iPadOS","Mac Catalyst","macOS","tvOS","visionOS","watchOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"text":"You use types that conform to the ","type":"text"},{"type":"codeVoice","code":"SetAlgebra"},{"text":" protocol when you need","type":"text"},{"text":" ","type":"text"},{"text":"efficient membership tests or mathematical set operations such as","type":"text"},{"text":" ","type":"text"},{"text":"intersection, union, and subtraction. In the standard library, you can","type":"text"},{"text":" ","type":"text"},{"text":"use the ","type":"text"},{"type":"codeVoice","code":"Set"},{"text":" type with elements of any hashable type, or you can easily","type":"text"},{"text":" ","type":"text"},{"text":"create bit masks with ","type":"text"},{"type":"codeVoice","code":"SetAlgebra"},{"text":" conformance using the ","type":"text"},{"type":"codeVoice","code":"OptionSet"},{"text":" ","type":"text"},{"text":"protocol. See those types for more information.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unlike ordinary set types, the "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" type of an "},{"type":"codeVoice","code":"OptionSet"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"identical to the "},{"type":"codeVoice","code":"OptionSet"},{"type":"text","text":" type itself. The "},{"type":"codeVoice","code":"SetAlgebra"},{"type":"text","text":" protocol is"},{"type":"text","text":" "},{"type":"text","text":"specifically designed to accommodate both kinds of set."}]}],"style":"note","type":"aside","name":"Note"},{"anchor":"Conforming-to-the-SetAlgebra-Protocol","text":"Conforming to the SetAlgebra Protocol","level":1,"type":"heading"},{"inlineContent":[{"text":"When implementing a custom type that conforms to the ","type":"text"},{"type":"codeVoice","code":"SetAlgebra"},{"text":" protocol,","type":"text"},{"text":" ","type":"text"},{"text":"you must implement the required initializers and methods. For the","type":"text"},{"text":" ","type":"text"},{"text":"inherited methods to work properly, conforming types must meet the","type":"text"},{"text":" ","type":"text"},{"text":"following axioms. Assume that ","type":"text"},{"type":"codeVoice","code":"S"},{"text":" is a custom type that conforms to the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"SetAlgebra"},{"text":" protocol, ","type":"text"},{"type":"codeVoice","code":"x"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"y"},{"text":" are instances of ","type":"text"},{"type":"codeVoice","code":"S"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"e"},{"text":" is of","type":"text"},{"text":" ","type":"text"},{"text":"type ","type":"text"},{"type":"codeVoice","code":"S.Element"},{"text":"â€”the type that the set holds.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"S() == []"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"x.intersection(x) == x","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"x.intersection([]) == []","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"x.union(x) == x"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"x.union([]) == x"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"x.contains(e)"},{"type":"text","text":" implies "},{"type":"codeVoice","code":"x.union(y).contains(e)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"x.union(y).contains(e)"},{"type":"text","text":" implies "},{"type":"codeVoice","code":"x.contains(e) || y.contains(e)"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"x.contains(e) && y.contains(e)"},{"text":" if and only if","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"x.intersection(y).contains(e)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"x.isSubset(of: y)","type":"codeVoice"},{"type":"text","text":" implies "},{"code":"x.union(y) == y","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"x.isSuperset(of: y)"},{"type":"text","text":" implies "},{"type":"codeVoice","code":"x.union(y) == x"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"x.isSubset(of: y)","type":"codeVoice"},{"text":" if and only if ","type":"text"},{"code":"y.isSuperset(of: x)","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"x.isStrictSuperset(of: y)"},{"type":"text","text":" if and only if"},{"type":"text","text":" "},{"type":"codeVoice","code":"x.isSuperset(of: y) && x != y"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"x.isStrictSubset(of: y)","type":"codeVoice"},{"type":"text","text":" if and only if "},{"code":"x.isSubset(of: y) && x != y","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"references":{"doc://com.apple.Swift/documentation/Swift/SetAlgebra/insert(_:)":{"title":"insert(_:)","defaultImplementations":1,"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Inserts the given element in the set if it is not already present."}],"required":true,"url":"/documentation/swift/setalgebra/insert(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insert"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> (inserted"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", memberAfterInsert"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":")","kind":"text"}],"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/insert(_:)"},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/formIntersection(_:)":{"title":"formIntersection(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formIntersection"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"type":"topic","url":"/documentation/swift/setalgebra/formintersection(_:)","kind":"symbol","defaultImplementations":1,"role":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/formIntersection(_:)","required":true,"abstract":[{"type":"text","text":"Removes the elements of this set that arenâ€™t also in the given set."}]},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/isSuperset(of:)":{"type":"topic","kind":"symbol","defaultImplementations":1,"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/isSuperset(of:)","abstract":[{"type":"text","text":"Returns a Boolean value that indicates whether the set is a superset of"},{"type":"text","text":" "},{"type":"text","text":"the given set."}],"url":"/documentation/swift/setalgebra/issuperset(of:)","title":"isSuperset(of:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isSuperset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"required":true},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/subtract(_:)":{"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/subtract(_:)","title":"subtract(_:)","abstract":[{"type":"text","text":"Removes the elements of the given set from this set."}],"defaultImplementations":1,"url":"/documentation/swift/setalgebra/subtract(_:)","required":true,"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subtract"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}]},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/remove(_:)":{"title":"remove(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"},{"kind":"text","text":"?"}],"type":"topic","url":"/documentation/swift/setalgebra/remove(_:)","kind":"symbol","defaultImplementations":1,"role":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/remove(_:)","required":true,"abstract":[{"type":"text","text":"Removes the given element and any elements subsumed by the given element."}]},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/subtracting(_:)":{"type":"topic","kind":"symbol","defaultImplementations":1,"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/subtracting(_:)","abstract":[{"text":"Returns a new set containing the elements of this set that do not occur","type":"text"},{"text":" ","type":"text"},{"text":"in the given set.","type":"text"}],"url":"/documentation/swift/setalgebra/subtracting(_:)","title":"subtracting(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"subtracting","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"required":true},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/isDisjoint(with:)":{"title":"isDisjoint(with:)","defaultImplementations":1,"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value that indicates whether the set has no members in"},{"type":"text","text":" "},{"type":"text","text":"common with the given set."}],"required":true,"url":"/documentation/swift/setalgebra/isdisjoint(with:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isDisjoint"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/isDisjoint(with:)"},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/symmetricDifference(_:)":{"title":"symmetricDifference(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"symmetricDifference"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","url":"/documentation/swift/setalgebra/symmetricdifference(_:)","kind":"symbol","defaultImplementations":1,"role":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/symmetricDifference(_:)","required":true,"abstract":[{"type":"text","text":"Returns a new set with the elements that are either in this set or in the"},{"type":"text","text":" "},{"type":"text","text":"given set, but not in both."}]},"doc://com.apple.Swift/documentation/Swift/SetAlgebra":{"type":"topic","kind":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra","abstract":[{"text":"A type that provides mathematical set operations.","type":"text"}],"navigatorTitle":[{"text":"SetAlgebra","kind":"identifier"}],"url":"/documentation/swift/setalgebra","title":"SetAlgebra","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SetAlgebra","kind":"identifier"}]},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/intersection(_:)":{"defaultImplementations":1,"url":"/documentation/swift/setalgebra/intersection(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"intersection","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a new set with the elements that are common to both this set and"},{"type":"text","text":" "},{"type":"text","text":"the given set."}],"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/intersection(_:)","role":"symbol","required":true,"kind":"symbol","title":"intersection(_:)","type":"topic"},"doc://com.apple.Swift/documentation/Swift/ExpressibleByArrayLiteral":{"url":"/documentation/swift/expressiblebyarrayliteral","abstract":[{"type":"text","text":"A type that can be initialized using an array literal."}],"title":"ExpressibleByArrayLiteral","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExpressibleByArrayLiteral"}],"type":"topic","identifier":"doc://com.apple.Swift/documentation/Swift/ExpressibleByArrayLiteral","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExpressibleByArrayLiteral"}],"kind":"symbol"},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/formSymmetricDifference(_:)":{"title":"formSymmetricDifference(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formSymmetricDifference","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"/documentation/swift/setalgebra/formsymmetricdifference(_:)","kind":"symbol","defaultImplementations":1,"role":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/formSymmetricDifference(_:)","required":true,"abstract":[{"text":"Removes the elements of the set that are also in the given set and adds","type":"text"},{"text":" ","type":"text"},{"text":"the members of the given set that are not already in the set.","type":"text"}]},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/init(_:)":{"defaultImplementations":1,"url":"/documentation/swift/setalgebra/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Creates a new set from a finite sequence of items.","type":"text"}],"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/init(_:)","role":"symbol","required":true,"kind":"symbol","title":"init(_:)","type":"topic"},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/init()":{"title":"init()","defaultImplementations":1,"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Creates an empty set."}],"required":true,"url":"/documentation/swift/setalgebra/init()","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/init()"},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/formUnion(_:)":{"type":"topic","kind":"symbol","defaultImplementations":1,"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/formUnion(_:)","abstract":[{"type":"text","text":"Adds the elements of the given set to the set."}],"url":"/documentation/swift/setalgebra/formunion(_:)","title":"formUnion(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formUnion","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"required":true},"doc://com.apple.Swift/documentation/Swift/Equatable":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Equatable"}],"url":"/documentation/swift/equatable","title":"Equatable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"role":"symbol","type":"topic","identifier":"doc://com.apple.Swift/documentation/Swift/Equatable","abstract":[{"type":"text","text":"A type that can be compared for value equality."}]},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/isStrictSubset(of:)":{"url":"/documentation/swift/setalgebra/isstrictsubset(of:)","abstract":[{"text":"Returns a Boolean value that indicates whether this set is a strict","type":"text"},{"text":" ","type":"text"},{"text":"subset of the given set.","type":"text"}],"title":"isStrictSubset(of:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isStrictSubset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/isStrictSubset(of:)","role":"symbol","kind":"symbol"},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/isSubset(of:)":{"defaultImplementations":1,"url":"/documentation/swift/setalgebra/issubset(of:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isSubset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Returns a Boolean value that indicates whether the set is a subset of"},{"type":"text","text":" "},{"type":"text","text":"another set."}],"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/isSubset(of:)","role":"symbol","required":true,"kind":"symbol","title":"isSubset(of:)","type":"topic"},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/contains(_:)":{"type":"topic","kind":"symbol","defaultImplementations":1,"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/contains(_:)","abstract":[{"text":"Returns a Boolean value that indicates whether the given element exists","type":"text"},{"text":" ","type":"text"},{"text":"in the set.","type":"text"}],"url":"/documentation/swift/setalgebra/contains(_:)","title":"contains(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contains","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"required":true},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/isEmpty":{"title":"isEmpty","defaultImplementations":1,"role":"symbol","kind":"symbol","abstract":[{"text":"A Boolean value that indicates whether the set has no elements.","type":"text"}],"required":true,"url":"/documentation/swift/setalgebra/isempty","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEmpty","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/isEmpty"},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/Element":{"url":"/documentation/swift/setalgebra/element","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Element"}],"abstract":[{"type":"text","text":"A type for which the conforming type provides a containment test."}],"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/Element","role":"symbol","required":true,"kind":"symbol","title":"Element","type":"topic"},"doc://com.apple.Swift/documentation/Swift":{"abstract":[{"text":"Build apps using a powerful open language.","type":"text"}],"type":"topic","role":"collection","title":"Swift","identifier":"doc://com.apple.Swift/documentation/Swift","url":"/documentation/swift","kind":"symbol","images":[{"identifier":"Swift-PageImage-card.png","type":"card"}]},"doc://com.apple.documentation/documentation/technologies":{"abstract":[{"text":"","type":"text"}],"type":"topic","role":"overview","title":"Technologies","identifier":"doc://com.apple.documentation/documentation/technologies","url":"/documentation/technologies","kind":"technologies"},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/union(_:)":{"type":"topic","kind":"symbol","defaultImplementations":1,"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/union(_:)","abstract":[{"type":"text","text":"Returns a new set with the elements of both this and the given set."}],"url":"/documentation/swift/setalgebra/union(_:)","title":"union(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"union"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"required":true},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/isStrictSuperset(of:)":{"title":"isStrictSuperset(of:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isStrictSuperset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","url":"/documentation/swift/setalgebra/isstrictsuperset(of:)","kind":"symbol","role":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/isStrictSuperset(of:)","abstract":[{"text":"Returns a Boolean value that indicates whether this set is a strict","type":"text"},{"text":" ","type":"text"},{"text":"superset of the given set.","type":"text"}]},"doc://com.apple.Swift/documentation/Swift/Set":{"title":"Set","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Set"}],"type":"topic","url":"/documentation/swift/set","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Set"}],"role":"symbol","identifier":"doc://com.apple.Swift/documentation/Swift/Set","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"An unordered collection of unique elements.","type":"text"}]},"Swift-PageImage-card.png":{"variants":[{"url":"https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png","traits":["2x","light"]},{"url":"https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png","traits":["2x","dark"]}],"alt":"An orange Swift logo on a gradient background.","type":"image","identifier":"Swift-PageImage-card.png"},"doc://com.apple.Swift/documentation/Swift/OptionSet":{"url":"/documentation/swift/optionset","abstract":[{"text":"A type that presents a mathematical set interface to a bit set.","type":"text"}],"title":"OptionSet","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionSet","kind":"identifier"}],"type":"topic","identifier":"doc://com.apple.Swift/documentation/Swift/OptionSet","role":"symbol","navigatorTitle":[{"text":"OptionSet","kind":"identifier"}],"kind":"symbol"},"doc://com.apple.Swift/documentation/Swift/SetAlgebra/update(with:)":{"defaultImplementations":1,"url":"/documentation/swift/setalgebra/update(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"update"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Inserts the given element into the set unconditionally."}],"identifier":"doc://com.apple.Swift/documentation/Swift/SetAlgebra/update(with:)","role":"symbol","required":true,"kind":"symbol","title":"update(with:)","type":"topic"}},"legalNotices":{"copyright":"Copyright &copy; 2025 Apple Inc. All rights reserved.","termsOfUse":"https://www.apple.com/legal/internet-services/terms/site.html","privacyPolicy":"https://www.apple.com/privacy/privacy-policy"}}