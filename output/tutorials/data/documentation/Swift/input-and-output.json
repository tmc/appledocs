{
  "abstract": [
    {
      "text": "Print values to the console, read from and write to text streams, and use command",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "line arguments.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/swift-standard-library"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/input-and-output"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "role": "collectionGroup",
    "roleHeading": "API Collection",
    "title": "Input and Output"
  },
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/CommandLine": {
      "abstract": [
        {
          "text": "Command-line arguments for the current process.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CommandLine"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CommandLine",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CommandLine"
        }
      ],
      "role": "symbol",
      "title": "CommandLine",
      "type": "topic",
      "url": "/documentation/swift/commandline"
    },
    "doc://com.apple.Swift/documentation/Swift/TextOutputStream": {
      "abstract": [
        {
          "text": "A type that can be the target of text-streaming operations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TextOutputStream"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TextOutputStream",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TextOutputStream"
        }
      ],
      "role": "symbol",
      "title": "TextOutputStream",
      "type": "topic",
      "url": "/documentation/swift/textoutputstream"
    },
    "doc://com.apple.Swift/documentation/Swift/TextOutputStreamable": {
      "abstract": [
        {
          "text": "A source of text-streaming operations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TextOutputStreamable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TextOutputStreamable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TextOutputStreamable"
        }
      ],
      "role": "symbol",
      "title": "TextOutputStreamable",
      "type": "topic",
      "url": "/documentation/swift/textoutputstreamable"
    },
    "doc://com.apple.Swift/documentation/Swift/c-interoperability": {
      "abstract": [
        {
          "text": "Use imported C types or call C variadic functions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/c-interoperability",
      "kind": "article",
      "role": "collectionGroup",
      "title": "C Interoperability",
      "type": "topic",
      "url": "/documentation/swift/c-interoperability"
    },
    "doc://com.apple.Swift/documentation/Swift/concurrency": {
      "abstract": [
        {
          "text": "Perform asynchronous and parallel operations.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/concurrency",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Concurrency",
      "type": "topic",
      "url": "/documentation/swift/concurrency"
    },
    "doc://com.apple.Swift/documentation/Swift/debugging-and-reflection": {
      "abstract": [
        {
          "text": "Fortify your code with runtime checks, and examine your valuesâ€™ runtime representation.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/debugging-and-reflection",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Debugging and Reflection",
      "type": "topic",
      "url": "/documentation/swift/debugging-and-reflection"
    },
    "doc://com.apple.Swift/documentation/Swift/key-path-expressions": {
      "abstract": [
        {
          "text": "Use key-path expressions to access properties dynamically.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/key-path-expressions",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Key-Path Expressions",
      "type": "topic",
      "url": "/documentation/swift/key-path-expressions"
    },
    "doc://com.apple.Swift/documentation/Swift/macros": {
      "abstract": [
        {
          "text": "Generate boilerplate code and perform other compile-time operations.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/macros",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Macros",
      "type": "topic",
      "url": "/documentation/swift/macros"
    },
    "doc://com.apple.Swift/documentation/Swift/manual-memory-management": {
      "abstract": [
        {
          "text": "Allocate and manage memory manually.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/manual-memory-management",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Manual Memory Management",
      "type": "topic",
      "url": "/documentation/swift/manual-memory-management"
    },
    "doc://com.apple.Swift/documentation/Swift/operator-declarations": {
      "abstract": [
        {
          "text": "Work with prefix, postfix, and infix operators.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/operator-declarations",
      "kind": "article",
      "role": "article",
      "title": "Operator Declarations",
      "type": "topic",
      "url": "/documentation/swift/operator-declarations"
    },
    "doc://com.apple.Swift/documentation/Swift/print(_:separator:terminator:)": {
      "abstract": [
        {
          "text": "Writes the textual representations of the given items into the standard",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "output.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "print"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "..., "
        },
        {
          "kind": "externalParam",
          "text": "separator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "terminator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/print(_:separator:terminator:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "print(_:separator:terminator:)",
      "type": "topic",
      "url": "/documentation/swift/print(_:separator:terminator:)"
    },
    "doc://com.apple.Swift/documentation/Swift/print(_:separator:terminator:to:)": {
      "abstract": [
        {
          "text": "Writes the textual representations of the given items into the given output",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "stream.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "print"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Target"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "..., "
        },
        {
          "kind": "externalParam",
          "text": "separator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "terminator"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Target"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/print(_:separator:terminator:to:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "print(_:separator:terminator:to:)",
      "type": "topic",
      "url": "/documentation/swift/print(_:separator:terminator:to:)"
    },
    "doc://com.apple.Swift/documentation/Swift/readLine(strippingNewline:)": {
      "abstract": [
        {
          "text": "Returns a string read from standard input through the end of the current",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "line or until EOF is reached.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "readLine"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "strippingNewline"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/readLine(strippingNewline:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "readLine(strippingNewline:)",
      "type": "topic",
      "url": "/documentation/swift/readline(strippingnewline:)"
    },
    "doc://com.apple.Swift/documentation/Swift/swift-standard-library": {
      "abstract": [
        {
          "text": "Solve complex problems and write high-performance, readable code.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/swift-standard-library",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Swift Standard Library",
      "type": "topic",
      "url": "/documentation/swift/swift-standard-library"
    },
    "doc://com.apple.Swift/documentation/Swift/type-casting-and-existential-types": {
      "abstract": [
        {
          "text": "Perform casts between types or represent values of any type.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/type-casting-and-existential-types",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Type Casting and Existential Types",
      "type": "topic",
      "url": "/documentation/swift/type-casting-and-existential-types"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Programming-Tasks",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/debugging-and-reflection",
        "doc://com.apple.Swift/documentation/Swift/macros",
        "doc://com.apple.Swift/documentation/Swift/concurrency",
        "doc://com.apple.Swift/documentation/Swift/key-path-expressions",
        "doc://com.apple.Swift/documentation/Swift/manual-memory-management",
        "doc://com.apple.Swift/documentation/Swift/type-casting-and-existential-types",
        "doc://com.apple.Swift/documentation/Swift/c-interoperability",
        "doc://com.apple.Swift/documentation/Swift/operator-declarations"
      ],
      "title": "Programming Tasks"
    }
  ],
  "topicSections": [
    {
      "anchor": "Text-Output",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/print(_:separator:terminator:)",
        "doc://com.apple.Swift/documentation/Swift/print(_:separator:terminator:to:)"
      ],
      "title": "Text Output"
    },
    {
      "anchor": "Command-Line-Input",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/CommandLine",
        "doc://com.apple.Swift/documentation/Swift/readLine(strippingNewline:)"
      ],
      "title": "Command Line Input"
    },
    {
      "anchor": "Streams",
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/TextOutputStream",
        "doc://com.apple.Swift/documentation/Swift/TextOutputStreamable"
      ],
      "title": "Streams"
    }
  ]
}
