{
  "abstract": [
    {
      "text": "A 64-bit signed integer value",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "type.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/Int64"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:s5Int64V",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Int64"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Int64"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "Int64"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Int64"
            }
          ]
        }
      ],
      "kind": "declarations"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/AdditiveArithmetic": {
      "abstract": [
        {
          "text": "A type with values that support addition and subtraction.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AdditiveArithmetic"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AdditiveArithmetic",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AdditiveArithmetic"
        }
      ],
      "role": "symbol",
      "title": "AdditiveArithmetic",
      "type": "topic",
      "url": "/documentation/swift/additivearithmetic"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryInteger": {
      "abstract": [
        {
          "text": "An integer type with a binary representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BinaryInteger"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryInteger",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BinaryInteger"
        }
      ],
      "role": "symbol",
      "title": "BinaryInteger",
      "type": "topic",
      "url": "/documentation/swift/binaryinteger"
    },
    "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "role": "symbol",
      "title": "BitwiseCopyable",
      "type": "topic",
      "url": "/documentation/swift/bitwisecopyable"
    },
    "doc://com.apple.Swift/documentation/Swift/CVarArg": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements of a C ",
          "type": "text"
        },
        {
          "code": "va_list",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CVarArg",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/swift/cvararg"
    },
    "doc://com.apple.Swift/documentation/Swift/Comparable": {
      "abstract": [
        {
          "text": "A type that can be compared using the relational operators ",
          "type": "text"
        },
        {
          "code": "<",
          "type": "codeVoice"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "code": "<=",
          "type": "codeVoice"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "code": ">=",
          "type": "codeVoice"
        },
        {
          "text": ",",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and ",
          "type": "text"
        },
        {
          "code": ">",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Comparable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Comparable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Comparable"
        }
      ],
      "role": "symbol",
      "title": "Comparable",
      "type": "topic",
      "url": "/documentation/swift/comparable"
    },
    "doc://com.apple.Swift/documentation/Swift/Copyable": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Copyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/swift/copyable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomReflectable": {
      "abstract": [
        {
          "text": "A type that explicitly supplies its own mirror.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "role": "symbol",
      "title": "CustomReflectable",
      "type": "topic",
      "url": "/documentation/swift/customreflectable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/Decodable": {
      "abstract": [
        {
          "text": "A type that can decode itself from an external representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Decodable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Decodable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Decodable"
        }
      ],
      "role": "symbol",
      "title": "Decodable",
      "type": "topic",
      "url": "/documentation/swift/decodable"
    },
    "doc://com.apple.Swift/documentation/Swift/Encodable": {
      "abstract": [
        {
          "text": "A type that can encode itself to an external representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Encodable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Encodable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Encodable"
        }
      ],
      "role": "symbol",
      "title": "Encodable",
      "type": "topic",
      "url": "/documentation/swift/encodable"
    },
    "doc://com.apple.Swift/documentation/Swift/Equatable": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Equatable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/swift/equatable"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with an integer literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByIntegerLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByIntegerLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByIntegerLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebyintegerliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/FixedWidthInteger": {
      "abstract": [
        {
          "text": "An integer type that uses a fixed size for every instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FixedWidthInteger"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/FixedWidthInteger",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FixedWidthInteger"
        }
      ],
      "role": "symbol",
      "title": "FixedWidthInteger",
      "type": "topic",
      "url": "/documentation/swift/fixedwidthinteger"
    },
    "doc://com.apple.Swift/documentation/Swift/Hashable": {
      "abstract": [
        {
          "text": "A type that can be hashed into a ",
          "type": "text"
        },
        {
          "code": "Hasher",
          "type": "codeVoice"
        },
        {
          "text": " to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Hashable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/swift/hashable"
    },
    "doc://com.apple.Swift/documentation/Swift/Int128": {
      "abstract": [
        {
          "text": "A 128-bit signed integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int128"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int128",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int128"
        }
      ],
      "role": "symbol",
      "title": "Int128",
      "type": "topic",
      "url": "/documentation/swift/int128"
    },
    "doc://com.apple.Swift/documentation/Swift/Int16": {
      "abstract": [
        {
          "text": "A 16-bit signed integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int16"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int16",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int16"
        }
      ],
      "role": "symbol",
      "title": "Int16",
      "type": "topic",
      "url": "/documentation/swift/int16"
    },
    "doc://com.apple.Swift/documentation/Swift/Int32": {
      "abstract": [
        {
          "text": "A 32-bit signed integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int32"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int32",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int32"
        }
      ],
      "role": "symbol",
      "title": "Int32",
      "type": "topic",
      "url": "/documentation/swift/int32"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64": {
      "abstract": [
        {
          "text": "A 64-bit signed integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int64"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int64"
        }
      ],
      "role": "symbol",
      "title": "Int64",
      "type": "topic",
      "url": "/documentation/swift/int64"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/!=(_:_:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "!="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/!=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "!=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/!=(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/&=(_:_:)": {
      "abstract": [
        {
          "text": "Stores the result of performing a bitwise AND operation on the two given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values in the left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "&="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/&=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "&=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/&=(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/&__=(_:_:)-3hmto": {
      "abstract": [
        {
          "text": "Returns the result of shifting a value’s binary representation the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "specified number of digits to the left, masking the shift amount to the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type’s bit width, and stores the result in the left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "&<<="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/&__=(_:_:)-3hmto",
      "kind": "symbol",
      "role": "symbol",
      "title": "&<<=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/&__=(_:_:)-3hmto"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/&__=(_:_:)-7f5t8": {
      "abstract": [
        {
          "text": "Calculates the result of shifting a value’s binary representation the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "specified number of digits to the right, masking the shift amount to the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type’s bit width, and stores the result in the left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "&>>="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/&__=(_:_:)-7f5t8",
      "kind": "symbol",
      "role": "symbol",
      "title": "&>>=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/&__=(_:_:)-7f5t8"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/*=(_:_:)": {
      "abstract": [
        {
          "text": "Multiplies two values and stores the result in the left-hand-side",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "*="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/*=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "*=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/*=(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/+=(_:_:)": {
      "abstract": [
        {
          "text": "Adds two values and stores the result in the left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "+="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/+=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "+=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/+=(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/-=(_:_:)": {
      "abstract": [
        {
          "text": "Subtracts the second value from the first and stores the difference in the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "-="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/-=(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "-=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/-=(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/==(_:_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether two values are equal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "=="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/==(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "==(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/==(_:_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/AdditiveArithmetic-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/AdditiveArithmetic-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "AdditiveArithmetic Implementations",
      "type": "topic",
      "url": "/documentation/swift/int64/additivearithmetic-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/AtomicRepresentable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/AtomicRepresentable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "AtomicRepresentable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int64/atomicrepresentable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/BinaryInteger-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/BinaryInteger-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "BinaryInteger Implementations",
      "type": "topic",
      "url": "/documentation/swift/int64/binaryinteger-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/Comparable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/Comparable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Comparable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int64/comparable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/CustomReflectable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/CustomReflectable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomReflectable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int64/customreflectable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/Decodable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/Decodable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Decodable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int64/decodable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/Encodable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/Encodable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Encodable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int64/encodable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/Equatable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/Equatable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Equatable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int64/equatable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/ExpressibleByIntegerLiteral-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/ExpressibleByIntegerLiteral-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByIntegerLiteral Implementations",
      "type": "topic",
      "url": "/documentation/swift/int64/expressiblebyintegerliteral-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/FixedWidthInteger-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/FixedWidthInteger-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "FixedWidthInteger Implementations",
      "type": "topic",
      "url": "/documentation/swift/int64/fixedwidthinteger-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/Hashable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/Hashable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Hashable Implementations",
      "type": "topic",
      "url": "/documentation/swift/int64/hashable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/IntegerLiteralType": {
      "abstract": [
        {
          "text": "A type that represents an integer literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "IntegerLiteralType"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/IntegerLiteralType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "IntegerLiteralType"
        }
      ],
      "role": "symbol",
      "title": "Int64.IntegerLiteralType",
      "type": "topic",
      "url": "/documentation/swift/int64/integerliteraltype"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/MLDataValueConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/MLDataValueConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "MLDataValueConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/int64/mldatavalueconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/Magnitude-swift.typealias": {
      "abstract": [
        {
          "text": "A type that can represent the absolute value of any possible value of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "this type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Magnitude"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/Magnitude-swift.typealias",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Magnitude"
        }
      ],
      "role": "symbol",
      "title": "Int64.Magnitude",
      "type": "topic",
      "url": "/documentation/swift/int64/magnitude-swift.typealias"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/SIMDScalar-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/SIMDScalar-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "SIMDScalar Implementations",
      "type": "topic",
      "url": "/documentation/swift/int64/simdscalar-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/SignedInteger-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/SignedInteger-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "SignedInteger Implementations",
      "type": "topic",
      "url": "/documentation/swift/int64/signedinteger-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/SignedNumeric-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/SignedNumeric-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "SignedNumeric Implementations",
      "type": "topic",
      "url": "/documentation/swift/int64/signednumeric-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/Stride": {
      "abstract": [
        {
          "text": "A type that represents the distance between two values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Stride"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/Stride",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Stride"
        }
      ],
      "role": "symbol",
      "title": "Int64.Stride",
      "type": "topic",
      "url": "/documentation/swift/int64/stride"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/Words-swift.struct": {
      "abstract": [
        {
          "text": "A type that represents the words of this integer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Words"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/Words-swift.struct",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Words"
        }
      ],
      "role": "symbol",
      "title": "Int64.Words",
      "type": "topic",
      "url": "/documentation/swift/int64/words-swift.struct"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/_(_:_:)-15gfv": {
      "abstract": [
        {
          "text": "Returns a Boolean value indicating whether the value of the first",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "argument is less than that of the second argument.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "<"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/_(_:_:)-15gfv",
      "kind": "symbol",
      "role": "symbol",
      "title": "<(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/_(_:_:)-15gfv"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/_=(_:_:)-6kyxv": {
      "abstract": [
        {
          "text": "Divides the first value by the second and stores the remainder in the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "%="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/_=(_:_:)-6kyxv",
      "kind": "symbol",
      "role": "symbol",
      "title": "%=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/_=(_:_:)-6kyxv"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/_=(_:_:)-8wdie": {
      "abstract": [
        {
          "text": "Stores the result of performing a bitwise XOR operation on the two given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values in the left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "^="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/_=(_:_:)-8wdie",
      "kind": "symbol",
      "role": "symbol",
      "title": "^=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/_=(_:_:)-8wdie"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/_=(_:_:)-8xard": {
      "abstract": [
        {
          "text": "Stores the result of performing a bitwise OR operation on the two given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values in the left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "|="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/_=(_:_:)-8xard",
      "kind": "symbol",
      "role": "symbol",
      "title": "|=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/_=(_:_:)-8xard"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/_=(_:_:)-9q89m": {
      "abstract": [
        {
          "text": "Divides the first value by the second and stores the quotient in the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "left-hand-side variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "/="
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "inout"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/_=(_:_:)-9q89m",
      "kind": "symbol",
      "role": "symbol",
      "title": "/=(_:_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/_=(_:_:)-9q89m"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/addingReportingOverflow(_:)": {
      "abstract": [
        {
          "text": "Returns the sum of this value and the given value, along with a Boolean",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value indicating whether overflow occurred in the operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "addingReportingOverflow"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ") -> (partialValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", overflow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/addingReportingOverflow(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "addingReportingOverflow(_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/addingreportingoverflow(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/bitWidth": {
      "abstract": [
        {
          "text": "The number of bits used for the underlying binary representation of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "values of this type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bitWidth"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/bitWidth",
      "kind": "symbol",
      "role": "symbol",
      "title": "bitWidth",
      "type": "topic",
      "url": "/documentation/swift/int64/bitwidth"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/byteSwapped": {
      "abstract": [
        {
          "text": "A representation of this integer with the byte order swapped.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "byteSwapped"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/byteSwapped",
      "kind": "symbol",
      "role": "symbol",
      "title": "byteSwapped",
      "type": "topic",
      "url": "/documentation/swift/int64/byteswapped"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/customPlaygroundQuickLook": {
      "abstract": [
        {
          "text": "A custom playground Quick Look for the ",
          "type": "text"
        },
        {
          "code": "Int64",
          "type": "codeVoice"
        },
        {
          "text": " instance.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "customPlaygroundQuickLook"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "_PlaygroundQuickLook"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/customPlaygroundQuickLook",
      "kind": "symbol",
      "role": "symbol",
      "title": "customPlaygroundQuickLook",
      "type": "topic",
      "url": "/documentation/swift/int64/customplaygroundquicklook"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/dividedReportingOverflow(by:)": {
      "abstract": [
        {
          "text": "Returns the quotient obtained by dividing this value by the given value,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "along with a Boolean value indicating whether overflow occurred in the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dividedReportingOverflow"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ") -> (partialValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", overflow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/dividedReportingOverflow(by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "dividedReportingOverflow(by:)",
      "type": "topic",
      "url": "/documentation/swift/int64/dividedreportingoverflow(by:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/dividingFullWidth(_:)": {
      "abstract": [
        {
          "text": "Returns a tuple containing the quotient and remainder of dividing the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "given value by this value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "dividingFullWidth"
        },
        {
          "kind": "text",
          "text": "((high"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", low"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V9Magnitudea",
          "text": "Magnitude"
        },
        {
          "kind": "text",
          "text": ")) -> (quotient"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", remainder"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/dividingFullWidth(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "dividingFullWidth(_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/dividingfullwidth(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-1d7o4": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSNumber",
          "text": "NSNumber"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-1d7o4",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/init(_:)-1d7o4"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-4goni": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, rounding toward",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "zero.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sf",
          "text": "Float"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-4goni",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/init(_:)-4goni"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-5aiim": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, rounding toward",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "zero.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float16V",
          "text": "Float16"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-5aiim",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/init(_:)-5aiim"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-87ipw": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, rounding toward",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "zero.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sd",
          "text": "Double"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-87ipw",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/init(_:)-87ipw"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-ia49": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14CoreFoundation7CGFloatV",
          "text": "CGFloat"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-ia49",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/init(_:)-ia49"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-ro3j": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, rounding toward",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "zero.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-ro3j",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/init(_:)-ro3j"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/init(bitPattern:)": {
      "abstract": [
        {
          "text": "Creates a new instance with the same memory representation as the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "bitPattern"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt64V",
          "text": "UInt64"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/init(bitPattern:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(bitPattern:)",
      "type": "topic",
      "url": "/documentation/swift/int64/init(bitpattern:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/init(exactly:)-5w39p": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, if it can be",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "represented exactly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sd",
          "text": "Double"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/init(exactly:)-5w39p",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/int64/init(exactly:)-5w39p"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/init(exactly:)-74h3v": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, if it can be",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "represented exactly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float16V",
          "text": "Float16"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/init(exactly:)-74h3v",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/int64/init(exactly:)-74h3v"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/init(exactly:)-87idz": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, if it can be",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "represented exactly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sf",
          "text": "Float"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/init(exactly:)-87idz",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/int64/init(exactly:)-87idz"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/init(exactly:)-8nn2c": {
      "abstract": [
        {
          "text": "Creates an integer from the given floating-point value, if it can be",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "represented exactly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/init(exactly:)-8nn2c",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/int64/init(exactly:)-8nn2c"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/init(exactly:)-mpiy": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSNumber",
          "text": "NSNumber"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/init(exactly:)-mpiy",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/int64/init(exactly:)-mpiy"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/init(truncating:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "truncating"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSNumber",
          "text": "NSNumber"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/init(truncating:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(truncating:)",
      "type": "topic",
      "url": "/documentation/swift/int64/init(truncating:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/leadingZeroBitCount": {
      "abstract": [
        {
          "text": "The number of leading zeros in this value’s binary representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "leadingZeroBitCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/leadingZeroBitCount",
      "kind": "symbol",
      "role": "symbol",
      "title": "leadingZeroBitCount",
      "type": "topic",
      "url": "/documentation/swift/int64/leadingzerobitcount"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/magnitude-swift.property": {
      "abstract": [
        {
          "text": "The magnitude of this value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "magnitude"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt64V",
          "text": "UInt64"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/magnitude-swift.property",
      "kind": "symbol",
      "role": "symbol",
      "title": "magnitude",
      "type": "topic",
      "url": "/documentation/swift/int64/magnitude-swift.property"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/multipliedFullWidth(by:)": {
      "abstract": [
        {
          "text": "Returns a tuple containing the high and low parts of the result of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "multiplying this value by the given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "multipliedFullWidth"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ") -> (high"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", low"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V9Magnitudea",
          "text": "Magnitude"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/multipliedFullWidth(by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "multipliedFullWidth(by:)",
      "type": "topic",
      "url": "/documentation/swift/int64/multipliedfullwidth(by:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/multipliedReportingOverflow(by:)": {
      "abstract": [
        {
          "text": "Returns the product of this value and the given value, along with a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "Boolean value indicating whether overflow occurred in the operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "multipliedReportingOverflow"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "by"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ") -> (partialValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", overflow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/multipliedReportingOverflow(by:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "multipliedReportingOverflow(by:)",
      "type": "topic",
      "url": "/documentation/swift/int64/multipliedreportingoverflow(by:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/nonzeroBitCount": {
      "abstract": [
        {
          "text": "The number of bits equal to 1 in this value’s binary representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "nonzeroBitCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/nonzeroBitCount",
      "kind": "symbol",
      "role": "symbol",
      "title": "nonzeroBitCount",
      "type": "topic",
      "url": "/documentation/swift/int64/nonzerobitcount"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/remainderReportingOverflow(dividingBy:)": {
      "abstract": [
        {
          "text": "Returns the remainder after dividing this value by the given value, along",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "with a Boolean value indicating whether overflow occurred during division.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "remainderReportingOverflow"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "dividingBy"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ") -> (partialValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", overflow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/remainderReportingOverflow(dividingBy:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "remainderReportingOverflow(dividingBy:)",
      "type": "topic",
      "url": "/documentation/swift/int64/remainderreportingoverflow(dividingby:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/signum()": {
      "abstract": [
        {
          "text": "Returns ",
          "type": "text"
        },
        {
          "code": "-1",
          "type": "codeVoice"
        },
        {
          "text": " if this value is negative and ",
          "type": "text"
        },
        {
          "code": "1",
          "type": "codeVoice"
        },
        {
          "text": " if it’s positive;",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "otherwise, ",
          "type": "text"
        },
        {
          "code": "0",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "signum"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/signum()",
      "kind": "symbol",
      "role": "symbol",
      "title": "signum()",
      "type": "topic",
      "url": "/documentation/swift/int64/signum()"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/subtractingReportingOverflow(_:)": {
      "abstract": [
        {
          "text": "Returns the difference obtained by subtracting the given value from this",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "value, along with a Boolean value indicating whether overflow occurred in",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "subtractingReportingOverflow"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ") -> (partialValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", overflow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/subtractingReportingOverflow(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "subtractingReportingOverflow(_:)",
      "type": "topic",
      "url": "/documentation/swift/int64/subtractingreportingoverflow(_:)"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/trailingZeroBitCount": {
      "abstract": [
        {
          "text": "The number of trailing zeros in this value’s binary representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "trailingZeroBitCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/trailingZeroBitCount",
      "kind": "symbol",
      "role": "symbol",
      "title": "trailingZeroBitCount",
      "type": "topic",
      "url": "/documentation/swift/int64/trailingzerobitcount"
    },
    "doc://com.apple.Swift/documentation/Swift/Int64/words-swift.property": {
      "abstract": [
        {
          "text": "A collection containing the words of this value’s binary",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "representation, in order from the least significant to most significant.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "words"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V5WordsV",
          "text": "Words"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int64/words-swift.property",
      "kind": "symbol",
      "role": "symbol",
      "title": "words",
      "type": "topic",
      "url": "/documentation/swift/int64/words-swift.property"
    },
    "doc://com.apple.Swift/documentation/Swift/Int8": {
      "abstract": [
        {
          "text": "An 8-bit signed integer value",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Int8"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Int8",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Int8"
        }
      ],
      "role": "symbol",
      "title": "Int8",
      "type": "topic",
      "url": "/documentation/swift/int8"
    },
    "doc://com.apple.Swift/documentation/Swift/LosslessStringConvertible": {
      "abstract": [
        {
          "text": "A type that can be represented as a string in a lossless, unambiguous way.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LosslessStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/LosslessStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LosslessStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "LosslessStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/losslessstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/Numeric": {
      "abstract": [
        {
          "text": "A type with values that support multiplication.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Numeric"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Numeric",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Numeric"
        }
      ],
      "role": "symbol",
      "title": "Numeric",
      "type": "topic",
      "url": "/documentation/swift/numeric"
    },
    "doc://com.apple.Swift/documentation/Swift/SIMDScalar": {
      "abstract": [
        {
          "text": "A type that can be used as an element in a SIMD vector.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SIMDScalar"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SIMDScalar",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SIMDScalar"
        }
      ],
      "role": "symbol",
      "title": "SIMDScalar",
      "type": "topic",
      "url": "/documentation/swift/simdscalar"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.Swift/documentation/Swift/SignedInteger": {
      "abstract": [
        {
          "text": "An integer type that can represent both positive and negative values.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SignedInteger"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SignedInteger",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SignedInteger"
        }
      ],
      "role": "symbol",
      "title": "SignedInteger",
      "type": "topic",
      "url": "/documentation/swift/signedinteger"
    },
    "doc://com.apple.Swift/documentation/Swift/SignedNumeric": {
      "abstract": [
        {
          "text": "A numeric type with a negation operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SignedNumeric"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SignedNumeric",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SignedNumeric"
        }
      ],
      "role": "symbol",
      "title": "SignedNumeric",
      "type": "topic",
      "url": "/documentation/swift/signednumeric"
    },
    "doc://com.apple.Swift/documentation/Swift/Strideable": {
      "abstract": [
        {
          "text": "A type representing continuous, one-dimensional values that can be offset",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and measured.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Strideable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Strideable"
        }
      ],
      "role": "symbol",
      "title": "Strideable",
      "type": "topic",
      "url": "/documentation/swift/strideable"
    },
    "doc://com.apple.Swift/documentation/Synchronization/AtomicRepresentable": {
      "abstract": [
        {
          "text": "A type that supports atomic operations through a separate atomic storage",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AtomicRepresentable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Synchronization/AtomicRepresentable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AtomicRepresentable"
        }
      ],
      "role": "symbol",
      "title": "AtomicRepresentable",
      "type": "topic",
      "url": "/documentation/synchronization/atomicrepresentable"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:10Accelerate10BNNSScalarP": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BNNSScalar"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:10Accelerate10BNNSScalarP",
      "kind": "symbol",
      "role": "symbol",
      "title": "BNNSScalar",
      "type": "topic",
      "url": "/documentation/Accelerate/BNNSScalar"
    },
    "doc://com.externally.resolved.symbol/s:6Charts26PrimitivePlottableProtocolP": {
      "abstract": [
        {
          "text": "A type that represents the primitive plottable types supported by the framework. Don’t use this type directly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "PrimitivePlottableProtocol"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6Charts9PlottableP",
          "text": "Plottable"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": " == "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:6Charts9PlottableP09PrimitiveB0Qa",
          "text": "PrimitivePlottable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:6Charts26PrimitivePlottableProtocolP",
      "kind": "symbol",
      "role": "symbol",
      "title": "PrimitivePlottableProtocol",
      "type": "topic",
      "url": "/documentation/Charts/PrimitivePlottableProtocol"
    },
    "doc://com.externally.resolved.symbol/s:6Charts9PlottableP": {
      "abstract": [
        {
          "text": "A type that can serve as data to plot in a chart.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Plottable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:6Charts9PlottableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Plottable",
      "type": "topic",
      "url": "/documentation/Charts/Plottable"
    },
    "doc://com.externally.resolved.symbol/s:8CloudKit21CKRecordValueProtocolP": {
      "abstract": [
        {
          "text": "A description of a CloudKit record value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CKRecordValueProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:8CloudKit21CKRecordValueProtocolP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CKRecordValueProtocol",
      "type": "topic",
      "url": "/documentation/CloudKit/CKRecordValueProtocol"
    },
    "doc://com.externally.resolved.symbol/s:8CreateML22MLDataValueConvertibleP": {
      "abstract": [
        {
          "text": "A type that can convert itself to and from a data value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MLDataValueConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:8CreateML22MLDataValueConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "MLDataValueConvertible",
      "type": "topic",
      "url": "/documentation/CreateML/MLDataValueConvertible"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/AdditiveArithmetic",
        "doc://com.apple.Swift/documentation/Synchronization/AtomicRepresentable",
        "doc://com.externally.resolved.symbol/s:10Accelerate10BNNSScalarP",
        "doc://com.apple.Swift/documentation/Swift/BinaryInteger",
        "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
        "doc://com.externally.resolved.symbol/s:8CloudKit21CKRecordValueProtocolP",
        "doc://com.apple.Swift/documentation/Swift/CVarArg",
        "doc://com.apple.Swift/documentation/Swift/Comparable",
        "doc://com.apple.Swift/documentation/Swift/Copyable",
        "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
        "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
        "doc://com.apple.Swift/documentation/Swift/Decodable",
        "doc://com.apple.Swift/documentation/Swift/Encodable",
        "doc://com.apple.Swift/documentation/Swift/Equatable",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral",
        "doc://com.apple.Swift/documentation/Swift/FixedWidthInteger",
        "doc://com.apple.Swift/documentation/Swift/Hashable",
        "doc://com.apple.Swift/documentation/Swift/LosslessStringConvertible",
        "doc://com.externally.resolved.symbol/s:8CreateML22MLDataValueConvertibleP",
        "doc://com.apple.Swift/documentation/Swift/Numeric",
        "doc://com.externally.resolved.symbol/s:6Charts9PlottableP",
        "doc://com.externally.resolved.symbol/s:6Charts26PrimitivePlottableProtocolP",
        "doc://com.apple.Swift/documentation/Swift/SIMDScalar",
        "doc://com.apple.Swift/documentation/Swift/Sendable",
        "doc://com.apple.Swift/documentation/Swift/SignedInteger",
        "doc://com.apple.Swift/documentation/Swift/SignedNumeric",
        "doc://com.apple.Swift/documentation/Swift/Strideable"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Signed-Integers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int8",
        "doc://com.apple.Swift/documentation/Swift/Int16",
        "doc://com.apple.Swift/documentation/Swift/Int32",
        "doc://com.apple.Swift/documentation/Swift/Int128"
      ],
      "title": "Signed Integers"
    }
  ],
  "topicSections": [
    {
      "anchor": "Structures",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int64/Words-swift.struct"
      ],
      "title": "Structures"
    },
    {
      "anchor": "Operators",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int64/!=(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Int64/&=(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Int64/&__=(_:_:)-3hmto",
        "doc://com.apple.Swift/documentation/Swift/Int64/&__=(_:_:)-7f5t8",
        "doc://com.apple.Swift/documentation/Swift/Int64/*=(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Int64/+=(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Int64/-=(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Int64/==(_:_:)",
        "doc://com.apple.Swift/documentation/Swift/Int64/_(_:_:)-15gfv",
        "doc://com.apple.Swift/documentation/Swift/Int64/_=(_:_:)-6kyxv",
        "doc://com.apple.Swift/documentation/Swift/Int64/_=(_:_:)-8wdie",
        "doc://com.apple.Swift/documentation/Swift/Int64/_=(_:_:)-8xard",
        "doc://com.apple.Swift/documentation/Swift/Int64/_=(_:_:)-9q89m"
      ],
      "title": "Operators"
    },
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-1d7o4",
        "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-4goni",
        "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-5aiim",
        "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-87ipw",
        "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-ia49",
        "doc://com.apple.Swift/documentation/Swift/Int64/init(_:)-ro3j",
        "doc://com.apple.Swift/documentation/Swift/Int64/init(bitPattern:)",
        "doc://com.apple.Swift/documentation/Swift/Int64/init(exactly:)-5w39p",
        "doc://com.apple.Swift/documentation/Swift/Int64/init(exactly:)-74h3v",
        "doc://com.apple.Swift/documentation/Swift/Int64/init(exactly:)-87idz",
        "doc://com.apple.Swift/documentation/Swift/Int64/init(exactly:)-8nn2c",
        "doc://com.apple.Swift/documentation/Swift/Int64/init(exactly:)-mpiy",
        "doc://com.apple.Swift/documentation/Swift/Int64/init(truncating:)"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int64/byteSwapped",
        "doc://com.apple.Swift/documentation/Swift/Int64/customPlaygroundQuickLook",
        "doc://com.apple.Swift/documentation/Swift/Int64/leadingZeroBitCount",
        "doc://com.apple.Swift/documentation/Swift/Int64/magnitude-swift.property",
        "doc://com.apple.Swift/documentation/Swift/Int64/nonzeroBitCount",
        "doc://com.apple.Swift/documentation/Swift/Int64/trailingZeroBitCount",
        "doc://com.apple.Swift/documentation/Swift/Int64/words-swift.property"
      ],
      "title": "Instance Properties"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int64/addingReportingOverflow(_:)",
        "doc://com.apple.Swift/documentation/Swift/Int64/dividedReportingOverflow(by:)",
        "doc://com.apple.Swift/documentation/Swift/Int64/dividingFullWidth(_:)",
        "doc://com.apple.Swift/documentation/Swift/Int64/multipliedFullWidth(by:)",
        "doc://com.apple.Swift/documentation/Swift/Int64/multipliedReportingOverflow(by:)",
        "doc://com.apple.Swift/documentation/Swift/Int64/remainderReportingOverflow(dividingBy:)",
        "doc://com.apple.Swift/documentation/Swift/Int64/signum()",
        "doc://com.apple.Swift/documentation/Swift/Int64/subtractingReportingOverflow(_:)"
      ],
      "title": "Instance Methods"
    },
    {
      "anchor": "Type-Aliases",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int64/IntegerLiteralType",
        "doc://com.apple.Swift/documentation/Swift/Int64/Magnitude-swift.typealias",
        "doc://com.apple.Swift/documentation/Swift/Int64/Stride"
      ],
      "title": "Type Aliases"
    },
    {
      "anchor": "Type-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int64/bitWidth"
      ],
      "title": "Type Properties"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Int64/AdditiveArithmetic-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int64/AtomicRepresentable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int64/BinaryInteger-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int64/Comparable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int64/CustomReflectable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int64/Decodable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int64/Encodable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int64/Equatable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int64/ExpressibleByIntegerLiteral-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int64/FixedWidthInteger-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int64/Hashable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int64/MLDataValueConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int64/SIMDScalar-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int64/SignedInteger-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Int64/SignedNumeric-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/int64"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
