{
  "abstract": [
    {
      "text": "Returns the range of indices described by this range expression within",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "the given collection.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift",
        "doc://com.apple.Swift/documentation/Swift/RangeExpression"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/RangeExpression/relative(to:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:SX8relative2toSny5BoundQzGqd___tSlRd__5IndexQyd__ADRSlF",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "relative"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "C"
      },
      {
        "kind": "text",
        "text": ">("
      },
      {
        "kind": "externalParam",
        "text": "to"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "text": "C"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sn",
        "text": "Range"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:SX5BoundQa",
        "text": "Bound"
      },
      {
        "kind": "text",
        "text": ">"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "required": true,
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "relative(to:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "relative"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "C"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "to"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "collection"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "text": "C"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Range",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sn",
              "text": "Range"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/RangeExpression/Bound",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SX5BoundQa",
              "text": "Bound"
            },
            {
              "kind": "text",
              "text": "> "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "C"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Collection",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sl",
              "text": "Collection"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/RangeExpression/Bound",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SX5BoundQa",
              "text": "Bound"
            },
            {
              "kind": "text",
              "text": " == "
            },
            {
              "kind": "typeIdentifier",
              "text": "C"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Collection/Index",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sl5IndexQa",
              "text": "Index"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The collection to evaluate this range expression",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "in relation to.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "collection"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A range suitable for slicing ",
              "type": "text"
            },
            {
              "code": "collection",
              "type": "codeVoice"
            },
            {
              "text": ". The returned range",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "not",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " guaranteed to be inside the bounds of ",
              "type": "text"
            },
            {
              "code": "collection",
              "type": "codeVoice"
            },
            {
              "text": ". Callers",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "should apply the same preconditions to the return value as they would",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to a range provided directly by the user.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can use the ",
              "type": "text"
            },
            {
              "code": "relative(to:)",
              "type": "codeVoice"
            },
            {
              "text": " method to convert a range expression,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "which could be missing one or both of its endpoints, into a concrete",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "range that is bounded on both sides. The following example uses this",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method to convert a partial range up to ",
              "type": "text"
            },
            {
              "code": "4",
              "type": "codeVoice"
            },
            {
              "text": " into a half-open range,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "using an array instance to add the range’s lower bound.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let numbers = [10, 20, 30, 40, 50, 60, 70]",
            "let upToFour = ..<4",
            "",
            "let r1 = upToFour.relative(to: numbers)",
            "// r1 == 0..<4"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "r1",
              "type": "codeVoice"
            },
            {
              "text": " range is bounded on the lower end by ",
              "type": "text"
            },
            {
              "code": "0",
              "type": "codeVoice"
            },
            {
              "text": " because that is the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "starting index of the ",
              "type": "text"
            },
            {
              "code": "numbers",
              "type": "codeVoice"
            },
            {
              "text": " array. When the collection passed to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "relative(to:)",
              "type": "codeVoice"
            },
            {
              "text": " starts with a different index, that index is used as the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "lower bound instead. The next example creates a slice of ",
              "type": "text"
            },
            {
              "code": "numbers",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "starting at index ",
              "type": "text"
            },
            {
              "code": "2",
              "type": "codeVoice"
            },
            {
              "text": ", and then uses the slice with ",
              "type": "text"
            },
            {
              "code": "relative(to:)",
              "type": "codeVoice"
            },
            {
              "text": " to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "convert ",
              "type": "text"
            },
            {
              "code": "upToFour",
              "type": "codeVoice"
            },
            {
              "text": " to a concrete range.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let numbersSuffix = numbers[2...]",
            "// numbersSuffix == [30, 40, 50, 60, 70]",
            "",
            "let r2 = upToFour.relative(to: numbersSuffix)",
            "// r2 == 2..<4"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Use this method only if you need the concrete range it produces. To",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "access a slice of a collection using a range expression, use the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "collection’s generic subscript that uses a range expression as its",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "parameter.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let numbersPrefix = numbers[upToFour]",
            "// numbersPrefix == [10, 20, 30, 40]"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/Collection": {
      "abstract": [
        {
          "text": "A sequence whose elements can be traversed multiple times,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "nondestructively, and accessed by an indexed subscript.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Collection"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Collection",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Collection"
        }
      ],
      "role": "symbol",
      "title": "Collection",
      "type": "topic",
      "url": "/documentation/swift/collection"
    },
    "doc://com.apple.Swift/documentation/Swift/Collection/Index": {
      "abstract": [
        {
          "text": "A type that represents a position in the collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Index"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SL",
          "text": "Comparable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Collection/Index",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "Index",
      "type": "topic",
      "url": "/documentation/swift/collection/index"
    },
    "doc://com.apple.Swift/documentation/Swift/Range": {
      "abstract": [
        {
          "text": "A half-open interval from a lower bound up to, but not including, an upper",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "bound.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Range"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Range",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Range"
        }
      ],
      "role": "symbol",
      "title": "Range",
      "type": "topic",
      "url": "/documentation/swift/range"
    },
    "doc://com.apple.Swift/documentation/Swift/RangeExpression": {
      "abstract": [
        {
          "text": "A type that can be used to slice a collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RangeExpression"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RangeExpression",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RangeExpression"
        }
      ],
      "role": "symbol",
      "title": "RangeExpression",
      "type": "topic",
      "url": "/documentation/swift/rangeexpression"
    },
    "doc://com.apple.Swift/documentation/Swift/RangeExpression/Bound": {
      "abstract": [
        {
          "text": "The type for which the expression describes a range.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Bound"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SL",
          "text": "Comparable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RangeExpression/Bound",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "Bound",
      "type": "topic",
      "url": "/documentation/swift/rangeexpression/bound"
    },
    "doc://com.apple.Swift/documentation/Swift/RangeExpression/relative(to:)": {
      "abstract": [
        {
          "text": "Returns the range of indices described by this range expression within",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the given collection.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "relative"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "C"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sn",
          "text": "Range"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SX5BoundQa",
          "text": "Bound"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/RangeExpression/relative(to:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "relative(to:)",
      "type": "topic",
      "url": "/documentation/swift/rangeexpression/relative(to:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/swift/rangeexpression/relative(to:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
