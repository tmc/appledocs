{
  "abstract": [
    {
      "text": "An extended-precision, floating-point value type.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/Swift"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/Swift/Float80"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:s7Float80V",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Float80"
      }
    ],
    "modules": [
      {
        "name": "Swift"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Float80"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.10",
        "name": "macOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "Float80"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "macOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@frozen"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Float80"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "code": "Float80",
              "type": "codeVoice"
            },
            {
              "text": " is available on Intel",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "when the target system supports an 80-bit long double type,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and unavailable on Apple silicon.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "Swift-PageImage-card.png": {
      "alt": "An orange Swift logo on a gradient background.",
      "identifier": "Swift-PageImage-card.png",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/81257762cf893d205c049e3021340e5f/Swift-PageImage-card@2x.png"
        },
        {
          "traits": [
            "2x",
            "dark"
          ],
          "url": "https://docs-assets.developer.apple.com/published/4d2ed632470b4616483901941fae4098/Swift-PageImage-card~dark@2x.png"
        }
      ]
    },
    "doc://com.apple.Swift/documentation/Swift": {
      "abstract": [
        {
          "text": "Build apps using a powerful open language.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift",
      "images": [
        {
          "identifier": "Swift-PageImage-card.png",
          "type": "card"
        }
      ],
      "kind": "symbol",
      "role": "collection",
      "title": "Swift",
      "type": "topic",
      "url": "/documentation/swift"
    },
    "doc://com.apple.Swift/documentation/Swift/AdditiveArithmetic": {
      "abstract": [
        {
          "text": "A type with values that support addition and subtraction.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AdditiveArithmetic"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/AdditiveArithmetic",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AdditiveArithmetic"
        }
      ],
      "role": "symbol",
      "title": "AdditiveArithmetic",
      "type": "topic",
      "url": "/documentation/swift/additivearithmetic"
    },
    "doc://com.apple.Swift/documentation/Swift/BinaryFloatingPoint": {
      "abstract": [
        {
          "text": "A radix-2 (binary) floating-point type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BinaryFloatingPoint"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BinaryFloatingPoint",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BinaryFloatingPoint"
        }
      ],
      "role": "symbol",
      "title": "BinaryFloatingPoint",
      "type": "topic",
      "url": "/documentation/swift/binaryfloatingpoint"
    },
    "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        }
      ],
      "role": "symbol",
      "title": "BitwiseCopyable",
      "type": "topic",
      "url": "/documentation/swift/bitwisecopyable"
    },
    "doc://com.apple.Swift/documentation/Swift/CVarArg": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "elements of a C ",
          "type": "text"
        },
        {
          "code": "va_list",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CVarArg",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/swift/cvararg"
    },
    "doc://com.apple.Swift/documentation/Swift/Comparable": {
      "abstract": [
        {
          "text": "A type that can be compared using the relational operators ",
          "type": "text"
        },
        {
          "code": "<",
          "type": "codeVoice"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "code": "<=",
          "type": "codeVoice"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "code": ">=",
          "type": "codeVoice"
        },
        {
          "text": ",",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and ",
          "type": "text"
        },
        {
          "code": ">",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Comparable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Comparable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Comparable"
        }
      ],
      "role": "symbol",
      "title": "Comparable",
      "type": "topic",
      "url": "/documentation/swift/comparable"
    },
    "doc://com.apple.Swift/documentation/Swift/Copyable": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Copyable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/swift/copyable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customdebugstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomReflectable": {
      "abstract": [
        {
          "text": "A type that explicitly supplies its own mirror.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomReflectable"
        }
      ],
      "role": "symbol",
      "title": "CustomReflectable",
      "type": "topic",
      "url": "/documentation/swift/customreflectable"
    },
    "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/customstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/Equatable": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Equatable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/swift/equatable"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByFloatLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with a floating-point literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByFloatLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByFloatLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByFloatLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByFloatLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebyfloatliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral": {
      "abstract": [
        {
          "text": "A type that can be initialized with an integer literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByIntegerLiteral"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ExpressibleByIntegerLiteral"
        }
      ],
      "role": "symbol",
      "title": "ExpressibleByIntegerLiteral",
      "type": "topic",
      "url": "/documentation/swift/expressiblebyintegerliteral"
    },
    "doc://com.apple.Swift/documentation/Swift/Float16": {
      "abstract": [
        {
          "text": "A half-precision (16b), floating-point value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Float16"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float16",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Float16"
        }
      ],
      "role": "symbol",
      "title": "Float16",
      "type": "topic",
      "url": "/documentation/swift/float16"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80": {
      "abstract": [
        {
          "text": "An extended-precision, floating-point value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Float80"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Float80"
        }
      ],
      "role": "symbol",
      "title": "Float80",
      "type": "topic",
      "url": "/documentation/swift/float80"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/AdditiveArithmetic-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/AdditiveArithmetic-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "AdditiveArithmetic Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/additivearithmetic-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/BinaryFloatingPoint-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/BinaryFloatingPoint-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "BinaryFloatingPoint Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/binaryfloatingpoint-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/Comparable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/Comparable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Comparable Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/comparable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/CustomDebugStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/CustomDebugStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomDebugStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/customdebugstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/CustomReflectable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/CustomReflectable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomReflectable Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/customreflectable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/CustomStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/CustomStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/customstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/Equatable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/Equatable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Equatable Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/equatable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/ExpressibleByFloatLiteral-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/ExpressibleByFloatLiteral-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByFloatLiteral Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/expressiblebyfloatliteral-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/ExpressibleByIntegerLiteral-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/ExpressibleByIntegerLiteral-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByIntegerLiteral Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/expressiblebyintegerliteral-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/FloatingPoint-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/FloatingPoint-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "FloatingPoint Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/floatingpoint-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/Hashable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/Hashable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Hashable Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/hashable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/LosslessStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/LosslessStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "LosslessStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/losslessstringconvertible-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/Numeric-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/Numeric-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Numeric Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/numeric-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/SignedNumeric-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/SignedNumeric-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "SignedNumeric Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/signednumeric-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/Strideable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/Strideable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Strideable Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/strideable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/TextOutputStreamable-Implementations": {
      "abstract": [],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/TextOutputStreamable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "TextOutputStreamable Implementations",
      "type": "topic",
      "url": "/documentation/swift/float80/textoutputstreamable-implementations"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/init()": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/init()",
      "kind": "symbol",
      "role": "symbol",
      "title": "init()",
      "type": "topic",
      "url": "/documentation/swift/float80/init()"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/init(_:)-2iufm": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Ss",
          "text": "Substring"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/init(_:)-2iufm",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:)",
      "type": "topic",
      "url": "/documentation/swift/float80/init(_:)-2iufm"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/init(exactly:)-2szlu": {
      "abstract": [
        {
          "text": "Creates a new instance initialized to the given value, if it can be",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "represented without rounding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sd",
          "text": "Double"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/init(exactly:)-2szlu",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/float80/init(exactly:)-2szlu"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/init(exactly:)-6kkqt": {
      "abstract": [
        {
          "text": "Creates a new instance initialized to the given value, if it can be",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "represented without rounding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sf",
          "text": "Float"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/init(exactly:)-6kkqt",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/float80/init(exactly:)-6kkqt"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/init(exactly:)-7ol5e": {
      "abstract": [
        {
          "text": "Creates a new instance initialized to the given value, if it can be",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "represented without rounding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "exactly"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/init(exactly:)-7ol5e",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(exactly:)",
      "type": "topic",
      "url": "/documentation/swift/float80/init(exactly:)-7ol5e"
    },
    "doc://com.apple.Swift/documentation/Swift/Float80/init(nan:signaling:)": {
      "abstract": [
        {
          "text": "Creates a NaN (“not a number”) value with the specified payload.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "nan"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V",
          "text": "Float80"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7Float80V14RawSignificanda",
          "text": "RawSignificand"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "signaling"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Float80/init(nan:signaling:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(nan:signaling:)",
      "type": "topic",
      "url": "/documentation/swift/float80/init(nan:signaling:)"
    },
    "doc://com.apple.Swift/documentation/Swift/FloatingPoint": {
      "abstract": [
        {
          "text": "A floating-point numeric type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FloatingPoint"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/FloatingPoint",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FloatingPoint"
        }
      ],
      "role": "symbol",
      "title": "FloatingPoint",
      "type": "topic",
      "url": "/documentation/swift/floatingpoint"
    },
    "doc://com.apple.Swift/documentation/Swift/Hashable": {
      "abstract": [
        {
          "text": "A type that can be hashed into a ",
          "type": "text"
        },
        {
          "code": "Hasher",
          "type": "codeVoice"
        },
        {
          "text": " to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Hashable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Hashable"
        }
      ],
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/swift/hashable"
    },
    "doc://com.apple.Swift/documentation/Swift/LosslessStringConvertible": {
      "abstract": [
        {
          "text": "A type that can be represented as a string in a lossless, unambiguous way.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LosslessStringConvertible"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/LosslessStringConvertible",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LosslessStringConvertible"
        }
      ],
      "role": "symbol",
      "title": "LosslessStringConvertible",
      "type": "topic",
      "url": "/documentation/swift/losslessstringconvertible"
    },
    "doc://com.apple.Swift/documentation/Swift/Numeric": {
      "abstract": [
        {
          "text": "A type with values that support multiplication.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Numeric"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Numeric",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Numeric"
        }
      ],
      "role": "symbol",
      "title": "Numeric",
      "type": "topic",
      "url": "/documentation/swift/numeric"
    },
    "doc://com.apple.Swift/documentation/Swift/Sendable": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Sendable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/swift/sendable"
    },
    "doc://com.apple.Swift/documentation/Swift/SignedNumeric": {
      "abstract": [
        {
          "text": "A numeric type with a negation operation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SignedNumeric"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/SignedNumeric",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SignedNumeric"
        }
      ],
      "role": "symbol",
      "title": "SignedNumeric",
      "type": "topic",
      "url": "/documentation/swift/signednumeric"
    },
    "doc://com.apple.Swift/documentation/Swift/Strideable": {
      "abstract": [
        {
          "text": "A type representing continuous, one-dimensional values that can be offset",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and measured.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Strideable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/Strideable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Strideable"
        }
      ],
      "role": "symbol",
      "title": "Strideable",
      "type": "topic",
      "url": "/documentation/swift/strideable"
    },
    "doc://com.apple.Swift/documentation/Swift/TextOutputStreamable": {
      "abstract": [
        {
          "text": "A source of text-streaming operations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TextOutputStreamable"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/Swift/TextOutputStreamable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TextOutputStreamable"
        }
      ],
      "role": "symbol",
      "title": "TextOutputStreamable",
      "type": "topic",
      "url": "/documentation/swift/textoutputstreamable"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/AdditiveArithmetic",
        "doc://com.apple.Swift/documentation/Swift/BinaryFloatingPoint",
        "doc://com.apple.Swift/documentation/Swift/BitwiseCopyable",
        "doc://com.apple.Swift/documentation/Swift/CVarArg",
        "doc://com.apple.Swift/documentation/Swift/Comparable",
        "doc://com.apple.Swift/documentation/Swift/Copyable",
        "doc://com.apple.Swift/documentation/Swift/CustomDebugStringConvertible",
        "doc://com.apple.Swift/documentation/Swift/CustomReflectable",
        "doc://com.apple.Swift/documentation/Swift/CustomStringConvertible",
        "doc://com.apple.Swift/documentation/Swift/Equatable",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByFloatLiteral",
        "doc://com.apple.Swift/documentation/Swift/ExpressibleByIntegerLiteral",
        "doc://com.apple.Swift/documentation/Swift/FloatingPoint",
        "doc://com.apple.Swift/documentation/Swift/Hashable",
        "doc://com.apple.Swift/documentation/Swift/LosslessStringConvertible",
        "doc://com.apple.Swift/documentation/Swift/Numeric",
        "doc://com.apple.Swift/documentation/Swift/Sendable",
        "doc://com.apple.Swift/documentation/Swift/SignedNumeric",
        "doc://com.apple.Swift/documentation/Swift/Strideable",
        "doc://com.apple.Swift/documentation/Swift/TextOutputStreamable"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Floating-Point-Values",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Float16"
      ],
      "title": "Floating-Point Values"
    }
  ],
  "topicSections": [
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Float80/init()",
        "doc://com.apple.Swift/documentation/Swift/Float80/init(_:)-2iufm",
        "doc://com.apple.Swift/documentation/Swift/Float80/init(exactly:)-2szlu",
        "doc://com.apple.Swift/documentation/Swift/Float80/init(exactly:)-6kkqt",
        "doc://com.apple.Swift/documentation/Swift/Float80/init(exactly:)-7ol5e",
        "doc://com.apple.Swift/documentation/Swift/Float80/init(nan:signaling:)"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/Swift/Float80/AdditiveArithmetic-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Float80/BinaryFloatingPoint-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Float80/Comparable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Float80/CustomDebugStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Float80/CustomReflectable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Float80/CustomStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Float80/Equatable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Float80/ExpressibleByFloatLiteral-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Float80/ExpressibleByIntegerLiteral-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Float80/FloatingPoint-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Float80/Hashable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Float80/LosslessStringConvertible-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Float80/Numeric-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Float80/SignedNumeric-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Float80/Strideable-Implementations",
        "doc://com.apple.Swift/documentation/Swift/Float80/TextOutputStreamable-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/swift/float80"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
