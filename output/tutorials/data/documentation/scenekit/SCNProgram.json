{
  "abstract": [
    {
      "text": "A complete Metal or OpenGL shader program that replaces SceneKit’s rendering of a geometry or material.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.scenekit/documentation/SceneKit"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(cs)SCNProgram",
    "fragments": [
      {
        "kind": "keyword",
        "text": "class"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "SCNProgram"
      }
    ],
    "modules": [
      {
        "name": "SceneKit"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "SCNProgram"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Class",
    "symbolKind": "class",
    "title": "SCNProgram"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "class"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "SCNProgram"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You use an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object to perform custom rendering using shader programs written in the Metal shading language or the OpenGL Shading Language (GLSL). A program object contains a vertex shader and a fragment shader. To use a program object for rendering, assign it to the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNShadable/program",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property of a geometry or material.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Use a program object when you want to completely replace SceneKit’s rendering. Your shaders take input from SceneKit and become responsible for all transform, lighting, and shading effects that you want to produce.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "If instead you want to simply modify or extend SceneKit’s rendering, use the ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNShadable/shaderModifiers",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " property of a geometry or material to insert snippets of Metal or GLSL source code into SceneKit’s built-in shader programs. For details on creating and using shader modifiers, see ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNShadable",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "To use a custom shader program in SceneKit, create an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object and optionally specify its ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/delegate",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object for handling errors. Next, provide shaders:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "To provide precompiled Metal shader functions, set the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/vertexFunctionName",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/fragmentFunctionName",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " properties. SceneKit loads the functions from a Metal shader library in your app’s bundle resources.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "To provide OpenGL or OpenGL ES shader source code, set the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/vertexShader",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/fragmentShader",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " properties.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "Finally, assign your program object to the geometries or materials you want rendered using the shader program.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Rendering with Metal shaders requires that the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNSceneRenderer/renderingAPI",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property of your ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNView",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object (or other renderer) be set to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNRenderingAPI/metal",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", which in turn requires that your app be running on Metal-capable hardware. If you provide both Metal and OpenGL shaders in the same ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object, SceneKit automatically selects the appropriate shaders to use when rendering, falling back to OpenGL or OpenGL ES shaders when Metal is not supported on the current hardware.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Providing-Input-to-a-Metal-Shader",
          "level": 3,
          "text": "Providing Input to a Metal Shader",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Metal shaders for use with SceneKit require an ",
              "type": "text"
            },
            {
              "code": "#include <SceneKit/scn_metal>",
              "type": "codeVoice"
            },
            {
              "text": " directive to gain access to SceneKit-specific symbols. Use these symbols to access the kinds of data listed below.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Vertex-Attributes",
          "level": 4,
          "text": "Vertex Attributes",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To use vertex attributes provided by ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometry",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " objects in your shader program, declare those attributes in your Metal shader source code using attribute qualifiers (see ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/library/archive/documentation/Metal/Reference/MetalShadingLanguageGuide/func-var-qual/func-var-qual.html#//apple_ref/doc/uid/TP40014364-CH4-SW11",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " in ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/library/archive/documentation/Metal/Reference/MetalShadingLanguageGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40014364",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ") and the constants listed in Table 1. For example, the partial shader below declares an input structure using the vertex position and normal attributes.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "#include <metal_stdlib>",
            "using namespace metal;",
            "#include <SceneKit/scn_metal>",
            "typedef struct {",
            "    float3 position [[ attribute(SCNVertexSemanticPosition) ]];",
            "    float3 normal   [[ attribute(SCNVertexSemanticNormal) ]];",
            "} MyVertexInput;"
          ],
          "syntax": "objc",
          "type": "codeListing"
        },
        {
          "header": "row",
          "rows": [
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "Metal Constant",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Definition",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "SCNVertexSemanticPosition",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "The vertex position, provided by the geometry source for the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/vertex",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " semantic.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "SCNVertexSemanticNormal",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "The surface normal vector at the vertex, provided by the geometry source for the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/normal",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " semantic.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "SCNVertexSemanticTangent",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "The surface-space tangent vector. ",
                      "type": "text"
                    },
                    {
                      "identifier": "spacer",
                      "type": "image"
                    },
                    {
                      "text": " SceneKit automatically infers this vector based on texture coordinates. To obtain a bitangent vector, take the cross product of the tangent vector and the surface normal vector, and scale the result by the w component of the tangent vector.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "SCNVertexSemanticColor",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "The vertex color, provided by the geometry source for the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/color",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " semantic.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "SCNVertexSemanticSkinJoints",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Skeletal animation index information, provided by the geometry source for the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/boneIndices",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " semantic.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "SCNVertexSemanticSkinWeights",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Skeletal animation weight information, provided by the geometry source for the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/boneWeights",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " semantic.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "SCNVertexSemanticTexcoord0",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Texture coordinates, provided by the first geometry source for the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/texcoord",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " semantic.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "SCNVertexSemanticTexcoord1",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Texture coordinates, provided by the second geometry source for the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/texcoord",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " semantic.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "SCNVertexSemanticTexcoord2",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Texture coordinates, provided by the third geometry source for the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/texcoord",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " semantic.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "SCNVertexSemanticTexcoord3",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "Texture coordinates, provided by the fourth geometry source for the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/texcoord",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " semantic.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ]
          ],
          "type": "table"
        },
        {
          "anchor": "Frame-Constant-Data",
          "level": 4,
          "text": "Frame-Constant Data",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To use information from SceneKit that is constant for all invocations of your shader when rendering a single frame—such as view and projection matrices, fog parameters, and scene time—declare a parameter to your shader function whose type is ",
              "type": "text"
            },
            {
              "code": "SCNSceneBuffer",
              "type": "codeVoice"
            },
            {
              "text": ", with an attribute qualifier binding it to buffer zero. For example, the shader function declaration below uses scene data in its second parameter.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "vertex MyVertexOutput myVertex(MyVertexInput in [[ stage_in ]],",
            "                                constant SCNSceneBuffer& scn_frame [[buffer(0)]],",
            "                                constant default_node_t& scn_node [[buffer(1)]])"
          ],
          "syntax": "objc",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Your function can then access scene data from the fields in the ",
              "type": "text"
            },
            {
              "code": "SCNSceneBuffer",
              "type": "codeVoice"
            },
            {
              "text": " structure, outlined below.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct SCNSceneBuffer {",
            "    float4x4    viewTransform;",
            "    float4x4    inverseViewTransform; // view space to world space",
            "    float4x4    projectionTransform;",
            "    float4x4    viewProjectionTransform;",
            "    float4x4    viewToCubeTransform; // view space to cube texture space (right-handed, y-axis-up)",
            "    float4      ambientLightingColor;",
            "    float4      fogColor;",
            "    float3      fogParameters; // x: -1/(end-start) y: 1-start*x z: exponent",
            "    float       time;     // system time elapsed since first render with this shader",
            "    float       sinTime;  // precalculated sin(time)",
            "    float       cosTime;  // precalculated cos(time)",
            "    float       random01; // random value between 0.0 and 1.0",
            "};"
          ],
          "syntax": "objc",
          "type": "codeListing"
        },
        {
          "anchor": "Per-Node-Data",
          "level": 4,
          "text": "Per-Node Data",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To use information from SceneKit that varies for each object being rendered with a shader—such as model and normal matrices—declare a parameter to your shader function with an attribute qualifier binding it to buffer one. For the type of this parameter, declare your own struct type containing any of the fields in Listing 4.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Listing 4. Available Fields for Per-Node Shader Data",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "float4x4 modelTransform;",
            "float4x4 inverseModelTransform;",
            "float4x4 modelViewTransform;",
            "float4x4 inverseModelViewTransform;",
            "float4x4 normalTransform; // Inverse transpose of modelViewTransform",
            "float4x4 modelViewProjectionTransform;",
            "float4x4 inverseModelViewProjectionTransform;",
            "float2x3 boundingBox;",
            "float2x3 worldBoundingBox;"
          ],
          "syntax": "objc",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "For example, the partial shader below declares a struct with model and model-view-projection matrices and uses it in a vertex function.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct MyNodeBuffer {",
            "    float4x4 modelTransform;",
            "    float4x4 modelViewProjectionTransform;",
            "};",
            " ",
            "vertex MyVertexOutput myVertex(MyVertexInput in [[ stage_in ]],",
            "                                constant SCNSceneBuffer& scn_frame [[buffer(0)]],",
            "                                constant MyNodeBuffer& scn_node [[buffer(1)]])"
          ],
          "syntax": "objc",
          "type": "codeListing"
        },
        {
          "anchor": "Custom-Variables",
          "level": 4,
          "text": "Custom Variables",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To use custom input variables in a Metal shader, first declare those variables as input parameters to your Metal shader functions, using an attribute qualifier to bind to buffer 2 (or higher). Because these variables pass to your Metal shader in a buffer, you typically also define a data structure for your variables, as seen in the partial shader below.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct MyAccentColors {",
            "    float4 primaryColor;",
            "    float4 secondaryColor;",
            "};",
            " ",
            "fragment half4 myFragmentShader(default_io in [[stage_in]],",
            "                            constant MyAccentColors& colors [[buffer(2)]]) { ... }"
          ],
          "syntax": "objc",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "There are two options for providing data for your custom variables: manually and at render time.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "To make a single change to your custom variable data, use ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/KeyValueCoding.html#//apple_ref/doc/uid/TP40008195-CH25",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ": Call the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/objectivec/nsobject/1415969-setvalue",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " method on the geometry or material to be rendered with your shader, passing an ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/foundation/nsdata",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " object containing your data structure as the value and the name of the corresponding shader function parameter as the key. Be aware of layout and alignment when encoding an entire structure as an ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/foundation/nsdata",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " object—for best results, use data types from the SIMD library (such as ",
                      "type": "text"
                    },
                    {
                      "code": "vector_float4",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "matrix_float4x4",
                      "type": "codeVoice"
                    },
                    {
                      "text": "), because those types match the layout and alignment of the GPU data types used in a Metal shader.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "You can also animate such a change by calling the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/objectivec/nsobject/1415969-setvalue",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method within an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNTransaction",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " animation or by creating a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/QuartzCore/CAAnimation",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object whose key is the shader function parameter name.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In either case, you can alternatively provide a value for a specific member of a structure by wrapping that value in an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/nsvalue",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object and using the fully qualified name of that member as the key. For example, use ",
              "type": "text"
            },
            {
              "code": "colors.primaryColor",
              "type": "codeVoice"
            },
            {
              "text": " as the key in the example above.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "To update custom variable data at render time, call the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/handleBinding(ofBufferNamed:frequency:handler:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " method to register a block that SceneKit calls before rendering using your shader program. In the block, SceneKit provides an ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferStream",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " object, whose ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferStream/writeBytes(_:count:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " you can call to provide a new value for your data structure.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Providing-Input-to-an-OpenGL-Shader",
          "level": 3,
          "text": "Providing Input to an OpenGL Shader",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Vertex attributes. To use vertex attributes provided by ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometry",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " objects in your shader program, map SceneKit semantics to the input vertex attribute names declared in the shader. Use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/setSemantic(_:forSymbol:options:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method and the constants listed in Geometry Semantic Identifiers.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Coordinate transformations. To use the coordinate transformations defined by the scene’s node hierarchy and point-of-view camera in your shader program, map SceneKit’s transform matrices to the uniform variable names declared in the shader. Use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/setSemantic(_:forSymbol:options:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method and the constants listed in Rendering Transform Keys.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Custom uniform variables. To provide values for your own custom uniform variables declared in the shader, choose when and how you want to update these values.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "To update a value once, use ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/KeyValueCoding.html#//apple_ref/doc/uid/TP40008195-CH25",
                      "isActive": true,
                      "overridingTitle": "Key-value coding",
                      "overridingTitleInlineContent": [
                        {
                          "text": "Key-value coding",
                          "type": "text"
                        }
                      ],
                      "type": "reference"
                    },
                    {
                      "text": ": Call the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/objectivec/nsobject/1415969-setvalue",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " method, providing the uniform name from shader source code as the key and an appropriate type of data as the value.  To smoothly transition a one-time value change, call the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/objectivec/nsobject/1415969-setvalue",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " method inside an ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNTransaction",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " animation or create an animation object with the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/QuartzCore/CAPropertyAnimation/init(keyPath:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " method, passing the uniform name as the key.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "To update a value every time SceneKit renders an object with your shader program, assign binding blocks using the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNShadable/handleBinding(ofSymbol:handler:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " method of the geometry or material to be rendered with your custom program. Within a binding block you can execute OpenGL commands to bind shader uniforms or set any other state necessary for rendering.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/QuartzCore/CAAnimation": {
      "abstract": [
        {
          "text": "The abstract superclass for animations in Core Animation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CAAnimation"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/QuartzCore/CAAnimation",
      "kind": "symbol",
      "role": "symbol",
      "title": "CAAnimation",
      "type": "topic",
      "url": "/documentation/QuartzCore/CAAnimation"
    },
    "doc://com.apple.documentation/documentation/QuartzCore/CAPropertyAnimation/init(keyPath:)": {
      "abstract": [
        {
          "text": "Creates and returns an `CAPropertyAnimation` instance for the specified key path.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "convenience"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "keyPath"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "path"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/QuartzCore/CAPropertyAnimation/init(keyPath:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(keyPath:)",
      "type": "topic",
      "url": "/documentation/QuartzCore/CAPropertyAnimation/init(keyPath:)"
    },
    "doc://com.apple.documentation/documentation/foundation/nsdata": {
      "abstract": [
        {
          "text": "A static byte buffer that bridges to ; use  when you need reference semantics or other Foundation-specific behavior.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSData"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsdata",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSData",
      "type": "topic",
      "url": "/documentation/foundation/nsdata"
    },
    "doc://com.apple.documentation/documentation/foundation/nsvalue": {
      "abstract": [
        {
          "text": "A simple container for a single C or Objective-C data item.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSValue"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsvalue",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSValue",
      "type": "topic",
      "url": "/documentation/foundation/nsvalue"
    },
    "doc://com.apple.documentation/documentation/objectivec/nsobject/1415969-setvalue": {
      "abstract": [
        {
          "text": "Sets the property of the receiver specified by a given key to a given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "setValue"
        },
        {
          "kind": "text",
          "text": "(Any?, "
        },
        {
          "kind": "identifier",
          "text": "forKey"
        },
        {
          "kind": "text",
          "text": ": String)"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/objectivec/nsobject/1415969-setvalue",
      "kind": "symbol",
      "role": "symbol",
      "title": "setValue(_:forKey:)",
      "type": "topic",
      "url": "/documentation/objectivec/nsobject/1415969-setvalue"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.scenekit/documentation/SceneKit": {
      "abstract": [
        {
          "text": "Create 3D games and add 3D content to apps using high-level scene descriptions, and easily add animations, physics simulation, particle effects, and realistic physically based rendering.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit",
      "kind": "symbol",
      "role": "collection",
      "title": "SceneKit",
      "type": "topic",
      "url": "/documentation/scenekit"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferBindingBlock": {
      "abstract": [
        {
          "text": "A block SceneKit calls at render time for working with buffers in a Metal shader, used by the ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/handleBinding(ofBufferNamed:frequency:handler:)",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " method.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNBufferBindingBlock"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferBindingBlock",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNBufferBindingBlock"
        }
      ],
      "role": "symbol",
      "title": "SCNBufferBindingBlock",
      "type": "topic",
      "url": "/documentation/scenekit/scnbufferbindingblock"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferFrequency": {
      "abstract": [
        {
          "text": "Options for how often SceneKit should execute the binding handler you provide with the ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/handleBinding(ofBufferNamed:frequency:handler:)",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " method.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNBufferFrequency"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferFrequency",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNBufferFrequency"
        }
      ],
      "role": "symbol",
      "title": "SCNBufferFrequency",
      "type": "topic",
      "url": "/documentation/scenekit/scnbufferfrequency"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferStream": {
      "abstract": [
        {
          "text": "An object that manages a Metal buffer used by a custom shader program.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNBufferStream"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferStream",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNBufferStream"
        }
      ],
      "role": "symbol",
      "title": "SCNBufferStream",
      "type": "topic",
      "url": "/documentation/scenekit/scnbufferstream"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferStream/writeBytes(_:count:)": {
      "abstract": [
        {
          "text": "Copies the specified data bytes into the underlying Metal buffer for use by a shader.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "writeBytes"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SV",
          "text": "UnsafeRawPointer"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "count"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferStream/writeBytes(_:count:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "writeBytes:length:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "writeBytes(_:count:)",
      "type": "topic",
      "url": "/documentation/scenekit/scnbufferstream/writebytes(_:count:)"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometry": {
      "abstract": [
        {
          "text": "A three-dimensional shape (also called a model or mesh) that can be displayed in a scene, with attached materials that define its appearance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNGeometry"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometry",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNGeometry"
        }
      ],
      "role": "symbol",
      "title": "SCNGeometry",
      "type": "topic",
      "url": "/documentation/scenekit/scngeometry"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/boneIndices": {
      "abstract": [
        {
          "text": "The semantic for bone index data, used for skeletal animation of skinned surfaces.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "boneIndices"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)SCNGeometrySource",
          "text": "SCNGeometrySource"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@SCNGeometrySourceSemantic",
          "text": "Semantic"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/boneIndices",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNGeometrySourceSemanticBoneIndices"
        }
      ],
      "role": "symbol",
      "title": "boneIndices",
      "type": "topic",
      "url": "/documentation/scenekit/scngeometrysource/semantic-swift.struct/boneindices"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/boneWeights": {
      "abstract": [
        {
          "text": "The semantic for bone weight data, used for skeletal animation of skinned surfaces.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "boneWeights"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)SCNGeometrySource",
          "text": "SCNGeometrySource"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@SCNGeometrySourceSemantic",
          "text": "Semantic"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/boneWeights",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNGeometrySourceSemanticBoneWeights"
        }
      ],
      "role": "symbol",
      "title": "boneWeights",
      "type": "topic",
      "url": "/documentation/scenekit/scngeometrysource/semantic-swift.struct/boneweights"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/color": {
      "abstract": [
        {
          "text": "The semantic for per-vertex color data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "color"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)SCNGeometrySource",
          "text": "SCNGeometrySource"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@SCNGeometrySourceSemantic",
          "text": "Semantic"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/color",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNGeometrySourceSemanticColor"
        }
      ],
      "role": "symbol",
      "title": "color",
      "type": "topic",
      "url": "/documentation/scenekit/scngeometrysource/semantic-swift.struct/color"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/normal": {
      "abstract": [
        {
          "text": "The semantic for surface normal data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "normal"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)SCNGeometrySource",
          "text": "SCNGeometrySource"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@SCNGeometrySourceSemantic",
          "text": "Semantic"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/normal",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNGeometrySourceSemanticNormal"
        }
      ],
      "role": "symbol",
      "title": "normal",
      "type": "topic",
      "url": "/documentation/scenekit/scngeometrysource/semantic-swift.struct/normal"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/texcoord": {
      "abstract": [
        {
          "text": "The semantic for texture coordinate data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "texcoord"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)SCNGeometrySource",
          "text": "SCNGeometrySource"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@SCNGeometrySourceSemantic",
          "text": "Semantic"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/texcoord",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNGeometrySourceSemanticTexcoord"
        }
      ],
      "role": "symbol",
      "title": "texcoord",
      "type": "topic",
      "url": "/documentation/scenekit/scngeometrysource/semantic-swift.struct/texcoord"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/vertex": {
      "abstract": [
        {
          "text": "The semantic for vertex position data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "vertex"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)SCNGeometrySource",
          "text": "SCNGeometrySource"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@SCNGeometrySourceSemantic",
          "text": "Semantic"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNGeometrySource/Semantic-swift.struct/vertex",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNGeometrySourceSemanticVertex"
        }
      ],
      "role": "symbol",
      "title": "vertex",
      "type": "topic",
      "url": "/documentation/scenekit/scngeometrysource/semantic-swift.struct/vertex"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNModelTransform": {
      "abstract": [
        {
          "text": "A 4 x 4 matrix for transforming coordinates from model space to scene (or world) space.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNModelTransform"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNModelTransform",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNModelTransform"
        }
      ],
      "role": "symbol",
      "title": "SCNModelTransform",
      "type": "topic",
      "url": "/documentation/scenekit/scnmodeltransform"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNModelViewProjectionTransform": {
      "abstract": [
        {
          "text": "A 4 x 4 matrix containing the concatenation of the Model, View, and Projection transformations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNModelViewProjectionTransform"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNModelViewProjectionTransform",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNModelViewProjectionTransform"
        }
      ],
      "role": "symbol",
      "title": "SCNModelViewProjectionTransform",
      "type": "topic",
      "url": "/documentation/scenekit/scnmodelviewprojectiontransform"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNModelViewTransform": {
      "abstract": [
        {
          "text": "A 4 x 4 matrix containing the concatenation of the Model and View transformations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNModelViewTransform"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNModelViewTransform",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNModelViewTransform"
        }
      ],
      "role": "symbol",
      "title": "SCNModelViewTransform",
      "type": "topic",
      "url": "/documentation/scenekit/scnmodelviewtransform"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNNodeRendererDelegate": {
      "abstract": [
        {
          "text": "Methods you can implement to use your own custom Metal or OpenGL drawing code to render content for a node.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNNodeRendererDelegate"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNNodeRendererDelegate",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNNodeRendererDelegate"
        }
      ],
      "role": "symbol",
      "title": "SCNNodeRendererDelegate",
      "type": "topic",
      "url": "/documentation/scenekit/scnnoderendererdelegate"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNNormalTransform": {
      "abstract": [
        {
          "text": "A 4 x 4 matrix for transforming surface normal vectors from model space to view (or eye) space.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNNormalTransform"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNNormalTransform",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNNormalTransform"
        }
      ],
      "role": "symbol",
      "title": "SCNNormalTransform",
      "type": "topic",
      "url": "/documentation/scenekit/scnnormaltransform"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram": {
      "abstract": [
        {
          "text": "A complete Metal or OpenGL shader program that replaces SceneKit’s rendering of a geometry or material.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNProgram"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNProgram"
        }
      ],
      "role": "symbol",
      "title": "SCNProgram",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogram"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/delegate": {
      "abstract": [
        {
          "text": "The delegate of the program object.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "delegate"
        },
        {
          "kind": "text",
          "text": ": (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)SCNProgramDelegate",
          "text": "SCNProgramDelegate"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/delegate",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "delegate"
        }
      ],
      "role": "symbol",
      "title": "delegate",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogram/delegate"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/fragmentFunctionName": {
      "abstract": [
        {
          "text": "The name of the fragment shader function to load from a Metal shader library.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "fragmentFunctionName"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/fragmentFunctionName",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "fragmentFunctionName"
        }
      ],
      "role": "symbol",
      "title": "fragmentFunctionName",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogram/fragmentfunctionname"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/fragmentShader": {
      "abstract": [
        {
          "text": "GLSL source code for the program’s fragment shader.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "fragmentShader"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/fragmentShader",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "fragmentShader"
        }
      ],
      "role": "symbol",
      "title": "fragmentShader",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogram/fragmentshader"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/geometryShader": {
      "abstract": [
        {
          "text": "GLSL source code for the program’s optional geometry shader.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "geometryShader"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/geometryShader",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "geometryShader"
        }
      ],
      "role": "symbol",
      "title": "geometryShader",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogram/geometryshader"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/handleBinding(ofBufferNamed:frequency:handler:)": {
      "abstract": [
        {
          "text": "Registers a block for SceneKit to call at render time for binding a Metal buffer to the shader program.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "handleBinding"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "ofBufferNamed"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "frequency"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@SCNBufferFrequency",
          "text": "SCNBufferFrequency"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "handler"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@SCNBufferBindingBlock",
          "text": "SCNBufferBindingBlock"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/handleBinding(ofBufferNamed:frequency:handler:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "handleBindingOfBufferNamed:frequency:usingBlock:"
        }
      ],
      "role": "symbol",
      "title": "handleBinding(ofBufferNamed:frequency:handler:)",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogram/handlebinding(ofbuffernamed:frequency:handler:)"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/isOpaque": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether fragments rendered by the program are fully opaque.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isOpaque"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/isOpaque",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "opaque"
        }
      ],
      "role": "symbol",
      "title": "isOpaque",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogram/isopaque"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/library": {
      "abstract": [
        {
          "text": "The Metal shader library containing shader functions to be used by this program.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "library"
        },
        {
          "kind": "text",
          "text": ": (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLLibrary",
          "text": "MTLLibrary"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/library",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "library"
        }
      ],
      "role": "symbol",
      "title": "library",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogram/library"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/program": {
      "abstract": [
        {
          "text": "Creates a new program object.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "+ "
        },
        {
          "kind": "identifier",
          "text": "program"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/program",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "program"
        }
      ],
      "role": "symbol",
      "title": "program",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogram/program"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/semantic(forSymbol:)": {
      "abstract": [
        {
          "text": "Returns the SceneKit semantic identifiers associated with the specified GLSL vertex attribute or uniform variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "semantic"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "forSymbol"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/semantic(forSymbol:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "semanticForSymbol:"
        }
      ],
      "role": "symbol",
      "title": "semantic(forSymbol:)",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogram/semantic(forsymbol:)"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/setSemantic(_:forSymbol:options:)": {
      "abstract": [
        {
          "text": "Associates a SceneKit semantic identifier with the specified GLSL vertex attribute or uniform variable.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setSemantic"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "forSymbol"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "options"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "]?)"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/setSemantic(_:forSymbol:options:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setSemantic:forSymbol:options:"
        }
      ],
      "role": "symbol",
      "title": "setSemantic(_:forSymbol:options:)",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogram/setsemantic(_:forsymbol:options:)"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/tessellationControlShader": {
      "abstract": [
        {
          "text": "GLSL source code for the program’s optional tessellation control shader.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "tessellationControlShader"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/tessellationControlShader",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tessellationControlShader"
        }
      ],
      "role": "symbol",
      "title": "tessellationControlShader",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogram/tessellationcontrolshader"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/tessellationEvaluationShader": {
      "abstract": [
        {
          "text": "GLSL source code for the program’s optional tessellation evaluation shader.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "tessellationEvaluationShader"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/tessellationEvaluationShader",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tessellationEvaluationShader"
        }
      ],
      "role": "symbol",
      "title": "tessellationEvaluationShader",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogram/tessellationevaluationshader"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/vertexFunctionName": {
      "abstract": [
        {
          "text": "The name of the vertex shader function to load from a Metal shader library.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "vertexFunctionName"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/vertexFunctionName",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "vertexFunctionName"
        }
      ],
      "role": "symbol",
      "title": "vertexFunctionName",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogram/vertexfunctionname"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/vertexShader": {
      "abstract": [
        {
          "text": "GLSL source code for the program’s vertex shader.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "vertexShader"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/vertexShader",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "vertexShader"
        }
      ],
      "role": "symbol",
      "title": "vertexShader",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogram/vertexshader"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgramDelegate": {
      "abstract": [
        {
          "text": "The interface for tracking errors that occur when compiling shader source code.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNProgramDelegate"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgramDelegate",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNProgramDelegate"
        }
      ],
      "role": "symbol",
      "title": "SCNProgramDelegate",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogramdelegate"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProgramMappingChannelKey": {
      "abstract": [
        {
          "text": "The mapping channel to be used for a texture coordinate semantic.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNProgramMappingChannelKey"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProgramMappingChannelKey",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNProgramMappingChannelKey"
        }
      ],
      "role": "symbol",
      "title": "SCNProgramMappingChannelKey",
      "type": "topic",
      "url": "/documentation/scenekit/scnprogrammappingchannelkey"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNProjectionTransform": {
      "abstract": [
        {
          "text": "A 4 x 4 matrix for transforming coordinates from view (or eye) space to clip space.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNProjectionTransform"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNProjectionTransform",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNProjectionTransform"
        }
      ],
      "role": "symbol",
      "title": "SCNProjectionTransform",
      "type": "topic",
      "url": "/documentation/scenekit/scnprojectiontransform"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNRenderingAPI/metal": {
      "abstract": [
        {
          "text": "Use the Metal framework for SceneKit rendering.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "metal"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNRenderingAPI/metal",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNRenderingAPIMetal"
        }
      ],
      "role": "symbol",
      "title": "SCNRenderingAPI.metal",
      "type": "topic",
      "url": "/documentation/scenekit/scnrenderingapi/metal"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNSceneRenderer/renderingAPI": {
      "abstract": [
        {
          "text": "The graphics technology SceneKit uses to render the scene.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "renderingAPI"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@SCNRenderingAPI",
          "text": "SCNRenderingAPI"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNSceneRenderer/renderingAPI",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "renderingAPI"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "renderingAPI",
      "type": "topic",
      "url": "/documentation/scenekit/scnscenerenderer/renderingapi"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNShadable": {
      "abstract": [
        {
          "text": "Methods for customizing SceneKit’s rendering of geometry and materials using Metal or OpenGL shader programs.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNShadable"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNShadable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNShadable"
        }
      ],
      "role": "symbol",
      "title": "SCNShadable",
      "type": "topic",
      "url": "/documentation/scenekit/scnshadable"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNShadable/handleBinding(ofSymbol:handler:)": {
      "abstract": [
        {
          "text": "Specifies a block to be called before rendering with programs with the specified GLSL uniform variable or attribute name.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "handleBinding"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "ofSymbol"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "handler"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@SCNBindingBlock",
          "text": "SCNBindingBlock"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNShadable/handleBinding(ofSymbol:handler:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "handleBindingOfSymbol:usingBlock:"
        }
      ],
      "role": "symbol",
      "title": "handleBinding(ofSymbol:handler:)",
      "type": "topic",
      "url": "/documentation/scenekit/scnshadable/handlebinding(ofsymbol:handler:)"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNShadable/program": {
      "abstract": [
        {
          "text": "A program used when rendering the object.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "program"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)SCNProgram",
          "text": "SCNProgram"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNShadable/program",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "program"
        }
      ],
      "role": "symbol",
      "title": "program",
      "type": "topic",
      "url": "/documentation/scenekit/scnshadable/program"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNShadable/shaderModifiers": {
      "abstract": [
        {
          "text": "A dictionary of GLSL source code snippets for customizing the shader programs provided by SceneKit.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "shaderModifiers"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@SCNShaderModifierEntryPoint",
          "text": "SCNShaderModifierEntryPoint"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "]?"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNShadable/shaderModifiers",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "shaderModifiers"
        }
      ],
      "role": "symbol",
      "title": "shaderModifiers",
      "type": "topic",
      "url": "/documentation/scenekit/scnshadable/shadermodifiers"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNTechnique": {
      "abstract": [
        {
          "text": "A specification for augmenting or postprocessing SceneKit’s rendering of a scene using additional drawing passes with custom Metal or OpenGL shaders.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNTechnique"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNTechnique",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNTechnique"
        }
      ],
      "role": "symbol",
      "title": "SCNTechnique",
      "type": "topic",
      "url": "/documentation/scenekit/scntechnique"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNTechniqueSupport": {
      "abstract": [
        {
          "text": "The common interface for SceneKit objects that support multipass rendering using ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNTechnique",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNTechniqueSupport"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNTechniqueSupport",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNTechniqueSupport"
        }
      ],
      "role": "symbol",
      "title": "SCNTechniqueSupport",
      "type": "topic",
      "url": "/documentation/scenekit/scntechniquesupport"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNTransaction": {
      "abstract": [
        {
          "text": "A mechanism for creating implicit animations and combining scene graph changes into atomic updates.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNTransaction"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNTransaction",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNTransaction"
        }
      ],
      "role": "symbol",
      "title": "SCNTransaction",
      "type": "topic",
      "url": "/documentation/scenekit/scntransaction"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNView": {
      "abstract": [
        {
          "text": "A view for displaying 3D SceneKit content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNView"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNView"
        }
      ],
      "role": "symbol",
      "title": "SCNView",
      "type": "topic",
      "url": "/documentation/scenekit/scnview"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/SCNViewTransform": {
      "abstract": [
        {
          "text": "A 4 x 4 matrix for transforming coordinates from scene (or world) space to view (or eye) space.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SCNViewTransform"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/SCNViewTransform",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SCNViewTransform"
        }
      ],
      "role": "symbol",
      "title": "SCNViewTransform",
      "type": "topic",
      "url": "/documentation/scenekit/scnviewtransform"
    },
    "doc://com.apple.scenekit/documentation/SceneKit/postprocessing-a-scene-with-custom-symbols": {
      "abstract": [
        {
          "text": "Create visual effects in a scene by defining a rendering technique with custom symbols.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.scenekit/documentation/SceneKit/postprocessing-a-scene-with-custom-symbols",
      "kind": "article",
      "role": "sampleCode",
      "title": "Postprocessing a Scene With Custom Symbols",
      "type": "topic",
      "url": "/documentation/scenekit/postprocessing-a-scene-with-custom-symbols"
    },
    "doc://com.externally.resolved.symbol/c:objc(cs)NSObject": {
      "abstract": [
        {
          "text": "The root class of most Objective-C class hierarchies, from which subclasses inherit a basic interface to the runtime system and the ability to behave as Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSObject"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObject",
      "type": "topic",
      "url": "/documentation/objectivec/nsobject"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding": {
      "abstract": [
        {
          "text": "A protocol that enables an object to be encoded and decoded for archiving and distribution.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSCoding"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSCoding",
      "type": "topic",
      "url": "/documentation/foundation/nscoding"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSCopying": {
      "abstract": [
        {
          "text": "A protocol that objects adopt to provide functional copies of themselves.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSCopying"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSCopying",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSCopying",
      "type": "topic",
      "url": "/documentation/foundation/nscopying"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSObject": {
      "abstract": [
        {
          "text": "The group of methods that are fundamental to all Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObjectProtocol",
      "type": "topic",
      "url": "/documentation/objectivec/nsobjectprotocol"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSSecureCoding": {
      "abstract": [
        {
          "text": "A protocol that enables encoding and decoding in a manner that is robust against object substitution attacks.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSSecureCoding"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSSecureCoding",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSSecureCoding",
      "type": "topic",
      "url": "/documentation/foundation/nssecurecoding"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomDebugStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s7CVarArgP": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as elements of a C `va_list`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s7CVarArgP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/Swift/CVarArg"
    },
    "https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/KeyValueCoding.html#//apple_ref/doc/uid/TP40008195-CH25": {
      "identifier": "https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/KeyValueCoding.html#//apple_ref/doc/uid/TP40008195-CH25",
      "title": "Key-value coding",
      "titleInlineContent": [
        {
          "text": "Key-value coding",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/KeyValueCoding.html#//apple_ref/doc/uid/TP40008195-CH25"
    },
    "https://developer.apple.com/library/archive/documentation/Metal/Reference/MetalShadingLanguageGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40014364": {
      "identifier": "https://developer.apple.com/library/archive/documentation/Metal/Reference/MetalShadingLanguageGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40014364",
      "title": "Metal Shading Language Guide",
      "titleInlineContent": [
        {
          "text": "Metal Shading Language Guide",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/library/archive/documentation/Metal/Reference/MetalShadingLanguageGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40014364"
    },
    "https://developer.apple.com/library/archive/documentation/Metal/Reference/MetalShadingLanguageGuide/func-var-qual/func-var-qual.html#//apple_ref/doc/uid/TP40014364-CH4-SW11": {
      "identifier": "https://developer.apple.com/library/archive/documentation/Metal/Reference/MetalShadingLanguageGuide/func-var-qual/func-var-qual.html#//apple_ref/doc/uid/TP40014364-CH4-SW11",
      "title": "Attribute Qualifiers to Locate Per-Vertex Inputs",
      "titleInlineContent": [
        {
          "text": "Attribute Qualifiers to Locate Per-Vertex Inputs",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/library/archive/documentation/Metal/Reference/MetalShadingLanguageGuide/func-var-qual/func-var-qual.html#//apple_ref/doc/uid/TP40014364-CH4-SW11"
    },
    "spacer": {
      "alt": null,
      "identifier": "spacer",
      "type": "image",
      "variants": [
        {
          "traits": [
            "1x",
            "light"
          ],
          "url": "https://docs-assets.developer.apple.com/published/67dc4b07a8d84366d4cc0e812eb40b4a/spacer.png"
        }
      ]
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    },
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s7CVarArgP",
        "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSCopying",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSSecureCoding"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Renderer-Customization",
      "generated": true,
      "identifiers": [
        "doc://com.apple.scenekit/documentation/SceneKit/SCNShadable",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferStream",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNTechnique",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNTechniqueSupport",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNNodeRendererDelegate",
        "doc://com.apple.scenekit/documentation/SceneKit/postprocessing-a-scene-with-custom-symbols"
      ],
      "title": "Renderer Customization"
    }
  ],
  "topicSections": [
    {
      "anchor": "Working-with-OpenGL-Shader-Source-Code",
      "identifiers": [
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/vertexShader",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/fragmentShader",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/geometryShader",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/tessellationControlShader",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/tessellationEvaluationShader"
      ],
      "title": "Working with OpenGL Shader Source Code"
    },
    {
      "anchor": "Mapping-GLSL-Symbols-to-SceneKit-Semantics",
      "identifiers": [
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/setSemantic(_:forSymbol:options:)",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProgramMappingChannelKey",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/semantic(forSymbol:)",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNModelTransform",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNModelViewProjectionTransform",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNModelViewTransform",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNNormalTransform",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProjectionTransform",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNViewTransform"
      ],
      "title": "Mapping GLSL Symbols to SceneKit Semantics"
    },
    {
      "anchor": "Providing-a-Delegate-Object",
      "identifiers": [
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/delegate",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProgramDelegate"
      ],
      "title": "Providing a Delegate Object"
    },
    {
      "anchor": "Managing-Opacity",
      "identifiers": [
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/isOpaque"
      ],
      "title": "Managing Opacity"
    },
    {
      "anchor": "Providing-Input-for-Metal-Shaders",
      "identifiers": [
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/handleBinding(ofBufferNamed:frequency:handler:)",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferFrequency",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferBindingBlock"
      ],
      "title": "Providing Input for Metal Shaders"
    },
    {
      "anchor": "Working-With-Metal-Shaders",
      "identifiers": [
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/vertexFunctionName",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/fragmentFunctionName",
        "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/library"
      ],
      "title": "Working With Metal Shaders"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "name": "iOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "name": "iPadOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "name": "Mac Catalyst",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "name": "macOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "name": "tvOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "name": "visionOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Class"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "SCNProgram"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "class"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNProgram"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNProgram"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.scenekit/documentation/SceneKit"
              ]
            ]
          }
        },
        {
          "op": "replace",
          "path": "/topicSections",
          "value": [
            {
              "anchor": "Creating-a-Program",
              "identifiers": [
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/program"
              ],
              "title": "Creating a Program"
            },
            {
              "anchor": "Working-with-OpenGL-Shader-Source-Code",
              "identifiers": [
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/vertexShader",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/fragmentShader",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/geometryShader",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/tessellationControlShader",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/tessellationEvaluationShader"
              ],
              "title": "Working with OpenGL Shader Source Code"
            },
            {
              "anchor": "Mapping-GLSL-Symbols-to-SceneKit-Semantics",
              "identifiers": [
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/setSemantic(_:forSymbol:options:)",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgramMappingChannelKey",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/semantic(forSymbol:)",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNModelTransform",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNModelViewProjectionTransform",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNModelViewTransform",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNNormalTransform",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProjectionTransform",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNViewTransform"
              ],
              "title": "Mapping GLSL Symbols to SceneKit Semantics"
            },
            {
              "anchor": "Providing-a-Delegate-Object",
              "identifiers": [
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/delegate",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgramDelegate"
              ],
              "title": "Providing a Delegate Object"
            },
            {
              "anchor": "Managing-Opacity",
              "identifiers": [
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/isOpaque"
              ],
              "title": "Managing Opacity"
            },
            {
              "anchor": "Providing-Input-for-Metal-Shaders",
              "identifiers": [
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/handleBinding(ofBufferNamed:frequency:handler:)",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferFrequency",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferBindingBlock"
              ],
              "title": "Providing Input for Metal Shaders"
            },
            {
              "anchor": "Working-With-Metal-Shaders",
              "identifiers": [
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/vertexFunctionName",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/fragmentFunctionName",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNProgram/library"
              ],
              "title": "Working With Metal Shaders"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/relationshipsSections",
          "value": [
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
              ],
              "kind": "relationships",
              "title": "Inherits From",
              "type": "inheritsFrom"
            },
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(pl)NSCopying",
                "doc://com.externally.resolved.symbol/c:objc(pl)NSSecureCoding"
              ],
              "kind": "relationships",
              "title": "Conforms To",
              "type": "conformsTo"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Renderer-Customization",
              "generated": true,
              "identifiers": [
                "doc://com.apple.scenekit/documentation/SceneKit/SCNShadable",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNBufferStream",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNTechnique",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNTechniqueSupport",
                "doc://com.apple.scenekit/documentation/SceneKit/SCNNodeRendererDelegate",
                "doc://com.apple.scenekit/documentation/SceneKit/postprocessing-a-scene-with-custom-symbols"
              ],
              "title": "Renderer Customization"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "iOS",
                  "iPadOS",
                  "Mac Catalyst",
                  "macOS",
                  "tvOS",
                  "visionOS",
                  "watchOS"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "@interface"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "SCNProgram"
                  },
                  {
                    "kind": "text",
                    "text": " : "
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(cs)NSObject",
                    "text": "NSObject"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNNormalTransform/title",
          "value": "SCNNormalTransform"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNNormalTransform/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNNormalTransform"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNShadable/title",
          "value": "SCNShadable"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNShadable/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNShadable"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNShadable/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNShadable"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgramDelegate/title",
          "value": "SCNProgramDelegate"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgramDelegate/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNProgramDelegate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgramDelegate/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNProgramDelegate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNViewTransform/title",
          "value": "SCNViewTransform"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNViewTransform/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNViewTransform"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1objectivec~1nsobject~11415969-setvalue/title",
          "value": "setValue:forKey:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNModelTransform/title",
          "value": "SCNModelTransform"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNModelTransform/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNModelTransform"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1QuartzCore~1CAAnimation/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "@interface"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "CAAnimation"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSObject",
              "text": "NSObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNGeometrySource~1Semantic-swift.struct~1boneIndices/title",
          "value": "SCNGeometrySourceSemanticBoneIndices"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNGeometrySource~1Semantic-swift.struct~1boneIndices/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNGeometrySourceSemanticBoneIndices"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNBufferBindingBlock/title",
          "value": "SCNBufferBindingBlock"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNBufferBindingBlock/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNBufferBindingBlock"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNBufferBindingBlock/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNBufferBindingBlock"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1delegate/title",
          "value": "delegate"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1delegate/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "delegate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNBufferStream~1writeBytes(_:count:)/title",
          "value": "writeBytes:length:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNBufferStream~1writeBytes(_:count:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "writeBytes:length:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1handleBinding(ofBufferNamed:frequency:handler:)/title",
          "value": "handleBindingOfBufferNamed:frequency:usingBlock:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1handleBinding(ofBufferNamed:frequency:handler:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "handleBindingOfBufferNamed:frequency:usingBlock:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1fragmentFunctionName/title",
          "value": "fragmentFunctionName"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1fragmentFunctionName/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "fragmentFunctionName"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNModelViewProjectionTransform/title",
          "value": "SCNModelViewProjectionTransform"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNModelViewProjectionTransform/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNModelViewProjectionTransform"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNBufferFrequency/title",
          "value": "SCNBufferFrequency"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNBufferFrequency/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNBufferFrequency"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNBufferFrequency/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNBufferFrequency"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNTechnique/title",
          "value": "SCNTechnique"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNTechnique/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNTechnique"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNTechnique/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNTechnique"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNShadable~1program/title",
          "value": "program"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNShadable~1program/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "program"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNShadable~1handleBinding(ofSymbol:handler:)/title",
          "value": "handleBindingOfSymbol:usingBlock:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNShadable~1handleBinding(ofSymbol:handler:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "handleBindingOfSymbol:usingBlock:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1semantic(forSymbol:)/title",
          "value": "semanticForSymbol:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1semantic(forSymbol:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "semanticForSymbol:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1foundation~1nsdata/abstract",
          "value": [
            {
              "text": "A static byte buffer in memory.",
              "type": "text"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNGeometrySource~1Semantic-swift.struct~1vertex/title",
          "value": "SCNGeometrySourceSemanticVertex"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNGeometrySource~1Semantic-swift.struct~1vertex/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNGeometrySourceSemanticVertex"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNBufferStream/title",
          "value": "SCNBufferStream"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNBufferStream/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNBufferStream"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNBufferStream/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNBufferStream"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNSceneRenderer~1renderingAPI/title",
          "value": "renderingAPI"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNSceneRenderer~1renderingAPI/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "renderingAPI"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNTransaction/title",
          "value": "SCNTransaction"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNTransaction/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNTransaction"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNTransaction/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNTransaction"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1fragmentShader/title",
          "value": "fragmentShader"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1fragmentShader/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "fragmentShader"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNShadable~1shaderModifiers/title",
          "value": "shaderModifiers"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNShadable~1shaderModifiers/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "shaderModifiers"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNTechniqueSupport/title",
          "value": "SCNTechniqueSupport"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNTechniqueSupport/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNTechniqueSupport"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNTechniqueSupport/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNTechniqueSupport"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSObject/title",
          "value": "NSObject"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProjectionTransform/title",
          "value": "SCNProjectionTransform"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProjectionTransform/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNProjectionTransform"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNRenderingAPI~1metal/title",
          "value": "SCNRenderingAPIMetal"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNRenderingAPI~1metal/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNRenderingAPIMetal"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1vertexShader/title",
          "value": "vertexShader"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1vertexShader/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "vertexShader"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1QuartzCore~1CAPropertyAnimation~1init(keyPath:)/title",
          "value": "animationWithKeyPath:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1QuartzCore~1CAPropertyAnimation~1init(keyPath:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ ("
            },
            {
              "kind": "keyword",
              "text": "instancetype"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "identifier",
              "text": "animationWithKeyPath:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSString",
              "text": "NSString"
            },
            {
              "kind": "text",
              "text": " *) "
            },
            {
              "kind": "internalParam",
              "text": "path"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNGeometrySource~1Semantic-swift.struct~1normal/title",
          "value": "SCNGeometrySourceSemanticNormal"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNGeometrySource~1Semantic-swift.struct~1normal/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNGeometrySourceSemanticNormal"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1tessellationControlShader/title",
          "value": "tessellationControlShader"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1tessellationControlShader/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "tessellationControlShader"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNGeometrySource~1Semantic-swift.struct~1color/title",
          "value": "SCNGeometrySourceSemanticColor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNGeometrySource~1Semantic-swift.struct~1color/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNGeometrySourceSemanticColor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1isOpaque/title",
          "value": "opaque"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1isOpaque/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "opaque"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNGeometry/title",
          "value": "SCNGeometry"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNGeometry/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNGeometry"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNGeometry/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNGeometry"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNGeometrySource~1Semantic-swift.struct~1boneWeights/title",
          "value": "SCNGeometrySourceSemanticBoneWeights"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNGeometrySource~1Semantic-swift.struct~1boneWeights/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNGeometrySourceSemanticBoneWeights"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1tessellationEvaluationShader/title",
          "value": "tessellationEvaluationShader"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1tessellationEvaluationShader/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "tessellationEvaluationShader"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgramMappingChannelKey/title",
          "value": "SCNProgramMappingChannelKey"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgramMappingChannelKey/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNProgramMappingChannelKey"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNNodeRendererDelegate/title",
          "value": "SCNNodeRendererDelegate"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNNodeRendererDelegate/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNNodeRendererDelegate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNNodeRendererDelegate/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNNodeRendererDelegate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNGeometrySource~1Semantic-swift.struct~1texcoord/title",
          "value": "SCNGeometrySourceSemanticTexcoord"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNGeometrySource~1Semantic-swift.struct~1texcoord/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNGeometrySourceSemanticTexcoord"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram/title",
          "value": "SCNProgram"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNProgram"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNProgram"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNModelViewTransform/title",
          "value": "SCNModelViewTransform"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNModelViewTransform/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNModelViewTransform"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1vertexFunctionName/title",
          "value": "vertexFunctionName"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1vertexFunctionName/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "vertexFunctionName"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNView/title",
          "value": "SCNView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNView/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNView/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "SCNView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1geometryShader/title",
          "value": "geometryShader"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1geometryShader/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "geometryShader"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1setSemantic(_:forSymbol:options:)/title",
          "value": "setSemantic:forSymbol:options:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1setSemantic(_:forSymbol:options:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setSemantic:forSymbol:options:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1library/title",
          "value": "library"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.scenekit~1documentation~1SceneKit~1SCNProgram~1library/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "library"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/scenekit/scnprogram"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/scenekit/scnprogram"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
