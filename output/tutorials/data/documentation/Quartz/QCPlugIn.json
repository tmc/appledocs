{
  "abstract": [
    {
      "text": "A base class to subclass for writing custom patches.",
      "type": "text"
    }
  ],
  "deprecationSummary": [
    {
      "inlineContent": [
        {
          "text": "QuartzComposer API deprecated. (Define QC_SILENCE_DEPRECATION to silence these warnings)",
          "type": "text"
        }
      ],
      "type": "paragraph"
    }
  ],
  "diffAvailability": {
    "minor": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.2",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.quartz/documentation/Quartz"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(cs)QCPlugIn",
    "fragments": [
      {
        "kind": "keyword",
        "text": "class"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "QCPlugIn"
      }
    ],
    "modules": [
      {
        "name": "Quartz"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "QCPlugIn"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "deprecatedAt": "10.15",
        "introducedAt": "10.4",
        "message": "QuartzComposer API deprecated. (Define QC_SILENCE_DEPRECATION to silence these warnings)",
        "name": "macOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Class",
    "symbolKind": "class",
    "title": "QCPlugIn"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "macOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "class"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "QCPlugIn"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "QCPlugIn",
              "type": "codeVoice"
            },
            {
              "text": " class provides the base class to subclass for writing custom  Quartz Composer patches. You implement a custom patch by subclassing ",
              "type": "text"
            },
            {
              "code": "QCPlugIn",
              "type": "codeVoice"
            },
            {
              "text": ", overriding the appropriate methods, packaging the code as an ",
              "type": "text"
            },
            {
              "code": "NSBundle",
              "type": "codeVoice"
            },
            {
              "text": " object, and installing the bundle in the appropriate location. A bundle can contain more than one subclass  of ",
              "type": "text"
            },
            {
              "code": "QCPlugIn",
              "type": "codeVoice"
            },
            {
              "text": ", allowing you to provide a suite of custom patches in one bundle. ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/library/archive/documentation/GraphicsImaging/Conceptual/QuartzComposer_Patch_PlugIn_ProgGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40004787",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " provides detailed instructions on how to create and package a custom patch. ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "QCPlugIn Class Reference",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " supplements the information in the programming guide.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The methods related to the executing the custom patch (called when the Quartz Composer engine is rendering) are passed an opaque object that conforms to the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugInContext",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol. This object represents the execution context of the ",
              "type": "text"
            },
            {
              "code": "QCPlugIn",
              "type": "codeVoice"
            },
            {
              "text": " object. You should not retain the execution context or use it outside of the scope of the execution method that it is passed to.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.quartz/documentation/Quartz": {
      "abstract": [
        {
          "text": "Allow users to browse, edit, and save images, using slideshows and Core Image filters.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz",
      "kind": "symbol",
      "role": "collection",
      "title": "Quartz",
      "type": "topic",
      "url": "/documentation/quartz"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCComposition": {
      "abstract": [
        {
          "text": "The ",
          "type": "text"
        },
        {
          "code": "QCComposition",
          "type": "codeVoice"
        },
        {
          "text": " class represents a Quartz Composer composition that either:",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "QCComposition"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCComposition",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "QCComposition"
        }
      ],
      "role": "symbol",
      "title": "QCComposition",
      "type": "topic",
      "url": "/documentation/quartz/qccomposition"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCCompositionLayer": {
      "abstract": [
        {
          "text": "A layer that loads, plays, and controls Quartz Composer compositions in a Core Animation layer hierarchy.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "QCCompositionLayer"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCCompositionLayer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "QCCompositionLayer"
        }
      ],
      "role": "symbol",
      "title": "QCCompositionLayer",
      "type": "topic",
      "url": "/documentation/quartz/qccompositionlayer"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCCompositionParameterView": {
      "abstract": [
        {
          "text": "A class that allows users to edit the input parameters of a composition in real time. The composition can be rendering in any of the following objects: ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.quartz/documentation/Quartz/QCRenderer",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ", ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.quartz/documentation/Quartz/QCView",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ", or ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.quartz/documentation/Quartz/QCCompositionLayer",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "QCCompositionParameterView"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCCompositionParameterView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "QCCompositionParameterView"
        }
      ],
      "role": "symbol",
      "title": "QCCompositionParameterView",
      "type": "topic",
      "url": "/documentation/quartz/qccompositionparameterview"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCCompositionPickerPanel": {
      "abstract": [
        {
          "text": "The ",
          "type": "text"
        },
        {
          "code": "QCCompositionPickerPanel",
          "type": "codeVoice"
        },
        {
          "text": " class represents a utility window that allows users to browse compositions that are in the Quartz Composer composition repository and, if supported, preview the composition. The ",
          "type": "text"
        },
        {
          "code": "QCCompositionPickerPanel",
          "type": "codeVoice"
        },
        {
          "text": " class cannot be subclassed.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "QCCompositionPickerPanel"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCCompositionPickerPanel",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "QCCompositionPickerPanel"
        }
      ],
      "role": "symbol",
      "title": "QCCompositionPickerPanel",
      "type": "topic",
      "url": "/documentation/quartz/qccompositionpickerpanel"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCCompositionPickerView": {
      "abstract": [
        {
          "text": "The ",
          "type": "text"
        },
        {
          "code": "QCCompositionPickerView",
          "type": "codeVoice"
        },
        {
          "text": " class allows users to browse compositions that are in the Quartz Composer composition repository, and to preview them. You can set the default input parameters for a composition preview  by using the method setDefaultValue:forInputKey:.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "QCCompositionPickerView"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCCompositionPickerView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "QCCompositionPickerView"
        }
      ],
      "role": "symbol",
      "title": "QCCompositionPickerView",
      "type": "topic",
      "url": "/documentation/quartz/qccompositionpickerview"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCCompositionRepository": {
      "abstract": [
        {
          "text": "The ",
          "type": "text"
        },
        {
          "code": "QCCompositionRepository",
          "type": "codeVoice"
        },
        {
          "text": " class represents a system-wide centralized repository of built-in and installed Quartz Composer compositions (",
          "type": "text"
        },
        {
          "code": "/Library/Compositions",
          "type": "codeVoice"
        },
        {
          "text": " and ",
          "type": "text"
        },
        {
          "code": "~/Library/Compositions",
          "type": "codeVoice"
        },
        {
          "text": "). The ",
          "type": "text"
        },
        {
          "code": "QCCompositionRepository",
          "type": "codeVoice"
        },
        {
          "text": " class cannot be subclassed.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "QCCompositionRepository"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCCompositionRepository",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "QCCompositionRepository"
        }
      ],
      "role": "symbol",
      "title": "QCCompositionRepository",
      "type": "topic",
      "url": "/documentation/quartz/qccompositionrepository"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPatchController": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "QCPatchController"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPatchController",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "QCPatchController"
        }
      ],
      "role": "symbol",
      "title": "QCPatchController",
      "type": "topic",
      "url": "/documentation/quartz/qcpatchcontroller"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn": {
      "abstract": [
        {
          "text": "A base class to subclass for writing custom patches.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "QCPlugIn"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "QCPlugIn"
        }
      ],
      "role": "symbol",
      "title": "QCPlugIn",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/addInputPort(withType:forKey:withAttributes:)": {
      "abstract": [
        {
          "text": "Adds an input port of the specified type and associates a key and attributes with the port.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "addInputPort"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "externalParam",
          "text": "forKey"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "externalParam",
          "text": "withAttributes"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s11AnyHashableV",
          "text": "AnyHashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "]!)"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/addInputPort(withType:forKey:withAttributes:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "addInputPortWithType:forKey:withAttributes:"
        }
      ],
      "role": "symbol",
      "title": "addInputPort(withType:forKey:withAttributes:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/addinputport(withtype:forkey:withattributes:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/addOutputPort(withType:forKey:withAttributes:)": {
      "abstract": [
        {
          "text": "Adds an output port of the specified type and associates a key and attributes with the port.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "addOutputPort"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "externalParam",
          "text": "forKey"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "externalParam",
          "text": "withAttributes"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s11AnyHashableV",
          "text": "AnyHashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "]!)"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/addOutputPort(withType:forKey:withAttributes:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "addOutputPortWithType:forKey:withAttributes:"
        }
      ],
      "role": "symbol",
      "title": "addOutputPort(withType:forKey:withAttributes:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/addoutputport(withtype:forkey:withattributes:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/attributes()": {
      "abstract": [
        {
          "text": "Returns a dictionary that contains strings for the user interface that describe the custom patch.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "attributes"
        },
        {
          "kind": "text",
          "text": "() -> ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s11AnyHashableV",
          "text": "AnyHashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "]!"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/attributes()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "attributes"
        }
      ],
      "role": "symbol",
      "title": "attributes()",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/attributes()"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/attributesForPropertyPort(withKey:)": {
      "abstract": [
        {
          "text": "Returns a dictionary that contains strings for the user interface that describe the optional attributes for ports created from properties.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "attributesForPropertyPort"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withKey"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "!) -> ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s11AnyHashableV",
          "text": "AnyHashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "]!"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/attributesForPropertyPort(withKey:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "attributesForPropertyPortWithKey:"
        }
      ],
      "role": "symbol",
      "title": "attributesForPropertyPort(withKey:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/attributesforpropertyport(withkey:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/createViewController()": {
      "abstract": [
        {
          "text": "Creates and returns a view controller for the Settings pane of a custom patch.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "createViewController"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)QCPlugInViewController",
          "text": "QCPlugInViewController"
        },
        {
          "kind": "text",
          "text": "!"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/createViewController()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "createViewController"
        }
      ],
      "role": "symbol",
      "title": "createViewController()",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/createviewcontroller()"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/didValue(forInputKeyChange:)": {
      "abstract": [
        {
          "text": "Returns whether the input port value changed since the last execution of the custom patch.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "didValue"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "forInputKeyChange"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "!) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/didValue(forInputKeyChange:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "didValueForInputKeyChange:"
        }
      ],
      "role": "symbol",
      "title": "didValue(forInputKeyChange:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/didvalue(forinputkeychange:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/disableExecution(_:)": {
      "abstract": [
        {
          "text": "Allows you to perform custom tasks when the execution of the ",
          "type": "text"
        },
        {
          "code": "QCPlugIn",
          "type": "codeVoice"
        },
        {
          "text": " object is paused.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "disableExecution"
        },
        {
          "kind": "text",
          "text": "((any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)QCPlugInContext",
          "text": "QCPlugInContext"
        },
        {
          "kind": "text",
          "text": ")!)"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/disableExecution(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "disableExecution:"
        }
      ],
      "role": "symbol",
      "title": "disableExecution(_:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/disableexecution(_:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/enableExecution(_:)": {
      "abstract": [
        {
          "text": "Allows you to perform custom tasks when the execution of the ",
          "type": "text"
        },
        {
          "code": "QCPlugIn",
          "type": "codeVoice"
        },
        {
          "text": " object is resumed.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "enableExecution"
        },
        {
          "kind": "text",
          "text": "((any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)QCPlugInContext",
          "text": "QCPlugInContext"
        },
        {
          "kind": "text",
          "text": ")!)"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/enableExecution(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "enableExecution:"
        }
      ],
      "role": "symbol",
      "title": "enableExecution(_:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/enableexecution(_:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/execute(_:atTime:withArguments:)": {
      "abstract": [
        {
          "text": "Performs the processing or rendering tasks appropriate for the custom patch.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "execute"
        },
        {
          "kind": "text",
          "text": "((any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)QCPlugInContext",
          "text": "QCPlugInContext"
        },
        {
          "kind": "text",
          "text": ")!, "
        },
        {
          "kind": "externalParam",
          "text": "atTime"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@NSTimeInterval",
          "text": "TimeInterval"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "withArguments"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s11AnyHashableV",
          "text": "AnyHashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "]!) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/execute(_:atTime:withArguments:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "execute:atTime:withArguments:"
        }
      ],
      "role": "symbol",
      "title": "execute(_:atTime:withArguments:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/execute(_:attime:witharguments:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/executionMode()": {
      "abstract": [
        {
          "text": "Returns the execution mode of the custom patch.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "executionMode"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@EA@QCPlugInExecutionMode",
          "text": "QCPlugInExecutionMode"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/executionMode()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "executionMode"
        }
      ],
      "role": "symbol",
      "title": "executionMode()",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/executionmode()"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/executionTime(for:atTime:withArguments:)": {
      "abstract": [],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "executionTime"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)QCPlugInContext",
          "text": "QCPlugInContext"
        },
        {
          "kind": "text",
          "text": ")!, "
        },
        {
          "kind": "externalParam",
          "text": "atTime"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@NSTimeInterval",
          "text": "TimeInterval"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "withArguments"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s11AnyHashableV",
          "text": "AnyHashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "]!) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@NSTimeInterval",
          "text": "TimeInterval"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/executionTime(for:atTime:withArguments:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "executionTimeForContext:atTime:withArguments:"
        }
      ],
      "role": "symbol",
      "title": "executionTime(for:atTime:withArguments:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/executiontime(for:attime:witharguments:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/load(atPath:)": {
      "abstract": [
        {
          "text": "Loads a Quartz Composer plug-in bundle from the specified path.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "load"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "atPath"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "!) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/load(atPath:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "loadPlugInAtPath:"
        }
      ],
      "role": "symbol",
      "title": "load(atPath:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/load(atpath:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/plugInKeys()": {
      "abstract": [
        {
          "text": "Returns the keys for the internal settings of a custom patch.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "plugInKeys"
        },
        {
          "kind": "text",
          "text": "() -> ["
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "]!"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/plugInKeys()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "plugInKeys"
        }
      ],
      "role": "symbol",
      "title": "plugInKeys()",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/pluginkeys()"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/registerClass(_:)": {
      "abstract": [
        {
          "text": "Registers a ",
          "type": "text"
        },
        {
          "code": "QCPlugIn",
          "type": "codeVoice"
        },
        {
          "text": " subclass.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "registerClass"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s8AnyClassa",
          "text": "AnyClass"
        },
        {
          "kind": "text",
          "text": "!)"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/registerClass(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "registerPlugInClass:"
        }
      ],
      "role": "symbol",
      "title": "registerClass(_:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/registerclass(_:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/removeInputPort(forKey:)": {
      "abstract": [
        {
          "text": "Removes the input port for a given key.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeInputPort"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "forKey"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "!)"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/removeInputPort(forKey:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "removeInputPortForKey:"
        }
      ],
      "role": "symbol",
      "title": "removeInputPort(forKey:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/removeinputport(forkey:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/removeOutputPort(forKey:)": {
      "abstract": [
        {
          "text": "Removes the output port for a given key.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeOutputPort"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "forKey"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "!)"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/removeOutputPort(forKey:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "removeOutputPortForKey:"
        }
      ],
      "role": "symbol",
      "title": "removeOutputPort(forKey:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/removeoutputport(forkey:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/serializedValue(forKey:)": {
      "abstract": [
        {
          "text": "A method implemented to override serialization.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "serializedValue"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "forKey"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "!) -> "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "!"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/serializedValue(forKey:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "serializedValueForKey:"
        }
      ],
      "role": "symbol",
      "title": "serializedValue(forKey:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/serializedvalue(forkey:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/setSerializedValue(_:forKey:)": {
      "abstract": [
        {
          "text": "Provides custom deserialization for patch internal settings that were previously serialized using the method ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/serializedValue(forKey:)",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setSerializedValue"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "externalParam",
          "text": "forKey"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "!)"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/setSerializedValue(_:forKey:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setSerializedValue:forKey:"
        }
      ],
      "role": "symbol",
      "title": "setSerializedValue(_:forKey:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/setserializedvalue(_:forkey:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/setValue(_:forOutputKey:)": {
      "abstract": [
        {
          "text": "Sets the value of an output port.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setValue"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "externalParam",
          "text": "forOutputKey"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "!) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/setValue(_:forOutputKey:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setValue:forOutputKey:"
        }
      ],
      "role": "symbol",
      "title": "setValue(_:forOutputKey:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/setvalue(_:foroutputkey:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/sortedPropertyPortKeys()": {
      "abstract": [
        {
          "text": "Returns and array of property port keys in the order you want them to appear in the user interface.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sortedPropertyPortKeys"
        },
        {
          "kind": "text",
          "text": "() -> ["
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "]!"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/sortedPropertyPortKeys()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "sortedPropertyPortKeys"
        }
      ],
      "role": "symbol",
      "title": "sortedPropertyPortKeys()",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/sortedpropertyportkeys()"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/startExecution(_:)": {
      "abstract": [
        {
          "text": "Allows you to perform custom setup tasks before the Quartz Composer engine starts rendering.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "startExecution"
        },
        {
          "kind": "text",
          "text": "((any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)QCPlugInContext",
          "text": "QCPlugInContext"
        },
        {
          "kind": "text",
          "text": ")!) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/startExecution(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "startExecution:"
        }
      ],
      "role": "symbol",
      "title": "startExecution(_:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/startexecution(_:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/stopExecution(_:)": {
      "abstract": [
        {
          "text": "Allows you to perform custom tasks when the ",
          "type": "text"
        },
        {
          "code": "QCPlugIn",
          "type": "codeVoice"
        },
        {
          "text": " object stops executing.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "stopExecution"
        },
        {
          "kind": "text",
          "text": "((any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)QCPlugInContext",
          "text": "QCPlugInContext"
        },
        {
          "kind": "text",
          "text": ")!)"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/stopExecution(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "stopExecution:"
        }
      ],
      "role": "symbol",
      "title": "stopExecution(_:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/stopexecution(_:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/timeMode()": {
      "abstract": [
        {
          "text": "Returns the time mode for the custom patch.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "timeMode"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@EA@QCPlugInTimeMode",
          "text": "QCPlugInTimeMode"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/timeMode()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "timeMode"
        }
      ],
      "role": "symbol",
      "title": "timeMode()",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/timemode()"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/value(forInputKey:)": {
      "abstract": [
        {
          "text": "Returns the current value for an input port.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "value"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "forInputKey"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "!) -> "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "!"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/value(forInputKey:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "valueForInputKey:"
        }
      ],
      "role": "symbol",
      "title": "value(forInputKey:)",
      "type": "topic",
      "url": "/documentation/quartz/qcplugin/value(forinputkey:)"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugInContext": {
      "abstract": [
        {
          "text": "The ",
          "type": "text"
        },
        {
          "code": "QCPlugInContext",
          "type": "codeVoice"
        },
        {
          "text": " protocol defines methods that you use only from within the execution method (",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/execute(_:atTime:withArguments:)",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ") of a ",
          "type": "text"
        },
        {
          "code": "QCPlugIn",
          "type": "codeVoice"
        },
        {
          "text": " object.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "QCPlugInContext"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugInContext",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "QCPlugInContext"
        }
      ],
      "role": "symbol",
      "title": "QCPlugInContext",
      "type": "topic",
      "url": "/documentation/quartz/qcplugincontext"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugInExecutionMode": {
      "abstract": [
        {
          "text": "Execution modes for custom patches.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "QCPlugInExecutionMode"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugInExecutionMode",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "QCPlugInExecutionMode"
        }
      ],
      "role": "symbol",
      "title": "QCPlugInExecutionMode",
      "type": "topic",
      "url": "/documentation/quartz/qcpluginexecutionmode"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugInTimeMode": {
      "abstract": [
        {
          "text": "Time modes for custom patches.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "QCPlugInTimeMode"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugInTimeMode",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "QCPlugInTimeMode"
        }
      ],
      "role": "symbol",
      "title": "QCPlugInTimeMode",
      "type": "topic",
      "url": "/documentation/quartz/qcplugintimemode"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCPlugInViewController": {
      "abstract": [
        {
          "text": "The ",
          "type": "text"
        },
        {
          "code": "QCPlugInViewController",
          "type": "codeVoice"
        },
        {
          "text": " class communicates (through Cocoa bindings) between a custom patch and the view used for the internal settings of the custom patch. Only custom patches that use internal settings exposed to the user need to use the ",
          "type": "text"
        },
        {
          "code": "QCPlugInViewController",
          "type": "codeVoice"
        },
        {
          "text": " class.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "QCPlugInViewController"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugInViewController",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "QCPlugInViewController"
        }
      ],
      "role": "symbol",
      "title": "QCPlugInViewController",
      "type": "topic",
      "url": "/documentation/quartz/qcpluginviewcontroller"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCRenderer": {
      "abstract": [
        {
          "text": "A base class for low-level rendering.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "QCRenderer"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCRenderer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "QCRenderer"
        }
      ],
      "role": "symbol",
      "title": "QCRenderer",
      "type": "topic",
      "url": "/documentation/quartz/qcrenderer"
    },
    "doc://com.apple.quartz/documentation/Quartz/QCView": {
      "abstract": [
        {
          "text": "The ",
          "type": "text"
        },
        {
          "code": "QCView",
          "type": "codeVoice"
        },
        {
          "text": " class is a custom ",
          "type": "text"
        },
        {
          "code": "NSView",
          "type": "codeVoice"
        },
        {
          "text": " class that loads, plays, and controls Quartz Composer compositions. It is an autonomous view that is driven by an internal timer running on the main thread.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "QCView"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/QCView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "QCView"
        }
      ],
      "role": "symbol",
      "title": "QCView",
      "type": "topic",
      "url": "/documentation/quartz/qcview"
    },
    "doc://com.apple.quartz/documentation/Quartz/execution-arguments": {
      "abstract": [
        {
          "text": "Arguments to the method ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/execute(_:atTime:withArguments:)",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/execution-arguments",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Execution Arguments",
      "type": "topic",
      "url": "/documentation/quartz/execution-arguments"
    },
    "doc://com.apple.quartz/documentation/Quartz/input-and-output-port-attributes": {
      "abstract": [
        {
          "text": "Attributes for input and output ports.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/input-and-output-port-attributes",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Input and Output Port Attributes",
      "type": "topic",
      "url": "/documentation/quartz/input-and-output-port-attributes"
    },
    "doc://com.apple.quartz/documentation/Quartz/patch-attributes": {
      "abstract": [
        {
          "text": "Attributes for custom patches.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/patch-attributes",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Patch Attributes",
      "type": "topic",
      "url": "/documentation/quartz/patch-attributes"
    },
    "doc://com.apple.quartz/documentation/Quartz/pixel-formats": {
      "abstract": [
        {
          "text": "Supported image pixel formats.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/pixel-formats",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Pixel Formats",
      "type": "topic",
      "url": "/documentation/quartz/pixel-formats"
    },
    "doc://com.apple.quartz/documentation/Quartz/port-input-and-output-types": {
      "abstract": [
        {
          "text": "Data types for input and output ports.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.quartz/documentation/Quartz/port-input-and-output-types",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Port Input and Output Types",
      "type": "topic",
      "url": "/documentation/quartz/port-input-and-output-types"
    },
    "doc://com.externally.resolved.symbol/c:objc(cs)NSObject": {
      "abstract": [
        {
          "text": "The root class of most Objective-C class hierarchies, from which subclasses inherit a basic interface to the runtime system and the ability to behave as Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSObject"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObject",
      "type": "topic",
      "url": "/documentation/objectivec/nsobject"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSObject": {
      "abstract": [
        {
          "text": "The group of methods that are fundamental to all Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObjectProtocol",
      "type": "topic",
      "url": "/documentation/objectivec/nsobjectprotocol"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomDebugStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s7CVarArgP": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as elements of a C `va_list`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s7CVarArgP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/Swift/CVarArg"
    },
    "https://developer.apple.com/library/archive/documentation/GraphicsImaging/Conceptual/QuartzComposer_Patch_PlugIn_ProgGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40004787": {
      "identifier": "https://developer.apple.com/library/archive/documentation/GraphicsImaging/Conceptual/QuartzComposer_Patch_PlugIn_ProgGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40004787",
      "title": "Quartz Composer Custom Patch Programming Guide",
      "titleInlineContent": [
        {
          "text": "Quartz Composer Custom Patch Programming Guide",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/library/archive/documentation/GraphicsImaging/Conceptual/QuartzComposer_Patch_PlugIn_ProgGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40004787"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    },
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s7CVarArgP",
        "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSObject"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Related-Documentation",
      "identifiers": [
        "https://developer.apple.com/library/archive/documentation/GraphicsImaging/Conceptual/QuartzComposer_Patch_PlugIn_ProgGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40004787"
      ],
      "title": "Related Documentation"
    },
    {
      "anchor": "Classes",
      "generated": true,
      "identifiers": [
        "doc://com.apple.quartz/documentation/Quartz/QCComposition",
        "doc://com.apple.quartz/documentation/Quartz/QCCompositionLayer",
        "doc://com.apple.quartz/documentation/Quartz/QCCompositionParameterView",
        "doc://com.apple.quartz/documentation/Quartz/QCCompositionPickerPanel",
        "doc://com.apple.quartz/documentation/Quartz/QCCompositionPickerView",
        "doc://com.apple.quartz/documentation/Quartz/QCCompositionRepository",
        "doc://com.apple.quartz/documentation/Quartz/QCPatchController",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugInViewController",
        "doc://com.apple.quartz/documentation/Quartz/QCRenderer",
        "doc://com.apple.quartz/documentation/Quartz/QCView"
      ],
      "title": "Classes"
    }
  ],
  "topicSections": [
    {
      "anchor": "Defining-the-Characteristics-of-a-Custom-Patch",
      "identifiers": [
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/executionMode()",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/timeMode()"
      ],
      "title": "Defining the Characteristics of a Custom Patch"
    },
    {
      "anchor": "Executing-a-Custom-Patch",
      "identifiers": [
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/execute(_:atTime:withArguments:)"
      ],
      "title": "Executing a Custom Patch"
    },
    {
      "anchor": "Performing-Custom-Tasks-During-Execution",
      "identifiers": [
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/startExecution(_:)",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/enableExecution(_:)",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/disableExecution(_:)",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/stopExecution(_:)"
      ],
      "title": "Performing Custom Tasks During Execution"
    },
    {
      "anchor": "Defining-Patch-and-Property-Port-Attributes",
      "identifiers": [
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/attributes()",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/attributesForPropertyPort(withKey:)"
      ],
      "title": "Defining Patch and Property Port Attributes"
    },
    {
      "anchor": "Defining-Internal-Settings",
      "identifiers": [
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/createViewController()",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/plugInKeys()"
      ],
      "title": "Defining Internal Settings"
    },
    {
      "anchor": "Supporting-Saving-and-Retrieving-Internal-Settings",
      "identifiers": [
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/serializedValue(forKey:)",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/setSerializedValue(_:forKey:)"
      ],
      "title": "Supporting Saving and Retrieving Internal Settings"
    },
    {
      "anchor": "Adding-Ports-Dynamically",
      "identifiers": [
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/addInputPort(withType:forKey:withAttributes:)",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/removeInputPort(forKey:)",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/addOutputPort(withType:forKey:withAttributes:)",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/removeOutputPort(forKey:)"
      ],
      "title": "Adding Ports Dynamically"
    },
    {
      "anchor": "Getting-and-Setting-Port-Values",
      "identifiers": [
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/didValue(forInputKeyChange:)",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/value(forInputKey:)",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/setValue(_:forOutputKey:)"
      ],
      "title": "Getting and Setting Port Values"
    },
    {
      "anchor": "Loading-Bundle-and-Custom-Patches-Manually",
      "identifiers": [
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/load(atPath:)",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/registerClass(_:)"
      ],
      "title": "Loading Bundle and Custom Patches Manually"
    },
    {
      "anchor": "Ordering-Property-Ports",
      "identifiers": [
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/sortedPropertyPortKeys()"
      ],
      "title": "Ordering Property Ports"
    },
    {
      "anchor": "Constants",
      "identifiers": [
        "doc://com.apple.quartz/documentation/Quartz/patch-attributes",
        "doc://com.apple.quartz/documentation/Quartz/input-and-output-port-attributes",
        "doc://com.apple.quartz/documentation/Quartz/port-input-and-output-types",
        "doc://com.apple.quartz/documentation/Quartz/pixel-formats",
        "doc://com.apple.quartz/documentation/Quartz/execution-arguments",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugInExecutionMode",
        "doc://com.apple.quartz/documentation/Quartz/QCPlugInTimeMode"
      ],
      "title": "Constants"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/executionTime(for:atTime:withArguments:)"
      ],
      "title": "Instance Methods"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "deprecatedAt": "10.15",
              "introducedAt": "10.4",
              "name": "macOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Class"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "QCPlugIn"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "class"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "QCPlugIn"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "QCPlugIn"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.quartz/documentation/Quartz"
              ]
            ]
          }
        },
        {
          "op": "replace",
          "path": "/topicSections",
          "value": [
            {
              "anchor": "Defining-the-Characteristics-of-a-Custom-Patch",
              "identifiers": [
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/executionMode()",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/timeMode()"
              ],
              "title": "Defining the Characteristics of a Custom Patch"
            },
            {
              "anchor": "Executing-a-Custom-Patch",
              "identifiers": [
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/execute(_:atTime:withArguments:)"
              ],
              "title": "Executing a Custom Patch"
            },
            {
              "anchor": "Performing-Custom-Tasks-During-Execution",
              "identifiers": [
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/startExecution(_:)",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/enableExecution(_:)",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/disableExecution(_:)",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/stopExecution(_:)"
              ],
              "title": "Performing Custom Tasks During Execution"
            },
            {
              "anchor": "Defining-Patch-and-Property-Port-Attributes",
              "identifiers": [
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/attributes()",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/attributesForPropertyPort(withKey:)"
              ],
              "title": "Defining Patch and Property Port Attributes"
            },
            {
              "anchor": "Defining-Internal-Settings",
              "identifiers": [
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/createViewController()",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/plugInKeys()"
              ],
              "title": "Defining Internal Settings"
            },
            {
              "anchor": "Supporting-Saving-and-Retrieving-Internal-Settings",
              "identifiers": [
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/serializedValue(forKey:)",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/setSerializedValue(_:forKey:)"
              ],
              "title": "Supporting Saving and Retrieving Internal Settings"
            },
            {
              "anchor": "Adding-Ports-Dynamically",
              "identifiers": [
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/addInputPort(withType:forKey:withAttributes:)",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/removeInputPort(forKey:)",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/addOutputPort(withType:forKey:withAttributes:)",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/removeOutputPort(forKey:)"
              ],
              "title": "Adding Ports Dynamically"
            },
            {
              "anchor": "Getting-and-Setting-Port-Values",
              "identifiers": [
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/didValue(forInputKeyChange:)",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/value(forInputKey:)",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/setValue(_:forOutputKey:)"
              ],
              "title": "Getting and Setting Port Values"
            },
            {
              "anchor": "Loading-Bundle-and-Custom-Patches-Manually",
              "identifiers": [
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/load(atPath:)",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/registerClass(_:)"
              ],
              "title": "Loading Bundle and Custom Patches Manually"
            },
            {
              "anchor": "Ordering-Property-Ports",
              "identifiers": [
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/sortedPropertyPortKeys()"
              ],
              "title": "Ordering Property Ports"
            },
            {
              "anchor": "Constants",
              "identifiers": [
                "doc://com.apple.quartz/documentation/Quartz/patch-attributes",
                "doc://com.apple.quartz/documentation/Quartz/input-and-output-port-attributes",
                "doc://com.apple.quartz/documentation/Quartz/port-input-and-output-types",
                "doc://com.apple.quartz/documentation/Quartz/pixel-formats",
                "doc://com.apple.quartz/documentation/Quartz/execution-arguments",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugInExecutionMode",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugInTimeMode"
              ],
              "title": "Constants"
            },
            {
              "anchor": "Instance-Methods",
              "generated": true,
              "identifiers": [
                "doc://com.apple.quartz/documentation/Quartz/QCPlugIn/executionTime(for:atTime:withArguments:)"
              ],
              "title": "Instance Methods"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/relationshipsSections",
          "value": [
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
              ],
              "kind": "relationships",
              "title": "Inherits From",
              "type": "inheritsFrom"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Related-Documentation",
              "identifiers": [
                "https://developer.apple.com/library/archive/documentation/GraphicsImaging/Conceptual/QuartzComposer_Patch_PlugIn_ProgGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40004787"
              ],
              "title": "Related Documentation"
            },
            {
              "anchor": "Classes",
              "generated": true,
              "identifiers": [
                "doc://com.apple.quartz/documentation/Quartz/QCComposition",
                "doc://com.apple.quartz/documentation/Quartz/QCCompositionLayer",
                "doc://com.apple.quartz/documentation/Quartz/QCCompositionParameterView",
                "doc://com.apple.quartz/documentation/Quartz/QCCompositionPickerPanel",
                "doc://com.apple.quartz/documentation/Quartz/QCCompositionPickerView",
                "doc://com.apple.quartz/documentation/Quartz/QCCompositionRepository",
                "doc://com.apple.quartz/documentation/Quartz/QCPatchController",
                "doc://com.apple.quartz/documentation/Quartz/QCPlugInViewController",
                "doc://com.apple.quartz/documentation/Quartz/QCRenderer",
                "doc://com.apple.quartz/documentation/Quartz/QCView"
              ],
              "title": "Classes"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "macOS"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "@interface"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "QCPlugIn"
                  },
                  {
                    "kind": "text",
                    "text": " : "
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(cs)NSObject",
                    "text": "NSObject"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/deprecationSummary",
          "value": [
            {
              "inlineContent": [
                {
                  "text": "QuartzComposer API deprecated. (Define QC_SILENCE_DEPRECATION to silence these warnings)",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1load(atPath:)/title",
          "value": "loadPlugInAtPath:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1load(atPath:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "loadPlugInAtPath:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1setValue(_:forOutputKey:)/title",
          "value": "setValue:forOutputKey:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1setValue(_:forOutputKey:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setValue:forOutputKey:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1setSerializedValue(_:forKey:)/title",
          "value": "setSerializedValue:forKey:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1setSerializedValue(_:forKey:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setSerializedValue:forKey:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugInExecutionMode/title",
          "value": "QCPlugInExecutionMode"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugInExecutionMode/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "QCPlugInExecutionMode"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugInExecutionMode/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "QCPlugInExecutionMode"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCCompositionRepository/title",
          "value": "QCCompositionRepository"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCCompositionRepository/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "QCCompositionRepository"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCCompositionRepository/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "QCCompositionRepository"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCView/title",
          "value": "QCView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCView/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "QCView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCView/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "QCView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1executionMode()/title",
          "value": "executionMode"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1executionMode()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "executionMode"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1disableExecution(_:)/title",
          "value": "disableExecution:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1disableExecution(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "disableExecution:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1createViewController()/title",
          "value": "createViewController"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1createViewController()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "createViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1addInputPort(withType:forKey:withAttributes:)/title",
          "value": "addInputPortWithType:forKey:withAttributes:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1addInputPort(withType:forKey:withAttributes:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "addInputPortWithType:forKey:withAttributes:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1removeOutputPort(forKey:)/title",
          "value": "removeOutputPortForKey:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1removeOutputPort(forKey:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "removeOutputPortForKey:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCRenderer/title",
          "value": "QCRenderer"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCRenderer/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "QCRenderer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCRenderer/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "QCRenderer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1attributesForPropertyPort(withKey:)/title",
          "value": "attributesForPropertyPortWithKey:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1attributesForPropertyPort(withKey:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "attributesForPropertyPortWithKey:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugInContext/title",
          "value": "QCPlugInContext"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugInContext/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "QCPlugInContext"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugInContext/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "QCPlugInContext"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1executionTime(for:atTime:withArguments:)/title",
          "value": "executionTimeForContext:atTime:withArguments:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1executionTime(for:atTime:withArguments:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "executionTimeForContext:atTime:withArguments:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1plugInKeys()/title",
          "value": "plugInKeys"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1plugInKeys()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "plugInKeys"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCComposition/title",
          "value": "QCComposition"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCComposition/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "QCComposition"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCComposition/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "QCComposition"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1timeMode()/title",
          "value": "timeMode"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1timeMode()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "timeMode"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn/title",
          "value": "QCPlugIn"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "QCPlugIn"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "QCPlugIn"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1didValue(forInputKeyChange:)/title",
          "value": "didValueForInputKeyChange:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1didValue(forInputKeyChange:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "didValueForInputKeyChange:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1removeInputPort(forKey:)/title",
          "value": "removeInputPortForKey:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1removeInputPort(forKey:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "removeInputPortForKey:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1sortedPropertyPortKeys()/title",
          "value": "sortedPropertyPortKeys"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1sortedPropertyPortKeys()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "sortedPropertyPortKeys"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1registerClass(_:)/title",
          "value": "registerPlugInClass:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1registerClass(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "registerPlugInClass:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1execute(_:atTime:withArguments:)/title",
          "value": "execute:atTime:withArguments:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1execute(_:atTime:withArguments:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "execute:atTime:withArguments:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1startExecution(_:)/title",
          "value": "startExecution:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1startExecution(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "startExecution:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1serializedValue(forKey:)/title",
          "value": "serializedValueForKey:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1serializedValue(forKey:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "serializedValueForKey:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1value(forInputKey:)/title",
          "value": "valueForInputKey:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1value(forInputKey:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "valueForInputKey:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCCompositionPickerPanel/title",
          "value": "QCCompositionPickerPanel"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCCompositionPickerPanel/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "QCCompositionPickerPanel"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCCompositionPickerPanel/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "QCCompositionPickerPanel"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1stopExecution(_:)/title",
          "value": "stopExecution:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1stopExecution(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "stopExecution:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCCompositionParameterView/title",
          "value": "QCCompositionParameterView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCCompositionParameterView/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "QCCompositionParameterView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCCompositionParameterView/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "QCCompositionParameterView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSObject/title",
          "value": "NSObject"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPatchController/title",
          "value": "QCPatchController"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPatchController/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "QCPatchController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPatchController/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "QCPatchController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCCompositionPickerView/title",
          "value": "QCCompositionPickerView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCCompositionPickerView/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "QCCompositionPickerView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCCompositionPickerView/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "QCCompositionPickerView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1attributes()/title",
          "value": "attributes"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1attributes()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "attributes"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugInTimeMode/title",
          "value": "QCPlugInTimeMode"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugInTimeMode/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "QCPlugInTimeMode"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugInTimeMode/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "QCPlugInTimeMode"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCCompositionLayer/title",
          "value": "QCCompositionLayer"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCCompositionLayer/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "QCCompositionLayer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCCompositionLayer/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "QCCompositionLayer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1addOutputPort(withType:forKey:withAttributes:)/title",
          "value": "addOutputPortWithType:forKey:withAttributes:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1addOutputPort(withType:forKey:withAttributes:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "addOutputPortWithType:forKey:withAttributes:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1enableExecution(_:)/title",
          "value": "enableExecution:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugIn~1enableExecution(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "enableExecution:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugInViewController/title",
          "value": "QCPlugInViewController"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugInViewController/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "QCPlugInViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.quartz~1documentation~1Quartz~1QCPlugInViewController/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "QCPlugInViewController"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/quartz/qcplugin"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/quartz/qcplugin"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
