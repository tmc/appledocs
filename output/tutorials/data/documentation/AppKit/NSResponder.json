{
  "abstract": [
    {
      "text": "An abstract class that forms the basis of event and command processing in AppKit.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.appkit/documentation/AppKit"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.appkit/documentation/AppKit/NSResponder"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(cs)NSResponder",
    "fragments": [
      {
        "kind": "keyword",
        "text": "class"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "NSResponder"
      }
    ],
    "modules": [
      {
        "name": "AppKit"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "NSResponder"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "name": "macOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Class",
    "symbolKind": "class",
    "title": "NSResponder"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "macOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:ScM",
              "kind": "attribute",
              "preciseIdentifier": "s:ScM",
              "text": "MainActor"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "class"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "NSResponder"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The core classes—",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.appkit/documentation/AppKit/NSApplication",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.appkit/documentation/AppKit/NSWindow",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.appkit/documentation/AppKit/NSView",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": "—inherit from ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", as must any class that handles events. The responder model uses three components: event messages, action messages, and the responder chain.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " also plays an important role in the presentation of error information. The default implementations of the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/presentError(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/presentError(_:modalFor:delegate:didPresent:contextInfo:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " methods send ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/willPresentError(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " to ",
              "type": "text"
            },
            {
              "code": "self",
              "type": "codeVoice"
            },
            {
              "text": ", thereby giving subclasses the opportunity to customize the localized information presented in error alerts. ",
              "type": "text"
            },
            {
              "code": "NSResponder",
              "type": "codeVoice"
            },
            {
              "text": " then forwards the message to the next responder, passing it the customized ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/nserror",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object. The exact path up the modified responder chain depends on the type of application window:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Window that the document owns: view > superviews > window > window controller > document object > document controller > the application object",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Window with window controller but no documents: view > superviews > window > window controller > the application object",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Window with no window controllers: view > superviews > window > the application object",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "identifier": "doc://com.apple.appkit/documentation/AppKit/NSApplication",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " displays a document-modal error alert and, if the error object has a recovery attempter, gives it a chance to recover from the error. A recovery attempter is an object that conforms to the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/nserror/nserrorrecoveryattempting",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " informal protocol.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "In macOS 10.15 and later, ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " and its descendants call the ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/objectivec/nsobject/1571947-dealloc",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " method on the main thread. This method helps to avoid situations where an asynchronous block unexpectedly deallocates an object on a background queue.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.appkit/documentation/AppKit": {
      "abstract": [
        {
          "text": "Construct and manage a graphical, event-driven user interface for your macOS app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit",
      "kind": "symbol",
      "role": "collection",
      "title": "AppKit",
      "type": "topic",
      "url": "/documentation/appkit"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSApplication": {
      "abstract": [
        {
          "text": "An object that manages an app’s main event loop and resources used by all of that app’s objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSApplication"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSApplication",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSApplication"
        }
      ],
      "role": "symbol",
      "title": "NSApplication",
      "type": "topic",
      "url": "/documentation/appkit/nsapplication"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSDrawer": {
      "abstract": [
        {
          "text": "A user interface element that contains and displays text, scroll, and browser views, in addition to other view subclasses.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSDrawer"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSDrawer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSDrawer"
        }
      ],
      "role": "symbol",
      "title": "NSDrawer",
      "type": "topic",
      "url": "/documentation/appkit/nsdrawer"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSEvent/GestureAxis": {
      "abstract": [
        {
          "text": "Constants that specify the direction of travel for a gesture.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "GestureAxis"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSEvent/GestureAxis",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "GestureAxis"
        }
      ],
      "role": "symbol",
      "title": "NSEvent.GestureAxis",
      "type": "topic",
      "url": "/documentation/appkit/nsevent/gestureaxis"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSInterfaceStyleDefault": {
      "abstract": [
        {
          "text": "For more information, see the function ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.appkit/documentation/AppKit/NSInterfaceStyleForKey",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "NSInterfaceStyleDefault"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSInterfaceStyleDefault",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSInterfaceStyleDefault",
      "type": "topic",
      "url": "/documentation/appkit/nsinterfacestyledefault"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSInterfaceStyleForKey": {
      "abstract": [
        {
          "text": "Returns an interface style value for the specified key and responder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "NSInterfaceStyleForKey"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSInterfaceStyleForKey",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSInterfaceStyleForKey",
      "type": "topic",
      "url": "/documentation/appkit/nsinterfacestyleforkey"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSPopover": {
      "abstract": [
        {
          "text": "A means to display additional content related to existing content on the screen.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSPopover"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSPopover",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSPopover"
        }
      ],
      "role": "symbol",
      "title": "NSPopover",
      "type": "topic",
      "url": "/documentation/appkit/nspopover"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder": {
      "abstract": [
        {
          "text": "An abstract class that forms the basis of event and command processing in AppKit.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSResponder"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSResponder"
        }
      ],
      "role": "symbol",
      "title": "NSResponder",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/acceptsFirstResponder": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether the responder accepts first responder status.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "acceptsFirstResponder"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/acceptsFirstResponder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "acceptsFirstResponder"
        }
      ],
      "role": "symbol",
      "title": "acceptsFirstResponder",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/acceptsfirstresponder"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/allowedClasses(forRestorableStateKeyPath:)": {
      "abstract": [
        {
          "text": "Returns the classes that support secure coding.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "allowedClasses"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "forRestorableStateKeyPath"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s8AnyClassa",
          "text": "AnyClass"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/allowedClasses(forRestorableStateKeyPath:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "allowedClassesForRestorableStateKeyPath:"
        }
      ],
      "role": "symbol",
      "title": "allowedClasses(forRestorableStateKeyPath:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/allowedclasses(forrestorablestatekeypath:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/becomeFirstResponder()": {
      "abstract": [
        {
          "text": "Notifies the receiver that it’s about to become first responder in its ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.appkit/documentation/AppKit/NSWindow",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "becomeFirstResponder"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/becomeFirstResponder()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "becomeFirstResponder"
        }
      ],
      "role": "symbol",
      "title": "becomeFirstResponder()",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/becomefirstresponder()"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/beginGesture(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has begun a touch gesture.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "beginGesture"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/beginGesture(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "beginGestureWithEvent:"
        }
      ],
      "role": "symbol",
      "title": "beginGesture(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/begingesture(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/changeMode(with:)": {
      "abstract": [
        {
          "text": "Informs the responder that performed a double-tap on the side of an Apple Pencil.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "changeMode"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/changeMode(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "changeModeWithEvent:"
        }
      ],
      "role": "symbol",
      "title": "changeMode(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/changemode(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/contextMenuKeyDown(_:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "contextMenuKeyDown"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/contextMenuKeyDown(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "contextMenuKeyDown:"
        }
      ],
      "role": "symbol",
      "title": "contextMenuKeyDown(_:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/contextmenukeydown(_:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/cursorUpdate(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the mouse cursor has moved into a cursor rectangle.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "cursorUpdate"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/cursorUpdate(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "cursorUpdate:"
        }
      ],
      "role": "symbol",
      "title": "cursorUpdate(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/cursorupdate(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/encodeRestorableState(with:)": {
      "abstract": [
        {
          "text": "Saves the interface-related state of the responder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encodeRestorableState"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSCoder",
          "text": "NSCoder"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/encodeRestorableState(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "encodeRestorableStateWithCoder:"
        }
      ],
      "role": "symbol",
      "title": "encodeRestorableState(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/encoderestorablestate(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/encodeRestorableState(with:backgroundQueue:)": {
      "abstract": [
        {
          "text": "Saves the interface-related state of the responder to a keyed archiver either synchronously or asynchronously on the given operation queue.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encodeRestorableState"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSCoder",
          "text": "NSCoder"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "backgroundQueue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSOperationQueue",
          "text": "OperationQueue"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/encodeRestorableState(with:backgroundQueue:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "encodeRestorableStateWithCoder:backgroundQueue:"
        }
      ],
      "role": "symbol",
      "title": "encodeRestorableState(with:backgroundQueue:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/encoderestorablestate(with:backgroundqueue:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/endGesture(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has ended a touch gesture.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "endGesture"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/endGesture(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "endGestureWithEvent:"
        }
      ],
      "role": "symbol",
      "title": "endGesture(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/endgesture(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/flagsChanged(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has pressed or released a modifier key (Shift, Control, and so on).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "flagsChanged"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/flagsChanged(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "flagsChanged:"
        }
      ],
      "role": "symbol",
      "title": "flagsChanged(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/flagschanged(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/flushBufferedKeyEvents()": {
      "abstract": [
        {
          "text": "Clears any unprocessed key events when overridden by subclasses.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "flushBufferedKeyEvents"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/flushBufferedKeyEvents()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "flushBufferedKeyEvents"
        }
      ],
      "role": "symbol",
      "title": "flushBufferedKeyEvents()",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/flushbufferedkeyevents()"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/helpRequested(_:)": {
      "abstract": [
        {
          "text": "Displays context-sensitive help for the receiver if help has been registered.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "helpRequested"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/helpRequested(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "helpRequested:"
        }
      ],
      "role": "symbol",
      "title": "helpRequested(_:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/helprequested(_:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/init()": {
      "abstract": [
        {
          "text": "Creates a new responder object.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/init()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "init"
        }
      ],
      "role": "symbol",
      "title": "init()",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/init()"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/init(coder:)": {
      "abstract": [
        {
          "text": "Creates a new responder object with data in an unarchiver.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "coder"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSCoder",
          "text": "NSCoder"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/init(coder:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "initWithCoder:"
        }
      ],
      "role": "symbol",
      "title": "init(coder:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/init(coder:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/interfaceStyle": {
      "abstract": [
        {
          "text": "Returns the receiver’s interface style.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "interfaceStyle"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/interfaceStyle",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "interfaceStyle"
        }
      ],
      "role": "symbol",
      "title": "interfaceStyle",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/interfacestyle"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/interpretKeyEvents(_:)": {
      "abstract": [
        {
          "text": "Handles a series of key events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "interpretKeyEvents"
        },
        {
          "kind": "text",
          "text": "(["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/interpretKeyEvents(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "interpretKeyEvents:"
        }
      ],
      "role": "symbol",
      "title": "interpretKeyEvents(_:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/interpretkeyevents(_:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/invalidateRestorableState()": {
      "abstract": [
        {
          "text": "Marks the responder’s interface-related state as dirty.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "invalidateRestorableState"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/invalidateRestorableState()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "invalidateRestorableState"
        }
      ],
      "role": "symbol",
      "title": "invalidateRestorableState()",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/invalidaterestorablestate()"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/keyDown(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has pressed a key.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "keyDown"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/keyDown(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "keyDown:"
        }
      ],
      "role": "symbol",
      "title": "keyDown(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/keydown(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/keyUp(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has released a key.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "keyUp"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/keyUp(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "keyUp:"
        }
      ],
      "role": "symbol",
      "title": "keyUp(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/keyup(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/magnify(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has begun a pinch gesture.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "magnify"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/magnify(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "magnifyWithEvent:"
        }
      ],
      "role": "symbol",
      "title": "magnify(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/magnify(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/makeTouchBar()": {
      "abstract": [
        {
          "text": "Your custom subclass of the ",
          "type": "text"
        },
        {
          "code": "NSResponder",
          "type": "codeVoice"
        },
        {
          "text": " class should override this method to create and configure your subclass’s default ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.appkit/documentation/AppKit/NSTouchBar",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " object.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "makeTouchBar"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSTouchBar",
          "text": "NSTouchBar"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/makeTouchBar()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "makeTouchBar"
        }
      ],
      "role": "symbol",
      "title": "makeTouchBar()",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/maketouchbar()"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/menu": {
      "abstract": [
        {
          "text": "Returns the responder’s menu.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "menu"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSMenu",
          "text": "NSMenu"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/menu",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "menu"
        }
      ],
      "role": "symbol",
      "title": "menu",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/menu"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseDown(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has pressed the left mouse button.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "mouseDown"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseDown(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "mouseDown:"
        }
      ],
      "role": "symbol",
      "title": "mouseDown(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/mousedown(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseDragged(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has moved the mouse with the left button pressed.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "mouseDragged"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseDragged(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "mouseDragged:"
        }
      ],
      "role": "symbol",
      "title": "mouseDragged(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/mousedragged(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseEntered(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the cursor has entered a tracking rectangle.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "mouseEntered"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseEntered(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "mouseEntered:"
        }
      ],
      "role": "symbol",
      "title": "mouseEntered(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/mouseentered(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseExited(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the cursor has exited a tracking rectangle.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "mouseExited"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseExited(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "mouseExited:"
        }
      ],
      "role": "symbol",
      "title": "mouseExited(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/mouseexited(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseMoved(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the mouse has moved.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "mouseMoved"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseMoved(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "mouseMoved:"
        }
      ],
      "role": "symbol",
      "title": "mouseMoved(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/mousemoved(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseUp(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has released the left mouse button.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "mouseUp"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseUp(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "mouseUp:"
        }
      ],
      "role": "symbol",
      "title": "mouseUp(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/mouseup(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/newWindowForTab(_:)": {
      "abstract": [
        {
          "text": "Creates a new window to show as a tab in a tabbed window.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "newWindowForTab"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/newWindowForTab(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "newWindowForTab:"
        }
      ],
      "role": "symbol",
      "title": "newWindowForTab(_:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/newwindowfortab(_:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/nextResponder": {
      "abstract": [
        {
          "text": "The next responder after this one, or ",
          "type": "text"
        },
        {
          "code": "nil",
          "type": "codeVoice"
        },
        {
          "text": " if it has none.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "nextResponder"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSResponder",
          "text": "NSResponder"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/nextResponder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "nextResponder"
        }
      ],
      "role": "symbol",
      "title": "nextResponder",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/nextresponder"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/noResponder(for:)": {
      "abstract": [
        {
          "text": "Handles the case where an event or action message falls off the end of the responder chain.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "noResponder"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10ObjectiveC8SelectorV",
          "text": "Selector"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/noResponder(for:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "noResponderFor:"
        }
      ],
      "role": "symbol",
      "title": "noResponder(for:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/noresponder(for:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/otherMouseDown(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has pressed a mouse button other than the left or right one.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "otherMouseDown"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/otherMouseDown(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "otherMouseDown:"
        }
      ],
      "role": "symbol",
      "title": "otherMouseDown(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/othermousedown(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/otherMouseDragged(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has moved the mouse with a button other than the left or right button pressed.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "otherMouseDragged"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/otherMouseDragged(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "otherMouseDragged:"
        }
      ],
      "role": "symbol",
      "title": "otherMouseDragged(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/othermousedragged(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/otherMouseUp(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has released a mouse button other than the left or right button.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "otherMouseUp"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/otherMouseUp(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "otherMouseUp:"
        }
      ],
      "role": "symbol",
      "title": "otherMouseUp(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/othermouseup(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/performKeyEquivalent(with:)": {
      "abstract": [
        {
          "text": "Handle a key equivalent.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "performKeyEquivalent"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/performKeyEquivalent(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "performKeyEquivalent:"
        }
      ],
      "role": "symbol",
      "title": "performKeyEquivalent(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/performkeyequivalent(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/performMnemonic:": {
      "abstract": [
        {
          "text": "Handle a mnemonic.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "performMnemonic:"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/performMnemonic:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "performMnemonic:"
        }
      ],
      "role": "symbol",
      "title": "performMnemonic:",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/performmnemonic:"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/performTextFinderAction(_:)": {
      "abstract": [
        {
          "text": "Performs all find oriented actions.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "performTextFinderAction"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/performTextFinderAction(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "performTextFinderAction:"
        }
      ],
      "role": "symbol",
      "title": "performTextFinderAction(_:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/performtextfinderaction(_:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/presentError(_:)": {
      "abstract": [
        {
          "text": "Presents an error alert to the user as an application-modal dialog.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "presentError"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/presentError(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "presentError:"
        }
      ],
      "role": "symbol",
      "title": "presentError(_:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/presenterror(_:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/presentError(_:modalFor:delegate:didPresent:contextInfo:)": {
      "abstract": [
        {
          "text": "Presents an error alert to the user as a document-modal sheet attached to document window.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "presentError"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "modalFor"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSWindow",
          "text": "NSWindow"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "delegate"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "didPresent"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10ObjectiveC8SelectorV",
          "text": "Selector"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "contextInfo"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sv",
          "text": "UnsafeMutableRawPointer"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/presentError(_:modalFor:delegate:didPresent:contextInfo:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "presentError:modalForWindow:delegate:didPresentSelector:contextInfo:"
        }
      ],
      "role": "symbol",
      "title": "presentError(_:modalFor:delegate:didPresent:contextInfo:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/presenterror(_:modalfor:delegate:didpresent:contextinfo:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/pressureChange(with:)": {
      "abstract": [
        {
          "text": "Indicates a pressure change as the result of a user input event on a system that supports pressure sensitivity.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "pressureChange"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/pressureChange(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "pressureChangeWithEvent:"
        }
      ],
      "role": "symbol",
      "title": "pressureChange(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/pressurechange(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/quickLook(with:)": {
      "abstract": [
        {
          "text": "Performs a Quick Look on the content at the location specified by the supplied event.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "quickLook"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/quickLook(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "quickLookWithEvent:"
        }
      ],
      "role": "symbol",
      "title": "quickLook(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/quicklook(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/resignFirstResponder()": {
      "abstract": [
        {
          "text": "Notifies the receiver that it’s been asked to relinquish its status as first responder in its window.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "resignFirstResponder"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/resignFirstResponder()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "resignFirstResponder"
        }
      ],
      "role": "symbol",
      "title": "resignFirstResponder()",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/resignfirstresponder()"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/restorableStateKeyPaths": {
      "abstract": [
        {
          "text": "Returns an array of key paths representing the restorable attributes of the responder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "restorableStateKeyPaths"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/restorableStateKeyPaths",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "restorableStateKeyPaths"
        }
      ],
      "role": "symbol",
      "title": "restorableStateKeyPaths",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/restorablestatekeypaths"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/restoreState(with:)": {
      "abstract": [
        {
          "text": "Restores the interface-related state of the responder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "restoreState"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSCoder",
          "text": "NSCoder"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/restoreState(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "restoreStateWithCoder:"
        }
      ],
      "role": "symbol",
      "title": "restoreState(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/restorestate(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/rightMouseDown(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has pressed the right mouse button.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "rightMouseDown"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/rightMouseDown(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "rightMouseDown:"
        }
      ],
      "role": "symbol",
      "title": "rightMouseDown(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/rightmousedown(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/rightMouseDragged(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has moved the mouse with the right button pressed.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "rightMouseDragged"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/rightMouseDragged(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "rightMouseDragged:"
        }
      ],
      "role": "symbol",
      "title": "rightMouseDragged(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/rightmousedragged(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/rightMouseUp(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has released the right mouse button.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "rightMouseUp"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/rightMouseUp(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "rightMouseUp:"
        }
      ],
      "role": "symbol",
      "title": "rightMouseUp(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/rightmouseup(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/rotate(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has begun a rotation gesture.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "rotate"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/rotate(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "rotateWithEvent:"
        }
      ],
      "role": "symbol",
      "title": "rotate(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/rotate(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/scrollWheel(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the mouse’s scroll wheel has moved.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "scrollWheel"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/scrollWheel(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "scrollWheel:"
        }
      ],
      "role": "symbol",
      "title": "scrollWheel(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/scrollwheel(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/setInterfaceStyle:": {
      "abstract": [
        {
          "text": "Sets the receiver’s style to the style specified by ",
          "type": "text"
        },
        {
          "code": "interfaceStyle",
          "type": "codeVoice"
        },
        {
          "text": ", such as ",
          "type": "text"
        },
        {
          "code": "NSMacintoshInterfaceStyle",
          "type": "codeVoice"
        },
        {
          "text": " or ",
          "type": "text"
        },
        {
          "code": "NSWindows95InterfaceStyle",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "setInterfaceStyle:"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/setInterfaceStyle:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setInterfaceStyle:"
        }
      ],
      "role": "symbol",
      "title": "setInterfaceStyle:",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/setinterfacestyle:"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/shouldBeTreatedAsInkEvent(_:)": {
      "abstract": [
        {
          "text": "Indicates whether a pen-down event should be treated as an ink event.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "shouldBeTreatedAsInkEvent"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/shouldBeTreatedAsInkEvent(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "shouldBeTreatedAsInkEvent:"
        }
      ],
      "role": "symbol",
      "title": "shouldBeTreatedAsInkEvent(_:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/shouldbetreatedasinkevent(_:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/showWritingTools(_:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "showWritingTools"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "?)"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/showWritingTools(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "showWritingTools:"
        }
      ],
      "role": "symbol",
      "title": "showWritingTools(_:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/showwritingtools(_:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/smartMagnify(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user performed a smart zoom gesture.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "smartMagnify"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/smartMagnify(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "smartMagnifyWithEvent:"
        }
      ],
      "role": "symbol",
      "title": "smartMagnify(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/smartmagnify(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/supplementalTarget(forAction:sender:)": {
      "abstract": [
        {
          "text": "Finds a target for an action method.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "supplementalTarget"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "forAction"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10ObjectiveC8SelectorV",
          "text": "Selector"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "sender"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/supplementalTarget(forAction:sender:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "supplementalTargetForAction:sender:"
        }
      ],
      "role": "symbol",
      "title": "supplementalTarget(forAction:sender:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/supplementaltarget(foraction:sender:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/swipe(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that the user has begun a swipe gesture.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "swipe"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/swipe(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "swipeWithEvent:"
        }
      ],
      "role": "symbol",
      "title": "swipe(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/swipe(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/tabletPoint(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that a tablet-point event has occurred.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "tabletPoint"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/tabletPoint(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tabletPoint:"
        }
      ],
      "role": "symbol",
      "title": "tabletPoint(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/tabletpoint(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/tabletProximity(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that a tablet-proximity event has occurred.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "tabletProximity"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/tabletProximity(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tabletProximity:"
        }
      ],
      "role": "symbol",
      "title": "tabletProximity(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/tabletproximity(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchBar": {
      "abstract": [
        {
          "text": "The ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.appkit/documentation/AppKit/NSTouchBar",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " object associated with the responder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "touchBar"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSTouchBar",
          "text": "NSTouchBar"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchBar",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "touchBar"
        }
      ],
      "role": "symbol",
      "title": "touchBar",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/touchbar"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesBegan(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that new set of touches has been recognized.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "touchesBegan"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesBegan(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "touchesBeganWithEvent:"
        }
      ],
      "role": "symbol",
      "title": "touchesBegan(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/touchesbegan(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesCancelled(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that tracking of touches has been cancelled for any reason.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "touchesCancelled"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesCancelled(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "touchesCancelledWithEvent:"
        }
      ],
      "role": "symbol",
      "title": "touchesCancelled(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/touchescancelled(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesEnded(with:)": {
      "abstract": [
        {
          "text": "Returns that a set of touches have been removed.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "touchesEnded"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesEnded(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "touchesEndedWithEvent:"
        }
      ],
      "role": "symbol",
      "title": "touchesEnded(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/touchesended(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesMoved(with:)": {
      "abstract": [
        {
          "text": "Informs the receiver that one or more touches has moved.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "touchesMoved"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesMoved(with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "touchesMovedWithEvent:"
        }
      ],
      "role": "symbol",
      "title": "touchesMoved(with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/touchesmoved(with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/tryToPerform(_:with:)": {
      "abstract": [
        {
          "text": "Attempts to perform the method indicated by an action with a specified argument.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "tryToPerform"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10ObjectiveC8SelectorV",
          "text": "Selector"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "with"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/tryToPerform(_:with:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "tryToPerform:with:"
        }
      ],
      "role": "symbol",
      "title": "tryToPerform(_:with:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/trytoperform(_:with:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/undoManager": {
      "abstract": [
        {
          "text": "The undo manager for this responder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "undoManager"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSUndoManager",
          "text": "UndoManager"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/undoManager",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "undoManager"
        }
      ],
      "role": "symbol",
      "title": "undoManager",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/undomanager"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/updateUserActivityState(_:)": {
      "abstract": [
        {
          "text": "Updates the state of the given user activity.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "updateUserActivityState"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSUserActivity",
          "text": "NSUserActivity"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/updateUserActivityState(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "updateUserActivityState:"
        }
      ],
      "role": "symbol",
      "title": "updateUserActivityState(_:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/updateuseractivitystate(_:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/userActivity": {
      "abstract": [
        {
          "text": "An object encapsulating a user activity supported by this responder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "userActivity"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSUserActivity",
          "text": "NSUserActivity"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/userActivity",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "userActivity"
        }
      ],
      "role": "symbol",
      "title": "userActivity",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/useractivity"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/validRequestor(forSendType:returnType:)": {
      "abstract": [
        {
          "text": "Overridden by subclasses to determine what services are available.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "validRequestor"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "forSendType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSPasteboard",
          "text": "NSPasteboard"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@NSPasteboardType",
          "text": "PasteboardType"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "returnType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSPasteboard",
          "text": "NSPasteboard"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@NSPasteboardType",
          "text": "PasteboardType"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/validRequestor(forSendType:returnType:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "validRequestorForSendType:returnType:"
        }
      ],
      "role": "symbol",
      "title": "validRequestor(forSendType:returnType:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/validrequestor(forsendtype:returntype:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/validateProposedFirstResponder(_:for:)": {
      "abstract": [
        {
          "text": "Allows controls to determine when they should become first responder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "validateProposedFirstResponder"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSResponder",
          "text": "NSResponder"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/validateProposedFirstResponder(_:for:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "validateProposedFirstResponder:forEvent:"
        }
      ],
      "role": "symbol",
      "title": "validateProposedFirstResponder(_:for:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/validateproposedfirstresponder(_:for:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/wantsForwardedScrollEvents(for:)": {
      "abstract": [
        {
          "text": "Returns whether to forward elastic scrolling gesture events up the responder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "wantsForwardedScrollEvents"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@NSEventGestureAxis",
          "text": "GestureAxis"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/wantsForwardedScrollEvents(for:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "wantsForwardedScrollEventsForAxis:"
        }
      ],
      "role": "symbol",
      "title": "wantsForwardedScrollEvents(for:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/wantsforwardedscrollevents(for:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/wantsScrollEventsForSwipeTracking(on:)": {
      "abstract": [
        {
          "text": "Implement this method to track gesture scroll events such as a swipe.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "wantsScrollEventsForSwipeTracking"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "on"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSEvent",
          "text": "NSEvent"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@NSEventGestureAxis",
          "text": "GestureAxis"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/wantsScrollEventsForSwipeTracking(on:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "wantsScrollEventsForSwipeTrackingOnAxis:"
        }
      ],
      "role": "symbol",
      "title": "wantsScrollEventsForSwipeTracking(on:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/wantsscrolleventsforswipetracking(on:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSResponder/willPresentError(_:)": {
      "abstract": [
        {
          "text": "Returns a custom version of the supplied error object that’s more suitable for presentation in alert sheets and dialogs.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "willPresentError"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ") -> any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSResponder/willPresentError(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "willPresentError:"
        }
      ],
      "role": "symbol",
      "title": "willPresentError(_:)",
      "type": "topic",
      "url": "/documentation/appkit/nsresponder/willpresenterror(_:)"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSStandardKeyBindingResponding": {
      "abstract": [
        {
          "text": "Methods that responder subclasses implement to support key binding commands, such as inserting tabs and newlines, or moving the insertion point.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSStandardKeyBindingResponding"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSStandardKeyBindingResponding",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSStandardKeyBindingResponding"
        }
      ],
      "role": "symbol",
      "title": "NSStandardKeyBindingResponding",
      "type": "topic",
      "url": "/documentation/appkit/nsstandardkeybindingresponding"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSTouchBar": {
      "abstract": [
        {
          "text": "An object that provides dynamic contextual controls in the Touch Bar of supported models of MacBook Pro.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSTouchBar"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSTouchBar",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSTouchBar"
        }
      ],
      "role": "symbol",
      "title": "NSTouchBar",
      "type": "topic",
      "url": "/documentation/appkit/nstouchbar"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSTouchBarProvider": {
      "abstract": [
        {
          "text": "A protocol that an object adopts to create a bar object in your app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSTouchBarProvider"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSTouchBarProvider",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSTouchBarProvider"
        }
      ],
      "role": "symbol",
      "title": "NSTouchBarProvider",
      "type": "topic",
      "url": "/documentation/appkit/nstouchbarprovider"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSUserActivityRestoring": {
      "abstract": [
        {
          "text": "A protocol that marks classes to restore the state of your app to continue a user activity.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSUserActivityRestoring"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSUserActivityRestoring",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSUserActivityRestoring"
        }
      ],
      "role": "symbol",
      "title": "NSUserActivityRestoring",
      "type": "topic",
      "url": "/documentation/appkit/nsuseractivityrestoring"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSView": {
      "abstract": [
        {
          "text": "The infrastructure for drawing, printing, and handling events in an app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSView"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSView"
        }
      ],
      "role": "symbol",
      "title": "NSView",
      "type": "topic",
      "url": "/documentation/appkit/nsview"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSViewController": {
      "abstract": [
        {
          "text": "A controller that manages a view, typically loaded from a nib file.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSViewController"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSViewController",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSViewController"
        }
      ],
      "role": "symbol",
      "title": "NSViewController",
      "type": "topic",
      "url": "/documentation/appkit/nsviewcontroller"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSWindow": {
      "abstract": [
        {
          "text": "A window that an app displays on the screen.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSWindow"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSWindow",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSWindow"
        }
      ],
      "role": "symbol",
      "title": "NSWindow",
      "type": "topic",
      "url": "/documentation/appkit/nswindow"
    },
    "doc://com.apple.appkit/documentation/AppKit/NSWindowController": {
      "abstract": [
        {
          "text": "A controller that manages a window, usually a window stored in a nib file.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "NSWindowController"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/NSWindowController",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "NSWindowController"
        }
      ],
      "role": "symbol",
      "title": "NSWindowController",
      "type": "topic",
      "url": "/documentation/appkit/nswindowcontroller"
    },
    "doc://com.apple.appkit/documentation/AppKit/action-messages": {
      "abstract": [
        {
          "text": "Implement action messages in your first responders to handle common tasks.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.appkit/documentation/AppKit/action-messages",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Action Messages",
      "type": "topic",
      "url": "/documentation/appkit/action-messages"
    },
    "doc://com.apple.documentation/documentation/foundation/nserror": {
      "abstract": [
        {
          "text": "Information about an error condition including a domain, a domain-specific error code, and application-specific information.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSError"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nserror",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSError",
      "type": "topic",
      "url": "/documentation/foundation/nserror"
    },
    "doc://com.apple.documentation/documentation/foundation/nserror/nserrorrecoveryattempting": {
      "abstract": [
        {
          "text": "A set of methods that provide options to recover from an error.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/nserror/nserrorrecoveryattempting",
      "kind": "article",
      "role": "article",
      "title": "NSErrorRecoveryAttempting",
      "type": "topic",
      "url": "/documentation/foundation/nserror/nserrorrecoveryattempting"
    },
    "doc://com.apple.documentation/documentation/objectivec/nsobject/1571947-dealloc": {
      "abstract": [
        {
          "text": "Deallocates the memory occupied by the receiver.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/objectivec/nsobject/1571947-dealloc",
      "kind": "symbol",
      "role": "symbol",
      "title": "dealloc",
      "type": "topic",
      "url": "/documentation/objectivec/nsobject/1571947-dealloc"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/c:objc(cs)NSObject": {
      "abstract": [
        {
          "text": "The root class of most Objective-C class hierarchies, from which subclasses inherit a basic interface to the runtime system and the ability to behave as Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSObject"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObject",
      "type": "topic",
      "url": "/documentation/objectivec/nsobject"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding": {
      "abstract": [
        {
          "text": "A protocol that enables an object to be encoded and decoded for archiving and distribution.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSCoding"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSCoding",
      "type": "topic",
      "url": "/documentation/foundation/nscoding"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSObject": {
      "abstract": [
        {
          "text": "The group of methods that are fundamental to all Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObjectProtocol",
      "type": "topic",
      "url": "/documentation/objectivec/nsobjectprotocol"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:ScM": {
      "abstract": [
        {
          "text": "A singleton actor whose executor is equivalent to the main dispatch queue.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@globalActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "final"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "actor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MainActor"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:ScM",
      "kind": "symbol",
      "role": "symbol",
      "title": "MainActor",
      "type": "topic",
      "url": "/documentation/Swift/MainActor"
    },
    "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomDebugStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s7CVarArgP": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as elements of a C `va_list`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s7CVarArgP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/Swift/CVarArg"
    },
    "doc://com.externally.resolved.symbol/s:s8CopyableP": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8CopyableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/Swift/Copyable"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    },
    {
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSApplication",
        "doc://com.apple.appkit/documentation/AppKit/NSDrawer",
        "doc://com.apple.appkit/documentation/AppKit/NSPopover",
        "doc://com.apple.appkit/documentation/AppKit/NSView",
        "doc://com.apple.appkit/documentation/AppKit/NSViewController",
        "doc://com.apple.appkit/documentation/AppKit/NSWindow",
        "doc://com.apple.appkit/documentation/AppKit/NSWindowController"
      ],
      "kind": "relationships",
      "title": "Inherited By",
      "type": "inheritedBy"
    },
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s7CVarArgP",
        "doc://com.externally.resolved.symbol/s:s8CopyableP",
        "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
        "doc://com.apple.appkit/documentation/AppKit/NSStandardKeyBindingResponding",
        "doc://com.apple.appkit/documentation/AppKit/NSTouchBarProvider",
        "doc://com.apple.appkit/documentation/AppKit/NSUserActivityRestoring",
        "doc://com.externally.resolved.symbol/s:s8SendableP"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "topicSections": [
    {
      "anchor": "Changing-the-First-Responder",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/acceptsFirstResponder",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/becomeFirstResponder()",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/resignFirstResponder()",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/validateProposedFirstResponder(_:for:)"
      ],
      "title": "Changing the First Responder"
    },
    {
      "anchor": "Managing-the-Next-Responder",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/nextResponder"
      ],
      "title": "Managing the Next Responder"
    },
    {
      "anchor": "Responding-to-Mouse-Events",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseDown(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseDragged(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseUp(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseMoved(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseEntered(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseExited(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/rightMouseDown(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/rightMouseDragged(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/rightMouseUp(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/otherMouseDown(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/otherMouseDragged(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/otherMouseUp(with:)"
      ],
      "title": "Responding to Mouse Events"
    },
    {
      "anchor": "Responding-to-Key-Events",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/keyDown(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/keyUp(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/interpretKeyEvents(_:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/performKeyEquivalent(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/flushBufferedKeyEvents()"
      ],
      "title": "Responding to Key Events"
    },
    {
      "anchor": "Responding-to-Pressure-Changes",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/pressureChange(with:)"
      ],
      "title": "Responding to Pressure Changes"
    },
    {
      "anchor": "Responding-to-Other-Kinds-of-Events",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/cursorUpdate(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/flagsChanged(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/tabletPoint(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/tabletProximity(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/helpRequested(_:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/scrollWheel(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/quickLook(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/changeMode(with:)"
      ],
      "title": "Responding to Other Kinds of Events"
    },
    {
      "anchor": "Responding-to-Action-Messages",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/supplementalTarget(forAction:sender:)",
        "doc://com.apple.appkit/documentation/AppKit/NSStandardKeyBindingResponding",
        "doc://com.apple.appkit/documentation/AppKit/action-messages"
      ],
      "title": "Responding to Action Messages"
    },
    {
      "anchor": "Handling-Window-Restoration",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/allowedClasses(forRestorableStateKeyPath:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/encodeRestorableState(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/encodeRestorableState(with:backgroundQueue:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/restoreState(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/restorableStateKeyPaths",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/invalidateRestorableState()"
      ],
      "title": "Handling Window Restoration"
    },
    {
      "anchor": "Supporting-User-Activities",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/userActivity",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/updateUserActivityState(_:)"
      ],
      "title": "Supporting User Activities"
    },
    {
      "anchor": "Presenting-and-Customizing-Error-Information",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/presentError(_:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/presentError(_:modalFor:delegate:didPresent:contextInfo:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/willPresentError(_:)"
      ],
      "title": "Presenting and Customizing Error Information"
    },
    {
      "anchor": "Dispatching-Messages",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/tryToPerform(_:with:)"
      ],
      "title": "Dispatching Messages"
    },
    {
      "anchor": "Managing-a-Responders-Menu",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/menu"
      ],
      "title": "Managing a Responder’s Menu"
    },
    {
      "anchor": "Updating-the-Services-Menu",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/validRequestor(forSendType:returnType:)"
      ],
      "title": "Updating the Services Menu"
    },
    {
      "anchor": "Getting-the-Undo-Manager",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/undoManager"
      ],
      "title": "Getting the Undo Manager"
    },
    {
      "anchor": "Testing-Events",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/shouldBeTreatedAsInkEvent(_:)"
      ],
      "title": "Testing Events"
    },
    {
      "anchor": "Terminating-the-Responder-Chain",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/noResponder(for:)"
      ],
      "title": "Terminating the Responder Chain"
    },
    {
      "anchor": "Touch-and-Gesture-Events",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/beginGesture(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/endGesture(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/magnify(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/rotate(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/swipe(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesBegan(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesMoved(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesCancelled(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesEnded(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/wantsForwardedScrollEvents(for:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/smartMagnify(with:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/wantsScrollEventsForSwipeTracking(on:)",
        "doc://com.apple.appkit/documentation/AppKit/NSEvent/GestureAxis"
      ],
      "title": "Touch and Gesture Events"
    },
    {
      "anchor": "Supporting-the-Touch-Bar",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchBar",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/makeTouchBar()"
      ],
      "title": "Supporting the Touch Bar"
    },
    {
      "anchor": "Performing-Text-Find-Actions",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/performTextFinderAction(_:)"
      ],
      "title": "Performing Text Find Actions"
    },
    {
      "anchor": "Supporting-Tabbed-Windows",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/newWindowForTab(_:)"
      ],
      "title": "Supporting Tabbed Windows"
    },
    {
      "anchor": "Creating-Responders",
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/init()",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/init(coder:)"
      ],
      "title": "Creating Responders"
    },
    {
      "anchor": "Instance-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/contextMenuKeyDown(_:)",
        "doc://com.apple.appkit/documentation/AppKit/NSResponder/showWritingTools(_:)"
      ],
      "title": "Instance Methods"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "name": "macOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Class"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "NSResponder"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "class"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSResponder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSResponder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.appkit/documentation/AppKit"
              ]
            ]
          }
        },
        {
          "op": "replace",
          "path": "/topicSections",
          "value": [
            {
              "anchor": "Changing-the-First-Responder",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/acceptsFirstResponder",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/becomeFirstResponder()",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/resignFirstResponder()",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/validateProposedFirstResponder(_:for:)"
              ],
              "title": "Changing the First Responder"
            },
            {
              "anchor": "Managing-the-Next-Responder",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/nextResponder"
              ],
              "title": "Managing the Next Responder"
            },
            {
              "anchor": "Responding-to-Mouse-Events",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseDown(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseDragged(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseUp(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseMoved(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseEntered(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/mouseExited(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/rightMouseDown(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/rightMouseDragged(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/rightMouseUp(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/otherMouseDown(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/otherMouseDragged(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/otherMouseUp(with:)"
              ],
              "title": "Responding to Mouse Events"
            },
            {
              "anchor": "Responding-to-Key-Events",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/keyDown(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/keyUp(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/interpretKeyEvents(_:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/performKeyEquivalent(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/performMnemonic:",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/flushBufferedKeyEvents()"
              ],
              "title": "Responding to Key Events"
            },
            {
              "anchor": "Responding-to-Pressure-Changes",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/pressureChange(with:)"
              ],
              "title": "Responding to Pressure Changes"
            },
            {
              "anchor": "Responding-to-Other-Kinds-of-Events",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/cursorUpdate(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/flagsChanged(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/tabletPoint(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/tabletProximity(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/helpRequested(_:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/scrollWheel(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/quickLook(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/changeMode(with:)"
              ],
              "title": "Responding to Other Kinds of Events"
            },
            {
              "anchor": "Responding-to-Action-Messages",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/supplementalTarget(forAction:sender:)",
                "doc://com.apple.appkit/documentation/AppKit/NSStandardKeyBindingResponding",
                "doc://com.apple.appkit/documentation/AppKit/action-messages"
              ],
              "title": "Responding to Action Messages"
            },
            {
              "anchor": "Handling-Window-Restoration",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/allowedClasses(forRestorableStateKeyPath:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/encodeRestorableState(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/encodeRestorableState(with:backgroundQueue:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/restoreState(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/restorableStateKeyPaths",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/invalidateRestorableState()"
              ],
              "title": "Handling Window Restoration"
            },
            {
              "anchor": "Supporting-User-Activities",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/userActivity",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/updateUserActivityState(_:)"
              ],
              "title": "Supporting User Activities"
            },
            {
              "anchor": "Presenting-and-Customizing-Error-Information",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/presentError(_:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/presentError(_:modalFor:delegate:didPresent:contextInfo:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/willPresentError(_:)"
              ],
              "title": "Presenting and Customizing Error Information"
            },
            {
              "anchor": "Dispatching-Messages",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/tryToPerform(_:with:)"
              ],
              "title": "Dispatching Messages"
            },
            {
              "anchor": "Managing-a-Responders-Menu",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/menu"
              ],
              "title": "Managing a Responder’s Menu"
            },
            {
              "anchor": "Updating-the-Services-Menu",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/validRequestor(forSendType:returnType:)"
              ],
              "title": "Updating the Services Menu"
            },
            {
              "anchor": "Getting-the-Undo-Manager",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/undoManager"
              ],
              "title": "Getting the Undo Manager"
            },
            {
              "anchor": "Testing-Events",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/shouldBeTreatedAsInkEvent(_:)"
              ],
              "title": "Testing Events"
            },
            {
              "anchor": "Terminating-the-Responder-Chain",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/noResponder(for:)"
              ],
              "title": "Terminating the Responder Chain"
            },
            {
              "anchor": "Setting-the-Interface-Style",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/setInterfaceStyle:",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/interfaceStyle",
                "doc://com.apple.appkit/documentation/AppKit/NSInterfaceStyleDefault"
              ],
              "title": "Setting the Interface Style"
            },
            {
              "anchor": "Touch-and-Gesture-Events",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/beginGesture(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/endGesture(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/magnify(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/rotate(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/swipe(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesBegan(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesMoved(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesCancelled(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchesEnded(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/wantsForwardedScrollEvents(for:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/smartMagnify(with:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/wantsScrollEventsForSwipeTracking(on:)",
                "doc://com.apple.appkit/documentation/AppKit/NSEvent/GestureAxis"
              ],
              "title": "Touch and Gesture Events"
            },
            {
              "anchor": "Supporting-the-Touch-Bar",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/touchBar",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/makeTouchBar()"
              ],
              "title": "Supporting the Touch Bar"
            },
            {
              "anchor": "Performing-Text-Find-Actions",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/performTextFinderAction(_:)"
              ],
              "title": "Performing Text Find Actions"
            },
            {
              "anchor": "Supporting-Tabbed-Windows",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/newWindowForTab(_:)"
              ],
              "title": "Supporting Tabbed Windows"
            },
            {
              "anchor": "Creating-Responders",
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/init()",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/init(coder:)"
              ],
              "title": "Creating Responders"
            },
            {
              "anchor": "Instance-Methods",
              "generated": true,
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/contextMenuKeyDown(_:)",
                "doc://com.apple.appkit/documentation/AppKit/NSResponder/showWritingTools(_:)"
              ],
              "title": "Instance Methods"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/relationshipsSections",
          "value": [
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
              ],
              "kind": "relationships",
              "title": "Inherits From",
              "type": "inheritsFrom"
            },
            {
              "identifiers": [
                "doc://com.apple.appkit/documentation/AppKit/NSApplication",
                "doc://com.apple.appkit/documentation/AppKit/NSDrawer",
                "doc://com.apple.appkit/documentation/AppKit/NSPopover",
                "doc://com.apple.appkit/documentation/AppKit/NSView",
                "doc://com.apple.appkit/documentation/AppKit/NSViewController",
                "doc://com.apple.appkit/documentation/AppKit/NSWindow",
                "doc://com.apple.appkit/documentation/AppKit/NSWindowController"
              ],
              "kind": "relationships",
              "title": "Inherited By",
              "type": "inheritedBy"
            },
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(pl)NSCoding",
                "doc://com.apple.appkit/documentation/AppKit/NSStandardKeyBindingResponding",
                "doc://com.apple.appkit/documentation/AppKit/NSTouchBarProvider",
                "doc://com.apple.appkit/documentation/AppKit/NSUserActivityRestoring"
              ],
              "kind": "relationships",
              "title": "Conforms To",
              "type": "conformsTo"
            }
          ]
        },
        {
          "op": "add",
          "path": "/seeAlsoSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "Mac Catalyst",
                  "macOS"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "@interface"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "NSResponder"
                  },
                  {
                    "kind": "text",
                    "text": " : "
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(cs)NSObject",
                    "text": "NSObject"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1allowedClasses(forRestorableStateKeyPath:)/title",
          "value": "allowedClassesForRestorableStateKeyPath:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1allowedClasses(forRestorableStateKeyPath:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "allowedClassesForRestorableStateKeyPath:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1quickLook(with:)/title",
          "value": "quickLookWithEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1quickLook(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "quickLookWithEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1becomeFirstResponder()/title",
          "value": "becomeFirstResponder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1becomeFirstResponder()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "becomeFirstResponder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1restorableStateKeyPaths/title",
          "value": "restorableStateKeyPaths"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1restorableStateKeyPaths/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "restorableStateKeyPaths"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1validRequestor(forSendType:returnType:)/title",
          "value": "validRequestorForSendType:returnType:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1validRequestor(forSendType:returnType:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "validRequestorForSendType:returnType:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSStandardKeyBindingResponding/title",
          "value": "NSStandardKeyBindingResponding"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSStandardKeyBindingResponding/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSStandardKeyBindingResponding"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSStandardKeyBindingResponding/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSStandardKeyBindingResponding"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSTouchBarProvider/title",
          "value": "NSTouchBarProvider"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSTouchBarProvider/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSTouchBarProvider"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSTouchBarProvider/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSTouchBarProvider"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1touchesBegan(with:)/title",
          "value": "touchesBeganWithEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1touchesBegan(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "touchesBeganWithEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSPopover/title",
          "value": "NSPopover"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSPopover/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSPopover"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSPopover/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSPopover"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1restoreState(with:)/title",
          "value": "restoreStateWithCoder:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1restoreState(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "restoreStateWithCoder:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1flagsChanged(with:)/title",
          "value": "flagsChanged:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1flagsChanged(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "flagsChanged:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1menu/title",
          "value": "menu"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1menu/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "menu"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1smartMagnify(with:)/title",
          "value": "smartMagnifyWithEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1smartMagnify(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "smartMagnifyWithEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1userActivity/title",
          "value": "userActivity"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1userActivity/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "userActivity"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1scrollWheel(with:)/title",
          "value": "scrollWheel:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1scrollWheel(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "scrollWheel:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSEvent~1GestureAxis/title",
          "value": "NSEventGestureAxis"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSEvent~1GestureAxis/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSEventGestureAxis"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSEvent~1GestureAxis/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSEventGestureAxis"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1otherMouseDown(with:)/title",
          "value": "otherMouseDown:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1otherMouseDown(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "otherMouseDown:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1nextResponder/title",
          "value": "nextResponder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1nextResponder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "nextResponder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1performKeyEquivalent(with:)/title",
          "value": "performKeyEquivalent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1performKeyEquivalent(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "performKeyEquivalent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1acceptsFirstResponder/title",
          "value": "acceptsFirstResponder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1acceptsFirstResponder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "acceptsFirstResponder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1presentError(_:)/title",
          "value": "presentError:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1presentError(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "presentError:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1swipe(with:)/title",
          "value": "swipeWithEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1swipe(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "swipeWithEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1mouseMoved(with:)/title",
          "value": "mouseMoved:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1mouseMoved(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "mouseMoved:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1touchesCancelled(with:)/title",
          "value": "touchesCancelledWithEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1touchesCancelled(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "touchesCancelledWithEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1validateProposedFirstResponder(_:for:)/title",
          "value": "validateProposedFirstResponder:forEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1validateProposedFirstResponder(_:for:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "validateProposedFirstResponder:forEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1interpretKeyEvents(_:)/title",
          "value": "interpretKeyEvents:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1interpretKeyEvents(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "interpretKeyEvents:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1wantsForwardedScrollEvents(for:)/title",
          "value": "wantsForwardedScrollEventsForAxis:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1wantsForwardedScrollEvents(for:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "wantsForwardedScrollEventsForAxis:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1wantsScrollEventsForSwipeTracking(on:)/title",
          "value": "wantsScrollEventsForSwipeTrackingOnAxis:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1wantsScrollEventsForSwipeTracking(on:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "wantsScrollEventsForSwipeTrackingOnAxis:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1cursorUpdate(with:)/title",
          "value": "cursorUpdate:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1cursorUpdate(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "cursorUpdate:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1shouldBeTreatedAsInkEvent(_:)/title",
          "value": "shouldBeTreatedAsInkEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1shouldBeTreatedAsInkEvent(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "shouldBeTreatedAsInkEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSViewController/title",
          "value": "NSViewController"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSViewController/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSViewController/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSViewController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1updateUserActivityState(_:)/title",
          "value": "updateUserActivityState:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1updateUserActivityState(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "updateUserActivityState:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1rightMouseUp(with:)/title",
          "value": "rightMouseUp:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1rightMouseUp(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "rightMouseUp:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1changeMode(with:)/title",
          "value": "changeModeWithEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1changeMode(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "changeModeWithEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1touchesEnded(with:)/title",
          "value": "touchesEndedWithEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1touchesEnded(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "touchesEndedWithEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1keyUp(with:)/title",
          "value": "keyUp:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1keyUp(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "keyUp:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1flushBufferedKeyEvents()/title",
          "value": "flushBufferedKeyEvents"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1flushBufferedKeyEvents()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "flushBufferedKeyEvents"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1otherMouseDragged(with:)/title",
          "value": "otherMouseDragged:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1otherMouseDragged(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "otherMouseDragged:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSUserActivityRestoring/title",
          "value": "NSUserActivityRestoring"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSUserActivityRestoring/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSUserActivityRestoring"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSUserActivityRestoring/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSUserActivityRestoring"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1newWindowForTab(_:)/title",
          "value": "newWindowForTab:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1newWindowForTab(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "newWindowForTab:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSWindowController/title",
          "value": "NSWindowController"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSWindowController/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSWindowController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSWindowController/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSWindowController"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1tabletProximity(with:)/title",
          "value": "tabletProximity:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1tabletProximity(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "tabletProximity:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSObject/title",
          "value": "NSObject"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1showWritingTools(_:)/title",
          "value": "showWritingTools:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1showWritingTools(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "showWritingTools:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1helpRequested(_:)/title",
          "value": "helpRequested:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1helpRequested(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "helpRequested:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder/title",
          "value": "NSResponder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSResponder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSResponder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1supplementalTarget(forAction:sender:)/title",
          "value": "supplementalTargetForAction:sender:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1supplementalTarget(forAction:sender:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "supplementalTargetForAction:sender:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1mouseExited(with:)/title",
          "value": "mouseExited:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1mouseExited(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "mouseExited:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1magnify(with:)/title",
          "value": "magnifyWithEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1magnify(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "magnifyWithEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1mouseDragged(with:)/title",
          "value": "mouseDragged:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1mouseDragged(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "mouseDragged:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1resignFirstResponder()/title",
          "value": "resignFirstResponder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1resignFirstResponder()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "resignFirstResponder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1tabletPoint(with:)/title",
          "value": "tabletPoint:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1tabletPoint(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "tabletPoint:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1mouseDown(with:)/title",
          "value": "mouseDown:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1mouseDown(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "mouseDown:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1tryToPerform(_:with:)/title",
          "value": "tryToPerform:with:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1tryToPerform(_:with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "tryToPerform:with:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSApplication/title",
          "value": "NSApplication"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSApplication/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSApplication"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSApplication/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSApplication"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1keyDown(with:)/title",
          "value": "keyDown:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1keyDown(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "keyDown:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1mouseUp(with:)/title",
          "value": "mouseUp:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1mouseUp(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "mouseUp:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1noResponder(for:)/title",
          "value": "noResponderFor:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1noResponder(for:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "noResponderFor:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1touchBar/title",
          "value": "touchBar"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1touchBar/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "touchBar"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1invalidateRestorableState()/title",
          "value": "invalidateRestorableState"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1invalidateRestorableState()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "invalidateRestorableState"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1endGesture(with:)/title",
          "value": "endGestureWithEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1endGesture(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "endGestureWithEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1beginGesture(with:)/title",
          "value": "beginGestureWithEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1beginGesture(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "beginGestureWithEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1touchesMoved(with:)/title",
          "value": "touchesMovedWithEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1touchesMoved(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "touchesMovedWithEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1contextMenuKeyDown(_:)/title",
          "value": "contextMenuKeyDown:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1contextMenuKeyDown(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "contextMenuKeyDown:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1rotate(with:)/title",
          "value": "rotateWithEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1rotate(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "rotateWithEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1otherMouseUp(with:)/title",
          "value": "otherMouseUp:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1otherMouseUp(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "otherMouseUp:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSDrawer/title",
          "value": "NSDrawer"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSDrawer/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSDrawer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSDrawer/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSDrawer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSTouchBar/title",
          "value": "NSTouchBar"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSTouchBar/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSTouchBar"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSTouchBar/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSTouchBar"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1encodeRestorableState(with:)/title",
          "value": "encodeRestorableStateWithCoder:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1encodeRestorableState(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "encodeRestorableStateWithCoder:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1presentError(_:modalFor:delegate:didPresent:contextInfo:)/title",
          "value": "presentError:modalForWindow:delegate:didPresentSelector:contextInfo:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1presentError(_:modalFor:delegate:didPresent:contextInfo:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "presentError:modalForWindow:delegate:didPresentSelector:contextInfo:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1rightMouseDragged(with:)/title",
          "value": "rightMouseDragged:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1rightMouseDragged(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "rightMouseDragged:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1makeTouchBar()/title",
          "value": "makeTouchBar"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1makeTouchBar()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "makeTouchBar"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1rightMouseDown(with:)/title",
          "value": "rightMouseDown:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1rightMouseDown(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "rightMouseDown:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSView/title",
          "value": "NSView"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSView/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSView/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSView"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1init(coder:)/title",
          "value": "initWithCoder:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1init(coder:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "initWithCoder:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1willPresentError(_:)/title",
          "value": "willPresentError:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1willPresentError(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "willPresentError:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1undoManager/title",
          "value": "undoManager"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1undoManager/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "undoManager"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1mouseEntered(with:)/title",
          "value": "mouseEntered:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1mouseEntered(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "mouseEntered:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1performTextFinderAction(_:)/title",
          "value": "performTextFinderAction:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1performTextFinderAction(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "performTextFinderAction:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1pressureChange(with:)/title",
          "value": "pressureChangeWithEvent:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1pressureChange(with:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "pressureChangeWithEvent:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1init()/title",
          "value": "init"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1init()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "init"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1encodeRestorableState(with:backgroundQueue:)/title",
          "value": "encodeRestorableStateWithCoder:backgroundQueue:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSResponder~1encodeRestorableState(with:backgroundQueue:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "encodeRestorableStateWithCoder:backgroundQueue:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSWindow/title",
          "value": "NSWindow"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSWindow/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "NSWindow"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.appkit~1documentation~1AppKit~1NSWindow/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "NSWindow"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/appkit/nsresponder"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/appkit/nsresponder"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
