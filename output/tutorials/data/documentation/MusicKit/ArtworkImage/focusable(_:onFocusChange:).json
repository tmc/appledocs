{
  "abstract": [
    {
      "text": "Specifies if the view is focusable and, if so, adds an action to perform",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "when the view comes into focus.",
      "type": "text"
    }
  ],
  "deprecationSummary": [
    {
      "inlineContent": [
        {
          "text": "Use FocusState<T> and View.focused(_:equals) for functionality previously provided by the onChange parameter.",
          "type": "text"
        }
      ],
      "type": "paragraph"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.MusicKit/documentation/MusicKit",
        "doc://com.apple.MusicKit/documentation/MusicKit/ArtworkImage"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.MusicKit/documentation/MusicKit/ArtworkImage/focusable(_:onFocusChange:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI4ViewPAAE9focusable_13onFocusChangeQrSb_ySbctF::SYNTHESIZED::s:17_MusicKit_SwiftUI12ArtworkImageV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "focusable"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sb",
        "text": "Bool"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "onFocusChange"
      },
      {
        "kind": "text",
        "text": ": ("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sb",
        "text": "Bool"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s4Voida",
        "text": "Void"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "keyword",
        "text": "some"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4ViewP",
        "text": "View"
      }
    ],
    "modules": [
      {
        "name": "MusicKit",
        "relatedModules": [
          "SwiftUI"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "deprecatedAt": "12.0",
        "introducedAt": "10.15",
        "message": "Use FocusState<T> and View.focused(_:equals) for functionality previously provided by the onChange parameter.",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "deprecatedAt": "15.0",
        "introducedAt": "13.0",
        "message": "Use FocusState<T> and View.focused(_:equals) for functionality previously provided by the onChange parameter.",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "deprecatedAt": "8.0",
        "introducedAt": "6.0",
        "message": "Use FocusState<T> and View.focused(_:equals) for functionality previously provided by the onChange parameter.",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "focusable(_:onFocusChange:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "macOS",
            "tvOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "nonisolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "focusable"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "isFocusable"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sb",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": " = true, "
            },
            {
              "kind": "externalParam",
              "text": "onFocusChange"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "@escaping"
            },
            {
              "kind": "text",
              "text": " ("
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sb",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s4Voida",
              "text": "Void"
            },
            {
              "kind": "text",
              "text": " = { _ in }) -> "
            },
            {
              "kind": "keyword",
              "text": "some"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": "\n"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A Boolean value that indicates whether this view is",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "focusable.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "isFocusable"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A closure that’s called whenever this view either",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "gains or loses focus. The Boolean parameter to ",
                  "type": "text"
                },
                {
                  "code": "onFocusChange",
                  "type": "codeVoice"
                },
                {
                  "text": " is",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "code": "true",
                  "type": "codeVoice"
                },
                {
                  "text": " when the view is in focus; otherwise, it’s ",
                  "type": "text"
                },
                {
                  "code": "false",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "onFocusChange"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A view that sets whether a view is focusable, and triggers",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "onFocusChange",
              "type": "codeVoice"
            },
            {
              "text": " when the view gains or loses focus.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.MusicKit/documentation/MusicKit": {
      "abstract": [
        {
          "text": "Integrate your app with Apple Music.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.MusicKit/documentation/MusicKit",
      "kind": "symbol",
      "role": "collection",
      "title": "MusicKit",
      "type": "topic",
      "url": "/documentation/musickit"
    },
    "doc://com.apple.MusicKit/documentation/MusicKit/ArtworkImage": {
      "abstract": [
        {
          "text": "A view that displays the image for a music item’s artwork.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ArtworkImage"
        }
      ],
      "identifier": "doc://com.apple.MusicKit/documentation/MusicKit/ArtworkImage",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ArtworkImage"
        }
      ],
      "role": "symbol",
      "title": "ArtworkImage",
      "type": "topic",
      "url": "/documentation/musickit/artworkimage"
    },
    "doc://com.apple.MusicKit/documentation/MusicKit/ArtworkImage/focusable(_:onFocusChange:)": {
      "abstract": [
        {
          "text": "Specifies if the view is focusable and, if so, adds an action to perform",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "when the view comes into focus.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focusable"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "onFocusChange"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.MusicKit/documentation/MusicKit/ArtworkImage/focusable(_:onFocusChange:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "focusable(_:onFocusChange:)",
      "type": "topic",
      "url": "/documentation/musickit/artworkimage/focusable(_:onfocuschange:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
      "kind": "symbol",
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/SwiftUI/View"
    },
    "doc://com.externally.resolved.symbol/s:Sb": {
      "abstract": [
        {
          "text": "A value type whose instances are either `true` or `false`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Sb",
      "kind": "symbol",
      "role": "symbol",
      "title": "Bool",
      "type": "topic",
      "url": "/documentation/Swift/Bool"
    },
    "doc://com.externally.resolved.symbol/s:s4Voida": {
      "abstract": [
        {
          "text": "The return type of functions that don’t explicitly specify a return type, that is, an empty tuple `()`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": " = ()"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
      "kind": "symbol",
      "role": "symbol",
      "title": "Void",
      "type": "topic",
      "url": "/documentation/Swift/Void"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/musickit/artworkimage/focusable(_:onfocuschange:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
