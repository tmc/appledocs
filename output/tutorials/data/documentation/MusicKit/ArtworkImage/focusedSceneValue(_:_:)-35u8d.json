{
  "abstract": [
    {
      "text": "Creates a new view that exposes the provided value to other views whose",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "state depends on the active scene.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.MusicKit/documentation/MusicKit",
        "doc://com.apple.MusicKit/documentation/MusicKit/ArtworkImage"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.MusicKit/documentation/MusicKit/ArtworkImage/focusedSceneValue(_:_:)-35u8d"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI4ViewPAAE17focusedSceneValueyQrs15WritableKeyPathCyAA13FocusedValuesVqd__SgG_AItlF::SYNTHESIZED::s:17_MusicKit_SwiftUI12ArtworkImageV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "focusedSceneValue"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "T"
      },
      {
        "kind": "text",
        "text": ">("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s15WritableKeyPathC",
        "text": "WritableKeyPath"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI13FocusedValuesV",
        "text": "FocusedValues"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "typeIdentifier",
        "text": "T"
      },
      {
        "kind": "text",
        "text": "?>, "
      },
      {
        "kind": "typeIdentifier",
        "text": "T"
      },
      {
        "kind": "text",
        "text": "?) -> "
      },
      {
        "kind": "keyword",
        "text": "some"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4ViewP",
        "text": "View"
      }
    ],
    "modules": [
      {
        "name": "MusicKit",
        "relatedModules": [
          "SwiftUI"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "9.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "focusedSceneValue(_:_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "nonisolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "focusedSceneValue"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "T"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "keyPath"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s15WritableKeyPathC",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s15WritableKeyPathC",
              "text": "WritableKeyPath"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI13FocusedValuesV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI13FocusedValuesV",
              "text": "FocusedValues"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "T"
            },
            {
              "kind": "text",
              "text": "?>, "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "value"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "text": "T"
            },
            {
              "kind": "text",
              "text": "?) -> "
            },
            {
              "kind": "keyword",
              "text": "some"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": "\n"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The key path to associate ",
                  "type": "text"
                },
                {
                  "code": "value",
                  "type": "codeVoice"
                },
                {
                  "text": " with when adding",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "it to the existing table of published focus values.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "keyPath"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The focus value to publish, or ",
                  "type": "text"
                },
                {
                  "code": "nil",
                  "type": "codeVoice"
                },
                {
                  "text": " if no value is",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "currently available.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "value"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A modified representation of this view.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use this method instead of ",
              "type": "text"
            },
            {
              "code": "View/focusedValue(_:_:)",
              "type": "codeVoice"
            },
            {
              "text": " for values that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "must be visible regardless of where focus is located in the active",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scene. For example, if an app needs a command for moving focus to a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "particular text field in the sidebar, it could use this modifier to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "publish a button action that’s visible to command views as long as the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "scene is active, and regardless of where focus happens to be in it.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct Sidebar: View {",
            "    @FocusState var isFiltering: Bool",
            "",
            "    var body: some View {",
            "        VStack {",
            "            TextField(...)",
            "                .focused(when: $isFiltering)",
            "                .focusedSceneValue(\\.filterAction) {",
            "                    isFiltering = true",
            "                }",
            "        }",
            "    }",
            "}",
            "",
            "struct NavigationCommands: Commands {",
            "    @FocusedValue(\\.filterAction) var filterAction",
            "",
            "    var body: some Commands {",
            "        CommandMenu(\"Navigate\") {",
            "            Button(\"Filter in Sidebar\") {",
            "                filterAction?()",
            "            }",
            "        }",
            "        .disabled(filterAction == nil)",
            "    }",
            "}",
            "",
            "struct FilterActionKey: FocusedValuesKey {",
            "    typealias Value = () -> Void",
            "}",
            "",
            "extension FocusedValues {",
            "    var filterAction: (() -> Void)? {",
            "        get { self[FilterActionKey.self] }",
            "        set { self[FilterActionKey.self] = newValue }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.MusicKit/documentation/MusicKit": {
      "abstract": [
        {
          "text": "Integrate your app with Apple Music.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.MusicKit/documentation/MusicKit",
      "kind": "symbol",
      "role": "collection",
      "title": "MusicKit",
      "type": "topic",
      "url": "/documentation/musickit"
    },
    "doc://com.apple.MusicKit/documentation/MusicKit/ArtworkImage": {
      "abstract": [
        {
          "text": "A view that displays the image for a music item’s artwork.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ArtworkImage"
        }
      ],
      "identifier": "doc://com.apple.MusicKit/documentation/MusicKit/ArtworkImage",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ArtworkImage"
        }
      ],
      "role": "symbol",
      "title": "ArtworkImage",
      "type": "topic",
      "url": "/documentation/musickit/artworkimage"
    },
    "doc://com.apple.MusicKit/documentation/MusicKit/ArtworkImage/focusedSceneValue(_:_:)-35u8d": {
      "abstract": [
        {
          "text": "Creates a new view that exposes the provided value to other views whose",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "state depends on the active scene.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "focusedSceneValue"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "T"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s15WritableKeyPathC",
          "text": "WritableKeyPath"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI13FocusedValuesV",
          "text": "FocusedValues"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "?>, "
        },
        {
          "kind": "typeIdentifier",
          "text": "T"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.MusicKit/documentation/MusicKit/ArtworkImage/focusedSceneValue(_:_:)-35u8d",
      "kind": "symbol",
      "role": "symbol",
      "title": "focusedSceneValue(_:_:)",
      "type": "topic",
      "url": "/documentation/musickit/artworkimage/focusedscenevalue(_:_:)-35u8d"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI13FocusedValuesV": {
      "abstract": [
        {
          "text": "A collection of state exported by the focused view and its ancestors.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FocusedValues"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI13FocusedValuesV",
      "kind": "symbol",
      "role": "symbol",
      "title": "FocusedValues",
      "type": "topic",
      "url": "/documentation/SwiftUI/FocusedValues"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP": {
      "abstract": [
        {
          "text": "A type that represents part of your app’s user interface and provides modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
      "kind": "symbol",
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/SwiftUI/View"
    },
    "doc://com.externally.resolved.symbol/s:s15WritableKeyPathC": {
      "abstract": [
        {
          "text": "A key path that supports reading from and writing to the resulting value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "WritableKeyPath"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Root"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Value"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s15WritableKeyPathC",
      "kind": "symbol",
      "role": "symbol",
      "title": "WritableKeyPath",
      "type": "topic",
      "url": "/documentation/Swift/WritableKeyPath"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/musickit/artworkimage/focusedscenevalue(_:_:)-35u8d"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
