{
  "abstract": [
    {
      "text": "Options for different times when you can sample GPU counters.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.metal/documentation/Metal"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:@E@MTLCounterSamplingPoint",
    "fragments": [
      {
        "kind": "keyword",
        "text": "enum"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "MTLCounterSamplingPoint"
      }
    ],
    "modules": [
      {
        "name": "Metal"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "MTLCounterSamplingPoint"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "11.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Enumeration",
    "symbolKind": "enum",
    "title": "MTLCounterSamplingPoint"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "enum"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MTLCounterSamplingPoint"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.metal/documentation/Metal/sampling-gpu-data-into-counter-sample-buffers"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.metal/documentation/Metal": {
      "abstract": [
        {
          "text": "Render advanced 3D graphics and compute data in parallel with graphics processors.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal",
      "kind": "symbol",
      "role": "collection",
      "title": "Metal",
      "type": "topic",
      "url": "/documentation/metal"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint": {
      "abstract": [
        {
          "text": "Options for different times when you can sample GPU counters.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLCounterSamplingPoint"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLCounterSamplingPoint"
        }
      ],
      "role": "symbol",
      "title": "MTLCounterSamplingPoint",
      "type": "topic",
      "url": "/documentation/metal/mtlcountersamplingpoint"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atBlitBoundary": {
      "abstract": [
        {
          "text": "Counter sampling is allowed between blit commands in a blit pass.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "atBlitBoundary"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atBlitBoundary",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLCounterSamplingPointAtBlitBoundary"
        }
      ],
      "role": "symbol",
      "title": "MTLCounterSamplingPoint.atBlitBoundary",
      "type": "topic",
      "url": "/documentation/metal/mtlcountersamplingpoint/atblitboundary"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atDispatchBoundary": {
      "abstract": [
        {
          "text": "Counter sampling is allowed between kernel dispatches in a compute pass.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "atDispatchBoundary"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atDispatchBoundary",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLCounterSamplingPointAtDispatchBoundary"
        }
      ],
      "role": "symbol",
      "title": "MTLCounterSamplingPoint.atDispatchBoundary",
      "type": "topic",
      "url": "/documentation/metal/mtlcountersamplingpoint/atdispatchboundary"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atDrawBoundary": {
      "abstract": [
        {
          "text": "Counter sampling is allowed between draw commands in a render pass.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "atDrawBoundary"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atDrawBoundary",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLCounterSamplingPointAtDrawBoundary"
        }
      ],
      "role": "symbol",
      "title": "MTLCounterSamplingPoint.atDrawBoundary",
      "type": "topic",
      "url": "/documentation/metal/mtlcountersamplingpoint/atdrawboundary"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atStageBoundary": {
      "abstract": [
        {
          "text": "Counter sampling is allowed at the start and end of a render passâ€™s vertex and fragment stages, and at the start and end of compute and blit passes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "atStageBoundary"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atStageBoundary",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLCounterSamplingPointAtStageBoundary"
        }
      ],
      "role": "symbol",
      "title": "MTLCounterSamplingPoint.atStageBoundary",
      "type": "topic",
      "url": "/documentation/metal/mtlcountersamplingpoint/atstageboundary"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atTileDispatchBoundary": {
      "abstract": [
        {
          "text": "Counter sampling is allowed between tile dispatches in a render pass.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "atTileDispatchBoundary"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atTileDispatchBoundary",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLCounterSamplingPointAtTileDispatchBoundary"
        }
      ],
      "role": "symbol",
      "title": "MTLCounterSamplingPoint.atTileDispatchBoundary",
      "type": "topic",
      "url": "/documentation/metal/mtlcountersamplingpoint/attiledispatchboundary"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/init(rawValue:)": {
      "abstract": [],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "?("
        },
        {
          "kind": "externalParam",
          "text": "rawValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Su",
          "text": "UInt"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/init(rawValue:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(rawValue:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcountersamplingpoint/init(rawvalue:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLDevice/counterSets": {
      "abstract": [
        {
          "text": "The counter sets supported by the device object.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "counterSets"
        },
        {
          "kind": "text",
          "text": ": [any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLCounterSet",
          "text": "MTLCounterSet"
        },
        {
          "kind": "text",
          "text": "]?"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice/counterSets",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "counterSets"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "counterSets",
      "type": "topic",
      "url": "/documentation/metal/mtldevice/countersets"
    },
    "doc://com.apple.metal/documentation/Metal/MTLDevice/makeCounterSampleBuffer(descriptor:)": {
      "abstract": [
        {
          "text": "Creates a counter sample buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "makeCounterSampleBuffer"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "descriptor"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MTLCounterSampleBufferDescriptor",
          "text": "MTLCounterSampleBufferDescriptor"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLCounterSampleBuffer",
          "text": "MTLCounterSampleBuffer"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice/makeCounterSampleBuffer(descriptor:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "newCounterSampleBufferWithDescriptor:error:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "makeCounterSampleBuffer(descriptor:)",
      "type": "topic",
      "url": "/documentation/metal/mtldevice/makecountersamplebuffer(descriptor:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLDevice/supportsCounterSampling(_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value that indicates whether you can read GPU counters at the specified command boundary.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "supportsCounterSampling"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLCounterSamplingPoint",
          "text": "MTLCounterSamplingPoint"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice/supportsCounterSampling(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "supportsCounterSampling:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "supportsCounterSampling(_:)",
      "type": "topic",
      "url": "/documentation/metal/mtldevice/supportscountersampling(_:)"
    },
    "doc://com.apple.metal/documentation/Metal/sampling-gpu-data-into-counter-sample-buffers": {
      "abstract": [
        {
          "text": "Retrieve a GPUâ€™s counter data at a time the GPU supports.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/sampling-gpu-data-into-counter-sample-buffers",
      "kind": "article",
      "role": "article",
      "title": "Sampling GPU Data into Counter Sample Buffers",
      "type": "topic",
      "url": "/documentation/metal/sampling-gpu-data-into-counter-sample-buffers"
    },
    "doc://com.externally.resolved.symbol/c:@T@NSUInteger": {
      "abstract": [
        {
          "text": "Describes an unsigned integer.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:@T@NSUInteger",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSUInteger",
      "type": "topic",
      "url": "/documentation/objectivec/nsuinteger"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:SY": {
      "abstract": [
        {
          "text": "A type that can be converted to and from an associated raw value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RawRepresentable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SY8RawValueQa",
          "text": "RawValue"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SY",
      "kind": "symbol",
      "role": "symbol",
      "title": "RawRepresentable",
      "type": "topic",
      "url": "/documentation/Swift/RawRepresentable"
    },
    "doc://com.externally.resolved.symbol/s:s15BitwiseCopyableP": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "BitwiseCopyable"
        },
        {
          "kind": "text",
          "text": " : ~Escapable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s15BitwiseCopyableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "BitwiseCopyable",
      "type": "topic",
      "url": "/documentation/Swift/BitwiseCopyable"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s15BitwiseCopyableP",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/s:SY",
        "doc://com.externally.resolved.symbol/s:s8SendableP"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Sampling-a-GPU-Devices-Counters",
      "generated": true,
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLDevice/counterSets",
        "doc://com.apple.metal/documentation/Metal/MTLDevice/supportsCounterSampling(_:)",
        "doc://com.apple.metal/documentation/Metal/MTLDevice/makeCounterSampleBuffer(descriptor:)"
      ],
      "title": "Sampling a GPU Deviceâ€™s Counters"
    }
  ],
  "topicSections": [
    {
      "anchor": "Reading-Sampling-Boundary-Types",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atBlitBoundary",
        "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atDispatchBoundary",
        "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atDrawBoundary",
        "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atStageBoundary",
        "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atTileDispatchBoundary"
      ],
      "title": "Reading Sampling Boundary Types"
    },
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/init(rawValue:)"
      ],
      "title": "Initializers"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "14.0",
              "name": "iOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "14.0",
              "name": "iPadOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "14.0",
              "name": "Mac Catalyst",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "11.0",
              "name": "macOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "14.0",
              "name": "tvOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "1.0",
              "name": "visionOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Enumeration"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "MTLCounterSamplingPoint"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "enum"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCounterSamplingPoint"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCounterSamplingPoint"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.metal/documentation/Metal"
              ]
            ]
          }
        },
        {
          "op": "replace",
          "path": "/topicSections",
          "value": [
            {
              "anchor": "Reading-Sampling-Boundary-Types",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atBlitBoundary",
                "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atDispatchBoundary",
                "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atDrawBoundary",
                "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atStageBoundary",
                "doc://com.apple.metal/documentation/Metal/MTLCounterSamplingPoint/atTileDispatchBoundary"
              ],
              "title": "Reading Sampling Boundary Types"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/relationshipsSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Sampling-a-GPU-Devices-Counters",
              "generated": true,
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLDevice/counterSets",
                "doc://com.apple.metal/documentation/Metal/MTLDevice/supportsCounterSampling(_:)",
                "doc://com.apple.metal/documentation/Metal/MTLDevice/makeCounterSampleBuffer(descriptor:)"
              ],
              "title": "Sampling a GPU Deviceâ€™s Counters"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "iOS",
                  "iPadOS",
                  "Mac Catalyst",
                  "macOS",
                  "tvOS",
                  "visionOS"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "enum"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "MTLCounterSamplingPoint"
                  },
                  {
                    "kind": "text",
                    "text": " : "
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:@T@NSUInteger",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:@T@NSUInteger",
                    "text": "NSUInteger"
                  },
                  {
                    "kind": "text",
                    "text": ";"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCounterSamplingPoint/title",
          "value": "MTLCounterSamplingPoint"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCounterSamplingPoint/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCounterSamplingPoint"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCounterSamplingPoint/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCounterSamplingPoint"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice~1counterSets/title",
          "value": "counterSets"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice~1counterSets/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "counterSets"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCounterSamplingPoint~1atDrawBoundary/title",
          "value": "MTLCounterSamplingPointAtDrawBoundary"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCounterSamplingPoint~1atDrawBoundary/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCounterSamplingPointAtDrawBoundary"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCounterSamplingPoint~1atTileDispatchBoundary/title",
          "value": "MTLCounterSamplingPointAtTileDispatchBoundary"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCounterSamplingPoint~1atTileDispatchBoundary/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCounterSamplingPointAtTileDispatchBoundary"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice~1makeCounterSampleBuffer(descriptor:)/title",
          "value": "newCounterSampleBufferWithDescriptor:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice~1makeCounterSampleBuffer(descriptor:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "newCounterSampleBufferWithDescriptor:error:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCounterSamplingPoint~1atStageBoundary/title",
          "value": "MTLCounterSamplingPointAtStageBoundary"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCounterSamplingPoint~1atStageBoundary/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCounterSamplingPointAtStageBoundary"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice~1supportsCounterSampling(_:)/title",
          "value": "supportsCounterSampling:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice~1supportsCounterSampling(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "supportsCounterSampling:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCounterSamplingPoint~1atDispatchBoundary/title",
          "value": "MTLCounterSamplingPointAtDispatchBoundary"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCounterSamplingPoint~1atDispatchBoundary/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCounterSamplingPointAtDispatchBoundary"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCounterSamplingPoint~1atBlitBoundary/title",
          "value": "MTLCounterSamplingPointAtBlitBoundary"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCounterSamplingPoint~1atBlitBoundary/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCounterSamplingPointAtBlitBoundary"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/metal/mtlcountersamplingpoint"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/metal/mtlcountersamplingpoint"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
