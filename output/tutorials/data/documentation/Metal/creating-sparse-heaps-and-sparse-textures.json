{
  "abstract": [
    {
      "text": "Allocate memory for sparse textures by creating a sparse heap.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.metal/documentation/Metal",
        "doc://com.apple.metal/documentation/Metal/textures"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.metal/documentation/Metal/creating-sparse-heaps-and-sparse-textures"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Metal"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Creating Sparse Heaps and Sparse Textures"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "inlineContent": [
                {
                  "text": "Sparse heaps",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " are ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLHeap",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " objects that create sparse textures and provide memory for them. Unlike with a standard heap, you use a sparse heap only to create sparse textures and allocate storage for texture data. You allocate memory when you create the heap, and later, as needed, map or unmap portions of the heap’s memory to textures. Memory is mapped in larger chunks called ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "sparse tiles",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": ". The size of sparse tiles (in bytes) is determined by the device object.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Create-a-Sparse-Heap",
          "level": 3,
          "text": "Create a Sparse Heap",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Create a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLHeapDescriptor",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object and set its type to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLHeapType/sparse",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". You must allocate sparse heaps with the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLStorageMode/private",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " storage mode. Specify the heap’s size as a multiple of the sparse tile size. To get the tile size, read the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice/sparseTileSizeInBytes",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property on the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object that you’re using to create the heap.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The code below creates a new sparse heap, rounding the heap size up to the tile size.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "let sparseHeapSizeInBytes = 256 * 1024 * 1024",
                    "let sparseTileSize = device.sparseTileSizeInBytes",
                    "let alignedHeapSize = ((sparseHeapSizeInBytes + sparseTileSize - 1) / sparseTileSize) * sparseTileSize",
                    "",
                    "let descriptor = MTLHeapDescriptor()",
                    "descriptor.type = .sparse",
                    "descriptor.storageMode = .private",
                    "descriptor.size = alignedHeapSize",
                    "",
                    "let sparseHeap = device.makeHeap(descriptor: descriptor)"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "const int sparseHeapSizeInBytes = 256 * 1024 * 1024;",
                    "int sparseTileSize = _device.sparseTileSizeInBytes;",
                    "int alignedHeapSize = ((sparseHeapSizeInBytes + sparseTileSize-1) / sparseTileSize) * sparseTileSize;",
                    "",
                    "MTLHeapDescriptor* descriptor = [MTLHeapDescriptor new];",
                    "descriptor.type = MTLHeapTypeSparse;",
                    "descriptor.storageMode = MTLStorageModePrivate;",
                    "descriptor.size = alignedHeapSize;",
                    "",
                    "id<MTLHeap> sparseHeap = [_device newHeapWithDescriptor: descriptor];"
                  ],
                  "syntax": "objective-c",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "Specify a heap size that’s appropriate for your app, based on how many textures you’ve, how large those textures are, and your image-quality goals. You may need to experiment to determine the best size. The heap should be large enough that your app doesn’t need to unmap sparse tiles frequently and doesn’t suffer from image-quality problems. Unless you need finer-grained control of how different collections of textures are allocated in memory, allocate a single sparse heap and use it to manage all of your app’s texture memory.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Create-a-Sparse-Texture",
          "level": 3,
          "text": "Create a Sparse Texture",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "All textures that you create on a sparse heap are sparse textures. When you create textures on heaps, you must use the same storage mode as you used to create the sparse heap, as shown in the code below:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "let textureDescriptor = MTLTextureDescriptor.texture2DDescriptor(pixelFormat: .bgra8Unorm_srgb,",
                    "                                                                 width: 1024, height: 1024, mipmapped: true)",
                    "textureDescriptor.storageMode = sparseHeap.storageMode",
                    "let sparseTexture = sparseHeap.makeTexture(descriptor: textureDescriptor)"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "MTLTextureDescriptor *textureDescriptor =",
                    "    [MTLTextureDescriptor texture2DDescriptorWithPixelFormat:(MTLPixelFormatBGRA8Unorm_sRGB)",
                    "         width:1024",
                    "        height:1024",
                    "     mipmapped:YES];",
                    "textureDescriptor.storageMode = _sparseHeap.storageMode;",
                    "id<MTLTexture> sparseTexture =  [_sparseHeap newTextureWithDescriptor:textureDescriptor];"
                  ],
                  "syntax": "objective-c",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "When you create a sparse texture, no memory is allocated for it. It can’t store any pixel data until you map sparse tiles on the heap to regions inside the texture. For more information about mapping and unmapping sparse tiles, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/assigning-memory-to-sparse-textures",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". For more information about how sparse textures behave when you access them, see ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/reading-and-writing-to-sparse-textures",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.metal/documentation/Metal": {
      "abstract": [
        {
          "text": "Render advanced 3D graphics and compute data in parallel with graphics processors.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal",
      "kind": "symbol",
      "role": "collection",
      "title": "Metal",
      "type": "topic",
      "url": "/documentation/metal"
    },
    "doc://com.apple.metal/documentation/Metal/MTLDevice": {
      "abstract": [
        {
          "text": "The main Metal interface to a GPU that apps use to draw graphics and run computations in parallel.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLDevice"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLDevice"
        }
      ],
      "role": "symbol",
      "title": "MTLDevice",
      "type": "topic",
      "url": "/documentation/metal/mtldevice"
    },
    "doc://com.apple.metal/documentation/Metal/MTLDevice/sparseTileSizeInBytes": {
      "abstract": [
        {
          "text": "Returns the size, in bytes, of a sparse tile the GPU device creates using a default page size.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sparseTileSizeInBytes"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice/sparseTileSizeInBytes",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "sparseTileSizeInBytes"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "sparseTileSizeInBytes",
      "type": "topic",
      "url": "/documentation/metal/mtldevice/sparsetilesizeinbytes"
    },
    "doc://com.apple.metal/documentation/Metal/MTLHeap": {
      "abstract": [
        {
          "text": "A memory pool from which you can suballocate resources.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLHeap"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLHeap",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLHeap"
        }
      ],
      "role": "symbol",
      "title": "MTLHeap",
      "type": "topic",
      "url": "/documentation/metal/mtlheap"
    },
    "doc://com.apple.metal/documentation/Metal/MTLHeapDescriptor": {
      "abstract": [
        {
          "text": "A configuration that customizes the behavior for a Metal memory heap.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLHeapDescriptor"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLHeapDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLHeapDescriptor"
        }
      ],
      "role": "symbol",
      "title": "MTLHeapDescriptor",
      "type": "topic",
      "url": "/documentation/metal/mtlheapdescriptor"
    },
    "doc://com.apple.metal/documentation/Metal/MTLHeapType/sparse": {
      "abstract": [
        {
          "text": "The heap contains sparse texture tiles.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sparse"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLHeapType/sparse",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLHeapTypeSparse"
        }
      ],
      "role": "symbol",
      "title": "MTLHeapType.sparse",
      "type": "topic",
      "url": "/documentation/metal/mtlheaptype/sparse"
    },
    "doc://com.apple.metal/documentation/Metal/MTLMapIndirectArguments": {
      "abstract": [
        {
          "text": "The data layout for mapping sparse texture regions when using indirect commands.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLMapIndirectArguments"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLMapIndirectArguments",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLMapIndirectArguments"
        }
      ],
      "role": "symbol",
      "title": "MTLMapIndirectArguments",
      "type": "topic",
      "url": "/documentation/metal/mtlmapindirectarguments"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResourceStateCommandEncoder": {
      "abstract": [
        {
          "text": "An encoder that encodes commands that modify resource configurations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLResourceStateCommandEncoder"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResourceStateCommandEncoder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLResourceStateCommandEncoder"
        }
      ],
      "role": "symbol",
      "title": "MTLResourceStateCommandEncoder",
      "type": "topic",
      "url": "/documentation/metal/mtlresourcestatecommandencoder"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassDescriptor": {
      "abstract": [
        {
          "text": "A configuration for a resource state pass, used to create a resource state command encoder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLResourceStatePassDescriptor"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLResourceStatePassDescriptor"
        }
      ],
      "role": "symbol",
      "title": "MTLResourceStatePassDescriptor",
      "type": "topic",
      "url": "/documentation/metal/mtlresourcestatepassdescriptor"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptor": {
      "abstract": [
        {
          "text": "A description of where to store GPU counter information at the start and end of a resource state pass.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLResourceStatePassSampleBufferAttachmentDescriptor"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLResourceStatePassSampleBufferAttachmentDescriptor"
        }
      ],
      "role": "symbol",
      "title": "MTLResourceStatePassSampleBufferAttachmentDescriptor",
      "type": "topic",
      "url": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptor"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptorArray": {
      "abstract": [
        {
          "text": "An array of sample buffer attachments for a resource state pass.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLResourceStatePassSampleBufferAttachmentDescriptorArray"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptorArray",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLResourceStatePassSampleBufferAttachmentDescriptorArray"
        }
      ],
      "role": "symbol",
      "title": "MTLResourceStatePassSampleBufferAttachmentDescriptorArray",
      "type": "topic",
      "url": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptorarray"
    },
    "doc://com.apple.metal/documentation/Metal/MTLStorageMode/private": {
      "abstract": [
        {
          "text": "The resource is only available to the GPU.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "`private`"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLStorageMode/private",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLStorageModePrivate"
        }
      ],
      "role": "symbol",
      "title": "MTLStorageMode.private",
      "type": "topic",
      "url": "/documentation/metal/mtlstoragemode/private"
    },
    "doc://com.apple.metal/documentation/Metal/assigning-memory-to-sparse-textures": {
      "abstract": [
        {
          "text": "Use a resource state encoder to allocate and deallocate sparse tiles for a sparse texture.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/assigning-memory-to-sparse-textures",
      "kind": "article",
      "role": "article",
      "title": "Assigning Memory to Sparse Textures",
      "type": "topic",
      "url": "/documentation/metal/assigning-memory-to-sparse-textures"
    },
    "doc://com.apple.metal/documentation/Metal/converting-between-pixel-regions-and-sparse-tile-regions": {
      "abstract": [
        {
          "text": "Learn how a sparse texture’s contents are organized in memory.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/converting-between-pixel-regions-and-sparse-tile-regions",
      "kind": "article",
      "role": "article",
      "title": "Converting Between Pixel Regions and Sparse Tile Regions",
      "type": "topic",
      "url": "/documentation/metal/converting-between-pixel-regions-and-sparse-tile-regions"
    },
    "doc://com.apple.metal/documentation/Metal/estimating-how-often-a-texture-region-is-accessed": {
      "abstract": [
        {
          "text": "Use texture access patterns to determine when you need to map a texture region.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/estimating-how-often-a-texture-region-is-accessed",
      "kind": "article",
      "role": "article",
      "title": "Estimating How Often a Texture Region Is Accessed",
      "type": "topic",
      "url": "/documentation/metal/estimating-how-often-a-texture-region-is-accessed"
    },
    "doc://com.apple.metal/documentation/Metal/managing-sparse-texture-memory": {
      "abstract": [
        {
          "text": "Take direct control of memory allocation for texture data by using sparse textures.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/managing-sparse-texture-memory",
      "kind": "article",
      "role": "article",
      "title": "Managing Sparse Texture Memory",
      "type": "topic",
      "url": "/documentation/metal/managing-sparse-texture-memory"
    },
    "doc://com.apple.metal/documentation/Metal/reading-and-writing-to-sparse-textures": {
      "abstract": [
        {
          "text": "Decide how to handle access to unmapped texture regions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/reading-and-writing-to-sparse-textures",
      "kind": "article",
      "role": "article",
      "title": "Reading and Writing to Sparse Textures",
      "type": "topic",
      "url": "/documentation/metal/reading-and-writing-to-sparse-textures"
    },
    "doc://com.apple.metal/documentation/Metal/textures": {
      "abstract": [
        {
          "text": "Create and manage typed data your app uses to exchange information with its shader functions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/textures",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Textures",
      "type": "topic",
      "url": "/documentation/metal/textures"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Sparse-Textures",
      "generated": true,
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/managing-sparse-texture-memory",
        "doc://com.apple.metal/documentation/Metal/converting-between-pixel-regions-and-sparse-tile-regions",
        "doc://com.apple.metal/documentation/Metal/assigning-memory-to-sparse-textures",
        "doc://com.apple.metal/documentation/Metal/reading-and-writing-to-sparse-textures",
        "doc://com.apple.metal/documentation/Metal/estimating-how-often-a-texture-region-is-accessed",
        "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassDescriptor",
        "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptor",
        "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptorArray",
        "doc://com.apple.metal/documentation/Metal/MTLResourceStateCommandEncoder",
        "doc://com.apple.metal/documentation/Metal/MTLMapIndirectArguments"
      ],
      "title": "Sparse Textures"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Sparse-Textures",
              "generated": true,
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/managing-sparse-texture-memory",
                "doc://com.apple.metal/documentation/Metal/converting-between-pixel-regions-and-sparse-tile-regions",
                "doc://com.apple.metal/documentation/Metal/assigning-memory-to-sparse-textures",
                "doc://com.apple.metal/documentation/Metal/reading-and-writing-to-sparse-textures",
                "doc://com.apple.metal/documentation/Metal/estimating-how-often-a-texture-region-is-accessed",
                "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassDescriptor",
                "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptor",
                "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptorArray",
                "doc://com.apple.metal/documentation/Metal/MTLResourceStateCommandEncoder",
                "doc://com.apple.metal/documentation/Metal/MTLMapIndirectArguments"
              ],
              "title": "Sparse Textures"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassSampleBufferAttachmentDescriptor/title",
          "value": "MTLResourceStatePassSampleBufferAttachmentDescriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassSampleBufferAttachmentDescriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStatePassSampleBufferAttachmentDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassSampleBufferAttachmentDescriptor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStatePassSampleBufferAttachmentDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLHeap/title",
          "value": "MTLHeap"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLHeap/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLHeap"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLHeap/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLHeap"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLStorageMode~1private/title",
          "value": "MTLStorageModePrivate"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLStorageMode~1private/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLStorageModePrivate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice~1sparseTileSizeInBytes/title",
          "value": "sparseTileSizeInBytes"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice~1sparseTileSizeInBytes/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "sparseTileSizeInBytes"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLHeapDescriptor/title",
          "value": "MTLHeapDescriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLHeapDescriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLHeapDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLHeapDescriptor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLHeapDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLHeapType~1sparse/title",
          "value": "MTLHeapTypeSparse"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLHeapType~1sparse/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLHeapTypeSparse"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice/title",
          "value": "MTLDevice"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLDevice"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLDevice"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLMapIndirectArguments/title",
          "value": "MTLMapIndirectArguments"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLMapIndirectArguments/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLMapIndirectArguments"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLMapIndirectArguments/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLMapIndirectArguments"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassSampleBufferAttachmentDescriptorArray/title",
          "value": "MTLResourceStatePassSampleBufferAttachmentDescriptorArray"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassSampleBufferAttachmentDescriptorArray/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStatePassSampleBufferAttachmentDescriptorArray"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassSampleBufferAttachmentDescriptorArray/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStatePassSampleBufferAttachmentDescriptorArray"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStateCommandEncoder/title",
          "value": "MTLResourceStateCommandEncoder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStateCommandEncoder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStateCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStateCommandEncoder/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStateCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassDescriptor/title",
          "value": "MTLResourceStatePassDescriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassDescriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStatePassDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassDescriptor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStatePassDescriptor"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/metal/creating-sparse-heaps-and-sparse-textures"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/metal/creating-sparse-heaps-and-sparse-textures"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
