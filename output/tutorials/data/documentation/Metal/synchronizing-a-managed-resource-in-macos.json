{
  "abstract": [
    {
      "text": "Manually synchronize memory for a Metal resource in apps.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.metal/documentation/Metal",
        "doc://com.apple.metal/documentation/Metal/resource-fundamentals"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.metal/documentation/Metal/synchronizing-a-managed-resource-in-macos"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Metal"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Synchronizing a Managed Resource in macOS"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "For Mac computers with Intel or external GPUs, Metal offers ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "managed resources.",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " Managed resources are ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLResource",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " instances, such as an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLTexture",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLBuffer",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", which use memory that your app can copy between the CPU and GPU. Managed resources use a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLResource/storageMode",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " of ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLStorageMode/managed",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You need to manually synchronize managed resources, copying changed memory between the CPU and GPU. This is different from Apple family GPUs, which use ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLStorageMode/shared",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " for resources that the CPU and GPU can both access. Synchronize after your code finishes memory writes. After data synchronizes, you can safely read it in both your app and GPU functions.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "As a best practice, try to keep your data synchronization points to a minimum. Even synchronization calls which don’t copy data can result in a small performance hit.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "Managed resources are the default memory storage type for Intel and external GPU devices in Metal. For more information about macOS resource storage modes and how to select them, see ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.metal/documentation/Metal/choosing-a-resource-storage-mode-for-intel-and-amd-gpus",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "anchor": "Synchronize-a-Managed-Buffer",
          "level": 3,
          "text": "Synchronize a Managed Buffer",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "First, create an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLBuffer",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " with the option ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLStorageMode/managed",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", which tells Metal to reserve managed memory space for the resource:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "// Create a matrix data structure.",
                    "struct MatrixData {",
                    "    var modelMatrix = matrix_float4x4()",
                    "    var viewMatrix = matrix_float4x4()",
                    "    var projectionMatrix = matrix_float4x4()",
                    "}",
                    "",
                    "// Create a managed buffer.",
                    "guard let matrixBuffer = device.makeBuffer(length: MemoryLayout<MatrixData>.size, options: .storageModeManaged) else { return }"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "// Create a matrix data structure.",
                    "id <MTLBuffer> _matrixBuffer;",
                    "typedef struct",
                    "{",
                    "    matrix_float4x4 modelMatrix;",
                    "    matrix_float4x4 viewMatrix;",
                    "    matrix_float4x4 projectionMatrix;",
                    "} MatrixData;",
                    "",
                    "// Create a managed buffer.",
                    "_matrixBuffer = [_device newBufferWithLength:sizeof(MatrixData)",
                    "                                     options:MTLResourceStorageModeManaged];"
                  ],
                  "syntax": "objective-c",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "Next, modify the buffer’s data on the CPU:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "// Modify the managed buffer's data with the CPU.",
                    "var matrixData = MatrixData()",
                    "matrixData.modelMatrix = updatedModelMatrix",
                    "matrixBuffer.contents().storeBytes(of: matrixData, as: MatrixData.self)"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "// Modify the managed buffer's data with the CPU.",
                    "MatrixData *matrixData = (MatrixData*)_matrixBuffer.contents;",
                    "matrixData->modelMatrix = updatedModelMatrix;"
                  ],
                  "syntax": "objective-c",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "After completing a CPU modification, call the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLBuffer/didModifyRange:",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method. This method updates a specific range of data and keeps the buffer synchronized. Before calling this method, the modified buffer’s data on the GPU is in an undefined state.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "// Synchronize the managed buffer.",
                    "matrixBuffer.didModifyRange(0..<MemoryLayout<matrix_float4x4>.size)"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "// Synchronize the managed buffer.",
                    "[_matrixBuffer didModifyRange:NSMakeRange(0, sizeof(matrixData->modelMatrix))];"
                  ],
                  "syntax": "objective-c",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "After encoding a GPU modification, encode a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLBlitCommandEncoder/synchronize(resource:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " command. This command updates the entire buffer and keeps it synchronized. Before executing this command, the modified buffer’s data on the CPU is in an undefined state.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "// Create a command buffer for GPU work.",
                    "if let commandBuffer = commandQueue.makeCommandBuffer() {",
                    "    // Create a compute command encoder.",
                    "    guard let computeCommandEncoder =",
                    "            commandBuffer.makeComputeCommandEncoder(dispatchType: MTLDispatchType.serial)",
                    "    else { return }",
                    "    ",
                    "    // Encode a compute pass to modify the managed buffer's data with the GPU.",
                    "    computeCommandEncoder.setComputePipelineState(computePipelineStateObject)",
                    "    computeCommandEncoder.setBuffer(matrixBuffer, offset: 0, index: 0)",
                    "    computeCommandEncoder.dispatchThreads(gridSize, threadsPerThreadgroup: threadgroupSize)",
                    "    computeCommandEncoder.endEncoding()",
                    "    ",
                    "    // Add a completion handler and commit the command buffer.",
                    "    let commandBufferHandler: MTLCommandBufferHandler",
                    "    commandBuffer.addCompletedHandler(commandBufferHandler)",
                    "    commandBuffer.commit()",
                    "}"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "// Create a command buffer for GPU work.",
                    "id <MTLCommandBuffer> commandBuffer = [_commandQueue commandBuffer];",
                    "",
                    "// Encode a compute pass to modify the managed buffer's data with the GPU.",
                    "id <MTLComputeCommandEncoder> computeCommandEncoder = [commandBuffer computeCommandEncoderWithDispatchType:MTLDispatchTypeSerial];",
                    "[computeCommandEncoder setComputePipelineState:computePipelineStateObject];",
                    "[computeCommandEncoder setBuffer:_matrixBuffer",
                    "                          offset:0",
                    "                         atIndex:0];",
                    "[computeCommandEncoder dispatchThreads:gridSize",
                    "                 threadsPerThreadgroup:threadgroupSize];",
                    "[computeCommandEncoder endEncoding];",
                    "",
                    "// Synchronize the managed buffer.",
                    "id <MTLBlitCommandEncoder> blitCommandEncoder = [commandBuffer blitCommandEncoder];",
                    "[blitCommandEncoder synchronizeResource:_matrixBuffer];",
                    "[blitCommandEncoder endEncoding];",
                    "",
                    "// Add a completion handler and commit the command buffer.",
                    "[commandBuffer addCompletedHandler:^(id<MTLCommandBuffer> cb) {",
                    "    // In this code block, the command buffer `cb` is updated and synchronized, and can be safely read or written to.",
                    "}];",
                    "[commandBuffer commit];"
                  ],
                  "syntax": "objective-c",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "anchor": "Synchronize-a-Managed-Texture",
          "level": 3,
          "text": "Synchronize a Managed Texture",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "First, create an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLTexture",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " in managed memory from an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLTextureDescriptor",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " with its storage mode set to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLStorageMode/managed",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "// Create a texture descriptor.",
                    "let textureDescriptor = MTLTextureDescriptor.texture2DDescriptor(pixelFormat: .rgba8Unorm,",
                    "                                                                 width: textureSize.width,",
                    "                                                                 height: textureSize.height,",
                    "                                                                 mipmapped: false)",
                    "",
                    "// Set the descriptor's storage mode and usage.",
                    "textureDescriptor.storageMode = MTLStorageMode.managed",
                    "textureDescriptor.usage = [.shaderRead, .shaderWrite]",
                    "",
                    "// Create a managed texture.",
                    "let imageTexture = device.makeTexture(descriptor: textureDescriptor)"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "id <MTLTexture> _imageTexture;",
                    "// Create a texture descriptor.",
                    "MTLTextureDescriptor *textureDescriptor = [MTLTextureDescriptor texture2DDescriptorWithPixelFormat:MTLPixelFormatRGBA8Unorm",
                    "                                                                                             width:textureSize.width",
                    "                                                                                            height:textureSize.height",
                    "                                                                                         mipmapped:NO];",
                    "",
                    "// Set the descriptor's storage mode and usage.",
                    "textureDescriptor.storageMode = MTLStorageModeManaged;",
                    "textureDescriptor.usage = MTLTextureUsageShaderRead | MTLTextureUsageShaderWrite;",
                    "",
                    "// Create a managed texture.",
                    "_imageTexture = [_device newTextureWithDescriptor:textureDescriptor];"
                  ],
                  "syntax": "objective-c",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "To perform a CPU modification and simultaneously notify Metal about the change, call the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLTexture/replace(region:mipmapLevel:withBytes:bytesPerRow:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method. This method updates a specific region of data and keeps the texture synchronized. To update a specific texture slice, call the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLTexture/replace(region:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method instead. Before calling one of these methods, the modified texture’s data on the GPU is in an undefined state.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "// Simultaneously modify and synchronize the managed texture's data with the CPU.",
                    "let region = MTLRegionMake2D(textureOrigin.x, textureOrigin.y, textureSize.width, textureSize.height)",
                    "let bytesPerRow = pixelSize * textureSize.width",
                    "imageTexture.replace(region: region, mipmapLevel: 0, withBytes: textureData, bytesPerRow: bytesPerRow)"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "// Simultaneously modify and synchronize the managed texture's data with the CPU.",
                    "[_imageTexture replaceRegion:MTLRegionMake2D(textureOrigin.x, textureOrigin.y, textureSize.width, textureSize.height)",
                    "                 mipmapLevel:0",
                    "                   withBytes:textureData",
                    "                 bytesPerRow:pixelSize*textureSize.width];"
                  ],
                  "syntax": "objective-c",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "After encoding a GPU modification, encode a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLBlitCommandEncoder/synchronize(resource:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " command. This command updates the entire texture and keeps it synchronized. To update a specific texture slice or mipmap level, encode the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLBlitCommandEncoder/synchronize(texture:slice:level:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " command instead. Before executing this command, the modified texture’s data on the CPU is in an undefined state.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "// Create a command buffer for GPU work.",
                    "if let commandBuffer = commandQueue.makeCommandBuffer() {",
                    "    // Create a compute command encoder.",
                    "    guard let computeCommandEncoder =",
                    "            commandBuffer.makeComputeCommandEncoder(dispatchType: MTLDispatchType.serial)",
                    "    else { return }",
                    "    ",
                    "    // Encode a compute pass to modify the managed texture's data with the GPU.",
                    "    computeCommandEncoder.setComputePipelineState(computePipelineStateObject)",
                    "    computeCommandEncoder.setTexture(imageTexture, index: 0)",
                    "    computeCommandEncoder.dispatchThreads(gridSize, threadsPerThreadgroup: threadgroupSize)",
                    "    computeCommandEncoder.endEncoding()",
                    "    ",
                    "    // Synchronize the managed texture.",
                    "    guard let blitCommandEncoder = commandBuffer.makeBlitCommandEncoder() else { return }",
                    "    blitCommandEncoder.synchronize(resource: imageTexture)",
                    "    blitCommandEncoder.endEncoding()",
                    "    ",
                    "    // Add a completion handler.",
                    "    commandBuffer.addCompletedHandler { commandBuffer in",
                    "        // Once the completion handler is called, it's safe to use the managed resource on CPU.",
                    "    }",
                    "",
                    "    // Commit the command buffer.",
                    "    commandBuffer.commit()",
                    "}"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "// Create a command buffer for GPU work.",
                    "id <MTLCommandBuffer> commandBuffer = [_commandQueue commandBuffer];",
                    "",
                    "// Encode a compute pass to modify the managed texture's data with the GPU.",
                    "id <MTLComputeCommandEncoder> computeCommandEncoder = [commandBuffer computeCommandEncoderWithDispatchType:MTLDispatchTypeSerial];",
                    "[computeCommandEncoder setComputePipelineState:computePipelineStateObject];",
                    "[computeCommandEncoder setTexture:_imageTexture",
                    "                          atIndex:0];",
                    "[computeCommandEncoder dispatchThreads:gridSize",
                    "                 threadsPerThreadgroup:threadgroupSize];",
                    "[computeCommandEncoder endEncoding];",
                    "",
                    "// Synchronize the managed texture with an ecoded command.",
                    "id <MTLBlitCommandEncoder> blitCommandEncoder = [commandBuffer blitCommandEncoder];",
                    "[blitCommandEncoder synchronizeResource:_imageTexture];",
                    "[blitCommandEncoder endEncoding];",
                    "",
                    "// Add a completion handler and commit the command buffer.",
                    "[commandBuffer addCompletedHandler:^(id<MTLCommandBuffer> commandBuffer) {",
                    "    // Once the completion handler is called, it's safe to use the managed resource on CPU.",
                    "}];",
                    "[commandBuffer commit];"
                  ],
                  "syntax": "objective-c",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.metal/documentation/Metal": {
      "abstract": [
        {
          "text": "Render advanced 3D graphics and compute data in parallel with graphics processors.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal",
      "kind": "symbol",
      "role": "collection",
      "title": "Metal",
      "type": "topic",
      "url": "/documentation/metal"
    },
    "doc://com.apple.metal/documentation/Metal/MTLBlitCommandEncoder/synchronize(resource:)": {
      "abstract": [
        {
          "text": "Encodes a command that synchronizes the CPU’s copy of a managed resource, such as a buffer or texture, so that it matches the GPU’s copy.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "synchronize"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "resource"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLResource",
          "text": "MTLResource"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLBlitCommandEncoder/synchronize(resource:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "synchronizeResource:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "synchronize(resource:)",
      "type": "topic",
      "url": "/documentation/metal/mtlblitcommandencoder/synchronize(resource:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLBlitCommandEncoder/synchronize(texture:slice:level:)": {
      "abstract": [
        {
          "text": "Encodes a command that synchronizes a part of the CPU’s copy of a texture so that it matches the GPU’s copy.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "synchronize"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "texture"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLTexture",
          "text": "MTLTexture"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "slice"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "level"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLBlitCommandEncoder/synchronize(texture:slice:level:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "synchronizeTexture:slice:level:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "synchronize(texture:slice:level:)",
      "type": "topic",
      "url": "/documentation/metal/mtlblitcommandencoder/synchronize(texture:slice:level:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLBuffer": {
      "abstract": [
        {
          "text": "A resource that stores data in a format defined by your app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLBuffer"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLBuffer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLBuffer"
        }
      ],
      "role": "symbol",
      "title": "MTLBuffer",
      "type": "topic",
      "url": "/documentation/metal/mtlbuffer"
    },
    "doc://com.apple.metal/documentation/Metal/MTLBuffer/didModifyRange:": {
      "abstract": [
        {
          "text": "Informs the GPU that the CPU has modified a section of the buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "didModifyRange:"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLBuffer/didModifyRange:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "didModifyRange:"
        }
      ],
      "role": "symbol",
      "title": "didModifyRange:",
      "type": "topic",
      "url": "/documentation/metal/mtlbuffer/didmodifyrange:"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResource": {
      "abstract": [
        {
          "text": "An allocation of memory accessible to a GPU.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLResource"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResource",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLResource"
        }
      ],
      "role": "symbol",
      "title": "MTLResource",
      "type": "topic",
      "url": "/documentation/metal/mtlresource"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResource/storageMode": {
      "abstract": [
        {
          "text": "The location and access permissions of the resource.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "storageMode"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLStorageMode",
          "text": "MTLStorageMode"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResource/storageMode",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "storageMode"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "storageMode",
      "type": "topic",
      "url": "/documentation/metal/mtlresource/storagemode"
    },
    "doc://com.apple.metal/documentation/Metal/MTLStorageMode/managed": {
      "abstract": [
        {
          "text": "The CPU and GPU may maintain separate copies of the resource, and any changes must be explicitly synchronized.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "managed"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLStorageMode/managed",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLStorageModeManaged"
        }
      ],
      "role": "symbol",
      "title": "MTLStorageMode.managed",
      "type": "topic",
      "url": "/documentation/metal/mtlstoragemode/managed"
    },
    "doc://com.apple.metal/documentation/Metal/MTLStorageMode/shared": {
      "abstract": [
        {
          "text": "The CPU and GPU share access to the resource, allocated in system memory.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "shared"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLStorageMode/shared",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLStorageModeShared"
        }
      ],
      "role": "symbol",
      "title": "MTLStorageMode.shared",
      "type": "topic",
      "url": "/documentation/metal/mtlstoragemode/shared"
    },
    "doc://com.apple.metal/documentation/Metal/MTLTexture": {
      "abstract": [
        {
          "text": "A resource that holds formatted image data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLTexture"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLTexture",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLTexture"
        }
      ],
      "role": "symbol",
      "title": "MTLTexture",
      "type": "topic",
      "url": "/documentation/metal/mtltexture"
    },
    "doc://com.apple.metal/documentation/Metal/MTLTexture/replace(region:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:)": {
      "abstract": [
        {
          "text": "Copies pixel data into a section of a texture slice.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "replace"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "region"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@MTLRegion",
          "text": "MTLRegion"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "mipmapLevel"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "slice"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "withBytes"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SV",
          "text": "UnsafeRawPointer"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "bytesPerRow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "bytesPerImage"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLTexture/replace(region:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "replace(region:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:)",
      "type": "topic",
      "url": "/documentation/metal/mtltexture/replace(region:mipmaplevel:slice:withbytes:bytesperrow:bytesperimage:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLTexture/replace(region:mipmapLevel:withBytes:bytesPerRow:)": {
      "abstract": [
        {
          "text": "Copies a block of pixels into a section of texture slice 0.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "replace"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "region"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@SA@MTLRegion",
          "text": "MTLRegion"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "mipmapLevel"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "withBytes"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SV",
          "text": "UnsafeRawPointer"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "bytesPerRow"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLTexture/replace(region:mipmapLevel:withBytes:bytesPerRow:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "replaceRegion:mipmapLevel:withBytes:bytesPerRow:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "replace(region:mipmapLevel:withBytes:bytesPerRow:)",
      "type": "topic",
      "url": "/documentation/metal/mtltexture/replace(region:mipmaplevel:withbytes:bytesperrow:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLTextureDescriptor": {
      "abstract": [
        {
          "text": "An object that you use to configure new Metal texture objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLTextureDescriptor"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLTextureDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLTextureDescriptor"
        }
      ],
      "role": "symbol",
      "title": "MTLTextureDescriptor",
      "type": "topic",
      "url": "/documentation/metal/mtltexturedescriptor"
    },
    "doc://com.apple.metal/documentation/Metal/choosing-a-resource-storage-mode-for-apple-gpus": {
      "abstract": [
        {
          "text": "Select an appropriate storage mode for your textures and buffers on Apple GPUs.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/choosing-a-resource-storage-mode-for-apple-gpus",
      "kind": "article",
      "role": "article",
      "title": "Choosing a Resource Storage Mode for Apple GPUs",
      "type": "topic",
      "url": "/documentation/metal/choosing-a-resource-storage-mode-for-apple-gpus"
    },
    "doc://com.apple.metal/documentation/Metal/choosing-a-resource-storage-mode-for-intel-and-amd-gpus": {
      "abstract": [
        {
          "text": "Select an appropriate storage mode for your textures and buffers on AMD and Intel GPUs.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/choosing-a-resource-storage-mode-for-intel-and-amd-gpus",
      "kind": "article",
      "role": "article",
      "title": "Choosing a Resource Storage Mode for Intel and AMD GPUs",
      "type": "topic",
      "url": "/documentation/metal/choosing-a-resource-storage-mode-for-intel-and-amd-gpus"
    },
    "doc://com.apple.metal/documentation/Metal/copying-data-to-a-private-resource": {
      "abstract": [
        {
          "text": "Use a blit command encoder to copy buffer or texture data to a private resource.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/copying-data-to-a-private-resource",
      "kind": "article",
      "role": "article",
      "title": "Copying Data to a Private Resource",
      "type": "topic",
      "url": "/documentation/metal/copying-data-to-a-private-resource"
    },
    "doc://com.apple.metal/documentation/Metal/reducing-the-memory-footprint-of-metal-apps": {
      "abstract": [
        {
          "text": "Learn best practices for using memory efficiently in iOS and tvOS.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/reducing-the-memory-footprint-of-metal-apps",
      "kind": "article",
      "role": "article",
      "title": "Reducing the Memory Footprint of Metal Apps",
      "type": "topic",
      "url": "/documentation/metal/reducing-the-memory-footprint-of-metal-apps"
    },
    "doc://com.apple.metal/documentation/Metal/resource-fundamentals": {
      "abstract": [
        {
          "text": "Learn the common attributes of all Metal memory resources, including buffers and textures, and how to manage the underlying memory.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/resource-fundamentals",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Resource Fundamentals",
      "type": "topic",
      "url": "/documentation/metal/resource-fundamentals"
    },
    "doc://com.apple.metal/documentation/Metal/setting-resource-storage-modes": {
      "abstract": [
        {
          "text": "Set a storage mode that defines the memory location and access permissions of a resource.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/setting-resource-storage-modes",
      "kind": "article",
      "role": "article",
      "title": "Setting Resource Storage Modes",
      "type": "topic",
      "url": "/documentation/metal/setting-resource-storage-modes"
    },
    "doc://com.apple.metal/documentation/Metal/transferring-data-between-connected-gpus": {
      "abstract": [
        {
          "text": "Use high-speed connections between GPUs to transfer data quickly.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/transferring-data-between-connected-gpus",
      "kind": "article",
      "role": "article",
      "title": "Transferring Data Between Connected GPUs",
      "type": "topic",
      "url": "/documentation/metal/transferring-data-between-connected-gpus"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Resource-Management",
      "generated": true,
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/setting-resource-storage-modes",
        "doc://com.apple.metal/documentation/Metal/choosing-a-resource-storage-mode-for-apple-gpus",
        "doc://com.apple.metal/documentation/Metal/choosing-a-resource-storage-mode-for-intel-and-amd-gpus",
        "doc://com.apple.metal/documentation/Metal/copying-data-to-a-private-resource",
        "doc://com.apple.metal/documentation/Metal/transferring-data-between-connected-gpus",
        "doc://com.apple.metal/documentation/Metal/reducing-the-memory-footprint-of-metal-apps"
      ],
      "title": "Resource Management"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Resource-Management",
              "generated": true,
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/setting-resource-storage-modes",
                "doc://com.apple.metal/documentation/Metal/choosing-a-resource-storage-mode-for-apple-gpus",
                "doc://com.apple.metal/documentation/Metal/choosing-a-resource-storage-mode-for-intel-and-amd-gpus",
                "doc://com.apple.metal/documentation/Metal/copying-data-to-a-private-resource",
                "doc://com.apple.metal/documentation/Metal/transferring-data-between-connected-gpus",
                "doc://com.apple.metal/documentation/Metal/reducing-the-memory-footprint-of-metal-apps"
              ],
              "title": "Resource Management"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLStorageMode~1managed/title",
          "value": "MTLStorageModeManaged"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLStorageMode~1managed/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLStorageModeManaged"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLBuffer/title",
          "value": "MTLBuffer"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLBuffer/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLBuffer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLBuffer/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLBuffer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLTexture/title",
          "value": "MTLTexture"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLTexture/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLTexture"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLTexture/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLTexture"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLTexture~1replace(region:mipmapLevel:withBytes:bytesPerRow:)/title",
          "value": "replaceRegion:mipmapLevel:withBytes:bytesPerRow:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLTexture~1replace(region:mipmapLevel:withBytes:bytesPerRow:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "replaceRegion:mipmapLevel:withBytes:bytesPerRow:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLBlitCommandEncoder~1synchronize(texture:slice:level:)/title",
          "value": "synchronizeTexture:slice:level:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLBlitCommandEncoder~1synchronize(texture:slice:level:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "synchronizeTexture:slice:level:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLBlitCommandEncoder~1synchronize(resource:)/title",
          "value": "synchronizeResource:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLBlitCommandEncoder~1synchronize(resource:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "synchronizeResource:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLStorageMode~1shared/title",
          "value": "MTLStorageModeShared"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLStorageMode~1shared/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLStorageModeShared"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResource~1storageMode/title",
          "value": "storageMode"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResource~1storageMode/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "storageMode"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResource/title",
          "value": "MTLResource"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResource/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResource"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResource/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResource"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLTextureDescriptor/title",
          "value": "MTLTextureDescriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLTextureDescriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLTextureDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLTextureDescriptor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLTextureDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLTexture~1replace(region:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:)/title",
          "value": "replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLTexture~1replace(region:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/metal/synchronizing-a-managed-resource-in-macos"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/metal/synchronizing-a-managed-resource-in-macos"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
