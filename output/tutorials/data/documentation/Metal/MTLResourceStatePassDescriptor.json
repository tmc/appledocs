{
  "abstract": [
    {
      "text": "A configuration for a resource state pass, used to create a resource state command encoder.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.metal/documentation/Metal"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassDescriptor"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(cs)MTLResourceStatePassDescriptor",
    "fragments": [
      {
        "kind": "keyword",
        "text": "class"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "MTLResourceStatePassDescriptor"
      }
    ],
    "modules": [
      {
        "name": "Metal"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "MTLResourceStatePassDescriptor"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "14.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "11.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Class",
    "symbolKind": "class",
    "title": "MTLResourceStatePassDescriptor"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "class"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MTLResourceStatePassDescriptor"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.metal/documentation/Metal/sampling-gpu-data-into-counter-sample-buffers"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.metal/documentation/Metal": {
      "abstract": [
        {
          "text": "Render advanced 3D graphics and compute data in parallel with graphics processors.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal",
      "kind": "symbol",
      "role": "collection",
      "title": "Metal",
      "type": "topic",
      "url": "/documentation/metal"
    },
    "doc://com.apple.metal/documentation/Metal/MTLMapIndirectArguments": {
      "abstract": [
        {
          "text": "The data layout for mapping sparse texture regions when using indirect commands.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLMapIndirectArguments"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLMapIndirectArguments",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLMapIndirectArguments"
        }
      ],
      "role": "symbol",
      "title": "MTLMapIndirectArguments",
      "type": "topic",
      "url": "/documentation/metal/mtlmapindirectarguments"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResourceStateCommandEncoder": {
      "abstract": [
        {
          "text": "An encoder that encodes commands that modify resource configurations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLResourceStateCommandEncoder"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResourceStateCommandEncoder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLResourceStateCommandEncoder"
        }
      ],
      "role": "symbol",
      "title": "MTLResourceStateCommandEncoder",
      "type": "topic",
      "url": "/documentation/metal/mtlresourcestatecommandencoder"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassDescriptor": {
      "abstract": [
        {
          "text": "A configuration for a resource state pass, used to create a resource state command encoder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLResourceStatePassDescriptor"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLResourceStatePassDescriptor"
        }
      ],
      "role": "symbol",
      "title": "MTLResourceStatePassDescriptor",
      "type": "topic",
      "url": "/documentation/metal/mtlresourcestatepassdescriptor"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassDescriptor/resourceStatePassDescriptor": {
      "abstract": [
        {
          "text": "Creates a new resource state pass descriptor.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "+ "
        },
        {
          "kind": "identifier",
          "text": "resourceStatePassDescriptor"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassDescriptor/resourceStatePassDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "resourceStatePassDescriptor"
        }
      ],
      "role": "symbol",
      "title": "resourceStatePassDescriptor",
      "type": "topic",
      "url": "/documentation/metal/mtlresourcestatepassdescriptor/resourcestatepassdescriptor"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassDescriptor/sampleBufferAttachments": {
      "abstract": [
        {
          "text": "The array of sample buffers that the resource state pass can access.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sampleBufferAttachments"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MTLResourceStatePassSampleBufferAttachmentDescriptorArray",
          "text": "MTLResourceStatePassSampleBufferAttachmentDescriptorArray"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassDescriptor/sampleBufferAttachments",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "sampleBufferAttachments"
        }
      ],
      "role": "symbol",
      "title": "sampleBufferAttachments",
      "type": "topic",
      "url": "/documentation/metal/mtlresourcestatepassdescriptor/samplebufferattachments"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptor": {
      "abstract": [
        {
          "text": "A description of where to store GPU counter information at the start and end of a resource state pass.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLResourceStatePassSampleBufferAttachmentDescriptor"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLResourceStatePassSampleBufferAttachmentDescriptor"
        }
      ],
      "role": "symbol",
      "title": "MTLResourceStatePassSampleBufferAttachmentDescriptor",
      "type": "topic",
      "url": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptor"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptorArray": {
      "abstract": [
        {
          "text": "An array of sample buffer attachments for a resource state pass.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLResourceStatePassSampleBufferAttachmentDescriptorArray"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptorArray",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLResourceStatePassSampleBufferAttachmentDescriptorArray"
        }
      ],
      "role": "symbol",
      "title": "MTLResourceStatePassSampleBufferAttachmentDescriptorArray",
      "type": "topic",
      "url": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptorarray"
    },
    "doc://com.apple.metal/documentation/Metal/assigning-memory-to-sparse-textures": {
      "abstract": [
        {
          "text": "Use a resource state encoder to allocate and deallocate sparse tiles for a sparse texture.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/assigning-memory-to-sparse-textures",
      "kind": "article",
      "role": "article",
      "title": "Assigning Memory to Sparse Textures",
      "type": "topic",
      "url": "/documentation/metal/assigning-memory-to-sparse-textures"
    },
    "doc://com.apple.metal/documentation/Metal/converting-between-pixel-regions-and-sparse-tile-regions": {
      "abstract": [
        {
          "text": "Learn how a sparse texture’s contents are organized in memory.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/converting-between-pixel-regions-and-sparse-tile-regions",
      "kind": "article",
      "role": "article",
      "title": "Converting Between Pixel Regions and Sparse Tile Regions",
      "type": "topic",
      "url": "/documentation/metal/converting-between-pixel-regions-and-sparse-tile-regions"
    },
    "doc://com.apple.metal/documentation/Metal/creating-sparse-heaps-and-sparse-textures": {
      "abstract": [
        {
          "text": "Allocate memory for sparse textures by creating a sparse heap.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/creating-sparse-heaps-and-sparse-textures",
      "kind": "article",
      "role": "article",
      "title": "Creating Sparse Heaps and Sparse Textures",
      "type": "topic",
      "url": "/documentation/metal/creating-sparse-heaps-and-sparse-textures"
    },
    "doc://com.apple.metal/documentation/Metal/estimating-how-often-a-texture-region-is-accessed": {
      "abstract": [
        {
          "text": "Use texture access patterns to determine when you need to map a texture region.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/estimating-how-often-a-texture-region-is-accessed",
      "kind": "article",
      "role": "article",
      "title": "Estimating How Often a Texture Region Is Accessed",
      "type": "topic",
      "url": "/documentation/metal/estimating-how-often-a-texture-region-is-accessed"
    },
    "doc://com.apple.metal/documentation/Metal/managing-sparse-texture-memory": {
      "abstract": [
        {
          "text": "Take direct control of memory allocation for texture data by using sparse textures.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/managing-sparse-texture-memory",
      "kind": "article",
      "role": "article",
      "title": "Managing Sparse Texture Memory",
      "type": "topic",
      "url": "/documentation/metal/managing-sparse-texture-memory"
    },
    "doc://com.apple.metal/documentation/Metal/reading-and-writing-to-sparse-textures": {
      "abstract": [
        {
          "text": "Decide how to handle access to unmapped texture regions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/reading-and-writing-to-sparse-textures",
      "kind": "article",
      "role": "article",
      "title": "Reading and Writing to Sparse Textures",
      "type": "topic",
      "url": "/documentation/metal/reading-and-writing-to-sparse-textures"
    },
    "doc://com.apple.metal/documentation/Metal/sampling-gpu-data-into-counter-sample-buffers": {
      "abstract": [
        {
          "text": "Retrieve a GPU’s counter data at a time the GPU supports.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/sampling-gpu-data-into-counter-sample-buffers",
      "kind": "article",
      "role": "article",
      "title": "Sampling GPU Data into Counter Sample Buffers",
      "type": "topic",
      "url": "/documentation/metal/sampling-gpu-data-into-counter-sample-buffers"
    },
    "doc://com.externally.resolved.symbol/c:objc(cs)NSObject": {
      "abstract": [
        {
          "text": "The root class of most Objective-C class hierarchies, from which subclasses inherit a basic interface to the runtime system and the ability to behave as Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSObject"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObject",
      "type": "topic",
      "url": "/documentation/objectivec/nsobject"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSCopying": {
      "abstract": [
        {
          "text": "A protocol that objects adopt to provide functional copies of themselves.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSCopying"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSCopying",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSCopying",
      "type": "topic",
      "url": "/documentation/foundation/nscopying"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSObject": {
      "abstract": [
        {
          "text": "The group of methods that are fundamental to all Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObjectProtocol",
      "type": "topic",
      "url": "/documentation/objectivec/nsobjectprotocol"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomDebugStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s7CVarArgP": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as elements of a C `va_list`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s7CVarArgP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/Swift/CVarArg"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    },
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s7CVarArgP",
        "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSCopying",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSObject"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Sparse-Textures",
      "generated": true,
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/managing-sparse-texture-memory",
        "doc://com.apple.metal/documentation/Metal/creating-sparse-heaps-and-sparse-textures",
        "doc://com.apple.metal/documentation/Metal/converting-between-pixel-regions-and-sparse-tile-regions",
        "doc://com.apple.metal/documentation/Metal/assigning-memory-to-sparse-textures",
        "doc://com.apple.metal/documentation/Metal/reading-and-writing-to-sparse-textures",
        "doc://com.apple.metal/documentation/Metal/estimating-how-often-a-texture-region-is-accessed",
        "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptor",
        "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptorArray",
        "doc://com.apple.metal/documentation/Metal/MTLResourceStateCommandEncoder",
        "doc://com.apple.metal/documentation/Metal/MTLMapIndirectArguments"
      ],
      "title": "Sparse Textures"
    }
  ],
  "topicSections": [
    {
      "anchor": "Specifying-Sample-Buffers-for-GPU-Counters",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassDescriptor/sampleBufferAttachments"
      ],
      "title": "Specifying Sample Buffers for GPU Counters"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "14.0",
              "name": "iOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "14.0",
              "name": "iPadOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "14.0",
              "name": "Mac Catalyst",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "11.0",
              "name": "macOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "16.0",
              "name": "tvOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "1.0",
              "name": "visionOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Class"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "MTLResourceStatePassDescriptor"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "class"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStatePassDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStatePassDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.metal/documentation/Metal"
              ]
            ]
          }
        },
        {
          "op": "replace",
          "path": "/topicSections",
          "value": [
            {
              "anchor": "Creating-a-Resource-State-Pass-Descriptor",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassDescriptor/resourceStatePassDescriptor"
              ],
              "title": "Creating a Resource State Pass Descriptor"
            },
            {
              "anchor": "Specifying-Sample-Buffers-for-GPU-Counters",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassDescriptor/sampleBufferAttachments"
              ],
              "title": "Specifying Sample Buffers for GPU Counters"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/relationshipsSections",
          "value": [
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
              ],
              "kind": "relationships",
              "title": "Inherits From",
              "type": "inheritsFrom"
            },
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(pl)NSCopying"
              ],
              "kind": "relationships",
              "title": "Conforms To",
              "type": "conformsTo"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Sparse-Textures",
              "generated": true,
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/managing-sparse-texture-memory",
                "doc://com.apple.metal/documentation/Metal/creating-sparse-heaps-and-sparse-textures",
                "doc://com.apple.metal/documentation/Metal/converting-between-pixel-regions-and-sparse-tile-regions",
                "doc://com.apple.metal/documentation/Metal/assigning-memory-to-sparse-textures",
                "doc://com.apple.metal/documentation/Metal/reading-and-writing-to-sparse-textures",
                "doc://com.apple.metal/documentation/Metal/estimating-how-often-a-texture-region-is-accessed",
                "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptor",
                "doc://com.apple.metal/documentation/Metal/MTLResourceStatePassSampleBufferAttachmentDescriptorArray",
                "doc://com.apple.metal/documentation/Metal/MTLResourceStateCommandEncoder",
                "doc://com.apple.metal/documentation/Metal/MTLMapIndirectArguments"
              ],
              "title": "Sparse Textures"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "iOS",
                  "iPadOS",
                  "Mac Catalyst",
                  "macOS",
                  "tvOS",
                  "visionOS"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "@interface"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "MTLResourceStatePassDescriptor"
                  },
                  {
                    "kind": "text",
                    "text": " : "
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(cs)NSObject",
                    "text": "NSObject"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSObject/title",
          "value": "NSObject"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassSampleBufferAttachmentDescriptor/title",
          "value": "MTLResourceStatePassSampleBufferAttachmentDescriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassSampleBufferAttachmentDescriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStatePassSampleBufferAttachmentDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassSampleBufferAttachmentDescriptor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStatePassSampleBufferAttachmentDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassDescriptor~1sampleBufferAttachments/title",
          "value": "sampleBufferAttachments"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassDescriptor~1sampleBufferAttachments/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "sampleBufferAttachments"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLMapIndirectArguments/title",
          "value": "MTLMapIndirectArguments"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLMapIndirectArguments/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLMapIndirectArguments"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLMapIndirectArguments/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLMapIndirectArguments"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassDescriptor/title",
          "value": "MTLResourceStatePassDescriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassDescriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStatePassDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassDescriptor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStatePassDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStateCommandEncoder/title",
          "value": "MTLResourceStateCommandEncoder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStateCommandEncoder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStateCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStateCommandEncoder/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStateCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassSampleBufferAttachmentDescriptorArray/title",
          "value": "MTLResourceStatePassSampleBufferAttachmentDescriptorArray"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassSampleBufferAttachmentDescriptorArray/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStatePassSampleBufferAttachmentDescriptorArray"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResourceStatePassSampleBufferAttachmentDescriptorArray/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResourceStatePassSampleBufferAttachmentDescriptorArray"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/metal/mtlresourcestatepassdescriptor"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/metal/mtlresourcestatepassdescriptor"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
