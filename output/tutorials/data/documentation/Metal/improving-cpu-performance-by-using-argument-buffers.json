{
  "abstract": [
    {
      "text": "Optimize your app’s performance by grouping your resources into argument buffers.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.metal/documentation/Metal",
        "doc://com.apple.metal/documentation/Metal/buffers"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.metal/documentation/Metal/improving-cpu-performance-by-using-argument-buffers"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Metal"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Improving CPU Performance by Using Argument Buffers"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use argument buffers to gather multiple resources into a single shader argument. An ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "argument buffer",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " is a Metal buffer that contains references to other Metal resources, including ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLBuffer",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLTexture",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLSamplerState",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLAccelerationStructure",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " objects. Argument buffers use less overhead than assigning each resource individually. This is especially true for resources that don’t change between frames because you can assign the argument buffer once and reuse it many times.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "You need to use argument buffers to bind resources to pipelines composed of shaders that you compile with the ",
                  "type": "text"
                },
                {
                  "identifier": "https://developer.apple.com/metal/shader-converter/",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "For more information on argument buffers, watch ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/videos/play/wwdc2022/10101/",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/wwdc21/10286",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Define-Argument-Buffer-Formats-in-Metal-Shading-Language",
          "level": 3,
          "text": "Define Argument Buffer Formats in Metal Shading Language",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Declare your argument buffers in a Metal Shading Language (MSL) source file as structures.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ArgumentBufferExample{",
            "    texture2d<float, access::write> a;",
            "    depth2d<float> b;",
            "    sampler c;",
            "    texture2d<float> d;",
            "    device float4* e;",
            "    texture2d<float> f;",
            "    int g;",
            "};",
            "",
            "kernel void example(constant ArgumentBufferExample & argumentBuffer [[buffer(0)]])",
            "{",
            "    // ",
            "    ...",
            "}"
          ],
          "syntax": "metal",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Add the following types to the structures:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Basic scalar data types, such as ",
                      "type": "text"
                    },
                    {
                      "code": "half",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "float",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Basic vector and matrix data types, such as ",
                      "type": "text"
                    },
                    {
                      "code": "half4",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "float4x4",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Textures, such as ",
                      "type": "text"
                    },
                    {
                      "code": "texture2d",
                      "type": "codeVoice"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Samplers, such as a linear sampler",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Acceleration structures",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Indirect command buffers",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Arrays and structures that store the types above",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Other arrays and structures",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "Argument buffers can’t contain union types, although objects that adopt the ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.metal/documentation/Metal/MTLBuffer",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " protocol support unions.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "anchor": "Encode-Resources-into-Argument-Buffers",
          "level": 3,
          "text": "Encode Resources into Argument Buffers",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Structures in regular Metal buffers define the exact layout of the data in memory. The memory layout for argument buffers depends on the GPU’s support for argument buffers and the device’s OS version. Metal divides argument buffer support into two tiers: Tier 1 and Tier 2. For Tier 2, argument buffers match the memory layout of an equivalent C structure on these OS releases:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "iOS 16.0 and later",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "tvOS 16.0 and later",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "macOS 13.0 and later",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "To directly encode the argument buffer resources on these Tier 2 devices, write the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLBuffer",
              "isActive": true,
              "type": "reference"
            },
            {
              "code": ".",
              "type": "codeVoice"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLBuffer/gpuAddress",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property — and for other resource types (samplers, textures, and acceleration structures), the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputePipelineState/gpuResourceID",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property — into the corresponding structure member. To encode offsets, treat these property values as ",
              "type": "text"
            },
            {
              "code": "uint64",
              "type": "codeVoice"
            },
            {
              "text": " types and add the offset to them.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For Tier 1 devices and older OS versions on Tier 2 devices, buffers have a private memory layout that can vary by GPU. For these devices, use an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLArgumentEncoder",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object to encode an argument buffer’s data into a destination ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLBuffer",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object. Then pass the argument buffer as a parameter to an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " graphics or compute function, such as the following:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/setVertexBuffer(_:offset:index:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/setFragmentBuffer(_:offset:index:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/setMeshBuffer(_:offset:index:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/setObjectBuffer(_:offset:index:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/setTileBuffer(_:offset:index:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder/setBuffer(_:offset:index:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "You can encode resources into argument buffers using the following types:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLBuffer",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLTexture",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLSamplerState",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.documentation/documentation/simd/simd_float1",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ", ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.documentation/documentation/simd/simd_float4",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ", and other inlined constant data",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLAccelerationStructure",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLIndirectCommandBuffer",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputePipelineState",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderPipelineState",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Use-Heaps-to-Improve-Efficiency",
          "level": 3,
          "text": "Use Heaps to Improve Efficiency",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Encoding resources into argument buffers eliminates the need for the Metal driver to capture state and track residency when it assigns individual resources to the indices of a function’s argument table. Argument buffers provide greater control over resource residency, which you must explicitly declare before issuing draw or dispatch calls.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "When you combine resource heaps with argument buffers, you can further reduce overhead by making all read-only resources backed by a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLHeap",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " with a single call to the ",
              "type": "text"
            },
            {
              "code": "useHeap",
              "type": "codeVoice"
            },
            {
              "text": " method. However, you still need to call the ",
              "type": "text"
            },
            {
              "code": "useResource",
              "type": "codeVoice"
            },
            {
              "text": " method for each writable resource, even when your pass only intends to read from it.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Finally, argument buffers allow Metal to index resources dynamically at function execution time, which increases the limit on the number of resources that it can place inside the buffers.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Understand-Argument-Buffer-Tier-Limits-and-Capabilities",
          "level": 3,
          "text": "Understand Argument Buffer Tier Limits and Capabilities",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice/argumentBuffersSupport",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property of the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object to get its tier.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "inlineContent": [
                {
                  "text": "Common Tier 1 and Tier 2 Limits",
                  "type": "text"
                }
              ],
              "type": "strong"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "On iOS and tvOS, the maximum number of unique samplers per app is ",
              "type": "text"
            },
            {
              "code": "96",
              "type": "codeVoice"
            },
            {
              "text": ", and for macOS, ",
              "type": "text"
            },
            {
              "code": "1024",
              "type": "codeVoice"
            },
            {
              "text": " or greater, depending on the device and OS version.",
              "type": "text"
            },
            {
              "code": " ",
              "type": "codeVoice"
            },
            {
              "text": "These limits are only applicable to samplers that have their ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLSamplerDescriptor/supportArgumentBuffers",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property set to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/swift/true",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". Use the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice",
              "isActive": true,
              "type": "reference"
            },
            {
              "code": ".",
              "type": "codeVoice"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice/maxArgumentBufferSamplerCount",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property to get the exact maximum number of unique samplers per app for a device.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Metal considers a ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLSamplerState",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " object unique if the configuration of its originating ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLSamplerDescriptor",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " properties is unique. For example, if two samplers have equal ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLSamplerDescriptor/minFilter",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " values but different ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLSamplerDescriptor/magFilter",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " values, Metal considers them different objects.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For the maximum number of entries in each function argument table, see ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/metal/Metal-Feature-Set-Tables.pdf",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "inlineContent": [
                {
                  "text": "Tier 1 Limits",
                  "type": "text"
                }
              ],
              "type": "strong"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For Tier 1, Metal imposes resource limits on the maximum combined number of resources set within an argument buffer and set individually, per graphics or compute function. Metal counts the argument buffer entries against the maximum buffer entries in each function argument table. For example, if a kernel function uses four individual textures and one argument buffer with eight textures, the total number of textures for that kernel function is 12. Tier 1 argument buffers can’t include writable textures.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Other Tier 1 limits on argument buffers are:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Need to be immutable because the GPU can’t modify the contents of an argument buffer",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Need to be CPU-accessible, so set the buffer’s storage mode to either ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLStorageMode/shared",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " or ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLStorageMode/managed",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Can’t be accessible through pointer indexing, or include pointers to other argument buffers, in MSL",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "inlineContent": [
                {
                  "text": "Tier 2 Limits",
                  "type": "text"
                }
              ],
              "type": "strong"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "GPUs that support Tier 2 argument buffers have significantly higher limits that enable more capabilities in your app.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "For Tier 2, argument buffers can be mutable so that the GPU and CPU can both modify the contents of them at any time. However, Metal may perform certain optimizations if you specify that neither the CPU nor the GPU modifies a buffer’s contents between the time Metal sets the buffer in a function’s argument table and the time Metal completes execution of the associated command buffer. Metal considers these types of argument buffers immutable. To indicate that an argument buffer is immutable and let Metal perform optimizations, set its associated ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLPipelineBufferDescriptor",
              "isActive": true,
              "type": "reference"
            },
            {
              "code": ".",
              "type": "codeVoice"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLPipelineBufferDescriptor/mutability",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLMutability/immutable",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In MSL, you access Tier 2 argument buffers by indexing a pointer.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ArgumentBufferTextures {",
            "    texture2d<float> diffuse;",
            "    texture2d<float> specular;",
            "};",
            "",
            "struct ArgumentBufferMaterial {",
            "    device ArgumentBufferTextures *textures;",
            "};",
            "",
            "fragment float4 exampleFragment(device ArgumentBufferMaterial & material)",
            "{",
            "    return material.textures[4]->diffuse.read(uint2(0));",
            "}"
          ],
          "syntax": "metal",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Because you can’t copy samplers from the thread address space to the device address space, you only copy argument buffer samplers between argument buffers. For example, if you create ",
              "type": "text"
            },
            {
              "code": "constexpr",
              "type": "codeVoice"
            },
            {
              "text": " samplers in shaders by default in the thread address space, you can’t assign them to buffers in the device address space.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ArgumentBufferSampler {",
            "    sampler sampler0;",
            "};",
            "",
            "kernel void exampleKernel(device ArgumentBufferSampler *source,",
            "                          device ArgumentBufferSampler *destination,",
            "                          sampler sampler1) {",
            "    constexpr sampler sampler2;",
            "",
            "    // Metal allows device-to-device copies.",
            "    destination->sampler0 = source->sampler0;",
            "",
            "    // Metal doesn't allow thread-to-device copies.",
            "    destination->sampler0 = sampler1;",
            "    destination->sampler0 = sampler2;",
            "}"
          ],
          "syntax": "metal",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/simd/simd_float1": {
      "abstract": [
        {
          "text": "A vector of one 32-bit floating-point element.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "simd_float1"
        },
        {
          "kind": "text",
          "text": " = "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sf",
          "text": "Float"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/simd/simd_float1",
      "kind": "symbol",
      "role": "symbol",
      "title": "simd_float1",
      "type": "topic",
      "url": "/documentation/simd/simd_float1"
    },
    "doc://com.apple.documentation/documentation/simd/simd_float4": {
      "abstract": [
        {
          "text": "A vector of four 32-bit floating-point elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "simd_float4"
        },
        {
          "kind": "text",
          "text": " = "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5SIMD4V",
          "text": "SIMD4"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sf",
          "text": "Float"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/simd/simd_float4",
      "kind": "symbol",
      "role": "symbol",
      "title": "simd_float4",
      "type": "topic",
      "url": "/documentation/simd/simd_float4"
    },
    "doc://com.apple.documentation/documentation/swift/true": {
      "abstract": [
        {
          "text": "A true value.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/swift/true",
      "kind": "symbol",
      "role": "symbol",
      "title": "true",
      "type": "topic",
      "url": "/documentation/swift/true"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.metal/documentation/Metal": {
      "abstract": [
        {
          "text": "Render advanced 3D graphics and compute data in parallel with graphics processors.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal",
      "kind": "symbol",
      "role": "collection",
      "title": "Metal",
      "type": "topic",
      "url": "/documentation/metal"
    },
    "doc://com.apple.metal/documentation/Metal/MTLAccelerationStructure": {
      "abstract": [
        {
          "text": "A collection of model data for GPU-accelerated intersection of rays with the model.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLAccelerationStructure"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLAccelerationStructure",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLAccelerationStructure"
        }
      ],
      "role": "symbol",
      "title": "MTLAccelerationStructure",
      "type": "topic",
      "url": "/documentation/metal/mtlaccelerationstructure"
    },
    "doc://com.apple.metal/documentation/Metal/MTLArgumentDescriptor": {
      "abstract": [
        {
          "text": "A representation of an argument within an argument buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLArgumentDescriptor"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLArgumentDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLArgumentDescriptor"
        }
      ],
      "role": "symbol",
      "title": "MTLArgumentDescriptor",
      "type": "topic",
      "url": "/documentation/metal/mtlargumentdescriptor"
    },
    "doc://com.apple.metal/documentation/Metal/MTLArgumentEncoder": {
      "abstract": [
        {
          "text": "An object used to encode data into an argument buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLArgumentEncoder"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLArgumentEncoder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLArgumentEncoder"
        }
      ],
      "role": "symbol",
      "title": "MTLArgumentEncoder",
      "type": "topic",
      "url": "/documentation/metal/mtlargumentencoder"
    },
    "doc://com.apple.metal/documentation/Metal/MTLAttributeStrideStatic": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLAttributeStrideStatic"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLAttributeStrideStatic",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLAttributeStrideStatic"
        }
      ],
      "role": "symbol",
      "title": "MTLAttributeStrideStatic",
      "type": "topic",
      "url": "/documentation/metal/mtlattributestridestatic"
    },
    "doc://com.apple.metal/documentation/Metal/MTLBuffer": {
      "abstract": [
        {
          "text": "A resource that stores data in a format defined by your app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLBuffer"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLBuffer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLBuffer"
        }
      ],
      "role": "symbol",
      "title": "MTLBuffer",
      "type": "topic",
      "url": "/documentation/metal/mtlbuffer"
    },
    "doc://com.apple.metal/documentation/Metal/MTLBuffer/gpuAddress": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "gpuAddress"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt64V",
          "text": "UInt64"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLBuffer/gpuAddress",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "gpuAddress"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "gpuAddress",
      "type": "topic",
      "url": "/documentation/metal/mtlbuffer/gpuaddress"
    },
    "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder": {
      "abstract": [
        {
          "text": "An interface for dispatching commands to encode in a compute pass.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLComputeCommandEncoder"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLComputeCommandEncoder"
        }
      ],
      "role": "symbol",
      "title": "MTLComputeCommandEncoder",
      "type": "topic",
      "url": "/documentation/metal/mtlcomputecommandencoder"
    },
    "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder/setBuffer(_:offset:index:)": {
      "abstract": [
        {
          "text": "Binds a buffer to the buffer argument table, allowing compute kernels to access its data on the GPU.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setBuffer"
        },
        {
          "kind": "text",
          "text": "((any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLBuffer",
          "text": "MTLBuffer"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "offset"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "index"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder/setBuffer(_:offset:index:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setBuffer:offset:atIndex:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "setBuffer(_:offset:index:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcomputecommandencoder/setbuffer(_:offset:index:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLComputePipelineState": {
      "abstract": [
        {
          "text": "An interface that represents a GPU pipeline configuration for running kernels in a compute pass.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLComputePipelineState"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputePipelineState",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLComputePipelineState"
        }
      ],
      "role": "symbol",
      "title": "MTLComputePipelineState",
      "type": "topic",
      "url": "/documentation/metal/mtlcomputepipelinestate"
    },
    "doc://com.apple.metal/documentation/Metal/MTLComputePipelineState/gpuResourceID": {
      "abstract": [
        {
          "text": "An unique identifier that represents the pipeline state, which you can add to an argument buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "gpuResourceID"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@S@MTLResourceID",
          "text": "MTLResourceID"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputePipelineState/gpuResourceID",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "gpuResourceID"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "gpuResourceID",
      "type": "topic",
      "url": "/documentation/metal/mtlcomputepipelinestate/gpuresourceid"
    },
    "doc://com.apple.metal/documentation/Metal/MTLDevice": {
      "abstract": [
        {
          "text": "The main Metal interface to a GPU that apps use to draw graphics and run computations in parallel.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLDevice"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLDevice"
        }
      ],
      "role": "symbol",
      "title": "MTLDevice",
      "type": "topic",
      "url": "/documentation/metal/mtldevice"
    },
    "doc://com.apple.metal/documentation/Metal/MTLDevice/argumentBuffersSupport": {
      "abstract": [
        {
          "text": "Returns the GPU device’s support tier for argument buffers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "argumentBuffersSupport"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLArgumentBuffersTier",
          "text": "MTLArgumentBuffersTier"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice/argumentBuffersSupport",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "argumentBuffersSupport"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "argumentBuffersSupport",
      "type": "topic",
      "url": "/documentation/metal/mtldevice/argumentbufferssupport"
    },
    "doc://com.apple.metal/documentation/Metal/MTLDevice/maxArgumentBufferSamplerCount": {
      "abstract": [
        {
          "text": "The maximum number of unique argument buffer samplers per app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "maxArgumentBufferSamplerCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice/maxArgumentBufferSamplerCount",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "maxArgumentBufferSamplerCount"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "maxArgumentBufferSamplerCount",
      "type": "topic",
      "url": "/documentation/metal/mtldevice/maxargumentbuffersamplercount"
    },
    "doc://com.apple.metal/documentation/Metal/MTLHeap": {
      "abstract": [
        {
          "text": "A memory pool from which you can suballocate resources.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLHeap"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLHeap",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLHeap"
        }
      ],
      "role": "symbol",
      "title": "MTLHeap",
      "type": "topic",
      "url": "/documentation/metal/mtlheap"
    },
    "doc://com.apple.metal/documentation/Metal/MTLIndirectCommandBuffer": {
      "abstract": [
        {
          "text": "A command buffer containing reusable commands, encoded either on the CPU or GPU.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLIndirectCommandBuffer"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLIndirectCommandBuffer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLIndirectCommandBuffer"
        }
      ],
      "role": "symbol",
      "title": "MTLIndirectCommandBuffer",
      "type": "topic",
      "url": "/documentation/metal/mtlindirectcommandbuffer"
    },
    "doc://com.apple.metal/documentation/Metal/MTLMutability/immutable": {
      "abstract": [
        {
          "text": "An option that states that you can’t modify the buffer’s contents.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "immutable"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLMutability/immutable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLMutabilityImmutable"
        }
      ],
      "role": "symbol",
      "title": "MTLMutability.immutable",
      "type": "topic",
      "url": "/documentation/metal/mtlmutability/immutable"
    },
    "doc://com.apple.metal/documentation/Metal/MTLPipelineBufferDescriptor": {
      "abstract": [
        {
          "text": "The mutability options for a buffer that a render or compute pipeline uses.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLPipelineBufferDescriptor"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLPipelineBufferDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLPipelineBufferDescriptor"
        }
      ],
      "role": "symbol",
      "title": "MTLPipelineBufferDescriptor",
      "type": "topic",
      "url": "/documentation/metal/mtlpipelinebufferdescriptor"
    },
    "doc://com.apple.metal/documentation/Metal/MTLPipelineBufferDescriptor/mutability": {
      "abstract": [
        {
          "text": "A mutability option that determines whether you can update a buffer’s contents before related commands use the buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "mutability"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLMutability",
          "text": "MTLMutability"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLPipelineBufferDescriptor/mutability",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "mutability"
        }
      ],
      "role": "symbol",
      "title": "mutability",
      "type": "topic",
      "url": "/documentation/metal/mtlpipelinebufferdescriptor/mutability"
    },
    "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder": {
      "abstract": [
        {
          "text": "An interface that encodes a render pass into a command buffer, including all its draw calls and configuration.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLRenderCommandEncoder"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLRenderCommandEncoder"
        }
      ],
      "role": "symbol",
      "title": "MTLRenderCommandEncoder",
      "type": "topic",
      "url": "/documentation/metal/mtlrendercommandencoder"
    },
    "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/setFragmentBuffer(_:offset:index:)": {
      "abstract": [
        {
          "text": "Assigns a buffer to an entry in the fragment shader argument table.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setFragmentBuffer"
        },
        {
          "kind": "text",
          "text": "((any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLBuffer",
          "text": "MTLBuffer"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "offset"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "index"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/setFragmentBuffer(_:offset:index:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setFragmentBuffer:offset:atIndex:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "setFragmentBuffer(_:offset:index:)",
      "type": "topic",
      "url": "/documentation/metal/mtlrendercommandencoder/setfragmentbuffer(_:offset:index:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/setMeshBuffer(_:offset:index:)": {
      "abstract": [
        {
          "text": "Assigns a buffer to an entry in the mesh shader argument table.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setMeshBuffer"
        },
        {
          "kind": "text",
          "text": "((any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLBuffer",
          "text": "MTLBuffer"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "offset"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "index"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/setMeshBuffer(_:offset:index:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setMeshBuffer:offset:atIndex:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "setMeshBuffer(_:offset:index:)",
      "type": "topic",
      "url": "/documentation/metal/mtlrendercommandencoder/setmeshbuffer(_:offset:index:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/setObjectBuffer(_:offset:index:)": {
      "abstract": [
        {
          "text": "Assigns a buffer to an entry in the object shader argument table.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setObjectBuffer"
        },
        {
          "kind": "text",
          "text": "((any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLBuffer",
          "text": "MTLBuffer"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "offset"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "index"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/setObjectBuffer(_:offset:index:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setObjectBuffer:offset:atIndex:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "setObjectBuffer(_:offset:index:)",
      "type": "topic",
      "url": "/documentation/metal/mtlrendercommandencoder/setobjectbuffer(_:offset:index:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/setTileBuffer(_:offset:index:)": {
      "abstract": [
        {
          "text": "Assigns a buffer to an entry in the tile shader argument table.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setTileBuffer"
        },
        {
          "kind": "text",
          "text": "((any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLBuffer",
          "text": "MTLBuffer"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "offset"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "index"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/setTileBuffer(_:offset:index:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setTileBuffer:offset:atIndex:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "setTileBuffer(_:offset:index:)",
      "type": "topic",
      "url": "/documentation/metal/mtlrendercommandencoder/settilebuffer(_:offset:index:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/setVertexBuffer(_:offset:index:)": {
      "abstract": [
        {
          "text": "Assigns a buffer to an entry in the vertex shader argument table.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "setVertexBuffer"
        },
        {
          "kind": "text",
          "text": "((any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLBuffer",
          "text": "MTLBuffer"
        },
        {
          "kind": "text",
          "text": ")?, "
        },
        {
          "kind": "externalParam",
          "text": "offset"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "index"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/setVertexBuffer(_:offset:index:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "setVertexBuffer:offset:atIndex:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "setVertexBuffer(_:offset:index:)",
      "type": "topic",
      "url": "/documentation/metal/mtlrendercommandencoder/setvertexbuffer(_:offset:index:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLRenderPipelineState": {
      "abstract": [
        {
          "text": "An interface that represents a graphics pipeline configuration for a render pass, which the pass applies to the draw commands you encode.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLRenderPipelineState"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderPipelineState",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLRenderPipelineState"
        }
      ],
      "role": "symbol",
      "title": "MTLRenderPipelineState",
      "type": "topic",
      "url": "/documentation/metal/mtlrenderpipelinestate"
    },
    "doc://com.apple.metal/documentation/Metal/MTLSamplerDescriptor": {
      "abstract": [
        {
          "text": "An object that you use to configure a texture sampler.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLSamplerDescriptor"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLSamplerDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLSamplerDescriptor"
        }
      ],
      "role": "symbol",
      "title": "MTLSamplerDescriptor",
      "type": "topic",
      "url": "/documentation/metal/mtlsamplerdescriptor"
    },
    "doc://com.apple.metal/documentation/Metal/MTLSamplerDescriptor/magFilter": {
      "abstract": [
        {
          "text": "The filtering operation for combining pixels within one mipmap level when the sample footprint is smaller than a pixel (magnification).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "magFilter"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLSamplerMinMagFilter",
          "text": "MTLSamplerMinMagFilter"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLSamplerDescriptor/magFilter",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "magFilter"
        }
      ],
      "role": "symbol",
      "title": "magFilter",
      "type": "topic",
      "url": "/documentation/metal/mtlsamplerdescriptor/magfilter"
    },
    "doc://com.apple.metal/documentation/Metal/MTLSamplerDescriptor/minFilter": {
      "abstract": [
        {
          "text": "The filtering option for combining pixels within one mipmap level when the sample footprint is larger than a pixel (minification).",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "minFilter"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLSamplerMinMagFilter",
          "text": "MTLSamplerMinMagFilter"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLSamplerDescriptor/minFilter",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "minFilter"
        }
      ],
      "role": "symbol",
      "title": "minFilter",
      "type": "topic",
      "url": "/documentation/metal/mtlsamplerdescriptor/minfilter"
    },
    "doc://com.apple.metal/documentation/Metal/MTLSamplerDescriptor/supportArgumentBuffers": {
      "abstract": [
        {
          "text": "A Boolean value that indicates whether you can reference a sampler, that you make",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "with this descriptor, by its resource ID from an argument buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "supportArgumentBuffers"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLSamplerDescriptor/supportArgumentBuffers",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "supportArgumentBuffers"
        }
      ],
      "role": "symbol",
      "title": "supportArgumentBuffers",
      "type": "topic",
      "url": "/documentation/metal/mtlsamplerdescriptor/supportargumentbuffers"
    },
    "doc://com.apple.metal/documentation/Metal/MTLSamplerState": {
      "abstract": [
        {
          "text": "An object that defines how a texture should be sampled.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLSamplerState"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLSamplerState",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLSamplerState"
        }
      ],
      "role": "symbol",
      "title": "MTLSamplerState",
      "type": "topic",
      "url": "/documentation/metal/mtlsamplerstate"
    },
    "doc://com.apple.metal/documentation/Metal/MTLStorageMode/managed": {
      "abstract": [
        {
          "text": "The CPU and GPU may maintain separate copies of the resource, and any changes must be explicitly synchronized.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "managed"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLStorageMode/managed",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLStorageModeManaged"
        }
      ],
      "role": "symbol",
      "title": "MTLStorageMode.managed",
      "type": "topic",
      "url": "/documentation/metal/mtlstoragemode/managed"
    },
    "doc://com.apple.metal/documentation/Metal/MTLStorageMode/shared": {
      "abstract": [
        {
          "text": "The CPU and GPU share access to the resource, allocated in system memory.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "shared"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLStorageMode/shared",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLStorageModeShared"
        }
      ],
      "role": "symbol",
      "title": "MTLStorageMode.shared",
      "type": "topic",
      "url": "/documentation/metal/mtlstoragemode/shared"
    },
    "doc://com.apple.metal/documentation/Metal/MTLTexture": {
      "abstract": [
        {
          "text": "A resource that holds formatted image data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLTexture"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLTexture",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLTexture"
        }
      ],
      "role": "symbol",
      "title": "MTLTexture",
      "type": "topic",
      "url": "/documentation/metal/mtltexture"
    },
    "doc://com.apple.metal/documentation/Metal/buffers": {
      "abstract": [
        {
          "text": "Create and manage untyped data your app uses to exchange information with its shader functions.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/buffers",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Buffers",
      "type": "topic",
      "url": "/documentation/metal/buffers"
    },
    "doc://com.apple.metal/documentation/Metal/encoding-argument-buffers-on-the-gpu": {
      "abstract": [
        {
          "text": "Use a compute pass to encode an argument buffer and access its arguments in a subsequent render pass.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/encoding-argument-buffers-on-the-gpu",
      "kind": "article",
      "role": "sampleCode",
      "title": "Encoding Argument Buffers on the GPU",
      "type": "topic",
      "url": "/documentation/metal/encoding-argument-buffers-on-the-gpu"
    },
    "doc://com.apple.metal/documentation/Metal/indexing-argument-buffers": {
      "abstract": [
        {
          "text": "Assign resource indices within an argument buffer.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/indexing-argument-buffers",
      "kind": "article",
      "role": "article",
      "title": "Indexing Argument Buffers",
      "type": "topic",
      "url": "/documentation/metal/indexing-argument-buffers"
    },
    "doc://com.apple.metal/documentation/Metal/managing-groups-of-resources-with-argument-buffers": {
      "abstract": [
        {
          "text": "Create argument buffers to organize related resources.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/managing-groups-of-resources-with-argument-buffers",
      "kind": "article",
      "role": "sampleCode",
      "title": "Managing groups of resources with argument buffers",
      "type": "topic",
      "url": "/documentation/metal/managing-groups-of-resources-with-argument-buffers"
    },
    "doc://com.apple.metal/documentation/Metal/rendering-terrain-dynamically-with-argument-buffers": {
      "abstract": [
        {
          "text": "Use argument buffers to render terrain in real time with a GPU-driven pipeline.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/rendering-terrain-dynamically-with-argument-buffers",
      "kind": "article",
      "role": "sampleCode",
      "title": "Rendering Terrain Dynamically with Argument Buffers",
      "type": "topic",
      "url": "/documentation/metal/rendering-terrain-dynamically-with-argument-buffers"
    },
    "doc://com.apple.metal/documentation/Metal/tracking-the-resource-residency-of-argument-buffers": {
      "abstract": [
        {
          "text": "Optimize resource performance within an argument buffer.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/tracking-the-resource-residency-of-argument-buffers",
      "kind": "article",
      "role": "article",
      "title": "Tracking the Resource Residency of Argument Buffers",
      "type": "topic",
      "url": "/documentation/metal/tracking-the-resource-residency-of-argument-buffers"
    },
    "doc://com.apple.metal/documentation/Metal/using-argument-buffers-with-resource-heaps": {
      "abstract": [
        {
          "text": "Reduce CPU overhead by using arrays inside argument buffers and combining them with resource heaps.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/using-argument-buffers-with-resource-heaps",
      "kind": "article",
      "role": "sampleCode",
      "title": "Using Argument Buffers with Resource Heaps",
      "type": "topic",
      "url": "/documentation/metal/using-argument-buffers-with-resource-heaps"
    },
    "https://developer.apple.com/metal/Metal-Feature-Set-Tables.pdf": {
      "identifier": "https://developer.apple.com/metal/Metal-Feature-Set-Tables.pdf",
      "title": "Metal feature set tables",
      "titleInlineContent": [
        {
          "text": "Metal feature set tables",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/metal/Metal-Feature-Set-Tables.pdf"
    },
    "https://developer.apple.com/metal/shader-converter/": {
      "identifier": "https://developer.apple.com/metal/shader-converter/",
      "title": "Metal shader converter",
      "titleInlineContent": [
        {
          "text": "Metal shader converter",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/metal/shader-converter/"
    },
    "https://developer.apple.com/videos/play/wwdc2022/10101/": {
      "identifier": "https://developer.apple.com/videos/play/wwdc2022/10101/",
      "title": "Go bindless with Metal 3",
      "titleInlineContent": [
        {
          "text": "Go bindless with Metal 3",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/videos/play/wwdc2022/10101/"
    },
    "https://developer.apple.com/wwdc21/10286": {
      "identifier": "https://developer.apple.com/wwdc21/10286",
      "title": "Explore bindless rendering in Metal",
      "titleInlineContent": [
        {
          "text": "Explore bindless rendering in Metal",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/wwdc21/10286"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Argument-Buffers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/managing-groups-of-resources-with-argument-buffers",
        "doc://com.apple.metal/documentation/Metal/tracking-the-resource-residency-of-argument-buffers",
        "doc://com.apple.metal/documentation/Metal/indexing-argument-buffers",
        "doc://com.apple.metal/documentation/Metal/rendering-terrain-dynamically-with-argument-buffers",
        "doc://com.apple.metal/documentation/Metal/encoding-argument-buffers-on-the-gpu",
        "doc://com.apple.metal/documentation/Metal/using-argument-buffers-with-resource-heaps",
        "doc://com.apple.metal/documentation/Metal/MTLArgumentDescriptor",
        "doc://com.apple.metal/documentation/Metal/MTLArgumentEncoder",
        "doc://com.apple.metal/documentation/Metal/MTLAttributeStrideStatic"
      ],
      "title": "Argument Buffers"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Argument-Buffers",
              "generated": true,
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/managing-groups-of-resources-with-argument-buffers",
                "doc://com.apple.metal/documentation/Metal/tracking-the-resource-residency-of-argument-buffers",
                "doc://com.apple.metal/documentation/Metal/indexing-argument-buffers",
                "doc://com.apple.metal/documentation/Metal/rendering-terrain-dynamically-with-argument-buffers",
                "doc://com.apple.metal/documentation/Metal/encoding-argument-buffers-on-the-gpu",
                "doc://com.apple.metal/documentation/Metal/using-argument-buffers-with-resource-heaps",
                "doc://com.apple.metal/documentation/Metal/MTLArgumentDescriptor",
                "doc://com.apple.metal/documentation/Metal/MTLArgumentEncoder",
                "doc://com.apple.metal/documentation/Metal/MTLAttributeStrideStatic"
              ],
              "title": "Argument Buffers"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLAccelerationStructure/title",
          "value": "MTLAccelerationStructure"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLAccelerationStructure/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLAccelerationStructure"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLAccelerationStructure/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLAccelerationStructure"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder~1setMeshBuffer(_:offset:index:)/title",
          "value": "setMeshBuffer:offset:atIndex:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder~1setMeshBuffer(_:offset:index:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setMeshBuffer:offset:atIndex:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder/title",
          "value": "MTLRenderCommandEncoder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLRenderCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLRenderCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLAttributeStrideStatic/title",
          "value": "MTLAttributeStrideStatic"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLAttributeStrideStatic/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLAttributeStrideStatic"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLSamplerDescriptor~1minFilter/title",
          "value": "minFilter"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLSamplerDescriptor~1minFilter/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "minFilter"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLArgumentEncoder/title",
          "value": "MTLArgumentEncoder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLArgumentEncoder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLArgumentEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLArgumentEncoder/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLArgumentEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice~1maxArgumentBufferSamplerCount/title",
          "value": "maxArgumentBufferSamplerCount"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice~1maxArgumentBufferSamplerCount/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "maxArgumentBufferSamplerCount"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLPipelineBufferDescriptor~1mutability/title",
          "value": "mutability"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLPipelineBufferDescriptor~1mutability/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "mutability"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputeCommandEncoder~1setBuffer(_:offset:index:)/title",
          "value": "setBuffer:offset:atIndex:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputeCommandEncoder~1setBuffer(_:offset:index:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setBuffer:offset:atIndex:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputePipelineState~1gpuResourceID/title",
          "value": "gpuResourceID"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputePipelineState~1gpuResourceID/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "gpuResourceID"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderPipelineState/title",
          "value": "MTLRenderPipelineState"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderPipelineState/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLRenderPipelineState"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderPipelineState/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLRenderPipelineState"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLTexture/title",
          "value": "MTLTexture"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLTexture/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLTexture"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLTexture/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLTexture"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLBuffer~1gpuAddress/title",
          "value": "gpuAddress"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLBuffer~1gpuAddress/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "gpuAddress"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLPipelineBufferDescriptor/title",
          "value": "MTLPipelineBufferDescriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLPipelineBufferDescriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLPipelineBufferDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLPipelineBufferDescriptor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLPipelineBufferDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder~1setVertexBuffer(_:offset:index:)/title",
          "value": "setVertexBuffer:offset:atIndex:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder~1setVertexBuffer(_:offset:index:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setVertexBuffer:offset:atIndex:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLSamplerDescriptor~1magFilter/title",
          "value": "magFilter"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLSamplerDescriptor~1magFilter/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "magFilter"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLMutability~1immutable/title",
          "value": "MTLMutabilityImmutable"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLMutability~1immutable/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLMutabilityImmutable"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLHeap/title",
          "value": "MTLHeap"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLHeap/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLHeap"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLHeap/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLHeap"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1simd~1simd_float1/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "typedef"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:f",
              "text": "float"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "simd_float1"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLBuffer/title",
          "value": "MTLBuffer"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLBuffer/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLBuffer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLBuffer/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLBuffer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice/title",
          "value": "MTLDevice"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLDevice"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLDevice"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLIndirectCommandBuffer/title",
          "value": "MTLIndirectCommandBuffer"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLIndirectCommandBuffer/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLIndirectCommandBuffer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLIndirectCommandBuffer/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLIndirectCommandBuffer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLSamplerState/title",
          "value": "MTLSamplerState"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLSamplerState/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLSamplerState"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLSamplerState/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLSamplerState"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLStorageMode~1shared/title",
          "value": "MTLStorageModeShared"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLStorageMode~1shared/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLStorageModeShared"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLStorageMode~1managed/title",
          "value": "MTLStorageModeManaged"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLStorageMode~1managed/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLStorageModeManaged"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.documentation~1documentation~1simd~1simd_float4/fragments",
          "value": [
            {
              "kind": "keyword",
              "text": "typedef"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:]4f",
              "text": "float __attribute__((ext_vector_type(4)))"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "simd_float4"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder~1setFragmentBuffer(_:offset:index:)/title",
          "value": "setFragmentBuffer:offset:atIndex:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder~1setFragmentBuffer(_:offset:index:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setFragmentBuffer:offset:atIndex:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder~1setObjectBuffer(_:offset:index:)/title",
          "value": "setObjectBuffer:offset:atIndex:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder~1setObjectBuffer(_:offset:index:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setObjectBuffer:offset:atIndex:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLSamplerDescriptor~1supportArgumentBuffers/title",
          "value": "supportArgumentBuffers"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLSamplerDescriptor~1supportArgumentBuffers/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "supportArgumentBuffers"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLArgumentDescriptor/title",
          "value": "MTLArgumentDescriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLArgumentDescriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLArgumentDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLArgumentDescriptor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLArgumentDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder~1setTileBuffer(_:offset:index:)/title",
          "value": "setTileBuffer:offset:atIndex:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder~1setTileBuffer(_:offset:index:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "setTileBuffer:offset:atIndex:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputeCommandEncoder/title",
          "value": "MTLComputeCommandEncoder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputeCommandEncoder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLComputeCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputeCommandEncoder/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLComputeCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLSamplerDescriptor/title",
          "value": "MTLSamplerDescriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLSamplerDescriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLSamplerDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLSamplerDescriptor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLSamplerDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputePipelineState/title",
          "value": "MTLComputePipelineState"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputePipelineState/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLComputePipelineState"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputePipelineState/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLComputePipelineState"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice~1argumentBuffersSupport/title",
          "value": "argumentBuffersSupport"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice~1argumentBuffersSupport/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "argumentBuffersSupport"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/metal/improving-cpu-performance-by-using-argument-buffers"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/metal/improving-cpu-performance-by-using-argument-buffers"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
