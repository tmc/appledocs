{
  "abstract": [
    {
      "text": "A container that stores a sequence of GPU commands that you encode into it.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.metal/documentation/Metal"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(pl)MTLCommandBuffer",
    "fragments": [
      {
        "kind": "keyword",
        "text": "protocol"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "MTLCommandBuffer"
      }
    ],
    "modules": [
      {
        "name": "Metal"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "MTLCommandBuffer"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.1",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.11",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Protocol",
    "symbolKind": "protocol",
    "title": "MTLCommandBuffer"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MTLCommandBuffer"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObjectProtocol"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.metal/documentation/Metal/setting-up-a-command-structure",
        "doc://com.apple.metal/documentation/Metal/simplifying-gpu-resource-management-with-residency-sets",
        "doc://com.apple.metal/documentation/Metal/tracking-the-resource-residency-of-argument-buffers"
      ]
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A command buffer represents a chunk of work for the GPU that stores the commands you encode to it, as well as any resources those commands need. You primarily use a command buffer to:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Create command encoders and call their methods to add commands to the buffer",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Optionally reserve a place for the command buffer in its command queue by ",
                      "type": "text"
                    },
                    {
                      "inlineContent": [
                        {
                          "text": "enqueuing",
                          "type": "text"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "text": " the command buffer, even before you encode any commands into it",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Submit, or commit_,_ the contents of the command buffer to the command queue that creates it to run on the GPU device the queue represents",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "Create a command encoder from an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandQueue",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " instance by calling its ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandQueue/makeCommandBuffer()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method. Typically, you create one or more command queues when your app launches and then keep them throughout your appâ€™s lifetime.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To add commands to an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " instance, create an encoder from one of its factory methods, including:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "An ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " instance by calling ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/makeRenderCommandEncoder(descriptor:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "An ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " instance by calling ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/makeComputeCommandEncoder(dispatchType:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "An ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLBlitCommandEncoder",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " instance by calling ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/makeBlitCommandEncoder()",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " or ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/makeBlitCommandEncoder(descriptor:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "An ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLParallelRenderCommandEncoder",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " instance by calling ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/makeParallelRenderCommandEncoder(descriptor:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "All encoders inherit additional methods from the ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandEncoder",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "You can use only a single encoder at a time to add commands to a command buffer. To start using a different command encoder, first signal that youâ€™re done with the current encoder by calling its ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandEncoder/endEncoding()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method. Then create another command encoder from the command buffer and continue adding commands to the buffer with the new encoder.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Repeat the process until you finish encoding commands to the command buffer and are ready to run the bufferâ€™s contents on the GPU. Then submit the command buffer to the command queue that you used to create it by calling the command bufferâ€™s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/commit()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method. After an app commits a command buffer, you check its ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/status",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " property or block a thread by calling its ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/waitUntilScheduled()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/waitUntilCompleted()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " methods.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You also have the option to reserve a place for the command buffer in its command queue by calling the command bufferâ€™s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/enqueue()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method. You can call this method exactly once at any time before you commit the buffer to the queue. If you donâ€™t enqueue a command buffer, it implicitly enqueues itself when you commit it. Each command queue ensures the order that you enqueue its command buffers is the same order the queue schedules them to run on the GPU.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "Establish an order of execution for multiple command buffers you encode in parallel by first calling their ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/enqueue()",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": " methods in that order.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Tip",
          "style": "tip",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "For example, a multithreaded app might set the GPUâ€™s execution order for a sequence of related subtasks by:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Creating a command buffer for each subtask",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Enqueuing the command buffers in the proper order on a single thread",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Encoding commands to each buffer on a separate thread and then committing it",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "orderedList"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.metal/documentation/Metal": {
      "abstract": [
        {
          "text": "Render advanced 3D graphics and compute data in parallel with graphics processors.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal",
      "kind": "symbol",
      "role": "collection",
      "title": "Metal",
      "type": "topic",
      "url": "/documentation/metal"
    },
    "doc://com.apple.metal/documentation/Metal/MTLBlitCommandEncoder": {
      "abstract": [
        {
          "text": "An interface you can use to encode GPU commands that copy and modify the underlying memory of various Metal resources.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLBlitCommandEncoder"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLBlitCommandEncoder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLBlitCommandEncoder"
        }
      ],
      "role": "symbol",
      "title": "MTLBlitCommandEncoder",
      "type": "topic",
      "url": "/documentation/metal/mtlblitcommandencoder"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer": {
      "abstract": [
        {
          "text": "A container that stores a sequence of GPU commands that you encode into it.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLCommandBuffer"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLCommandBuffer"
        }
      ],
      "role": "symbol",
      "title": "MTLCommandBuffer",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/addCompletedHandler(_:)": {
      "abstract": [
        {
          "text": "Registers a completion handler the GPU device calls immediately after the GPU finishes running the commands in the command buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "addCompletedHandler"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@MTLCommandBufferHandler",
          "text": "MTLCommandBufferHandler"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/addCompletedHandler(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "addCompletedHandler:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "addCompletedHandler(_:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/addcompletedhandler(_:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/addScheduledHandler(_:)": {
      "abstract": [
        {
          "text": "Registers a completion handler the GPU device calls immediately after it schedules the command buffer to run on the GPU.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "addScheduledHandler"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@MTLCommandBufferHandler",
          "text": "MTLCommandBufferHandler"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/addScheduledHandler(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "addScheduledHandler:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "addScheduledHandler(_:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/addscheduledhandler(_:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/commit()": {
      "abstract": [
        {
          "text": "Submits the command buffer to run on the GPU.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/commit()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "commit"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "commit()",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/commit()"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/encodeSignalEvent(_:value:)": {
      "abstract": [
        {
          "text": "Encodes a command that updates an eventâ€™s value, which can clear the GPU to run passes from other command buffers waiting for the event.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encodeSignalEvent"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLEvent",
          "text": "MTLEvent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt64V",
          "text": "UInt64"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/encodeSignalEvent(_:value:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "encodeSignalEvent:value:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "encodeSignalEvent(_:value:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/encodesignalevent(_:value:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/encodeWaitForEvent(_:value:)": {
      "abstract": [
        {
          "text": "Encodes a command into the command buffer that pauses the GPU from running the bufferâ€™s subsequent passes until the event equals or exceeds a value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "encodeWaitForEvent"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLEvent",
          "text": "MTLEvent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt64V",
          "text": "UInt64"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/encodeWaitForEvent(_:value:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "encodeWaitForEvent:value:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "encodeWaitForEvent(_:value:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/encodewaitforevent(_:value:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/enqueue()": {
      "abstract": [
        {
          "text": "Reserves the next available place for the command buffer in its command queue.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "enqueue"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/enqueue()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "enqueue"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "enqueue()",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/enqueue()"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/makeBlitCommandEncoder()": {
      "abstract": [
        {
          "text": "Creates a block information transfer (blit) encoder.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "makeBlitCommandEncoder"
        },
        {
          "kind": "text",
          "text": "() -> (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLBlitCommandEncoder",
          "text": "MTLBlitCommandEncoder"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/makeBlitCommandEncoder()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "blitCommandEncoder"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "makeBlitCommandEncoder()",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/makeblitcommandencoder()"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/makeBlitCommandEncoder(descriptor:)": {
      "abstract": [
        {
          "text": "Creates a block information transfer (blit) encoder from a descriptor.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "makeBlitCommandEncoder"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "descriptor"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MTLBlitPassDescriptor",
          "text": "MTLBlitPassDescriptor"
        },
        {
          "kind": "text",
          "text": ") -> (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLBlitCommandEncoder",
          "text": "MTLBlitCommandEncoder"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/makeBlitCommandEncoder(descriptor:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "blitCommandEncoderWithDescriptor:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "makeBlitCommandEncoder(descriptor:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/makeblitcommandencoder(descriptor:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/makeComputeCommandEncoder(dispatchType:)": {
      "abstract": [
        {
          "text": "Creates a compute command encoder with a dispatch type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "makeComputeCommandEncoder"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "dispatchType"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLDispatchType",
          "text": "MTLDispatchType"
        },
        {
          "kind": "text",
          "text": ") -> (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLComputeCommandEncoder",
          "text": "MTLComputeCommandEncoder"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/makeComputeCommandEncoder(dispatchType:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "computeCommandEncoderWithDispatchType:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "makeComputeCommandEncoder(dispatchType:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/makecomputecommandencoder(dispatchtype:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/makeParallelRenderCommandEncoder(descriptor:)": {
      "abstract": [
        {
          "text": "Creates a parallel render command encoder from a descriptor.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "makeParallelRenderCommandEncoder"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "descriptor"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MTLRenderPassDescriptor",
          "text": "MTLRenderPassDescriptor"
        },
        {
          "kind": "text",
          "text": ") -> (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLParallelRenderCommandEncoder",
          "text": "MTLParallelRenderCommandEncoder"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/makeParallelRenderCommandEncoder(descriptor:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "parallelRenderCommandEncoderWithDescriptor:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "makeParallelRenderCommandEncoder(descriptor:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/makeparallelrendercommandencoder(descriptor:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/makeRenderCommandEncoder(descriptor:)": {
      "abstract": [
        {
          "text": "Creates a render command encoder from a descriptor.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "makeRenderCommandEncoder"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "descriptor"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MTLRenderPassDescriptor",
          "text": "MTLRenderPassDescriptor"
        },
        {
          "kind": "text",
          "text": ") -> (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLRenderCommandEncoder",
          "text": "MTLRenderCommandEncoder"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/makeRenderCommandEncoder(descriptor:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "renderCommandEncoderWithDescriptor:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "makeRenderCommandEncoder(descriptor:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/makerendercommandencoder(descriptor:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/present(_:)": {
      "abstract": [
        {
          "text": "Presents a drawable as early as possible.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "present"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLDrawable",
          "text": "MTLDrawable"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/present(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "presentDrawable:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "present(_:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/present(_:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/present(_:afterMinimumDuration:)": {
      "abstract": [
        {
          "text": "Presents a drawable after the system presents the previous drawable for an amount of time.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "present"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLDrawable",
          "text": "MTLDrawable"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "afterMinimumDuration"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@CFTimeInterval",
          "text": "CFTimeInterval"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/present(_:afterMinimumDuration:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "presentDrawable:afterMinimumDuration:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "present(_:afterMinimumDuration:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/present(_:afterminimumduration:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/present(_:atTime:)": {
      "abstract": [
        {
          "text": "Presents a drawable at a specific time.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "present"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLDrawable",
          "text": "MTLDrawable"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "atTime"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@CFTimeInterval",
          "text": "CFTimeInterval"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/present(_:atTime:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "presentDrawable:atTime:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "present(_:atTime:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/present(_:attime:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/status": {
      "abstract": [
        {
          "text": "The command bufferâ€™s current state.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "status"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLCommandBufferStatus",
          "text": "MTLCommandBufferStatus"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/status",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "status"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "status",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/status"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/useResidencySet(_:)": {
      "abstract": [
        {
          "text": "Attaches a residency set to the command buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "useResidencySet"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLResidencySet",
          "text": "MTLResidencySet"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/useResidencySet(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "useResidencySet:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "useResidencySet(_:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/useresidencyset(_:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/useResidencySets(_:)": {
      "abstract": [
        {
          "text": "Attaches multiple residency sets to the command buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "useResidencySets"
        },
        {
          "kind": "text",
          "text": "([any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLResidencySet",
          "text": "MTLResidencySet"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/useResidencySets(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "useResidencySets(_:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/useresidencysets(_:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/useResidencySets:count:": {
      "abstract": [
        {
          "text": "Attaches multiple residency sets to the command buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "useResidencySets:count:"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/useResidencySets:count:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "useResidencySets:count:"
        }
      ],
      "role": "symbol",
      "title": "useResidencySets:count:",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/useresidencysets:count:"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/waitUntilCompleted()": {
      "abstract": [
        {
          "text": "Blocks the current thread until the GPU finishes executing the command buffer and all of its completion handlers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "waitUntilCompleted"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/waitUntilCompleted()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "waitUntilCompleted"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "waitUntilCompleted()",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/waituntilcompleted()"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/waitUntilScheduled()": {
      "abstract": [
        {
          "text": "Blocks the current thread until the command queue schedules the buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "waitUntilScheduled"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/waitUntilScheduled()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "waitUntilScheduled"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "waitUntilScheduled()",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/waituntilscheduled()"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBufferDescriptor": {
      "abstract": [
        {
          "text": "A configuration that customizes the behavior for a new command buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLCommandBufferDescriptor"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBufferDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLCommandBufferDescriptor"
        }
      ],
      "role": "symbol",
      "title": "MTLCommandBufferDescriptor",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbufferdescriptor"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBufferError-swift.struct": {
      "abstract": [
        {
          "text": "The command buffer error codes that indicate why the GPU doesnâ€™t finish executing a command buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLCommandBufferError"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBufferError-swift.struct",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLCommandBufferError"
        }
      ],
      "role": "symbol",
      "title": "MTLCommandBufferError",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffererror-swift.struct"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBufferError-swift.struct/Code": {
      "abstract": [
        {
          "text": "Error codes that indicate why a GPU is unable to finish running a command buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Code"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBufferError-swift.struct/Code",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Code"
        }
      ],
      "role": "symbol",
      "title": "MTLCommandBufferError.Code",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffererror-swift.struct/code"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBufferErrorDomain": {
      "abstract": [
        {
          "text": "The domain for Metal command buffer errors.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLCommandBufferErrorDomain"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBufferErrorDomain",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLCommandBufferErrorDomain"
        }
      ],
      "role": "symbol",
      "title": "MTLCommandBufferErrorDomain",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffererrordomain"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBufferHandler": {
      "abstract": [
        {
          "text": "A completion handler signature a GPU device calls when it finishes scheduling a command buffer, or when the GPU finishes running it.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLCommandBufferHandler"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBufferHandler",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLCommandBufferHandler"
        }
      ],
      "role": "symbol",
      "title": "MTLCommandBufferHandler",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbufferhandler"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBufferStatus": {
      "abstract": [
        {
          "text": "The discrete states for a command buffer that represent its life cycle stages.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLCommandBufferStatus"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBufferStatus",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLCommandBufferStatus"
        }
      ],
      "role": "symbol",
      "title": "MTLCommandBufferStatus",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbufferstatus"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandEncoder": {
      "abstract": [
        {
          "text": "An encoder that writes GPU commands into a command buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLCommandEncoder"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandEncoder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLCommandEncoder"
        }
      ],
      "role": "symbol",
      "title": "MTLCommandEncoder",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandencoder"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandEncoder/endEncoding()": {
      "abstract": [
        {
          "text": "Declares that all command generation from the encoder is completed.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "endEncoding"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandEncoder/endEncoding()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "endEncoding"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "endEncoding()",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandencoder/endencoding()"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandQueue": {
      "abstract": [
        {
          "text": "An instance you use to create, submit, and schedule command buffers to a specific GPU device to run the commands within those buffers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLCommandQueue"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandQueue",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLCommandQueue"
        }
      ],
      "role": "symbol",
      "title": "MTLCommandQueue",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandqueue"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandQueue/makeCommandBuffer()": {
      "abstract": [
        {
          "text": "Returns a command buffer from the command queue that maintains strong references to resources.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "makeCommandBuffer"
        },
        {
          "kind": "text",
          "text": "() -> (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLCommandBuffer",
          "text": "MTLCommandBuffer"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandQueue/makeCommandBuffer()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "commandBuffer"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "makeCommandBuffer()",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandqueue/makecommandbuffer()"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandQueueDescriptor": {
      "abstract": [
        {
          "text": "A configuration that customizes the behavior for a new command queue.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLCommandQueueDescriptor"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandQueueDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLCommandQueueDescriptor"
        }
      ],
      "role": "symbol",
      "title": "MTLCommandQueueDescriptor",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandqueuedescriptor"
    },
    "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder": {
      "abstract": [
        {
          "text": "An interface for dispatching commands to encode in a compute pass.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLComputeCommandEncoder"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLComputeCommandEncoder"
        }
      ],
      "role": "symbol",
      "title": "MTLComputeCommandEncoder",
      "type": "topic",
      "url": "/documentation/metal/mtlcomputecommandencoder"
    },
    "doc://com.apple.metal/documentation/Metal/MTLParallelRenderCommandEncoder": {
      "abstract": [
        {
          "text": "An object that splits up a single render pass so that it can be simultaneously encoded from multiple threads.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLParallelRenderCommandEncoder"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLParallelRenderCommandEncoder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLParallelRenderCommandEncoder"
        }
      ],
      "role": "symbol",
      "title": "MTLParallelRenderCommandEncoder",
      "type": "topic",
      "url": "/documentation/metal/mtlparallelrendercommandencoder"
    },
    "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder": {
      "abstract": [
        {
          "text": "An interface that encodes a render pass into a command buffer, including all its draw calls and configuration.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLRenderCommandEncoder"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLRenderCommandEncoder"
        }
      ],
      "role": "symbol",
      "title": "MTLRenderCommandEncoder",
      "type": "topic",
      "url": "/documentation/metal/mtlrendercommandencoder"
    },
    "doc://com.apple.metal/documentation/Metal/command-buffer-debugging": {
      "abstract": [
        {
          "text": "Properties and methods for programmatically debugging runtime issues with a command buffer.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/command-buffer-debugging",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Command Buffer Debugging",
      "type": "topic",
      "url": "/documentation/metal/command-buffer-debugging"
    },
    "doc://com.apple.metal/documentation/Metal/command-encoder-factory-methods": {
      "abstract": [
        {
          "text": "A command encoder defines the actions of a single pass, such as GPU commands that draw, compute, or quickly copy resource data.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/command-encoder-factory-methods",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Command Encoder Factory Methods",
      "type": "topic",
      "url": "/documentation/metal/command-encoder-factory-methods"
    },
    "doc://com.apple.metal/documentation/Metal/setting-up-a-command-structure": {
      "abstract": [
        {
          "text": "Discover how Metal executes commands on a GPU.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/setting-up-a-command-structure",
      "kind": "article",
      "role": "article",
      "title": "Setting Up a Command Structure",
      "type": "topic",
      "url": "/documentation/metal/setting-up-a-command-structure"
    },
    "doc://com.apple.metal/documentation/Metal/simplifying-gpu-resource-management-with-residency-sets": {
      "abstract": [
        {
          "text": "Organize your resources into groups and influence when they become accessible to the GPU.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/simplifying-gpu-resource-management-with-residency-sets",
      "kind": "article",
      "role": "article",
      "title": "Simplifying GPU Resource Management with Residency Sets",
      "type": "topic",
      "url": "/documentation/metal/simplifying-gpu-resource-management-with-residency-sets"
    },
    "doc://com.apple.metal/documentation/Metal/tracking-the-resource-residency-of-argument-buffers": {
      "abstract": [
        {
          "text": "Optimize resource performance within an argument buffer.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/tracking-the-resource-residency-of-argument-buffers",
      "kind": "article",
      "role": "article",
      "title": "Tracking the Resource Residency of Argument Buffers",
      "type": "topic",
      "url": "/documentation/metal/tracking-the-resource-residency-of-argument-buffers"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSObject": {
      "abstract": [
        {
          "text": "The group of methods that are fundamental to all Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObjectProtocol",
      "type": "topic",
      "url": "/documentation/objectivec/nsobjectprotocol"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/c:objc(pl)NSObject"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Submitting-Work-to-a-GPU",
      "generated": true,
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/setting-up-a-command-structure",
        "doc://com.apple.metal/documentation/Metal/MTLCommandQueue",
        "doc://com.apple.metal/documentation/Metal/MTLCommandQueueDescriptor",
        "doc://com.apple.metal/documentation/Metal/MTLCommandBufferDescriptor",
        "doc://com.apple.metal/documentation/Metal/MTLCommandBufferError-swift.struct",
        "doc://com.apple.metal/documentation/Metal/MTLCommandEncoder"
      ],
      "title": "Submitting Work to a GPU"
    }
  ],
  "topicSections": [
    {
      "abstract": [
        {
          "text": "Create a command encoder from a command buffer that encodes a series of GPU commands to it.",
          "type": "text"
        }
      ],
      "anchor": "Creating-Command-Encoders",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/command-encoder-factory-methods"
      ],
      "title": "Creating Command Encoders"
    },
    {
      "anchor": "Attaching-Residency-Sets",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/useResidencySet(_:)",
        "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/useResidencySets(_:)"
      ],
      "title": "Attaching Residency Sets"
    },
    {
      "abstract": [
        {
          "text": "Instruct the GPU to wait for an event between two passes until a different command queueâ€™s command buffer signals the event.",
          "type": "text"
        }
      ],
      "anchor": "Synchronizing-Passes-with-Events",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/encodeWaitForEvent(_:value:)",
        "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/encodeSignalEvent(_:value:)"
      ],
      "title": "Synchronizing Passes with Events"
    },
    {
      "abstract": [
        {
          "text": "Instruct the command buffer to call a drawableâ€™s presentation method for you at the best time with convenience methods.",
          "type": "text"
        }
      ],
      "anchor": "Presenting-a-Drawable",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/present(_:)",
        "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/present(_:atTime:)",
        "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/present(_:afterMinimumDuration:)"
      ],
      "title": "Presenting a Drawable"
    },
    {
      "abstract": [
        {
          "text": "Notify your app before and after a command buffer runs on the GPU.",
          "type": "text"
        }
      ],
      "anchor": "Registering-State-Change-Handlers",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/addScheduledHandler(_:)",
        "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/addCompletedHandler(_:)",
        "doc://com.apple.metal/documentation/Metal/MTLCommandBufferHandler"
      ],
      "title": "Registering State Change Handlers"
    },
    {
      "abstract": [
        {
          "text": "Send a command buffer to run on the GPU, or reserve a place in the queue to arrange its relative order with other command buffers.",
          "type": "text"
        }
      ],
      "anchor": "Submitting-a-Command-Buffer",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/enqueue()",
        "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/commit()"
      ],
      "title": "Submitting a Command Buffer"
    },
    {
      "abstract": [
        {
          "text": "Pause your appâ€™s execution on the CPU until the command buffer changes its state.",
          "type": "text"
        }
      ],
      "anchor": "Waiting-for-State-Changes",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/waitUntilScheduled()",
        "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/waitUntilCompleted()"
      ],
      "title": "Waiting for State Changes"
    },
    {
      "anchor": "Troubleshooting-a-Command-Buffer",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/status",
        "doc://com.apple.metal/documentation/Metal/MTLCommandBufferStatus",
        "doc://com.apple.metal/documentation/Metal/command-buffer-debugging"
      ],
      "title": "Troubleshooting a Command Buffer"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "8.0",
              "name": "iOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "8.0",
              "name": "iPadOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "13.1",
              "name": "Mac Catalyst",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.11",
              "name": "macOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "name": "tvOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "1.0",
              "name": "visionOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Protocol"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "MTLCommandBuffer"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "protocol"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandBuffer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandBuffer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.metal/documentation/Metal"
              ]
            ]
          }
        },
        {
          "op": "replace",
          "path": "/topicSections",
          "value": [
            {
              "abstract": [
                {
                  "text": "Create a command encoder from a command buffer that encodes a series of GPU commands to it.",
                  "type": "text"
                }
              ],
              "anchor": "Creating-Command-Encoders",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/command-encoder-factory-methods"
              ],
              "title": "Creating Command Encoders"
            },
            {
              "anchor": "Attaching-Residency-Sets",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/useResidencySet(_:)",
                "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/useResidencySets:count:"
              ],
              "title": "Attaching Residency Sets"
            },
            {
              "abstract": [
                {
                  "text": "Instruct the GPU to wait for an event between two passes until a different command queueâ€™s command buffer signals the event.",
                  "type": "text"
                }
              ],
              "anchor": "Synchronizing-Passes-with-Events",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/encodeWaitForEvent(_:value:)",
                "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/encodeSignalEvent(_:value:)"
              ],
              "title": "Synchronizing Passes with Events"
            },
            {
              "abstract": [
                {
                  "text": "Instruct the command buffer to call a drawableâ€™s presentation method for you at the best time with convenience methods.",
                  "type": "text"
                }
              ],
              "anchor": "Presenting-a-Drawable",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/present(_:)",
                "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/present(_:atTime:)",
                "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/present(_:afterMinimumDuration:)"
              ],
              "title": "Presenting a Drawable"
            },
            {
              "abstract": [
                {
                  "text": "Notify your app before and after a command buffer runs on the GPU.",
                  "type": "text"
                }
              ],
              "anchor": "Registering-State-Change-Handlers",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/addScheduledHandler(_:)",
                "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/addCompletedHandler(_:)",
                "doc://com.apple.metal/documentation/Metal/MTLCommandBufferHandler"
              ],
              "title": "Registering State Change Handlers"
            },
            {
              "abstract": [
                {
                  "text": "Send a command buffer to run on the GPU, or reserve a place in the queue to arrange its relative order with other command buffers.",
                  "type": "text"
                }
              ],
              "anchor": "Submitting-a-Command-Buffer",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/enqueue()",
                "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/commit()"
              ],
              "title": "Submitting a Command Buffer"
            },
            {
              "abstract": [
                {
                  "text": "Pause your appâ€™s execution on the CPU until the command buffer changes its state.",
                  "type": "text"
                }
              ],
              "anchor": "Waiting-for-State-Changes",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/waitUntilScheduled()",
                "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/waitUntilCompleted()"
              ],
              "title": "Waiting for State Changes"
            },
            {
              "anchor": "Troubleshooting-a-Command-Buffer",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/status",
                "doc://com.apple.metal/documentation/Metal/MTLCommandBufferStatus",
                "doc://com.apple.metal/documentation/Metal/command-buffer-debugging"
              ],
              "title": "Troubleshooting a Command Buffer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/relationshipsSections",
          "value": [
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(pl)NSObject"
              ],
              "kind": "relationships",
              "title": "Inherits From",
              "type": "inheritsFrom"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Submitting-Work-to-a-GPU",
              "generated": true,
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/setting-up-a-command-structure",
                "doc://com.apple.metal/documentation/Metal/MTLCommandQueue",
                "doc://com.apple.metal/documentation/Metal/MTLCommandQueueDescriptor",
                "doc://com.apple.metal/documentation/Metal/MTLCommandBufferDescriptor",
                "doc://com.apple.metal/documentation/Metal/MTLCommandBufferErrorDomain",
                "doc://com.apple.metal/documentation/Metal/MTLCommandBufferError-swift.struct/Code",
                "doc://com.apple.metal/documentation/Metal/MTLCommandEncoder"
              ],
              "title": "Submitting Work to a GPU"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "iOS",
                  "iPadOS",
                  "Mac Catalyst",
                  "macOS",
                  "tvOS",
                  "visionOS"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "@protocol"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "MTLCommandBuffer"
                  },
                  {
                    "kind": "text",
                    "text": " <"
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(pl)NSObject",
                    "text": "NSObject"
                  },
                  {
                    "kind": "text",
                    "text": ">"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1waitUntilScheduled()/title",
          "value": "waitUntilScheduled"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1waitUntilScheduled()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "waitUntilScheduled"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1makeBlitCommandEncoder()/title",
          "value": "blitCommandEncoder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1makeBlitCommandEncoder()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "blitCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBufferDescriptor/title",
          "value": "MTLCommandBufferDescriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBufferDescriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandBufferDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBufferDescriptor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandBufferDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1addScheduledHandler(_:)/title",
          "value": "addScheduledHandler:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1addScheduledHandler(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "addScheduledHandler:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandQueue/title",
          "value": "MTLCommandQueue"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandQueue/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandQueue"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandQueue/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandQueue"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandEncoder~1endEncoding()/title",
          "value": "endEncoding"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandEncoder~1endEncoding()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "endEncoding"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1present(_:)/title",
          "value": "presentDrawable:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1present(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "presentDrawable:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1makeBlitCommandEncoder(descriptor:)/title",
          "value": "blitCommandEncoderWithDescriptor:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1makeBlitCommandEncoder(descriptor:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "blitCommandEncoderWithDescriptor:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSObject/title",
          "value": "NSObject"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1useResidencySet(_:)/title",
          "value": "useResidencySet:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1useResidencySet(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "useResidencySet:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBufferErrorDomain/title",
          "value": "MTLCommandBufferErrorDomain"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBufferErrorDomain/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandBufferErrorDomain"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandQueue~1makeCommandBuffer()/title",
          "value": "commandBuffer"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandQueue~1makeCommandBuffer()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "commandBuffer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLBlitCommandEncoder/title",
          "value": "MTLBlitCommandEncoder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLBlitCommandEncoder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLBlitCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLBlitCommandEncoder/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLBlitCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1addCompletedHandler(_:)/title",
          "value": "addCompletedHandler:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1addCompletedHandler(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "addCompletedHandler:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder/title",
          "value": "MTLRenderCommandEncoder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLRenderCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLRenderCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1encodeSignalEvent(_:value:)/title",
          "value": "encodeSignalEvent:value:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1encodeSignalEvent(_:value:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "encodeSignalEvent:value:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1present(_:atTime:)/title",
          "value": "presentDrawable:atTime:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1present(_:atTime:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "presentDrawable:atTime:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1makeParallelRenderCommandEncoder(descriptor:)/title",
          "value": "parallelRenderCommandEncoderWithDescriptor:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1makeParallelRenderCommandEncoder(descriptor:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "parallelRenderCommandEncoderWithDescriptor:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1makeComputeCommandEncoder(dispatchType:)/title",
          "value": "computeCommandEncoderWithDispatchType:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1makeComputeCommandEncoder(dispatchType:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "computeCommandEncoderWithDispatchType:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1commit()/title",
          "value": "commit"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1commit()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "commit"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBufferHandler/title",
          "value": "MTLCommandBufferHandler"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBufferHandler/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandBufferHandler"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBufferHandler/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandBufferHandler"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLParallelRenderCommandEncoder/title",
          "value": "MTLParallelRenderCommandEncoder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLParallelRenderCommandEncoder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLParallelRenderCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLParallelRenderCommandEncoder/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLParallelRenderCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputeCommandEncoder/title",
          "value": "MTLComputeCommandEncoder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputeCommandEncoder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLComputeCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputeCommandEncoder/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLComputeCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1present(_:afterMinimumDuration:)/title",
          "value": "presentDrawable:afterMinimumDuration:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1present(_:afterMinimumDuration:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "presentDrawable:afterMinimumDuration:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBufferStatus/title",
          "value": "MTLCommandBufferStatus"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBufferStatus/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandBufferStatus"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBufferStatus/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandBufferStatus"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer/title",
          "value": "MTLCommandBuffer"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandBuffer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandBuffer"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1waitUntilCompleted()/title",
          "value": "waitUntilCompleted"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1waitUntilCompleted()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "waitUntilCompleted"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1makeRenderCommandEncoder(descriptor:)/title",
          "value": "renderCommandEncoderWithDescriptor:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1makeRenderCommandEncoder(descriptor:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "renderCommandEncoderWithDescriptor:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandEncoder/title",
          "value": "MTLCommandEncoder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandEncoder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandEncoder/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1encodeWaitForEvent(_:value:)/title",
          "value": "encodeWaitForEvent:value:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1encodeWaitForEvent(_:value:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "encodeWaitForEvent:value:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1status/title",
          "value": "status"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1status/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "status"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBufferError-swift.struct~1Code/title",
          "value": "MTLCommandBufferError"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBufferError-swift.struct~1Code/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandBufferError"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBufferError-swift.struct~1Code/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandBufferError"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1enqueue()/title",
          "value": "enqueue"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1enqueue()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "enqueue"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandQueueDescriptor/title",
          "value": "MTLCommandQueueDescriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandQueueDescriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandQueueDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandQueueDescriptor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLCommandQueueDescriptor"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/metal/mtlcommandbuffer"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/metal/mtlcommandbuffer"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
