{
  "abstract": [
    {
      "text": "A collection of resource allocations that can move in and out of resident memory.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.metal/documentation/Metal"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.metal/documentation/Metal/MTLResidencySet"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(pl)MTLResidencySet",
    "fragments": [
      {
        "kind": "keyword",
        "text": "protocol"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "MTLResidencySet"
      }
    ],
    "modules": [
      {
        "name": "Metal"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "MTLResidencySet"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "18.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Protocol",
    "symbolKind": "protocol",
    "title": "MTLResidencySet"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "MTLResidencySet"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(pl)NSObject",
              "text": "NSObjectProtocol"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.metal/documentation/Metal/simplifying-gpu-resource-management-with-residency-sets"
      ]
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Residency sets are a way you can tell Metal which resource allocations, such as buffers, textures, and heaps, to make ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "resident",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": ", or GPU-accessible. Adding allocations to a residency set requires less overhead than the equivalent methods of a command encoder. Residency sets also give you more control when Metal makes their allocations resident, and for how long they remain resident. However, residency sets don’t track hazards, so you need to account for hazards with fences and events.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "You can change which ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLAllocation",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " instances are in a residency set at any time by:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Staging additions and removals with the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/addAllocation(_:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllocation(_:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " methods, respectively, or with their sibling methods",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Applying staged changes by calling the residency set’s ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/commit()",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " method",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "orderedList"
        },
        {
          "inlineContent": [
            {
              "text": "Metal doesn’t synchronize the state of the residency set between the CPU and the GPU. This means you can add resource allocations to the set while the GPU is actively running a command buffer that’s accessing them.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "If there’s a resource in a residency set that the GPU no longer needs access to,",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "you can remove that resource from the residency set,",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "even while the GPU is actively accessing other resources from the same residency set.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "Metal makes the union of all residency sets’ allocations resident. This means each resource allocation, such as a buffer, can have an entry in multiple residency sets at the same time. Removing an allocation from one residency set doesn’t affect its residency if it also has an entry in another residency set. So you can remove an entire residency set from a command queue and only remove the allocations from residency that are unique to that set. All other resource allocations remain in residency because at least one other residency set has an entry for each.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Alternatively, render and compute command encoders have the following methods that make resource allocations resident:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "header": "row",
          "rows": [
            [
              [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/useResource(_:usage:stages:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder/useResource(_:usage:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/useResources(_:usage:stages:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder/useResources(_:usage:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/useHeap(_:stages:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder/useHeap(_:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/useHeaps(_:stages:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder/useHeaps(_:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ]
          ],
          "type": "table"
        },
        {
          "inlineContent": [
            {
              "text": "These command encoder methods:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Support hazard tracking to applicable resources (see ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/resource-fundamentals",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ")",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Require CPU overhead for each resource or heap, which scale up with each one you add",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Apply to a single command encoder, which means you need to call the methods again for the same resources for each command encoder",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "Residency sets, by contrast:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Don’t support hazard tracking, which means you need to account for hazards with ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLFence",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.metal/documentation/Metal/MTLEvent",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " instances",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Require minimal CPU overhead by aggregating allocations at little to no cost for each resource or heap",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Can attach to a command buffer with a single call, which makes residency set’s allocations available to all of that command buffer’s encoders",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Can attach to a command queue with a single call",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "Metal attaches all of a command queue’s residency sets to a command buffer from that queue when you call the command buffer’s ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/commit()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "Residency sets don’t support sparse heaps or sparse textures, and their methods aren’t thread-safe.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "See ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/simplifying-gpu-resource-management-with-residency-sets",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " for information about associating a residency set to command buffers and command queues.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Create-a-Residency-Set",
          "level": 3,
          "text": "Create a Residency Set",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Make a residency set by configuring an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySetDescriptor",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " instance and passing it to the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice/makeResidencySet(descriptor:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method of an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "let setDescriptor = MTLResidencySetDescriptor()",
                    "setDescriptor.label = \"Primary residency set\"",
                    "setDescriptor.initialCapacity = 42",
                    "",
                    "let residencySet = try device.makeResidencySet(descriptor: setDescriptor)"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "MTLResidencySetDescriptor *setDescriptor;",
                    "setDescriptor = [[MTLResidencySetDescriptor alloc] init];",
                    "setDescriptor.label = @\"Primary residency set\";",
                    "setDescriptor.initialCapacity = 42;",
                    "",
                    "NSError *error;",
                    "id<MTLResidencySet> residencySet;",
                    "residencySet = [device newResidencySetWithDescriptor:setDescriptor",
                    "                                               error:&error];"
                  ],
                  "syntax": "objective-c",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "anchor": "Add-Allocations-to-a-Residency-Set",
          "level": 3,
          "text": "Add Allocations to a Residency Set",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Add individual resource allocations to a residency set by calling ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/addAllocation(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", or add multiple allocations with ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/addAllocations(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "let residencySet = try device.makeResidencySet(descriptor: setDescriptor)",
                    "",
                    "residencySet.addAllocation(buffer0)",
                    "residencySet.addAllocation(buffer1)",
                    "residencySet.addAllocation(texture0)",
                    "residencySet.addAllocation(texture1)",
                    "residencySet.addAllocation(heap)",
                    "",
                    "let allocations = [buffer2,",
                    "                   texture2,",
                    "                   argumentBufferHeap,",
                    "                   textureHeap]",
                    "",
                    "residencySet.addAllocations(allocations)"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "[residencySet addAllocation:buffer0];",
                    "[residencySet addAllocation:buffer1];",
                    "[residencySet addAllocation:texture0];",
                    "[residencySet addAllocation:texture1];",
                    "[residencySet addAllocation:heap];",
                    "",
                    "id<MTLAllocation> allocations[] = {",
                    "    buffer2,",
                    "    texture2,",
                    "    argumentBufferHeap,",
                    "    textureHeap",
                    "};",
                    "",
                    "[residencySet addAllocations:allocations",
                    "                       count:4];"
                  ],
                  "syntax": "objective-c",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "The residency set can handle redundant entries for the same allocation because it ignores duplicates that already have an entry in the set.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "Adding a resource, such as a buffer or texture, that originates from a heap to a residency set makes its entire heap resident.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "anchor": "Remove-Allocations-from-a-Residency-Set",
          "level": 3,
          "text": "Remove Allocations from a Residency Set",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Remove individual resource allocations from a residency set by calling ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllocation(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", or remove multiple allocations with ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllocations(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "residencySet.removeAllocation(buffer1)",
                    "residencySet.removeAllocations( [argumentBufferHeap, textureHeap] )"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "[residencySet removeAllocation:buffer1];",
                    "",
                    "id<MTLAllocation> deallocations[] = {",
                    "    argumentBufferHeap,",
                    "    textureHeap",
                    "};",
                    "",
                    "[residencySet removeAllocations: deallocations",
                    "                          count:2];",
                    "[residencySet commit];"
                  ],
                  "syntax": "objective-c",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "Like the methods that add resource allocations to the set, these methods aggregate removals with little CPU overhead. So you can call the methods multiple times without adversely affecting runtime performance.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Commit-the-Changes-to-a-Residency-Set",
          "level": 3,
          "text": "Commit the Changes to a Residency Set",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Apply the updates to a residency set by calling its ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/commit()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "tabs": [
            {
              "content": [
                {
                  "code": [
                    "residencySet.commit()"
                  ],
                  "syntax": "objective-c",
                  "type": "codeListing"
                }
              ],
              "title": "Swift"
            },
            {
              "content": [
                {
                  "code": [
                    "[residencySet commit];"
                  ],
                  "syntax": "swift",
                  "type": "codeListing"
                }
              ],
              "title": "Objective-C"
            }
          ],
          "type": "tabNavigator"
        },
        {
          "inlineContent": [
            {
              "text": "A residency set’s addition and removal methods don’t take effect until you call this method.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.metal/documentation/Metal": {
      "abstract": [
        {
          "text": "Render advanced 3D graphics and compute data in parallel with graphics processors.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal",
      "kind": "symbol",
      "role": "collection",
      "title": "Metal",
      "type": "topic",
      "url": "/documentation/metal"
    },
    "doc://com.apple.metal/documentation/Metal/MTLAllocation": {
      "abstract": [
        {
          "text": "A memory allocation from a Metal GPU device, such as a memory heap, texture, or data buffer.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLAllocation"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLAllocation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLAllocation"
        }
      ],
      "role": "symbol",
      "title": "MTLAllocation",
      "type": "topic",
      "url": "/documentation/metal/mtlallocation"
    },
    "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/commit()": {
      "abstract": [
        {
          "text": "Submits the command buffer to run on the GPU.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLCommandBuffer/commit()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "commit"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "commit()",
      "type": "topic",
      "url": "/documentation/metal/mtlcommandbuffer/commit()"
    },
    "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder": {
      "abstract": [
        {
          "text": "An interface for dispatching commands to encode in a compute pass.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLComputeCommandEncoder"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLComputeCommandEncoder"
        }
      ],
      "role": "symbol",
      "title": "MTLComputeCommandEncoder",
      "type": "topic",
      "url": "/documentation/metal/mtlcomputecommandencoder"
    },
    "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder/useHeap(_:)": {
      "abstract": [
        {
          "text": "Ensures the shaders in the render pass’s subsequent draw commands have access to all of the resources you allocate from a heap.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "useHeap"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLHeap",
          "text": "MTLHeap"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder/useHeap(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "useHeap:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "useHeap(_:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcomputecommandencoder/useheap(_:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder/useHeaps(_:)": {
      "abstract": [
        {
          "text": "Ensures the shaders in the render pass’s subsequent draw commands have access to all of the resources you allocate from multiple heaps.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "useHeaps"
        },
        {
          "kind": "text",
          "text": "([any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLHeap",
          "text": "MTLHeap"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder/useHeaps(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "useHeaps(_:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcomputecommandencoder/useheaps(_:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder/useResource(_:usage:)": {
      "abstract": [
        {
          "text": "Ensures kernel calls that the system encodes in subsequent commands have access to a resource.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "useResource"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLResource",
          "text": "MTLResource"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "usage"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLResourceUsage",
          "text": "MTLResourceUsage"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder/useResource(_:usage:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "useResource:usage:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "useResource(_:usage:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcomputecommandencoder/useresource(_:usage:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder/useResources(_:usage:)": {
      "abstract": [
        {
          "text": "Ensures kernel calls that the system encodes in subsequent commands have access to multiple resources.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "useResources"
        },
        {
          "kind": "text",
          "text": "([any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLResource",
          "text": "MTLResource"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "usage"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLResourceUsage",
          "text": "MTLResourceUsage"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLComputeCommandEncoder/useResources(_:usage:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "useResources(_:usage:)",
      "type": "topic",
      "url": "/documentation/metal/mtlcomputecommandencoder/useresources(_:usage:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLDevice": {
      "abstract": [
        {
          "text": "The main Metal interface to a GPU that apps use to draw graphics and run computations in parallel.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLDevice"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLDevice"
        }
      ],
      "role": "symbol",
      "title": "MTLDevice",
      "type": "topic",
      "url": "/documentation/metal/mtldevice"
    },
    "doc://com.apple.metal/documentation/Metal/MTLDevice/makeResidencySet(descriptor:)": {
      "abstract": [
        {
          "text": "Creates a residency set, which can move resources in and out of memory residency.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "makeResidencySet"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "descriptor"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)MTLResidencySetDescriptor",
          "text": "MTLResidencySetDescriptor"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLResidencySet",
          "text": "MTLResidencySet"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLDevice/makeResidencySet(descriptor:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "newResidencySetWithDescriptor:error:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "makeResidencySet(descriptor:)",
      "type": "topic",
      "url": "/documentation/metal/mtldevice/makeresidencyset(descriptor:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLEvent": {
      "abstract": [
        {
          "text": "A simple semaphore to synchronize access to Metal resources.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLEvent"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLEvent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLEvent"
        }
      ],
      "role": "symbol",
      "title": "MTLEvent",
      "type": "topic",
      "url": "/documentation/metal/mtlevent"
    },
    "doc://com.apple.metal/documentation/Metal/MTLFence": {
      "abstract": [
        {
          "text": "A memory fence to capture, track, and manage resource dependencies across command encoders.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLFence"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLFence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLFence"
        }
      ],
      "role": "symbol",
      "title": "MTLFence",
      "type": "topic",
      "url": "/documentation/metal/mtlfence"
    },
    "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder": {
      "abstract": [
        {
          "text": "An interface that encodes a render pass into a command buffer, including all its draw calls and configuration.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLRenderCommandEncoder"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLRenderCommandEncoder"
        }
      ],
      "role": "symbol",
      "title": "MTLRenderCommandEncoder",
      "type": "topic",
      "url": "/documentation/metal/mtlrendercommandencoder"
    },
    "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/useHeap(_:stages:)": {
      "abstract": [
        {
          "text": "Ensures the shaders in the render pass’s subsequent draw commands have access to the resources you allocate from a heap.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "useHeap"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLHeap",
          "text": "MTLHeap"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "stages"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLRenderStages",
          "text": "MTLRenderStages"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/useHeap(_:stages:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "useHeap:stages:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "useHeap(_:stages:)",
      "type": "topic",
      "url": "/documentation/metal/mtlrendercommandencoder/useheap(_:stages:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/useHeaps(_:stages:)": {
      "abstract": [
        {
          "text": "Ensures the shaders in the render pass’s subsequent draw commands have access to the resources you allocate from multiple heaps.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "useHeaps"
        },
        {
          "kind": "text",
          "text": "([any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLHeap",
          "text": "MTLHeap"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "stages"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLRenderStages",
          "text": "MTLRenderStages"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/useHeaps(_:stages:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "useHeaps(_:stages:)",
      "type": "topic",
      "url": "/documentation/metal/mtlrendercommandencoder/useheaps(_:stages:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/useResource(_:usage:stages:)": {
      "abstract": [
        {
          "text": "Ensures the shaders in the render pass’s subsequent draw commands have access to a resource.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "useResource"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLResource",
          "text": "MTLResource"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "usage"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLResourceUsage",
          "text": "MTLResourceUsage"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "stages"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLRenderStages",
          "text": "MTLRenderStages"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/useResource(_:usage:stages:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "useResource:usage:stages:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "useResource(_:usage:stages:)",
      "type": "topic",
      "url": "/documentation/metal/mtlrendercommandencoder/useresource(_:usage:stages:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/useResources(_:usage:stages:)": {
      "abstract": [
        {
          "text": "Ensures the shaders in the render pass’s subsequent draw commands have access to multiple resources.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "useResources"
        },
        {
          "kind": "text",
          "text": "([any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLResource",
          "text": "MTLResource"
        },
        {
          "kind": "text",
          "text": "], "
        },
        {
          "kind": "externalParam",
          "text": "usage"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLResourceUsage",
          "text": "MTLResourceUsage"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "stages"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@MTLRenderStages",
          "text": "MTLRenderStages"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLRenderCommandEncoder/useResources(_:usage:stages:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "useResources(_:usage:stages:)",
      "type": "topic",
      "url": "/documentation/metal/mtlrendercommandencoder/useresources(_:usage:stages:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet": {
      "abstract": [
        {
          "text": "A collection of resource allocations that can move in and out of resident memory.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLResidencySet"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLResidencySet"
        }
      ],
      "role": "symbol",
      "title": "MTLResidencySet",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/addAllocation(_:)": {
      "abstract": [
        {
          "text": "Stages a single resource to join the residency set’s list of allocations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "addAllocation"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLAllocation",
          "text": "MTLAllocation"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/addAllocation(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "addAllocation:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "addAllocation(_:)",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/addallocation(_:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/addAllocations(_:)": {
      "abstract": [
        {
          "text": "Stages multiple resources to join the residency set’s list of allocations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "addAllocations"
        },
        {
          "kind": "text",
          "text": "([any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLAllocation",
          "text": "MTLAllocation"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/addAllocations(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "addAllocations(_:)",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/addallocations(_:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/addAllocations:count:": {
      "abstract": [
        {
          "text": "Stages multiple resources to join the residency set’s list of allocations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "addAllocations:count:"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/addAllocations:count:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "addAllocations:count:"
        }
      ],
      "role": "symbol",
      "title": "addAllocations:count:",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/addallocations:count:"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/allAllocations": {
      "abstract": [
        {
          "text": "The residency set’s current list of resource allocations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "allAllocations"
        },
        {
          "kind": "text",
          "text": ": [any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLAllocation",
          "text": "MTLAllocation"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/allAllocations",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "allAllocations"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "allAllocations",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/allallocations"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/allocatedSize": {
      "abstract": [
        {
          "text": "The amount of resident memory, in bytes, the residency set’s resource allocations consume.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "allocatedSize"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt64V",
          "text": "UInt64"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/allocatedSize",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "allocatedSize"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "allocatedSize",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/allocatedsize"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/allocationCount": {
      "abstract": [
        {
          "text": "The number of resource allocations in the residency set.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "allocationCount"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/allocationCount",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "allocationCount"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "allocationCount",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/allocationcount"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/commit()": {
      "abstract": [
        {
          "text": "Applies any pending additions to and removals from the residency set.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/commit()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "commit"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "commit()",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/commit()"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/containsAllocation(_:)": {
      "abstract": [
        {
          "text": "Returns a Boolean value that indicates whether the residency set contains a specific resource allocation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "containsAllocation"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLAllocation",
          "text": "MTLAllocation"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/containsAllocation(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "containsAllocation:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "containsAllocation(_:)",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/containsallocation(_:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/device": {
      "abstract": [
        {
          "text": "The Metal device that owns the residency set.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "device"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLDevice",
          "text": "MTLDevice"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/device",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "device"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "device",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/device"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/endResidency()": {
      "abstract": [
        {
          "text": "Informs Metal that the residency set’s allocations no longer need to be resident, and that it can reuse the memory for other allocations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "endResidency"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/endResidency()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "endResidency"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "endResidency()",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/endresidency()"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/label": {
      "abstract": [
        {
          "text": "An optional name that can help you identify the residency set.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "label"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/label",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "label"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "label",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/label"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllAllocations()": {
      "abstract": [
        {
          "text": "Stages all the resources in the residency set to leave its list of allocations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeAllAllocations"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllAllocations()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "removeAllAllocations"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "removeAllAllocations()",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/removeallallocations()"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllocation(_:)": {
      "abstract": [
        {
          "text": "Stages a single resource to leave the residency set’s list of allocations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeAllocation"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLAllocation",
          "text": "MTLAllocation"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllocation(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "removeAllocation:"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "removeAllocation(_:)",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/removeallocation(_:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllocations(_:)": {
      "abstract": [
        {
          "text": "Stages multiple resources to leave the residency set’s list of allocations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeAllocations"
        },
        {
          "kind": "text",
          "text": "([any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)MTLAllocation",
          "text": "MTLAllocation"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllocations(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "removeAllocations(_:)",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/removeallocations(_:)"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllocations:count:": {
      "abstract": [
        {
          "text": "Stages multiple resources to leave the residency set’s list of allocations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "removeAllocations:count:"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllocations:count:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "removeAllocations:count:"
        }
      ],
      "role": "symbol",
      "title": "removeAllocations:count:",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/removeallocations:count:"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySet/requestResidency()": {
      "abstract": [
        {
          "text": "Tells Metal to do as much preparatory work as it can, with the system’s current conditions, to make the set’s resource allocations resident.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "requestResidency"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySet/requestResidency()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "requestResidency"
        }
      ],
      "required": true,
      "role": "symbol",
      "title": "requestResidency()",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencyset/requestresidency()"
    },
    "doc://com.apple.metal/documentation/Metal/MTLResidencySetDescriptor": {
      "abstract": [
        {
          "text": "A configuration that customizes the behavior for a residency set.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "MTLResidencySetDescriptor"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/MTLResidencySetDescriptor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "MTLResidencySetDescriptor"
        }
      ],
      "role": "symbol",
      "title": "MTLResidencySetDescriptor",
      "type": "topic",
      "url": "/documentation/metal/mtlresidencysetdescriptor"
    },
    "doc://com.apple.metal/documentation/Metal/resource-fundamentals": {
      "abstract": [
        {
          "text": "Learn the common attributes of all Metal memory resources, including buffers and textures, and how to manage the underlying memory.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/resource-fundamentals",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Resource Fundamentals",
      "type": "topic",
      "url": "/documentation/metal/resource-fundamentals"
    },
    "doc://com.apple.metal/documentation/Metal/simplifying-gpu-resource-management-with-residency-sets": {
      "abstract": [
        {
          "text": "Organize your resources into groups and influence when they become accessible to the GPU.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.metal/documentation/Metal/simplifying-gpu-resource-management-with-residency-sets",
      "kind": "article",
      "role": "article",
      "title": "Simplifying GPU Resource Management with Residency Sets",
      "type": "topic",
      "url": "/documentation/metal/simplifying-gpu-resource-management-with-residency-sets"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSObject": {
      "abstract": [
        {
          "text": "The group of methods that are fundamental to all Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObjectProtocol",
      "type": "topic",
      "url": "/documentation/objectivec/nsobjectprotocol"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/c:objc(pl)NSObject"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Residency-Sets",
      "generated": true,
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/simplifying-gpu-resource-management-with-residency-sets",
        "doc://com.apple.metal/documentation/Metal/MTLResidencySetDescriptor"
      ],
      "title": "Residency Sets"
    }
  ],
  "topicSections": [
    {
      "abstract": [
        {
          "text": "Add allocation instances, including buffers, textures, and heaps, to a residency set.",
          "type": "text"
        }
      ],
      "anchor": "Adding-Allocations",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLResidencySet/addAllocation(_:)",
        "doc://com.apple.metal/documentation/Metal/MTLResidencySet/addAllocations(_:)"
      ],
      "title": "Adding Allocations"
    },
    {
      "abstract": [
        {
          "text": "Remove allocation instances, including buffers, textures, and heaps, from a residency set.",
          "type": "text"
        }
      ],
      "anchor": "Removing-Allocations",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllAllocations()",
        "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllocation(_:)",
        "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllocations(_:)"
      ],
      "title": "Removing Allocations"
    },
    {
      "abstract": [
        {
          "text": "Complete the additions and removals since the last commit.",
          "type": "text"
        }
      ],
      "anchor": "Finalizing-Pending-Allocation-Changes",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLResidencySet/commit()"
      ],
      "title": "Finalizing Pending Allocation Changes"
    },
    {
      "abstract": [
        {
          "text": "Ask Metal to make the residency set’s allocations resident.",
          "type": "text"
        }
      ],
      "anchor": "Requesting-Residency-for-the-Allocations",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLResidencySet/requestResidency()"
      ],
      "title": "Requesting Residency for the Allocations"
    },
    {
      "abstract": [
        {
          "text": "Notify Metal that you no longer need the residency set’s allocations to be resident so it can reallocate the underlying memory.",
          "type": "text"
        }
      ],
      "anchor": "Releasing-the-Allocations-from-Residency",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLResidencySet/endResidency()"
      ],
      "title": "Releasing the Allocations from Residency"
    },
    {
      "abstract": [
        {
          "text": "Identify a residency and check its current allocations and memory footprint.",
          "type": "text"
        }
      ],
      "anchor": "Inspecting-a-Residency-Set",
      "identifiers": [
        "doc://com.apple.metal/documentation/Metal/MTLResidencySet/label",
        "doc://com.apple.metal/documentation/Metal/MTLResidencySet/device",
        "doc://com.apple.metal/documentation/Metal/MTLResidencySet/containsAllocation(_:)",
        "doc://com.apple.metal/documentation/Metal/MTLResidencySet/allAllocations",
        "doc://com.apple.metal/documentation/Metal/MTLResidencySet/allocationCount",
        "doc://com.apple.metal/documentation/Metal/MTLResidencySet/allocatedSize"
      ],
      "title": "Inspecting a Residency Set"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "18.0",
              "name": "iOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "18.0",
              "name": "iPadOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "18.0",
              "name": "Mac Catalyst",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "15.0",
              "name": "macOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "18.0",
              "name": "tvOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "2.0",
              "name": "visionOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Protocol"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "MTLResidencySet"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "protocol"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResidencySet"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResidencySet"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.metal/documentation/Metal"
              ]
            ]
          }
        },
        {
          "op": "replace",
          "path": "/topicSections",
          "value": [
            {
              "abstract": [
                {
                  "text": "Add allocation instances, including buffers, textures, and heaps, to a residency set.",
                  "type": "text"
                }
              ],
              "anchor": "Adding-Allocations",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLResidencySet/addAllocation(_:)",
                "doc://com.apple.metal/documentation/Metal/MTLResidencySet/addAllocations:count:"
              ],
              "title": "Adding Allocations"
            },
            {
              "abstract": [
                {
                  "text": "Remove allocation instances, including buffers, textures, and heaps, from a residency set.",
                  "type": "text"
                }
              ],
              "anchor": "Removing-Allocations",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllAllocations()",
                "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllocation(_:)",
                "doc://com.apple.metal/documentation/Metal/MTLResidencySet/removeAllocations:count:"
              ],
              "title": "Removing Allocations"
            },
            {
              "abstract": [
                {
                  "text": "Complete the additions and removals since the last commit.",
                  "type": "text"
                }
              ],
              "anchor": "Finalizing-Pending-Allocation-Changes",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLResidencySet/commit()"
              ],
              "title": "Finalizing Pending Allocation Changes"
            },
            {
              "abstract": [
                {
                  "text": "Ask Metal to make the residency set’s allocations resident.",
                  "type": "text"
                }
              ],
              "anchor": "Requesting-Residency-for-the-Allocations",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLResidencySet/requestResidency()"
              ],
              "title": "Requesting Residency for the Allocations"
            },
            {
              "abstract": [
                {
                  "text": "Notify Metal that you no longer need the residency set’s allocations to be resident so it can reallocate the underlying memory.",
                  "type": "text"
                }
              ],
              "anchor": "Releasing-the-Allocations-from-Residency",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLResidencySet/endResidency()"
              ],
              "title": "Releasing the Allocations from Residency"
            },
            {
              "abstract": [
                {
                  "text": "Identify a residency and check its current allocations and memory footprint.",
                  "type": "text"
                }
              ],
              "anchor": "Inspecting-a-Residency-Set",
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/MTLResidencySet/label",
                "doc://com.apple.metal/documentation/Metal/MTLResidencySet/device",
                "doc://com.apple.metal/documentation/Metal/MTLResidencySet/containsAllocation(_:)",
                "doc://com.apple.metal/documentation/Metal/MTLResidencySet/allAllocations",
                "doc://com.apple.metal/documentation/Metal/MTLResidencySet/allocationCount",
                "doc://com.apple.metal/documentation/Metal/MTLResidencySet/allocatedSize"
              ],
              "title": "Inspecting a Residency Set"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/relationshipsSections",
          "value": [
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(pl)NSObject"
              ],
              "kind": "relationships",
              "title": "Inherits From",
              "type": "inheritsFrom"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Residency-Sets",
              "generated": true,
              "identifiers": [
                "doc://com.apple.metal/documentation/Metal/simplifying-gpu-resource-management-with-residency-sets",
                "doc://com.apple.metal/documentation/Metal/MTLResidencySetDescriptor"
              ],
              "title": "Residency Sets"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "iOS",
                  "iPadOS",
                  "Mac Catalyst",
                  "macOS",
                  "tvOS",
                  "visionOS"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "@protocol"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "MTLResidencySet"
                  },
                  {
                    "kind": "text",
                    "text": " <"
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(pl)NSObject",
                    "text": "NSObject"
                  },
                  {
                    "kind": "text",
                    "text": ">"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder~1useHeap(_:stages:)/title",
          "value": "useHeap:stages:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder~1useHeap(_:stages:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "useHeap:stages:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLAllocation/title",
          "value": "MTLAllocation"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLAllocation/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLAllocation"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLAllocation/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLAllocation"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice/title",
          "value": "MTLDevice"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLDevice"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLDevice"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1removeAllAllocations()/title",
          "value": "removeAllAllocations"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1removeAllAllocations()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "removeAllAllocations"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1requestResidency()/title",
          "value": "requestResidency"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1requestResidency()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "requestResidency"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySetDescriptor/title",
          "value": "MTLResidencySetDescriptor"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySetDescriptor/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResidencySetDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySetDescriptor/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResidencySetDescriptor"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder/title",
          "value": "MTLRenderCommandEncoder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLRenderCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLRenderCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1label/title",
          "value": "label"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1label/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "label"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1endResidency()/title",
          "value": "endResidency"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1endResidency()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "endResidency"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1commit()/title",
          "value": "commit"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLCommandBuffer~1commit()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "commit"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1allAllocations/title",
          "value": "allAllocations"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1allAllocations/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "allAllocations"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet/title",
          "value": "MTLResidencySet"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResidencySet"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLResidencySet"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice~1makeResidencySet(descriptor:)/title",
          "value": "newResidencySetWithDescriptor:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLDevice~1makeResidencySet(descriptor:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "newResidencySetWithDescriptor:error:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1addAllocation(_:)/title",
          "value": "addAllocation:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1addAllocation(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "addAllocation:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1allocatedSize/title",
          "value": "allocatedSize"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1allocatedSize/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "allocatedSize"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1device/title",
          "value": "device"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1device/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "device"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputeCommandEncoder~1useResource(_:usage:)/title",
          "value": "useResource:usage:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputeCommandEncoder~1useResource(_:usage:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "useResource:usage:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSObject/title",
          "value": "NSObject"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputeCommandEncoder~1useHeap(_:)/title",
          "value": "useHeap:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputeCommandEncoder~1useHeap(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "useHeap:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1commit()/title",
          "value": "commit"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1commit()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "commit"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputeCommandEncoder/title",
          "value": "MTLComputeCommandEncoder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputeCommandEncoder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLComputeCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLComputeCommandEncoder/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLComputeCommandEncoder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1containsAllocation(_:)/title",
          "value": "containsAllocation:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1containsAllocation(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "containsAllocation:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1removeAllocation(_:)/title",
          "value": "removeAllocation:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1removeAllocation(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "removeAllocation:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLFence/title",
          "value": "MTLFence"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLFence/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLFence"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLFence/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLFence"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1allocationCount/title",
          "value": "allocationCount"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLResidencySet~1allocationCount/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "allocationCount"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder~1useResource(_:usage:stages:)/title",
          "value": "useResource:usage:stages:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLRenderCommandEncoder~1useResource(_:usage:stages:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "useResource:usage:stages:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLEvent/title",
          "value": "MTLEvent"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLEvent/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLEvent"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.metal~1documentation~1Metal~1MTLEvent/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "MTLEvent"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/metal/mtlresidencyset"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/metal/mtlresidencyset"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
