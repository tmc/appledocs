{
  "abstract": [
    {
      "text": "Reports whether or not a value is in a set, and if it exists returns the value indirectly.",
      "type": "text"
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/corefoundation",
        "doc://com.apple.documentation/documentation/corefoundation/cfset-rgt"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.documentation/documentation/corefoundation/1520409-cfsetgetvalueifpresent"
  },
  "kind": "symbol",
  "legacy_identifier": 1520409,
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:@F@CFSetGetValueIfPresent",
    "fragments": [
      {
        "kind": "text",
        "text": "func "
      },
      {
        "kind": "identifier",
        "text": "CFSetGetValueIfPresent"
      },
      {
        "kind": "text",
        "text": "(CFSet!, UnsafeRawPointer!, UnsafeMutablePointer<UnsafeRawPointer?>!) -> Bool"
      }
    ],
    "modules": [
      {
        "name": "Core Foundation"
      }
    ],
    "platforms": [
      {
        "current": "18.4",
        "introducedAt": "2.0",
        "name": "iOS"
      },
      {
        "current": "18.4",
        "introducedAt": "2.0",
        "name": "iPadOS"
      },
      {
        "current": "18.4",
        "introducedAt": "13.0",
        "name": "Mac Catalyst"
      },
      {
        "current": "15.4",
        "introducedAt": "10.0",
        "name": "macOS"
      },
      {
        "current": "18.4",
        "introducedAt": "9.0",
        "name": "tvOS"
      },
      {
        "current": "2.4",
        "introducedAt": "1.0",
        "name": "visionOS"
      },
      {
        "current": "11.4",
        "introducedAt": "2.0",
        "name": "watchOS"
      }
    ],
    "role": "symbol",
    "roleHeading": "Function",
    "symbolKind": "func",
    "title": "CFSetGetValueIfPresent(_:_:_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "CFSetGetValueIfPresent"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "theSet"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfset",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@CFSetRef",
              "text": "CFSet"
            },
            {
              "kind": "text",
              "text": "!"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "candidate"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawPointer",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SV",
              "text": "UnsafeRawPointer"
            },
            {
              "kind": "text",
              "text": "!"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "value"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeMutablePointer",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sp",
              "text": "UnsafeMutablePointer"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawPointer",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SV",
              "text": "UnsafeRawPointer"
            },
            {
              "kind": "text",
              "text": "?>!"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "languages": [
        "swift"
      ],
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The set to examine.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "theSet"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The value for which to search in ",
                  "type": "text"
                },
                {
                  "code": "theSet",
                  "type": "codeVoice"
                },
                {
                  "text": ". Comparisons are made using the equal callback provided when ",
                  "type": "text"
                },
                {
                  "code": "theSet",
                  "type": "codeVoice"
                },
                {
                  "text": " was created. If the equal callback was ",
                  "type": "text"
                },
                {
                  "code": "NULL",
                  "type": "codeVoice"
                },
                {
                  "text": ", pointer equality (in C, ==) is used. ",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "candidate"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Upon return contains the matching value if it exists in ",
                  "type": "text"
                },
                {
                  "code": "theSet",
                  "type": "codeVoice"
                },
                {
                  "text": ", otherwise ",
                  "type": "text"
                },
                {
                  "code": "NULL",
                  "type": "codeVoice"
                },
                {
                  "text": ". If the value is a Core Foundation object, ownership follows the ",
                  "type": "text"
                },
                {
                  "identifier": "devLink-1698004",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "value"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return_value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "code": "true",
              "type": "codeVoice"
            },
            {
              "text": " if ",
              "type": "text"
            },
            {
              "code": "value",
              "type": "codeVoice"
            },
            {
              "text": " exists in ",
              "type": "text"
            },
            {
              "code": "theSet",
              "type": "codeVoice"
            },
            {
              "text": ", otherwise ",
              "type": "text"
            },
            {
              "code": "false",
              "type": "codeVoice"
            },
            {
              "text": ". ",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This function uses the equal callback. ",
              "type": "text"
            },
            {
              "code": "candidate",
              "type": "codeVoice"
            },
            {
              "text": " and all elements in the set must be understood by the equal callback. Depending on the implementation of the equal callback specified when creating ",
              "type": "text"
            },
            {
              "code": "theSet",
              "type": "codeVoice"
            },
            {
              "text": ", the value returned in ",
              "type": "text"
            },
            {
              "code": "value",
              "type": "codeVoice"
            },
            {
              "text": " may not have the same pointer equality as ",
              "type": "text"
            },
            {
              "code": "candidate",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "devLink-1698004": {
      "identifier": "devLink-1698004",
      "title": "The Get Rule",
      "type": "link",
      "url": "https://developer.apple.com/library/archive/documentation/CoreFoundation/Conceptual/CFMemoryMgmt/Concepts/Ownership.html#//apple_ref/doc/uid/20001148-SW1"
    },
    "doc://com.apple.Swift/documentation/Swift/Bool": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/Bool",
      "kind": "symbol",
      "role": "symbol",
      "title": "Bool",
      "type": "topic",
      "url": "/documentation/swift/bool"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeMutablePointer": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeMutablePointer",
      "kind": "symbol",
      "role": "symbol",
      "title": "UnsafeMutablePointer",
      "type": "topic",
      "url": "/documentation/swift/unsafemutablepointer"
    },
    "doc://com.apple.Swift/documentation/Swift/UnsafeRawPointer": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeRawPointer",
      "kind": "symbol",
      "role": "symbol",
      "title": "UnsafeRawPointer",
      "type": "topic",
      "url": "/documentation/swift/unsaferawpointer"
    },
    "doc://com.apple.documentation/documentation/corefoundation": {
      "identifier": "doc://com.apple.documentation/documentation/corefoundation",
      "kind": "symbol",
      "role": "collection",
      "title": "Core Foundation",
      "type": "topic",
      "url": "/documentation/corefoundation"
    },
    "doc://com.apple.documentation/documentation/corefoundation/1520405-cfsetgetcountofvalue": {
      "abstract": [
        {
          "text": "Returns the number of values in a set that match a given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "CFSetGetCountOfValue"
        },
        {
          "kind": "text",
          "text": "(CFSet!, UnsafeRawPointer!) -> CFIndex"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/1520405-cfsetgetcountofvalue",
      "kind": "symbol",
      "role": "symbol",
      "title": "CFSetGetCountOfValue(_:_:)",
      "type": "topic",
      "url": "/documentation/corefoundation/1520405-cfsetgetcountofvalue"
    },
    "doc://com.apple.documentation/documentation/corefoundation/1520409-cfsetgetvalueifpresent": {
      "abstract": [
        {
          "text": "Reports whether or not a value is in a set, and if it exists returns the value indirectly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "CFSetGetValueIfPresent"
        },
        {
          "kind": "text",
          "text": "(CFSet!, UnsafeRawPointer!, UnsafeMutablePointer<UnsafeRawPointer?>!) -> Bool"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/1520409-cfsetgetvalueifpresent",
      "kind": "symbol",
      "role": "symbol",
      "title": "CFSetGetValueIfPresent(_:_:_:)",
      "type": "topic",
      "url": "/documentation/corefoundation/1520409-cfsetgetvalueifpresent"
    },
    "doc://com.apple.documentation/documentation/corefoundation/1520419-cfsetgetcount": {
      "abstract": [
        {
          "text": "Returns the number of values currently in a set.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "CFSetGetCount"
        },
        {
          "kind": "text",
          "text": "(CFSet!) -> CFIndex"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/1520419-cfsetgetcount",
      "kind": "symbol",
      "role": "symbol",
      "title": "CFSetGetCount(_:)",
      "type": "topic",
      "url": "/documentation/corefoundation/1520419-cfsetgetcount"
    },
    "doc://com.apple.documentation/documentation/corefoundation/1520426-cfsetgetvalue": {
      "abstract": [
        {
          "text": "Obtains a specified value from a set.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "CFSetGetValue"
        },
        {
          "kind": "text",
          "text": "(CFSet!, UnsafeRawPointer!) -> UnsafeRawPointer!"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/1520426-cfsetgetvalue",
      "kind": "symbol",
      "role": "symbol",
      "title": "CFSetGetValue(_:_:)",
      "type": "topic",
      "url": "/documentation/corefoundation/1520426-cfsetgetvalue"
    },
    "doc://com.apple.documentation/documentation/corefoundation/1520436-cfsetcontainsvalue": {
      "abstract": [
        {
          "text": "Returns a Boolean that indicates whether a set contains a given value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "CFSetContainsValue"
        },
        {
          "kind": "text",
          "text": "(CFSet!, UnsafeRawPointer!) -> Bool"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/1520436-cfsetcontainsvalue",
      "kind": "symbol",
      "role": "symbol",
      "title": "CFSetContainsValue(_:_:)",
      "type": "topic",
      "url": "/documentation/corefoundation/1520436-cfsetcontainsvalue"
    },
    "doc://com.apple.documentation/documentation/corefoundation/1520437-cfsetgetvalues": {
      "abstract": [
        {
          "text": "Obtains all values in a set.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "CFSetGetValues"
        },
        {
          "kind": "text",
          "text": "(CFSet!, UnsafeMutablePointer<UnsafeRawPointer?>!)"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/1520437-cfsetgetvalues",
      "kind": "symbol",
      "role": "symbol",
      "title": "CFSetGetValues(_:_:)",
      "type": "topic",
      "url": "/documentation/corefoundation/1520437-cfsetgetvalues"
    },
    "doc://com.apple.documentation/documentation/corefoundation/cfset": {
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfset",
      "kind": "symbol",
      "role": "symbol",
      "title": "CFSet",
      "type": "topic",
      "url": "/documentation/corefoundation/cfset"
    },
    "doc://com.apple.documentation/documentation/corefoundation/cfset-rgt": {
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfset-rgt",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CFSet",
      "type": "topic",
      "url": "/documentation/corefoundation/cfset-rgt"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "generated": true,
      "identifiers": [
        "doc://com.apple.documentation/documentation/corefoundation/1520436-cfsetcontainsvalue",
        "doc://com.apple.documentation/documentation/corefoundation/1520419-cfsetgetcount",
        "doc://com.apple.documentation/documentation/corefoundation/1520405-cfsetgetcountofvalue",
        "doc://com.apple.documentation/documentation/corefoundation/1520426-cfsetgetvalue",
        "doc://com.apple.documentation/documentation/corefoundation/1520437-cfsetgetvalues"
      ],
      "title": "Examining a Set"
    }
  ],
  "variants": [
    {
      "paths": [
        "documentation/corefoundation/1520409-cfsetgetvalueifpresent"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    },
    {
      "paths": [
        "documentation/corefoundation/1520409-cfsetgetvalueifpresent"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
