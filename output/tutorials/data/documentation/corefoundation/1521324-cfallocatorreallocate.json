{
  "abstract": [
    {
      "text": "Reallocates memory using the specified allocator.",
      "type": "text"
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/corefoundation",
        "doc://com.apple.documentation/documentation/corefoundation/cfallocator-s29"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.documentation/documentation/corefoundation/1521324-cfallocatorreallocate"
  },
  "kind": "symbol",
  "legacy_identifier": 1521324,
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:@F@CFAllocatorReallocate",
    "fragments": [
      {
        "kind": "text",
        "text": "func "
      },
      {
        "kind": "identifier",
        "text": "CFAllocatorReallocate"
      },
      {
        "kind": "text",
        "text": "(CFAllocator!, UnsafeMutableRawPointer!, CFIndex, CFOptionFlags) -> UnsafeMutableRawPointer!"
      }
    ],
    "modules": [
      {
        "name": "Core Foundation"
      }
    ],
    "platforms": [
      {
        "current": "18.4",
        "introducedAt": "2.0",
        "name": "iOS"
      },
      {
        "current": "18.4",
        "introducedAt": "2.0",
        "name": "iPadOS"
      },
      {
        "current": "18.4",
        "introducedAt": "13.0",
        "name": "Mac Catalyst"
      },
      {
        "current": "15.4",
        "introducedAt": "10.0",
        "name": "macOS"
      },
      {
        "current": "18.4",
        "introducedAt": "9.0",
        "name": "tvOS"
      },
      {
        "current": "2.4",
        "introducedAt": "1.0",
        "name": "visionOS"
      },
      {
        "current": "11.4",
        "introducedAt": "2.0",
        "name": "watchOS"
      }
    ],
    "role": "symbol",
    "roleHeading": "Function",
    "symbolKind": "func",
    "title": "CFAllocatorReallocate(_:_:_:_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "CFAllocatorReallocate"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "allocator"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfallocator",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@CFAllocatorRef",
              "text": "CFAllocator"
            },
            {
              "kind": "text",
              "text": "!"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "ptr"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeMutableRawPointer",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sv",
              "text": "UnsafeMutableRawPointer"
            },
            {
              "kind": "text",
              "text": "!"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "newsize"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfindex",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@CFIndex",
              "text": "CFIndex"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "hint"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfoptionflags",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@CFOptionFlags",
              "text": "CFOptionFlags"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeMutableRawPointer",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sv",
              "text": "UnsafeMutableRawPointer"
            },
            {
              "kind": "text",
              "text": "!"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "languages": [
        "swift"
      ],
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The allocator to use for reallocating memory. Pass ",
                  "type": "text"
                },
                {
                  "code": "NULL",
                  "type": "codeVoice"
                },
                {
                  "text": " to request the default allocator. ",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "allocator"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "An untyped pointer to a block of memory to reallocate to a new size. If ",
                  "type": "text"
                },
                {
                  "code": "ptr",
                  "type": "codeVoice"
                },
                {
                  "text": " is ",
                  "type": "text"
                },
                {
                  "code": "NULL",
                  "type": "codeVoice"
                },
                {
                  "text": " and ",
                  "type": "text"
                },
                {
                  "code": "newsize",
                  "type": "codeVoice"
                },
                {
                  "text": " is greater than 0, memory is allocated (using the ",
                  "type": "text"
                },
                {
                  "code": "allocate",
                  "type": "codeVoice"
                },
                {
                  "text": " function callback of the allocator's context). If ",
                  "type": "text"
                },
                {
                  "code": "ptr",
                  "type": "codeVoice"
                },
                {
                  "text": " is ",
                  "type": "text"
                },
                {
                  "code": "NULL",
                  "type": "codeVoice"
                },
                {
                  "text": " and ",
                  "type": "text"
                },
                {
                  "code": "newsize",
                  "type": "codeVoice"
                },
                {
                  "text": " is 0, the result is ",
                  "type": "text"
                },
                {
                  "code": "NULL",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "ptr"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The number of bytes to allocate. If you pass ",
                  "type": "text"
                },
                {
                  "code": "0",
                  "type": "codeVoice"
                },
                {
                  "text": " and the ",
                  "type": "text"
                },
                {
                  "code": "ptr",
                  "type": "codeVoice"
                },
                {
                  "text": " parameter is non-",
                  "type": "text"
                },
                {
                  "code": "NULL",
                  "type": "codeVoice"
                },
                {
                  "text": ", the block of memory that ",
                  "type": "text"
                },
                {
                  "code": "ptr",
                  "type": "codeVoice"
                },
                {
                  "text": " points to is typically deallocated. If you pass 0 for this parameter and the ",
                  "type": "text"
                },
                {
                  "code": "ptr",
                  "type": "codeVoice"
                },
                {
                  "text": " parameter is ",
                  "type": "text"
                },
                {
                  "code": "NULL",
                  "type": "codeVoice"
                },
                {
                  "text": ", nothing happens and the result returned is ",
                  "type": "text"
                },
                {
                  "code": "NULL",
                  "type": "codeVoice"
                },
                {
                  "text": ". ",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "newsize"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A bitfield of type ",
                  "type": "text"
                },
                {
                  "code": "CFOptionsFlags",
                  "type": "codeVoice"
                },
                {
                  "text": ". Pass flags to the allocator that suggest how memory is to be allocated. Zero indicates no hints. No hints are currently defined, only ",
                  "type": "text"
                },
                {
                  "code": "0",
                  "type": "codeVoice"
                },
                {
                  "text": " should be passed for this argument.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "hint"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "CFAllocatorReallocate",
              "type": "codeVoice"
            },
            {
              "text": " function's primary purpose is to reallocate a block of memory to a new (and usually larger) size. However, based on the values passed in certain of the parameters, this function can also allocate memory afresh or deallocate a given block of memory. The following summarizes the semantic combinations:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "If the ",
                      "type": "text"
                    },
                    {
                      "code": "ptr",
                      "type": "codeVoice"
                    },
                    {
                      "text": " parameter is non- ",
                      "type": "text"
                    },
                    {
                      "code": "NULL",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and the ",
                      "type": "text"
                    },
                    {
                      "code": "newsize",
                      "type": "codeVoice"
                    },
                    {
                      "text": " parameter is greater than ",
                      "type": "text"
                    },
                    {
                      "code": "0",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", the behavior is to reallocate.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "If the ",
                      "type": "text"
                    },
                    {
                      "code": "ptr",
                      "type": "codeVoice"
                    },
                    {
                      "text": " parameter is ",
                      "type": "text"
                    },
                    {
                      "code": "NULL",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and the ",
                      "type": "text"
                    },
                    {
                      "code": "newsize",
                      "type": "codeVoice"
                    },
                    {
                      "text": " parameter is greater than ",
                      "type": "text"
                    },
                    {
                      "code": "0",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", the behavior is to allocate.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "If the ",
                      "type": "text"
                    },
                    {
                      "code": "ptr",
                      "type": "codeVoice"
                    },
                    {
                      "text": " parameter is non- ",
                      "type": "text"
                    },
                    {
                      "code": "NULL",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and the ",
                      "type": "text"
                    },
                    {
                      "code": "newsize",
                      "type": "codeVoice"
                    },
                    {
                      "text": " parameter is ",
                      "type": "text"
                    },
                    {
                      "code": "0",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", the behavior is to deallocate.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "The result of the ",
              "type": "text"
            },
            {
              "code": "CFAllocatorReallocate",
              "type": "codeVoice"
            },
            {
              "text": " function is either an untyped pointer to a block of memory or ",
              "type": "text"
            },
            {
              "code": "NULL",
              "type": "codeVoice"
            },
            {
              "text": ". A ",
              "type": "text"
            },
            {
              "code": "NULL",
              "type": "codeVoice"
            },
            {
              "text": " result indicates either a failure to allocate memory or some other outcome, the precise interpretation of which is determined by the values of certain parameters and the presence or absence of callbacks in the allocator context. To summarize, a ",
              "type": "text"
            },
            {
              "code": "NULL",
              "type": "codeVoice"
            },
            {
              "text": " result can mean one of the following:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "An error occurred in the attempt to allocate memory, such as insufficient free space.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "No ",
                      "type": "text"
                    },
                    {
                      "code": "allocate",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", ",
                      "type": "text"
                    },
                    {
                      "code": "reallocate",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", or ",
                      "type": "text"
                    },
                    {
                      "code": "deallocate",
                      "type": "codeVoice"
                    },
                    {
                      "text": " function callback (depending on parameters) was defined in the allocator context.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The semantic operation is \"deallocate\" (that is, there is no need to return anything). ",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The ",
                      "type": "text"
                    },
                    {
                      "code": "ptr",
                      "type": "codeVoice"
                    },
                    {
                      "text": " parameter is ",
                      "type": "text"
                    },
                    {
                      "code": "NULL",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and the requested size is 0. ",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.Swift/documentation/Swift/UnsafeMutableRawPointer": {
      "identifier": "doc://com.apple.Swift/documentation/Swift/UnsafeMutableRawPointer",
      "kind": "symbol",
      "role": "symbol",
      "title": "UnsafeMutableRawPointer",
      "type": "topic",
      "url": "/documentation/swift/unsafemutablerawpointer"
    },
    "doc://com.apple.documentation/documentation/corefoundation": {
      "identifier": "doc://com.apple.documentation/documentation/corefoundation",
      "kind": "symbol",
      "role": "collection",
      "title": "Core Foundation",
      "type": "topic",
      "url": "/documentation/corefoundation"
    },
    "doc://com.apple.documentation/documentation/corefoundation/1521138-cfallocatorgetpreferredsizeforsi": {
      "abstract": [
        {
          "text": "Obtains the number of bytes likely to be allocated upon a specific request.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "CFAllocatorGetPreferredSizeForSize"
        },
        {
          "kind": "text",
          "text": "(CFAllocator!, CFIndex, CFOptionFlags) -> CFIndex"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/1521138-cfallocatorgetpreferredsizeforsi",
      "kind": "symbol",
      "role": "symbol",
      "title": "CFAllocatorGetPreferredSizeForSize(_:_:_:)",
      "type": "topic",
      "url": "/documentation/corefoundation/1521138-cfallocatorgetpreferredsizeforsi"
    },
    "doc://com.apple.documentation/documentation/corefoundation/1521250-cfallocatorallocate": {
      "abstract": [
        {
          "text": "Allocates memory using the specified allocator.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "CFAllocatorAllocate"
        },
        {
          "kind": "text",
          "text": "(CFAllocator!, CFIndex, CFOptionFlags) -> UnsafeMutableRawPointer!"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/1521250-cfallocatorallocate",
      "kind": "symbol",
      "role": "symbol",
      "title": "CFAllocatorAllocate(_:_:_:)",
      "type": "topic",
      "url": "/documentation/corefoundation/1521250-cfallocatorallocate"
    },
    "doc://com.apple.documentation/documentation/corefoundation/1521299-cfallocatordeallocate": {
      "abstract": [
        {
          "text": "Deallocates a block of memory with a given allocator.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "CFAllocatorDeallocate"
        },
        {
          "kind": "text",
          "text": "(CFAllocator!, UnsafeMutableRawPointer!)"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/1521299-cfallocatordeallocate",
      "kind": "symbol",
      "role": "symbol",
      "title": "CFAllocatorDeallocate(_:_:)",
      "type": "topic",
      "url": "/documentation/corefoundation/1521299-cfallocatordeallocate"
    },
    "doc://com.apple.documentation/documentation/corefoundation/1521324-cfallocatorreallocate": {
      "abstract": [
        {
          "text": "Reallocates memory using the specified allocator.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "CFAllocatorReallocate"
        },
        {
          "kind": "text",
          "text": "(CFAllocator!, UnsafeMutableRawPointer!, CFIndex, CFOptionFlags) -> UnsafeMutableRawPointer!"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/1521324-cfallocatorreallocate",
      "kind": "symbol",
      "role": "symbol",
      "title": "CFAllocatorReallocate(_:_:_:_:)",
      "type": "topic",
      "url": "/documentation/corefoundation/1521324-cfallocatorreallocate"
    },
    "doc://com.apple.documentation/documentation/corefoundation/cfallocator": {
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfallocator",
      "kind": "symbol",
      "role": "symbol",
      "title": "CFAllocator",
      "type": "topic",
      "url": "/documentation/corefoundation/cfallocator"
    },
    "doc://com.apple.documentation/documentation/corefoundation/cfallocator-s29": {
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfallocator-s29",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CFAllocator",
      "type": "topic",
      "url": "/documentation/corefoundation/cfallocator-s29"
    },
    "doc://com.apple.documentation/documentation/corefoundation/cfindex": {
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfindex",
      "kind": "symbol",
      "role": "symbol",
      "title": "CFIndex",
      "type": "topic",
      "url": "/documentation/corefoundation/cfindex"
    },
    "doc://com.apple.documentation/documentation/corefoundation/cfoptionflags": {
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfoptionflags",
      "kind": "symbol",
      "role": "symbol",
      "title": "CFOptionFlags",
      "type": "topic",
      "url": "/documentation/corefoundation/cfoptionflags"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "generated": true,
      "identifiers": [
        "doc://com.apple.documentation/documentation/corefoundation/1521250-cfallocatorallocate",
        "doc://com.apple.documentation/documentation/corefoundation/1521299-cfallocatordeallocate",
        "doc://com.apple.documentation/documentation/corefoundation/1521138-cfallocatorgetpreferredsizeforsi"
      ],
      "title": "Managing Memory with an Allocator"
    }
  ],
  "variants": [
    {
      "paths": [
        "documentation/corefoundation/1521324-cfallocatorreallocate"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    },
    {
      "paths": [
        "documentation/corefoundation/1521324-cfallocatorreallocate"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
