{
  "abstract": [
    {
      "text": "Loads training examples from a data frame containing annotations.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.TabularData/documentation/TabularData",
        "doc://com.apple.TabularData/documentation/TabularData/DataFrame"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.TabularData/documentation/TabularData/DataFrame/loadRangedAnnotations(parameters:continueOnFailure:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "TabularData",
    "externalID": "s:11TabularData0B5FrameV18CreateMLComponentsE21loadRangedAnnotations10parameters17continueOnFailureSayAD16AnnotatedFeatureVyAD19TemporalFileSegmentVxGGAD0bcO20AnnotationParametersVyxG_SbtKSQRzs8SendableRzlF",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "loadRangedAnnotations"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "Annotation"
      },
      {
        "kind": "text",
        "text": ">("
      },
      {
        "kind": "externalParam",
        "text": "parameters"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:18CreateMLComponents37DataFrameTemporalAnnotationParametersV",
        "text": "DataFrameTemporalAnnotationParameters"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "text": "Annotation"
      },
      {
        "kind": "text",
        "text": ">, "
      },
      {
        "kind": "externalParam",
        "text": "continueOnFailure"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sb",
        "text": "Bool"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": " -> ["
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:18CreateMLComponents16AnnotatedFeatureV",
        "text": "AnnotatedFeature"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:18CreateMLComponents19TemporalFileSegmentV",
        "text": "TemporalFileSegment"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "typeIdentifier",
        "text": "Annotation"
      },
      {
        "kind": "text",
        "text": ">]"
      }
    ],
    "modules": [
      {
        "name": "TabularData"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "11.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "loadRangedAnnotations(parameters:continueOnFailure:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "loadRangedAnnotations"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "Annotation"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "parameters"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:18CreateMLComponents37DataFrameTemporalAnnotationParametersV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:18CreateMLComponents37DataFrameTemporalAnnotationParametersV",
              "text": "DataFrameTemporalAnnotationParameters"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "text": "Annotation"
            },
            {
              "kind": "text",
              "text": "> = .init(), "
            },
            {
              "kind": "externalParam",
              "text": "continueOnFailure"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sb",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": " = false) "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> ["
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:18CreateMLComponents16AnnotatedFeatureV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:18CreateMLComponents16AnnotatedFeatureV",
              "text": "AnnotatedFeature"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:18CreateMLComponents19TemporalFileSegmentV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:18CreateMLComponents19TemporalFileSegmentV",
              "text": "TemporalFileSegment"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "Annotation"
            },
            {
              "kind": "text",
              "text": ">] "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "Annotation"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:SQ",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SQ",
              "text": "Equatable"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "text": "Annotation"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s8SendableP",
              "text": "Sendable"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Annotation parameters for using specific column names from the data frame.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "By default the data frame is expected to have columns ",
                  "type": "text"
                },
                {
                  "code": "filePath",
                  "type": "codeVoice"
                },
                {
                  "text": " and ",
                  "type": "text"
                },
                {
                  "code": "annotation",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "parameters"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A Boolean value indicating whether to continue reading the dataframe",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "after encountering a row that is invalid. The default value is ",
                  "type": "text"
                },
                {
                  "code": "false",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "continueOnFailure"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A list of annotated features containing ",
              "type": "text"
            },
            {
              "code": "URLRange<Double>",
              "type": "codeVoice"
            },
            {
              "text": " as feature and ",
              "type": "text"
            },
            {
              "code": "Annotation",
              "type": "codeVoice"
            },
            {
              "text": " as annotation.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The exact column ids within the data frame which contains the file path, annotation, startTime",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and endTime of each temporal annotation, can be customized using the ",
              "type": "text"
            },
            {
              "code": "parameters",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "argument.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The data frame must contain at least two columns: one for file path and one for annotation.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The file path must be of String type and annotation can be of any equatable type.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "filePath",
              "type": "codeVoice"
            },
            {
              "text": " column in the ",
              "type": "text"
            },
            {
              "code": "dataFrame",
              "type": "codeVoice"
            },
            {
              "text": " should contain file path with its extension. All the files",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "can have absolute path or a path relative to a ",
              "type": "text"
            },
            {
              "code": "baseURL",
              "type": "codeVoice"
            },
            {
              "text": ". This option can be specified using",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "filePathType",
              "type": "codeVoice"
            },
            {
              "text": " in ",
              "type": "text"
            },
            {
              "code": "parameters",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "startTime",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "endTime",
              "type": "codeVoice"
            },
            {
              "text": " columns contain the start time and end time of a temporal segment",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "in seconds. Their type is Double. Both the columns are optional.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If only a ",
              "type": "text"
            },
            {
              "code": "startTime",
              "type": "codeVoice"
            },
            {
              "text": " is specified, it is interpreted as an annotation for the range starting from",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "startTime",
              "type": "codeVoice"
            },
            {
              "text": " till the end of file, i.e., ",
              "type": "text"
            },
            {
              "code": "startTime ...",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If only an ",
              "type": "text"
            },
            {
              "code": "endTime",
              "type": "codeVoice"
            },
            {
              "text": " is specified, it is interpreted as an annotation for the range starting at 0 till",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "code": "endTime",
              "type": "codeVoice"
            },
            {
              "text": ", i.e., ",
              "type": "text"
            },
            {
              "code": "0 ..< endTime",
              "type": "codeVoice"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If both ",
              "type": "text"
            },
            {
              "code": "startTime",
              "type": "codeVoice"
            },
            {
              "text": " and ",
              "type": "text"
            },
            {
              "code": "endTime",
              "type": "codeVoice"
            },
            {
              "text": " columns are missing or their values are missing, the annotation",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "is assumed to be for the entire file length.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Ensure that the same file has no overlapping range in the dataframe. Since overlapping",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "ranges would mean conflicting annotation for that range.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "Consider an example of a dataframe containing the following values:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "------------------------------------------------",
            "| fileName  | annotation | startTime | endTime |",
            "| ----------|------------|-----------|---------|",
            "| file1.wav |   class1   |     0     |   4     |",
            "| file1.wav |   class2   |     5     |   10    |",
            "| file2.wav |   class1   |     2     |         |",
            "| file3.wav |   class2   |           |         |",
            "| file4.wav |   class1   |           |   5     |",
            "------------------------------------------------"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "This will create an annotated feature list which has the following structure:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "[",
            "    AnnotatedFeature(feature:  TemporalFileSegment(\"file1.wav\", 0 ..< 4), annotation: \"class1\"),",
            "    AnnotatedFeature(feature:  TemporalFileSegment(\"file1.wav\", 5 ..< 10), annotation: \"class2\"),",
            "    AnnotatedFeature(feature:  TemporalFileSegment(\"file2.wav\", 2 ...), annotation: \"class1\"),",
            "    AnnotatedFeature(feature:  TemporalFileSegment(\"file3.wav\", 0 ...), annotation: \"class2\"),",
            "    AnnotatedFeature(feature:  TemporalFileSegment(\"file4.wav\", 0 ..< 5), annotation: \"class1\")",
            "]"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.TabularData/documentation/TabularData": {
      "abstract": [
        {
          "text": "Import, organize, and prepare a table of data to train a machine learning model.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.TabularData/documentation/TabularData",
      "kind": "symbol",
      "role": "collection",
      "title": "TabularData",
      "type": "topic",
      "url": "/documentation/tabulardata"
    },
    "doc://com.apple.TabularData/documentation/TabularData/DataFrame": {
      "abstract": [
        {
          "text": "A collection that arranges data in rows and columns.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DataFrame"
        }
      ],
      "identifier": "doc://com.apple.TabularData/documentation/TabularData/DataFrame",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DataFrame"
        }
      ],
      "role": "symbol",
      "title": "DataFrame",
      "type": "topic",
      "url": "/documentation/tabulardata/dataframe"
    },
    "doc://com.apple.TabularData/documentation/TabularData/DataFrame/loadRangedAnnotations(parameters:continueOnFailure:)": {
      "abstract": [
        {
          "text": "Loads training examples from a data frame containing annotations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "loadRangedAnnotations"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Annotation"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "parameters"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:18CreateMLComponents37DataFrameTemporalAnnotationParametersV",
          "text": "DataFrameTemporalAnnotationParameters"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Annotation"
        },
        {
          "kind": "text",
          "text": ">, "
        },
        {
          "kind": "externalParam",
          "text": "continueOnFailure"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:18CreateMLComponents16AnnotatedFeatureV",
          "text": "AnnotatedFeature"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:18CreateMLComponents19TemporalFileSegmentV",
          "text": "TemporalFileSegment"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Annotation"
        },
        {
          "kind": "text",
          "text": ">]"
        }
      ],
      "identifier": "doc://com.apple.TabularData/documentation/TabularData/DataFrame/loadRangedAnnotations(parameters:continueOnFailure:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "loadRangedAnnotations(parameters:continueOnFailure:)",
      "type": "topic",
      "url": "/documentation/tabulardata/dataframe/loadrangedannotations(parameters:continueonfailure:)"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:18CreateMLComponents16AnnotatedFeatureV": {
      "abstract": [
        {
          "text": "An annotated example for fitting a supervised estimator.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AnnotatedFeature"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Feature"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "Annotation"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:18CreateMLComponents16AnnotatedFeatureV",
      "kind": "symbol",
      "role": "symbol",
      "title": "AnnotatedFeature",
      "type": "topic",
      "url": "/documentation/CreateMLComponents/AnnotatedFeature"
    },
    "doc://com.externally.resolved.symbol/s:18CreateMLComponents19TemporalFileSegmentV": {
      "abstract": [
        {
          "text": "A URL and a time range identifying a specific segment of a time-based (temporal) file.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TemporalFileSegment"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:18CreateMLComponents19TemporalFileSegmentV",
      "kind": "symbol",
      "role": "symbol",
      "title": "TemporalFileSegment",
      "type": "topic",
      "url": "/documentation/CreateMLComponents/TemporalFileSegment"
    },
    "doc://com.externally.resolved.symbol/s:18CreateMLComponents37DataFrameTemporalAnnotationParametersV": {
      "abstract": [
        {
          "text": "Annotation parameters for the dataframe containing temporal annotations.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DataFrameTemporalAnnotationParameters"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Annotation"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Annotation"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "text": "Annotation"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s8SendableP",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:18CreateMLComponents37DataFrameTemporalAnnotationParametersV",
      "kind": "symbol",
      "role": "symbol",
      "title": "DataFrameTemporalAnnotationParameters",
      "type": "topic",
      "url": "/documentation/CreateMLComponents/DataFrameTemporalAnnotationParameters"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:Sb": {
      "abstract": [
        {
          "text": "A value type whose instances are either `true` or `false`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Sb",
      "kind": "symbol",
      "role": "symbol",
      "title": "Bool",
      "type": "topic",
      "url": "/documentation/Swift/Bool"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/tabulardata/dataframe/loadrangedannotations(parameters:continueonfailure:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
