{
  "abstract": [
    {
      "text": "Adds an asynchronous task to perform before this view appears.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.FinanceKit/documentation/FinanceKitUI",
        "doc://com.apple.FinanceKit/documentation/FinanceKitUI/AddOrderToWalletButton"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.FinanceKit/documentation/FinanceKitUI/AddOrderToWalletButton/task(priority:_:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "extendedModule": "SwiftUI",
    "externalID": "s:7SwiftUI4ViewPAAE4task8priority_QrScP_yyYaYbctF::SYNTHESIZED::s:12FinanceKitUI22AddOrderToWalletButtonV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "task"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "priority"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:ScP",
        "text": "TaskPriority"
      },
      {
        "kind": "text",
        "text": ", () "
      },
      {
        "kind": "keyword",
        "text": "async"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s4Voida",
        "text": "Void"
      },
      {
        "kind": "text",
        "text": ") -> "
      },
      {
        "kind": "keyword",
        "text": "some"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7SwiftUI4ViewP",
        "text": "View"
      }
    ],
    "modules": [
      {
        "name": "FinanceKitUI",
        "relatedModules": [
          "SwiftUI"
        ]
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "12.0",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "15.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "8.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "task(priority:_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "nonisolated"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "task"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "priority"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:ScP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:ScP",
              "text": "TaskPriority"
            },
            {
              "kind": "text",
              "text": " = .userInitiated, "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "action"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "@escaping"
            },
            {
              "kind": "text",
              "text": " () "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s4Voida",
              "text": "Void"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "keyword",
              "text": "some"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7SwiftUI4ViewP",
              "text": "View"
            },
            {
              "kind": "text",
              "text": "\n"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The task priority to use when creating the asynchronous",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "task. The default priority is",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.documentation/documentation/Swift/TaskPriority/userInitiated",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "priority"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A closure that SwiftUI calls as an asynchronous task",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "before the view appears. SwiftUI will automatically cancel the task",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "at some point after the view disappears before the action completes.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "action"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A view that runs the specified action asynchronously before",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the view appears.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use this modifier to perform an asynchronous task with a lifetime that",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "matches that of the modified view. If the task doesnâ€™t finish",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "before SwiftUI removes the view or the view changes identity, SwiftUI",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "cancels the task.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Use the ",
              "type": "text"
            },
            {
              "code": "await",
              "type": "codeVoice"
            },
            {
              "text": " keyword inside the task to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "wait for an asynchronous call to complete, or to wait on the values of",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "an ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/Swift/AsyncSequence",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "instance. For example, you can modify a ",
              "type": "text"
            },
            {
              "code": "Text",
              "type": "codeVoice"
            },
            {
              "text": " view to start a task",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that loads content from a remote resource:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let url = URL(string: \"https://example.com\")!",
            "@State private var message = \"Loading...\"",
            "",
            "var body: some View {",
            "    Text(message)",
            "        .task {",
            "            do {",
            "                var receivedLines = [String]()",
            "                for try await line in url.lines {",
            "                    receivedLines.append(line)",
            "                    message = \"Received \\(receivedLines.count) lines\"",
            "                }",
            "            } catch {",
            "                message = \"Failed to load\"",
            "            }",
            "        }",
            "}"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "This example uses the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/url/3767315-lines",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "method to get the content stored at the specified",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/foundation/url",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " as an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "asynchronous sequence of strings. When each new line arrives, the body",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of the ",
              "type": "text"
            },
            {
              "code": "for",
              "type": "codeVoice"
            },
            {
              "text": "-",
              "type": "text"
            },
            {
              "code": "await",
              "type": "codeVoice"
            },
            {
              "text": "-",
              "type": "text"
            },
            {
              "code": "in",
              "type": "codeVoice"
            },
            {
              "text": " loop stores the line in an array of strings",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and updates the content of the text view to report the latest line",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "count.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.FinanceKit/documentation/FinanceKitUI": {
      "abstract": [
        {
          "text": "Add orders to Apple Wallet.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.FinanceKit/documentation/FinanceKitUI",
      "kind": "symbol",
      "role": "collection",
      "title": "FinanceKitUI",
      "type": "topic",
      "url": "/documentation/financekitui"
    },
    "doc://com.apple.FinanceKit/documentation/FinanceKitUI/AddOrderToWalletButton": {
      "abstract": [
        {
          "text": "A button you use to add an order to a personâ€™s Apple Wallet.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AddOrderToWalletButton"
        }
      ],
      "identifier": "doc://com.apple.FinanceKit/documentation/FinanceKitUI/AddOrderToWalletButton",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AddOrderToWalletButton"
        }
      ],
      "role": "symbol",
      "title": "AddOrderToWalletButton",
      "type": "topic",
      "url": "/documentation/financekitui/addordertowalletbutton"
    },
    "doc://com.apple.FinanceKit/documentation/FinanceKitUI/AddOrderToWalletButton/task(priority:_:)": {
      "abstract": [
        {
          "text": "Adds an asynchronous task to perform before this view appears.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "task"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "priority"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScP",
          "text": "TaskPriority"
        },
        {
          "kind": "text",
          "text": ", () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://com.apple.FinanceKit/documentation/FinanceKitUI/AddOrderToWalletButton/task(priority:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "task(priority:_:)",
      "type": "topic",
      "url": "/documentation/financekitui/addordertowalletbutton/task(priority:_:)"
    },
    "doc://com.apple.documentation/documentation/Swift/AsyncSequence": {
      "abstract": [
        {
          "text": "A type that provides asynchronous, sequential, iterated access to its elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AsyncSequence"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sci7ElementQa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sci7FailureQa",
          "text": "Failure"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/AsyncSequence",
      "kind": "symbol",
      "role": "symbol",
      "title": "AsyncSequence",
      "type": "topic",
      "url": "/documentation/Swift/AsyncSequence"
    },
    "doc://com.apple.documentation/documentation/Swift/TaskPriority/userInitiated": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "let"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "userInitiated"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:ScP",
          "text": "TaskPriority"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/Swift/TaskPriority/userInitiated",
      "kind": "symbol",
      "role": "symbol",
      "title": "userInitiated",
      "type": "topic",
      "url": "/documentation/Swift/TaskPriority/userInitiated"
    },
    "doc://com.apple.documentation/documentation/foundation/url": {
      "abstract": [
        {
          "text": "A value that identifies the location of a resource, such as an item on a remote server or the path to a local file.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "struct "
        },
        {
          "kind": "identifier",
          "text": "URL"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/url",
      "kind": "symbol",
      "role": "symbol",
      "title": "URL",
      "type": "topic",
      "url": "/documentation/foundation/url"
    },
    "doc://com.apple.documentation/documentation/foundation/url/3767315-lines": {
      "abstract": [
        {
          "text": "The URLâ€™s resource data, as an asynchronous sequence of lines of text.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "var "
        },
        {
          "kind": "identifier",
          "text": "lines"
        },
        {
          "kind": "text",
          "text": ": AsyncLineSequence<URL.AsyncBytes>"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/foundation/url/3767315-lines",
      "kind": "symbol",
      "role": "symbol",
      "title": "lines",
      "type": "topic",
      "url": "/documentation/foundation/url/3767315-lines"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP": {
      "abstract": [
        {
          "text": "A type that represents part of your appâ€™s user interface and provides modifiers that you use to configure views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@"
        },
        {
          "kind": "attribute",
          "preciseIdentifier": "s:ScM",
          "text": "MainActor"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "attribute",
          "text": "@preconcurrency"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "View"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:7SwiftUI4ViewP",
      "kind": "symbol",
      "role": "symbol",
      "title": "View",
      "type": "topic",
      "url": "/documentation/SwiftUI/View"
    },
    "doc://com.externally.resolved.symbol/s:ScP": {
      "abstract": [
        {
          "text": "The priority of a task.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TaskPriority"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:ScP",
      "kind": "symbol",
      "role": "symbol",
      "title": "TaskPriority",
      "type": "topic",
      "url": "/documentation/Swift/TaskPriority"
    },
    "doc://com.externally.resolved.symbol/s:s4Voida": {
      "abstract": [
        {
          "text": "The return type of functions that donâ€™t explicitly specify a return type, that is, an empty tuple `()`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": " = ()"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s4Voida",
      "kind": "symbol",
      "role": "symbol",
      "title": "Void",
      "type": "topic",
      "url": "/documentation/Swift/Void"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "paths": [
        "/documentation/financekitui/addordertowalletbutton/task(priority:_:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
