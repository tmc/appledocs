{
  "abstract": [
    {
      "text": "An object that accesses a person’s calendar events and reminders and supports the scheduling of new events.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.eventkit/documentation/EventKit"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:objc(cs)EKEventStore",
    "fragments": [
      {
        "kind": "keyword",
        "text": "class"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "EKEventStore"
      }
    ],
    "modules": [
      {
        "name": "EventKit"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "EKEventStore"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "4.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "4.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.1",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.8",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "2.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Class",
    "symbolKind": "class",
    "title": "EKEventStore"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "class"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "EKEventStore"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.eventkit/documentation/EventKit/retrieving-events-and-reminders",
        "doc://com.apple.eventkit/documentation/EventKit/accessing-the-event-store",
        "doc://com.apple.eventkit/documentation/EventKit/creating-events-and-reminders"
      ]
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The ",
              "type": "text"
            },
            {
              "code": "EKEventStore",
              "type": "codeVoice"
            },
            {
              "text": " class is an app’s point of contact for accessing calendar and reminder data.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "After initializing the event store, you must request access to events or reminders before attempting to fetch or create data. To request access to reminders, call ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestFullAccessToReminders(completion:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ". To request access to events, call ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestWriteOnlyAccessToEvents(completion:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " or ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestFullAccessToEvents(completion:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "To request access to events and reminders, your app needs to include permission strings in its ",
                  "type": "text"
                },
                {
                  "code": "Info.plist",
                  "type": "codeVoice"
                },
                {
                  "text": " file that explain to someone why the app needs access. For more information, see ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.eventkit/documentation/EventKit/accessing-the-event-store",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "A typical workflow for using an event store is:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Create a predicate, or a search query for events, with ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForEvents(withStart:end:calendars:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fetch and process events that match the predicate with the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/events(matching:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/enumerateEvents(matching:using:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " methods.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Save and delete events from the event store with the ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/save(_:span:commit:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/remove(_:span:commit:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " methods.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "orderedList"
        },
        {
          "inlineContent": [
            {
              "text": "Use similar methods to access and manipulate reminders.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "After receiving an object from an event store, don’t use that object with a different event store. This restriction applies to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKObject",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " subclasses such as ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEvent",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKReminder",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKCalendar",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", and ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKSource",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", as well as predicates that the event store creates. For example, don’t fetch an event from one event store, modify the event, and then pass it to ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/save(_:span:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " in a different store.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSCalendarsFullAccessUsageDescription": {
      "abstract": [
        {
          "text": "A message that tells people why the app is requesting access to read and write their calendar data.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSCalendarsFullAccessUsageDescription",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSCalendarsFullAccessUsageDescription",
      "type": "topic",
      "url": "/documentation/BundleResources/Information-Property-List/NSCalendarsFullAccessUsageDescription"
    },
    "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSCalendarsWriteOnlyAccessUsageDescription": {
      "abstract": [
        {
          "text": "A message that tells people why the app is requesting access to create calendar events.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSCalendarsWriteOnlyAccessUsageDescription",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSCalendarsWriteOnlyAccessUsageDescription",
      "type": "topic",
      "url": "/documentation/BundleResources/Information-Property-List/NSCalendarsWriteOnlyAccessUsageDescription"
    },
    "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSRemindersFullAccessUsageDescription": {
      "abstract": [
        {
          "text": "A message that tells people why the app is requesting access to read and write their reminders data.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSRemindersFullAccessUsageDescription",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSRemindersFullAccessUsageDescription",
      "type": "topic",
      "url": "/documentation/BundleResources/Information-Property-List/NSRemindersFullAccessUsageDescription"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.eventkit/documentation/EventKit": {
      "abstract": [
        {
          "text": "Create, view, and edit calendar and reminder events.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit",
      "kind": "symbol",
      "role": "collection",
      "title": "EventKit",
      "type": "topic",
      "url": "/documentation/eventkit"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKAuthorizationStatus": {
      "abstract": [
        {
          "text": "The current authorization status for a specific entity type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EKAuthorizationStatus"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKAuthorizationStatus",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EKAuthorizationStatus"
        }
      ],
      "role": "symbol",
      "title": "EKAuthorizationStatus",
      "type": "topic",
      "url": "/documentation/eventkit/ekauthorizationstatus"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKCalendar": {
      "abstract": [
        {
          "text": "A class that represents a calendar in EventKit.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EKCalendar"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKCalendar",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EKCalendar"
        }
      ],
      "role": "symbol",
      "title": "EKCalendar",
      "type": "topic",
      "url": "/documentation/eventkit/ekcalendar"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEvent": {
      "abstract": [
        {
          "text": "A class that represents an event in a calendar.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EKEvent"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEvent",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EKEvent"
        }
      ],
      "role": "symbol",
      "title": "EKEvent",
      "type": "topic",
      "url": "/documentation/eventkit/ekevent"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventSearchCallback": {
      "abstract": [
        {
          "text": "The signature for a closure that operates on events when enumerating them.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EKEventSearchCallback"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventSearchCallback",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EKEventSearchCallback"
        }
      ],
      "role": "symbol",
      "title": "EKEventSearchCallback",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventsearchcallback"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore": {
      "abstract": [
        {
          "text": "An object that accesses a person’s calendar events and reminders and supports the scheduling of new events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EKEventStore"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EKEventStore"
        }
      ],
      "role": "symbol",
      "title": "EKEventStore",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/authorizationStatus(for:)": {
      "abstract": [
        {
          "text": "Determines the authorization status for the given entity type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "authorizationStatus"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@EKEntityType",
          "text": "EKEntityType"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@EKAuthorizationStatus",
          "text": "EKAuthorizationStatus"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/authorizationStatus(for:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "authorizationStatusForEntityType:"
        }
      ],
      "role": "symbol",
      "title": "authorizationStatus(for:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/authorizationstatus(for:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendar(withIdentifier:)": {
      "abstract": [
        {
          "text": "Locates a calendar with the specified identifier.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "calendar"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withIdentifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendar",
          "text": "EKCalendar"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendar(withIdentifier:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "calendarWithIdentifier:"
        }
      ],
      "role": "symbol",
      "title": "calendar(withIdentifier:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/calendar(withidentifier:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendarItem(withIdentifier:)": {
      "abstract": [
        {
          "text": "Locates a reminder or the first occurrence of an event with the specified identifier.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "calendarItem"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withIdentifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendarItem",
          "text": "EKCalendarItem"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendarItem(withIdentifier:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "calendarItemWithIdentifier:"
        }
      ],
      "role": "symbol",
      "title": "calendarItem(withIdentifier:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/calendaritem(withidentifier:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendarItems(withExternalIdentifier:)": {
      "abstract": [
        {
          "text": "Locates all reminders or the first occurrences of all events with the specified external identifier.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "calendarItems"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withExternalIdentifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendarItem",
          "text": "EKCalendarItem"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendarItems(withExternalIdentifier:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "calendarItemsWithExternalIdentifier:"
        }
      ],
      "role": "symbol",
      "title": "calendarItems(withExternalIdentifier:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/calendaritems(withexternalidentifier:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendars": {
      "abstract": [
        {
          "text": "The calendars associated with the event store.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "calendars"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendar",
          "text": "EKCalendar"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendars",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "calendars"
        }
      ],
      "role": "symbol",
      "title": "calendars",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/calendars"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendars(for:)": {
      "abstract": [
        {
          "text": "Identifies the calendars that support a given entity type, such as reminders or events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "calendars"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@EKEntityType",
          "text": "EKEntityType"
        },
        {
          "kind": "text",
          "text": ") -> ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendar",
          "text": "EKCalendar"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendars(for:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "calendarsForEntityType:"
        }
      ],
      "role": "symbol",
      "title": "calendars(for:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/calendars(for:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/cancelFetchRequest(_:)": {
      "abstract": [
        {
          "text": "Cancels the request to fetch reminders.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "cancelFetchRequest"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "keyword",
          "text": "Any"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/cancelFetchRequest(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "cancelFetchRequest:"
        }
      ],
      "role": "symbol",
      "title": "cancelFetchRequest(_:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/cancelfetchrequest(_:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/commit()": {
      "abstract": [
        {
          "text": "Commits all unsaved changes to the event store.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": "() "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/commit()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "commit:"
        }
      ],
      "role": "symbol",
      "title": "commit()",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/commit()"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/defaultCalendarForNewEvents": {
      "abstract": [
        {
          "text": "The calendar that events are added to by default, as specified by user settings.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "defaultCalendarForNewEvents"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendar",
          "text": "EKCalendar"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/defaultCalendarForNewEvents",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "defaultCalendarForNewEvents"
        }
      ],
      "role": "symbol",
      "title": "defaultCalendarForNewEvents",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/defaultcalendarfornewevents"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/defaultCalendarForNewReminders()": {
      "abstract": [
        {
          "text": "Identifies the default calendar for adding reminders to, as specified by user settings.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "defaultCalendarForNewReminders"
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendar",
          "text": "EKCalendar"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/defaultCalendarForNewReminders()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "defaultCalendarForNewReminders"
        }
      ],
      "role": "symbol",
      "title": "defaultCalendarForNewReminders()",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/defaultcalendarfornewreminders()"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/delegateSources": {
      "abstract": [
        {
          "text": "The event sources delegated to the person using your app.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "delegateSources"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKSource",
          "text": "EKSource"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/delegateSources",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "delegateSources"
        }
      ],
      "role": "symbol",
      "title": "delegateSources",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/delegatesources"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/enumerateEvents(matching:using:)": {
      "abstract": [
        {
          "text": "Finds all events that match a given predicate and calls a given callback for each event found.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "enumerateEvents"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "matching"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSPredicate",
          "text": "NSPredicate"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "using"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@EKEventSearchCallback",
          "text": "EKEventSearchCallback"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/enumerateEvents(matching:using:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "enumerateEventsMatchingPredicate:usingBlock:"
        }
      ],
      "role": "symbol",
      "title": "enumerateEvents(matching:using:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/enumerateevents(matching:using:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/event(withIdentifier:)": {
      "abstract": [
        {
          "text": "Locates the first occurrence of an event with a given identifier.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "event"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withIdentifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKEvent",
          "text": "EKEvent"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/event(withIdentifier:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "eventWithIdentifier:"
        }
      ],
      "role": "symbol",
      "title": "event(withIdentifier:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/event(withidentifier:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/eventStoreIdentifier": {
      "abstract": [
        {
          "text": "The unique identifier for the event store.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "eventStoreIdentifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/eventStoreIdentifier",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "eventStoreIdentifier"
        }
      ],
      "role": "symbol",
      "title": "eventStoreIdentifier",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/eventstoreidentifier"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/events(matching:)": {
      "abstract": [
        {
          "text": "Finds all events that match a given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "events"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "matching"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSPredicate",
          "text": "NSPredicate"
        },
        {
          "kind": "text",
          "text": ") -> ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKEvent",
          "text": "EKEvent"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/events(matching:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "eventsMatchingPredicate:"
        }
      ],
      "role": "symbol",
      "title": "events(matching:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/events(matching:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/fetchReminders(matching:completion:)": {
      "abstract": [
        {
          "text": "Fetches reminders that match a given predicate.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "fetchReminders"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "matching"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSPredicate",
          "text": "NSPredicate"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "completion"
        },
        {
          "kind": "text",
          "text": ": (["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKReminder",
          "text": "EKReminder"
        },
        {
          "kind": "text",
          "text": "]?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "Any"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/fetchReminders(matching:completion:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "fetchRemindersMatchingPredicate:completion:"
        }
      ],
      "role": "symbol",
      "title": "fetchReminders(matching:completion:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/fetchreminders(matching:completion:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/init()": {
      "abstract": [
        {
          "text": "Creates a new event store.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/init()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "init"
        }
      ],
      "role": "symbol",
      "title": "init()",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/init()"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/init(sources:)": {
      "abstract": [
        {
          "text": "Creates an event store that contains data for the specified sources.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKSource",
          "text": "EKSource"
        },
        {
          "kind": "text",
          "text": "])"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/init(sources:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "initWithSources:"
        }
      ],
      "role": "symbol",
      "title": "init(sources:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/init(sources:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/initWithAccessToEntityTypes:": {
      "abstract": [
        {
          "text": "Initializes access to the event store with support for the given entity type.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "initWithAccessToEntityTypes:"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/initWithAccessToEntityTypes:",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "initWithAccessToEntityTypes:"
        }
      ],
      "role": "symbol",
      "title": "initWithAccessToEntityTypes:",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/initwithaccesstoentitytypes:"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForCompletedReminders(withCompletionDateStarting:ending:calendars:)": {
      "abstract": [
        {
          "text": "Creates a predicate to identify all completed reminders that occur within a given date range.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "predicateForCompletedReminders"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withCompletionDateStarting"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "ending"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "calendars"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendar",
          "text": "EKCalendar"
        },
        {
          "kind": "text",
          "text": "]?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSPredicate",
          "text": "NSPredicate"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForCompletedReminders(withCompletionDateStarting:ending:calendars:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:"
        }
      ],
      "role": "symbol",
      "title": "predicateForCompletedReminders(withCompletionDateStarting:ending:calendars:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/predicateforcompletedreminders(withcompletiondatestarting:ending:calendars:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForEvents(withStart:end:calendars:)": {
      "abstract": [
        {
          "text": "Creates a predicate to identify events that occur within a given date range.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "predicateForEvents"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withStart"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "end"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "calendars"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendar",
          "text": "EKCalendar"
        },
        {
          "kind": "text",
          "text": "]?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSPredicate",
          "text": "NSPredicate"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForEvents(withStart:end:calendars:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "predicateForEventsWithStartDate:endDate:calendars:"
        }
      ],
      "role": "symbol",
      "title": "predicateForEvents(withStart:end:calendars:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/predicateforevents(withstart:end:calendars:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForIncompleteReminders(withDueDateStarting:ending:calendars:)": {
      "abstract": [
        {
          "text": "Creates a predicate to identify all incomplete reminders that occur within a given date range.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "predicateForIncompleteReminders"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withDueDateStarting"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "ending"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation4DateV",
          "text": "Date"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "calendars"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendar",
          "text": "EKCalendar"
        },
        {
          "kind": "text",
          "text": "]?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSPredicate",
          "text": "NSPredicate"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForIncompleteReminders(withDueDateStarting:ending:calendars:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:"
        }
      ],
      "role": "symbol",
      "title": "predicateForIncompleteReminders(withDueDateStarting:ending:calendars:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/predicateforincompletereminders(withduedatestarting:ending:calendars:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForReminders(in:)": {
      "abstract": [
        {
          "text": "Creates a predicate to identify all reminders in a collection of calendars.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "predicateForReminders"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "in"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendar",
          "text": "EKCalendar"
        },
        {
          "kind": "text",
          "text": "]?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)NSPredicate",
          "text": "NSPredicate"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForReminders(in:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "predicateForRemindersInCalendars:"
        }
      ],
      "role": "symbol",
      "title": "predicateForReminders(in:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/predicateforreminders(in:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/refreshSourcesIfNecessary()": {
      "abstract": [
        {
          "text": "Pulls new data from remote sources, if necessary.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "refreshSourcesIfNecessary"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/refreshSourcesIfNecessary()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "refreshSourcesIfNecessary"
        }
      ],
      "role": "symbol",
      "title": "refreshSourcesIfNecessary()",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/refreshsourcesifnecessary()"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/remove(_:commit:)": {
      "abstract": [
        {
          "text": "Removes a reminder from the event store by either committing or batching the changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "remove"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKReminder",
          "text": "EKReminder"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/remove(_:commit:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "removeReminder:commit:error:"
        }
      ],
      "role": "symbol",
      "title": "remove(_:commit:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/remove(_:commit:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/remove(_:span:)": {
      "abstract": [
        {
          "text": "Removes an event from the event store.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "remove"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKEvent",
          "text": "EKEvent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "span"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@EKSpan",
          "text": "EKSpan"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/remove(_:span:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "removeEvent:span:error:"
        }
      ],
      "role": "symbol",
      "title": "remove(_:span:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/remove(_:span:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/remove(_:span:commit:)": {
      "abstract": [
        {
          "text": "Removes an event or recurring events from the event store by either committing or batching the changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "remove"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKEvent",
          "text": "EKEvent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "span"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@EKSpan",
          "text": "EKSpan"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/remove(_:span:commit:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "removeEvent:span:commit:error:"
        }
      ],
      "role": "symbol",
      "title": "remove(_:span:commit:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/remove(_:span:commit:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/removeCalendar(_:commit:)": {
      "abstract": [
        {
          "text": "Removes a calendar from the event store by either committing or batching the changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeCalendar"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendar",
          "text": "EKCalendar"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/removeCalendar(_:commit:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "removeCalendar:commit:error:"
        }
      ],
      "role": "symbol",
      "title": "removeCalendar(_:commit:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/removecalendar(_:commit:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestAccess(to:completion:)": {
      "abstract": [
        {
          "text": "Prompts the person using your app to grant or deny access to event or reminder data.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "requestAccess"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "to"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@EKEntityType",
          "text": "EKEntityType"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "completion"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@EKEventStoreRequestAccessCompletionHandler",
          "text": "EKEventStoreRequestAccessCompletionHandler"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestAccess(to:completion:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "requestAccessToEntityType:completion:"
        }
      ],
      "role": "symbol",
      "title": "requestAccess(to:completion:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/requestaccess(to:completion:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestFullAccessToEvents(completion:)": {
      "abstract": [
        {
          "text": "Prompts people to grant or deny read and write access to event data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "requestFullAccessToEvents"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "completion"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@EKEventStoreRequestAccessCompletionHandler",
          "text": "EKEventStoreRequestAccessCompletionHandler"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestFullAccessToEvents(completion:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "requestFullAccessToEventsWithCompletion:"
        }
      ],
      "role": "symbol",
      "title": "requestFullAccessToEvents(completion:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/requestfullaccesstoevents(completion:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestFullAccessToReminders(completion:)": {
      "abstract": [
        {
          "text": "Prompts people to grant or deny read and write access to reminders.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "requestFullAccessToReminders"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "completion"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@EKEventStoreRequestAccessCompletionHandler",
          "text": "EKEventStoreRequestAccessCompletionHandler"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestFullAccessToReminders(completion:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "requestFullAccessToRemindersWithCompletion:"
        }
      ],
      "role": "symbol",
      "title": "requestFullAccessToReminders(completion:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/requestfullaccesstoreminders(completion:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestWriteOnlyAccessToEvents(completion:)": {
      "abstract": [
        {
          "text": "Prompts the person using your app to grant or deny write access to event data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "requestWriteOnlyAccessToEvents"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "completion"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@EKEventStoreRequestAccessCompletionHandler",
          "text": "EKEventStoreRequestAccessCompletionHandler"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestWriteOnlyAccessToEvents(completion:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "requestWriteOnlyAccessToEventsWithCompletion:"
        }
      ],
      "role": "symbol",
      "title": "requestWriteOnlyAccessToEvents(completion:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/requestwriteonlyaccesstoevents(completion:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/reset()": {
      "abstract": [
        {
          "text": "Reverts the event store to its saved state.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "reset"
        },
        {
          "kind": "text",
          "text": "()"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/reset()",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "reset"
        }
      ],
      "role": "symbol",
      "title": "reset()",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/reset()"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/save(_:commit:)": {
      "abstract": [
        {
          "text": "Saves changes to a reminder by either committing or batching the changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "save"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKReminder",
          "text": "EKReminder"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/save(_:commit:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "saveReminder:commit:error:"
        }
      ],
      "role": "symbol",
      "title": "save(_:commit:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/save(_:commit:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/save(_:span:)": {
      "abstract": [
        {
          "text": "Saves changes to an event permanently.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "save"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKEvent",
          "text": "EKEvent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "span"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@EKSpan",
          "text": "EKSpan"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/save(_:span:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "saveEvent:span:error:"
        }
      ],
      "role": "symbol",
      "title": "save(_:span:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/save(_:span:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/save(_:span:commit:)": {
      "abstract": [
        {
          "text": "Saves an event or recurring events to the event store by either committing or batching the changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "save"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKEvent",
          "text": "EKEvent"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "span"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@E@EKSpan",
          "text": "EKSpan"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/save(_:span:commit:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "saveEvent:span:commit:error:"
        }
      ],
      "role": "symbol",
      "title": "save(_:span:commit:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/save(_:span:commit:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/saveCalendar(_:commit:)": {
      "abstract": [
        {
          "text": "Saves a calendar to the event store by either committing or batching the changes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "saveCalendar"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKCalendar",
          "text": "EKCalendar"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "commit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/saveCalendar(_:commit:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "saveCalendar:commit:error:"
        }
      ],
      "role": "symbol",
      "title": "saveCalendar(_:commit:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/savecalendar(_:commit:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/source(withIdentifier:)": {
      "abstract": [
        {
          "text": "Locates an event source with the specified identifier.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "source"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withIdentifier"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKSource",
          "text": "EKSource"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/source(withIdentifier:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "sourceWithIdentifier:"
        }
      ],
      "role": "symbol",
      "title": "source(withIdentifier:)",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/source(withidentifier:)"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/sources": {
      "abstract": [
        {
          "text": "An unordered array of objects that represent accounts that contain calendars.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "sources"
        },
        {
          "kind": "text",
          "text": ": ["
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)EKSource",
          "text": "EKSource"
        },
        {
          "kind": "text",
          "text": "]"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/sources",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "sources"
        }
      ],
      "role": "symbol",
      "title": "sources",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstore/sources"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKEventStoreRequestAccessCompletionHandler": {
      "abstract": [
        {
          "text": "The signature for a closure that EventKit calls when requesting access to event and reminder data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EKEventStoreRequestAccessCompletionHandler"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKEventStoreRequestAccessCompletionHandler",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EKEventStoreRequestAccessCompletionHandler"
        }
      ],
      "role": "symbol",
      "title": "EKEventStoreRequestAccessCompletionHandler",
      "type": "topic",
      "url": "/documentation/eventkit/ekeventstorerequestaccesscompletionhandler"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKObject": {
      "abstract": [
        {
          "text": "An abstract superclass for all EventKit classes that have persistent instances.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EKObject"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKObject",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EKObject"
        }
      ],
      "role": "symbol",
      "title": "EKObject",
      "type": "topic",
      "url": "/documentation/eventkit/ekobject"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKReminder": {
      "abstract": [
        {
          "text": "A class that represents a reminder in a calendar.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EKReminder"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKReminder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EKReminder"
        }
      ],
      "role": "symbol",
      "title": "EKReminder",
      "type": "topic",
      "url": "/documentation/eventkit/ekreminder"
    },
    "doc://com.apple.eventkit/documentation/EventKit/EKSource": {
      "abstract": [
        {
          "text": "An abstract superclass that represents the account a calendar belongs to.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EKSource"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/EKSource",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EKSource"
        }
      ],
      "role": "symbol",
      "title": "EKSource",
      "type": "topic",
      "url": "/documentation/eventkit/eksource"
    },
    "doc://com.apple.eventkit/documentation/EventKit/accessing-calendar-using-eventkit-and-eventkitui": {
      "abstract": [
        {
          "text": "Choose and implement the appropriate Calendar access level in your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/accessing-calendar-using-eventkit-and-eventkitui",
      "kind": "article",
      "role": "sampleCode",
      "title": "Accessing Calendar using EventKit and EventKitUI",
      "type": "topic",
      "url": "/documentation/eventkit/accessing-calendar-using-eventkit-and-eventkitui"
    },
    "doc://com.apple.eventkit/documentation/EventKit/accessing-the-event-store": {
      "abstract": [
        {
          "text": "Request access to a person’s calendar data through the event store.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/accessing-the-event-store",
      "kind": "article",
      "role": "article",
      "title": "Accessing the event store",
      "type": "topic",
      "url": "/documentation/eventkit/accessing-the-event-store"
    },
    "doc://com.apple.eventkit/documentation/EventKit/creating-events-and-reminders": {
      "abstract": [
        {
          "text": "Create and modify events and reminders in a person’s database.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/creating-events-and-reminders",
      "kind": "article",
      "role": "article",
      "title": "Creating events and reminders",
      "type": "topic",
      "url": "/documentation/eventkit/creating-events-and-reminders"
    },
    "doc://com.apple.eventkit/documentation/EventKit/retrieving-events-and-reminders": {
      "abstract": [
        {
          "text": "Fetch events and reminders from the Calendar database.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.eventkit/documentation/EventKit/retrieving-events-and-reminders",
      "kind": "article",
      "role": "article",
      "title": "Retrieving events and reminders",
      "type": "topic",
      "url": "/documentation/eventkit/retrieving-events-and-reminders"
    },
    "doc://com.externally.resolved.symbol/c:objc(cs)NSObject": {
      "abstract": [
        {
          "text": "The root class of most Objective-C class hierarchies, from which subclasses inherit a basic interface to the runtime system and the ability to behave as Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "class "
        },
        {
          "kind": "identifier",
          "text": "NSObject"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObject",
      "type": "topic",
      "url": "/documentation/objectivec/nsobject"
    },
    "doc://com.externally.resolved.symbol/c:objc(pl)NSObject": {
      "abstract": [
        {
          "text": "The group of methods that are fundamental to all Objective-C objects.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "protocol "
        },
        {
          "kind": "identifier",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:objc(pl)NSObject",
      "kind": "symbol",
      "role": "symbol",
      "title": "NSObjectProtocol",
      "type": "topic",
      "url": "/documentation/objectivec/nsobjectprotocol"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation suitable for debugging purposes.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomDebugStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomDebugStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomDebugStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s7CVarArgP": {
      "abstract": [
        {
          "text": "A type whose instances can be encoded, and appropriately passed, as elements of a C `va_list`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CVarArg"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s7CVarArgP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CVarArg",
      "type": "topic",
      "url": "/documentation/Swift/CVarArg"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
      ],
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom"
    },
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s7CVarArgP",
        "doc://com.externally.resolved.symbol/s:s28CustomDebugStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/c:objc(pl)NSObject"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Essentials",
      "generated": true,
      "identifiers": [
        "doc://com.apple.eventkit/documentation/EventKit/accessing-the-event-store",
        "doc://com.apple.eventkit/documentation/EventKit/accessing-calendar-using-eventkit-and-eventkitui"
      ],
      "title": "Essentials"
    }
  ],
  "topicSections": [
    {
      "anchor": "Creating-event-stores",
      "identifiers": [
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/init()",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/init(sources:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/eventStoreIdentifier"
      ],
      "title": "Creating event stores"
    },
    {
      "anchor": "Requesting-access-to-events-and-reminders",
      "identifiers": [
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestWriteOnlyAccessToEvents(completion:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestFullAccessToEvents(completion:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestFullAccessToReminders(completion:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/authorizationStatus(for:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKAuthorizationStatus",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStoreRequestAccessCompletionHandler",
        "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSCalendarsFullAccessUsageDescription",
        "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSCalendarsWriteOnlyAccessUsageDescription",
        "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSRemindersFullAccessUsageDescription"
      ],
      "title": "Requesting access to events and reminders"
    },
    {
      "anchor": "Accessing-account-sources",
      "identifiers": [
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/sources",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/delegateSources",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/source(withIdentifier:)"
      ],
      "title": "Accessing account sources"
    },
    {
      "anchor": "Saving-and-restoring-state",
      "identifiers": [
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/commit()",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/reset()",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/refreshSourcesIfNecessary()"
      ],
      "title": "Saving and restoring state"
    },
    {
      "anchor": "Accessing-calendars",
      "identifiers": [
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/defaultCalendarForNewEvents",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/defaultCalendarForNewReminders()",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendars(for:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendar(withIdentifier:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/saveCalendar(_:commit:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/removeCalendar(_:commit:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendars"
      ],
      "title": "Accessing calendars"
    },
    {
      "anchor": "Accessing-calendar-events",
      "identifiers": [
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/event(withIdentifier:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendarItem(withIdentifier:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendarItems(withExternalIdentifier:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/remove(_:span:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/remove(_:span:commit:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/remove(_:commit:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/save(_:span:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/save(_:span:commit:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/save(_:commit:)"
      ],
      "title": "Accessing calendar events"
    },
    {
      "anchor": "Searching-calendars",
      "identifiers": [
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/enumerateEvents(matching:using:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/events(matching:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/fetchReminders(matching:completion:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/cancelFetchRequest(_:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForEvents(withStart:end:calendars:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForReminders(in:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForCompletedReminders(withCompletionDateStarting:ending:calendars:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForIncompleteReminders(withDueDateStarting:ending:calendars:)",
        "doc://com.apple.eventkit/documentation/EventKit/EKEventSearchCallback"
      ],
      "title": "Searching calendars"
    },
    {
      "anchor": "Deprecated-methods",
      "identifiers": [
        "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestAccess(to:completion:)"
      ],
      "title": "Deprecated methods"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "4.0",
              "name": "iOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "4.0",
              "name": "iPadOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "13.1",
              "name": "Mac Catalyst",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.8",
              "name": "macOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "1.0",
              "name": "visionOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "2.0",
              "name": "watchOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Class"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "EKEventStore"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "class"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "EKEventStore"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "EKEventStore"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.eventkit/documentation/EventKit"
              ]
            ]
          }
        },
        {
          "op": "replace",
          "path": "/topicSections",
          "value": [
            {
              "anchor": "Creating-event-stores",
              "identifiers": [
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/init()",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/init(sources:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/eventStoreIdentifier",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/initWithAccessToEntityTypes:"
              ],
              "title": "Creating event stores"
            },
            {
              "anchor": "Requesting-access-to-events-and-reminders",
              "identifiers": [
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestWriteOnlyAccessToEvents(completion:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestFullAccessToEvents(completion:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestFullAccessToReminders(completion:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/authorizationStatus(for:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKAuthorizationStatus",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStoreRequestAccessCompletionHandler",
                "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSCalendarsFullAccessUsageDescription",
                "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSCalendarsWriteOnlyAccessUsageDescription",
                "doc://com.apple.documentation/documentation/BundleResources/Information-Property-List/NSRemindersFullAccessUsageDescription"
              ],
              "title": "Requesting access to events and reminders"
            },
            {
              "anchor": "Accessing-account-sources",
              "identifiers": [
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/sources",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/delegateSources",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/source(withIdentifier:)"
              ],
              "title": "Accessing account sources"
            },
            {
              "anchor": "Saving-and-restoring-state",
              "identifiers": [
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/commit()",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/reset()",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/refreshSourcesIfNecessary()"
              ],
              "title": "Saving and restoring state"
            },
            {
              "anchor": "Accessing-calendars",
              "identifiers": [
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/defaultCalendarForNewEvents",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/defaultCalendarForNewReminders()",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendars(for:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendar(withIdentifier:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/saveCalendar(_:commit:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/removeCalendar(_:commit:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendars"
              ],
              "title": "Accessing calendars"
            },
            {
              "anchor": "Accessing-calendar-events",
              "identifiers": [
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/event(withIdentifier:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendarItem(withIdentifier:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/calendarItems(withExternalIdentifier:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/remove(_:span:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/remove(_:span:commit:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/remove(_:commit:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/save(_:span:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/save(_:span:commit:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/save(_:commit:)"
              ],
              "title": "Accessing calendar events"
            },
            {
              "anchor": "Searching-calendars",
              "identifiers": [
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/enumerateEvents(matching:using:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/events(matching:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/fetchReminders(matching:completion:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/cancelFetchRequest(_:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForEvents(withStart:end:calendars:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForReminders(in:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForCompletedReminders(withCompletionDateStarting:ending:calendars:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/predicateForIncompleteReminders(withDueDateStarting:ending:calendars:)",
                "doc://com.apple.eventkit/documentation/EventKit/EKEventSearchCallback"
              ],
              "title": "Searching calendars"
            },
            {
              "anchor": "Deprecated-methods",
              "identifiers": [
                "doc://com.apple.eventkit/documentation/EventKit/EKEventStore/requestAccess(to:completion:)"
              ],
              "title": "Deprecated methods"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/relationshipsSections",
          "value": [
            {
              "identifiers": [
                "doc://com.externally.resolved.symbol/c:objc(cs)NSObject"
              ],
              "kind": "relationships",
              "title": "Inherits From",
              "type": "inheritsFrom"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Essentials",
              "generated": true,
              "identifiers": [
                "doc://com.apple.eventkit/documentation/EventKit/accessing-the-event-store"
              ],
              "title": "Essentials"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "iOS",
                  "iPadOS",
                  "Mac Catalyst",
                  "macOS",
                  "visionOS",
                  "watchOS"
                ],
                "tokens": [
                  {
                    "kind": "keyword",
                    "text": "@interface"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "EKEventStore"
                  },
                  {
                    "kind": "text",
                    "text": " : "
                  },
                  {
                    "identifier": "doc://com.externally.resolved.symbol/c:objc(cs)NSObject",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:objc(cs)NSObject",
                    "text": "NSObject"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1commit()/title",
          "value": "commit:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1commit()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "commit:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1delegateSources/title",
          "value": "delegateSources"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1delegateSources/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "delegateSources"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1defaultCalendarForNewReminders()/title",
          "value": "defaultCalendarForNewReminders"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1defaultCalendarForNewReminders()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "defaultCalendarForNewReminders"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKAuthorizationStatus/title",
          "value": "EKAuthorizationStatus"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKAuthorizationStatus/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "EKAuthorizationStatus"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKAuthorizationStatus/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "EKAuthorizationStatus"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.externally.resolved.symbol~1c:objc(pl)NSObject/title",
          "value": "NSObject"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1source(withIdentifier:)/title",
          "value": "sourceWithIdentifier:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1source(withIdentifier:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "sourceWithIdentifier:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKReminder/title",
          "value": "EKReminder"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKReminder/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "EKReminder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKReminder/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "EKReminder"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1predicateForCompletedReminders(withCompletionDateStarting:ending:calendars:)/title",
          "value": "predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1predicateForCompletedReminders(withCompletionDateStarting:ending:calendars:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKObject/title",
          "value": "EKObject"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKObject/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "EKObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKObject/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "EKObject"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1remove(_:commit:)/title",
          "value": "removeReminder:commit:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1remove(_:commit:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "removeReminder:commit:error:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1requestAccess(to:completion:)/title",
          "value": "requestAccessToEntityType:completion:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1requestAccess(to:completion:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "requestAccessToEntityType:completion:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKCalendar/title",
          "value": "EKCalendar"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKCalendar/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "EKCalendar"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKCalendar/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "EKCalendar"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1calendars/title",
          "value": "calendars"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1calendars/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "calendars"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1remove(_:span:)/title",
          "value": "removeEvent:span:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1remove(_:span:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "removeEvent:span:error:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1cancelFetchRequest(_:)/title",
          "value": "cancelFetchRequest:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1cancelFetchRequest(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "cancelFetchRequest:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1calendar(withIdentifier:)/title",
          "value": "calendarWithIdentifier:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1calendar(withIdentifier:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "calendarWithIdentifier:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1save(_:span:commit:)/title",
          "value": "saveEvent:span:commit:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1save(_:span:commit:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "saveEvent:span:commit:error:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKSource/title",
          "value": "EKSource"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKSource/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "EKSource"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKSource/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "EKSource"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore/title",
          "value": "EKEventStore"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "EKEventStore"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "EKEventStore"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1predicateForEvents(withStart:end:calendars:)/title",
          "value": "predicateForEventsWithStartDate:endDate:calendars:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1predicateForEvents(withStart:end:calendars:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "predicateForEventsWithStartDate:endDate:calendars:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1refreshSourcesIfNecessary()/title",
          "value": "refreshSourcesIfNecessary"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1refreshSourcesIfNecessary()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "refreshSourcesIfNecessary"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1save(_:commit:)/title",
          "value": "saveReminder:commit:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1save(_:commit:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "saveReminder:commit:error:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1fetchReminders(matching:completion:)/title",
          "value": "fetchRemindersMatchingPredicate:completion:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1fetchReminders(matching:completion:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "fetchRemindersMatchingPredicate:completion:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1calendars(for:)/title",
          "value": "calendarsForEntityType:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1calendars(for:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "calendarsForEntityType:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1saveCalendar(_:commit:)/title",
          "value": "saveCalendar:commit:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1saveCalendar(_:commit:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "saveCalendar:commit:error:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1predicateForIncompleteReminders(withDueDateStarting:ending:calendars:)/title",
          "value": "predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1predicateForIncompleteReminders(withDueDateStarting:ending:calendars:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1sources/title",
          "value": "sources"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1sources/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "sources"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1requestFullAccessToEvents(completion:)/title",
          "value": "requestFullAccessToEventsWithCompletion:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1requestFullAccessToEvents(completion:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "requestFullAccessToEventsWithCompletion:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1event(withIdentifier:)/title",
          "value": "eventWithIdentifier:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1event(withIdentifier:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "eventWithIdentifier:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1requestFullAccessToReminders(completion:)/title",
          "value": "requestFullAccessToRemindersWithCompletion:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1requestFullAccessToReminders(completion:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "requestFullAccessToRemindersWithCompletion:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1defaultCalendarForNewEvents/title",
          "value": "defaultCalendarForNewEvents"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1defaultCalendarForNewEvents/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "defaultCalendarForNewEvents"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1eventStoreIdentifier/title",
          "value": "eventStoreIdentifier"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1eventStoreIdentifier/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "eventStoreIdentifier"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEvent/title",
          "value": "EKEvent"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEvent/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "EKEvent"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEvent/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "EKEvent"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1authorizationStatus(for:)/title",
          "value": "authorizationStatusForEntityType:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1authorizationStatus(for:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "+ "
            },
            {
              "kind": "identifier",
              "text": "authorizationStatusForEntityType:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStoreRequestAccessCompletionHandler/title",
          "value": "EKEventStoreRequestAccessCompletionHandler"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStoreRequestAccessCompletionHandler/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "EKEventStoreRequestAccessCompletionHandler"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStoreRequestAccessCompletionHandler/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "EKEventStoreRequestAccessCompletionHandler"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1init(sources:)/title",
          "value": "initWithSources:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1init(sources:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "initWithSources:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1calendarItems(withExternalIdentifier:)/title",
          "value": "calendarItemsWithExternalIdentifier:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1calendarItems(withExternalIdentifier:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "calendarItemsWithExternalIdentifier:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1events(matching:)/title",
          "value": "eventsMatchingPredicate:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1events(matching:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "eventsMatchingPredicate:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1calendarItem(withIdentifier:)/title",
          "value": "calendarItemWithIdentifier:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1calendarItem(withIdentifier:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "calendarItemWithIdentifier:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1enumerateEvents(matching:using:)/title",
          "value": "enumerateEventsMatchingPredicate:usingBlock:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1enumerateEvents(matching:using:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "enumerateEventsMatchingPredicate:usingBlock:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1reset()/title",
          "value": "reset"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1reset()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "reset"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1predicateForReminders(in:)/title",
          "value": "predicateForRemindersInCalendars:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1predicateForReminders(in:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "predicateForRemindersInCalendars:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1removeCalendar(_:commit:)/title",
          "value": "removeCalendar:commit:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1removeCalendar(_:commit:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "removeCalendar:commit:error:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1init()/title",
          "value": "init"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1init()/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "init"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1requestWriteOnlyAccessToEvents(completion:)/title",
          "value": "requestWriteOnlyAccessToEventsWithCompletion:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1requestWriteOnlyAccessToEvents(completion:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "requestWriteOnlyAccessToEventsWithCompletion:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventSearchCallback/title",
          "value": "EKEventSearchCallback"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventSearchCallback/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "EKEventSearchCallback"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventSearchCallback/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "EKEventSearchCallback"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1remove(_:span:commit:)/title",
          "value": "removeEvent:span:commit:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1remove(_:span:commit:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "removeEvent:span:commit:error:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1save(_:span:)/title",
          "value": "saveEvent:span:error:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.eventkit~1documentation~1EventKit~1EKEventStore~1save(_:span:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "saveEvent:span:error:"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/eventkit/ekeventstore"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/eventkit/ekeventstore"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
