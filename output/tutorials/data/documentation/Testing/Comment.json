{
  "abstract": [
    {
      "text": "A type representing a comment related to a test.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    },
    "minor": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.2",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://org.swift.testing/documentation/Testing"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://org.swift.testing/documentation/Testing/Comment"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7Testing7CommentV",
    "fragments": [
      {
        "kind": "keyword",
        "text": "struct"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Comment"
      }
    ],
    "modules": [
      {
        "name": "Swift Testing"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Comment"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "watchOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "Swift",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Xcode",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Structure",
    "symbolKind": "struct",
    "title": "Comment"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Comment"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "This type may be used to provide context or background information about a",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "testâ€™s purpose, explain how a complex test operates, or include details",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "which may be helpful when diagnosing issues recorded by a test.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To add a comment to a test or suite, add a code comment before its ",
              "type": "text"
            },
            {
              "code": "@Test",
              "type": "codeVoice"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or ",
              "type": "text"
            },
            {
              "code": "@Suite",
              "type": "codeVoice"
            },
            {
              "text": " attribute. See ",
              "type": "text"
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/AddingComments",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " for more details.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "This type is not intended to reference bugs related to a test.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "Instead, use ",
                  "type": "text"
                },
                {
                  "identifier": "doc://org.swift.testing/documentation/Testing/Trait/bug(_:_:)",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ", ",
                  "type": "text"
                },
                {
                  "identifier": "doc://org.swift.testing/documentation/Testing/Trait/bug(_:id:_:)-10yf5",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ", or",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "identifier": "doc://org.swift.testing/documentation/Testing/Trait/bug(_:id:_:)-3vtpl",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:SE": {
      "abstract": [
        {
          "text": "A type that can encode itself to an external representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Encodable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SE",
      "kind": "symbol",
      "role": "symbol",
      "title": "Encodable",
      "type": "topic",
      "url": "/documentation/Swift/Encodable"
    },
    "doc://com.externally.resolved.symbol/s:SH": {
      "abstract": [
        {
          "text": "A type that can be hashed into a `Hasher` to produce an integer hash value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Hashable"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SQ",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SH",
      "kind": "symbol",
      "role": "symbol",
      "title": "Hashable",
      "type": "topic",
      "url": "/documentation/Swift/Hashable"
    },
    "doc://com.externally.resolved.symbol/s:SQ": {
      "abstract": [
        {
          "text": "A type that can be compared for value equality.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Equatable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SQ",
      "kind": "symbol",
      "role": "symbol",
      "title": "Equatable",
      "type": "topic",
      "url": "/documentation/Swift/Equatable"
    },
    "doc://com.externally.resolved.symbol/s:SY": {
      "abstract": [
        {
          "text": "A type that can be converted to and from an associated raw value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RawRepresentable"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SY8RawValueQa",
          "text": "RawValue"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SY",
      "kind": "symbol",
      "role": "symbol",
      "title": "RawRepresentable",
      "type": "topic",
      "url": "/documentation/Swift/RawRepresentable"
    },
    "doc://com.externally.resolved.symbol/s:Se": {
      "abstract": [
        {
          "text": "A type that can decode itself from an external representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Decodable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Se",
      "kind": "symbol",
      "role": "symbol",
      "title": "Decodable",
      "type": "topic",
      "url": "/documentation/Swift/Decodable"
    },
    "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s26ExpressibleByStringLiteralP": {
      "abstract": [
        {
          "text": "A type that can be initialized with a string literal.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByStringLiteral"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s43ExpressibleByExtendedGraphemeClusterLiteralP",
          "text": "ExpressibleByExtendedGraphemeClusterLiteral"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s26ExpressibleByStringLiteralP",
      "kind": "symbol",
      "role": "symbol",
      "title": "ExpressibleByStringLiteral",
      "type": "topic",
      "url": "/documentation/Swift/ExpressibleByStringLiteral"
    },
    "doc://com.externally.resolved.symbol/s:s32ExpressibleByStringInterpolationP": {
      "abstract": [
        {
          "text": "A type that can be initialized by string interpolation with a string literal that includes expressions.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByStringInterpolation"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s26ExpressibleByStringLiteralP",
          "text": "ExpressibleByStringLiteral"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s32ExpressibleByStringInterpolationP",
      "kind": "symbol",
      "role": "symbol",
      "title": "ExpressibleByStringInterpolation",
      "type": "topic",
      "url": "/documentation/Swift/ExpressibleByStringInterpolation"
    },
    "doc://com.externally.resolved.symbol/s:s33ExpressibleByUnicodeScalarLiteralP": {
      "abstract": [
        {
          "text": "A type that can be initialized with a string literal containing a single Unicode scalar value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByUnicodeScalarLiteral"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s33ExpressibleByUnicodeScalarLiteralP",
      "kind": "symbol",
      "role": "symbol",
      "title": "ExpressibleByUnicodeScalarLiteral",
      "type": "topic",
      "url": "/documentation/Swift/ExpressibleByUnicodeScalarLiteral"
    },
    "doc://com.externally.resolved.symbol/s:s43ExpressibleByExtendedGraphemeClusterLiteralP": {
      "abstract": [
        {
          "text": "A type that can be initialized with a string literal containing a single extended grapheme cluster.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ExpressibleByExtendedGraphemeClusterLiteral"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s33ExpressibleByUnicodeScalarLiteralP",
          "text": "ExpressibleByUnicodeScalarLiteral"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s43ExpressibleByExtendedGraphemeClusterLiteralP",
      "kind": "symbol",
      "role": "symbol",
      "title": "ExpressibleByExtendedGraphemeClusterLiteral",
      "type": "topic",
      "url": "/documentation/Swift/ExpressibleByExtendedGraphemeClusterLiteral"
    },
    "doc://com.externally.resolved.symbol/s:s8CopyableP": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8CopyableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/Swift/Copyable"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    },
    "doc://org.swift.testing/documentation/Testing": {
      "abstract": [
        {
          "text": "Create and run tests for your Swift packages and Xcode projects.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing",
      "kind": "symbol",
      "role": "collection",
      "title": "Swift Testing",
      "type": "topic",
      "url": "/documentation/testing"
    },
    "doc://org.swift.testing/documentation/Testing/AddingComments": {
      "abstract": [
        {
          "text": "Add comments to provide useful information about tests.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/AddingComments",
      "kind": "article",
      "role": "article",
      "title": "Adding comments to tests",
      "type": "topic",
      "url": "/documentation/testing/addingcomments"
    },
    "doc://org.swift.testing/documentation/Testing/Bug": {
      "abstract": [
        {
          "text": "A type representing a bug report tracked by a test.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Bug"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Bug",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Bug"
        }
      ],
      "role": "symbol",
      "title": "Bug",
      "type": "topic",
      "url": "/documentation/testing/bug"
    },
    "doc://org.swift.testing/documentation/Testing/Comment": {
      "abstract": [
        {
          "text": "A type representing a comment related to a test.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Comment"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Comment",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Comment"
        }
      ],
      "role": "symbol",
      "title": "Comment",
      "type": "topic",
      "url": "/documentation/testing/comment"
    },
    "doc://org.swift.testing/documentation/Testing/Comment/CustomStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.testing/documentation/Testing/Comment/CustomStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/testing/comment/customstringconvertible-implementations"
    },
    "doc://org.swift.testing/documentation/Testing/Comment/Equatable-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.testing/documentation/Testing/Comment/Equatable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Equatable Implementations",
      "type": "topic",
      "url": "/documentation/testing/comment/equatable-implementations"
    },
    "doc://org.swift.testing/documentation/Testing/Comment/ExpressibleByExtendedGraphemeClusterLiteral-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.testing/documentation/Testing/Comment/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
      "type": "topic",
      "url": "/documentation/testing/comment/expressiblebyextendedgraphemeclusterliteral-implementations"
    },
    "doc://org.swift.testing/documentation/Testing/Comment/ExpressibleByStringInterpolation-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.testing/documentation/Testing/Comment/ExpressibleByStringInterpolation-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByStringInterpolation Implementations",
      "type": "topic",
      "url": "/documentation/testing/comment/expressiblebystringinterpolation-implementations"
    },
    "doc://org.swift.testing/documentation/Testing/Comment/ExpressibleByStringLiteral-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.testing/documentation/Testing/Comment/ExpressibleByStringLiteral-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByStringLiteral Implementations",
      "type": "topic",
      "url": "/documentation/testing/comment/expressiblebystringliteral-implementations"
    },
    "doc://org.swift.testing/documentation/Testing/Comment/ExpressibleByUnicodeScalarLiteral-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.testing/documentation/Testing/Comment/ExpressibleByUnicodeScalarLiteral-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "ExpressibleByUnicodeScalarLiteral Implementations",
      "type": "topic",
      "url": "/documentation/testing/comment/expressiblebyunicodescalarliteral-implementations"
    },
    "doc://org.swift.testing/documentation/Testing/Comment/RawRepresentable-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.testing/documentation/Testing/Comment/RawRepresentable-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "RawRepresentable Implementations",
      "type": "topic",
      "url": "/documentation/testing/comment/rawrepresentable-implementations"
    },
    "doc://org.swift.testing/documentation/Testing/Comment/RawValue-swift.typealias": {
      "abstract": [
        {
          "text": "The raw type that can be used to represent all values of the conforming",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RawValue"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Comment/RawValue-swift.typealias",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RawValue"
        }
      ],
      "role": "symbol",
      "title": "Comment.RawValue",
      "type": "topic",
      "url": "/documentation/testing/comment/rawvalue-swift.typealias"
    },
    "doc://org.swift.testing/documentation/Testing/Comment/SuiteTrait-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.testing/documentation/Testing/Comment/SuiteTrait-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "SuiteTrait Implementations",
      "type": "topic",
      "url": "/documentation/testing/comment/suitetrait-implementations"
    },
    "doc://org.swift.testing/documentation/Testing/Comment/Trait-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.testing/documentation/Testing/Comment/Trait-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Trait Implementations",
      "type": "topic",
      "url": "/documentation/testing/comment/trait-implementations"
    },
    "doc://org.swift.testing/documentation/Testing/Comment/init(rawValue:)": {
      "abstract": [
        {
          "text": "Creates a new instance with the specified raw value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "rawValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Comment/init(rawValue:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(rawValue:)",
      "type": "topic",
      "url": "/documentation/testing/comment/init(rawvalue:)"
    },
    "doc://org.swift.testing/documentation/Testing/Comment/rawValue-swift.property": {
      "abstract": [
        {
          "text": "The single comment string contained in this instance.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "rawValue"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Comment/rawValue-swift.property",
      "kind": "symbol",
      "role": "symbol",
      "title": "rawValue",
      "type": "topic",
      "url": "/documentation/testing/comment/rawvalue-swift.property"
    },
    "doc://org.swift.testing/documentation/Testing/ConditionTrait": {
      "abstract": [
        {
          "text": "A type that defines a condition which must be satisfied for a test to be",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "enabled.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ConditionTrait"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/ConditionTrait",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ConditionTrait"
        }
      ],
      "role": "symbol",
      "title": "ConditionTrait",
      "type": "topic",
      "url": "/documentation/testing/conditiontrait"
    },
    "doc://org.swift.testing/documentation/Testing/ParallelizationTrait": {
      "abstract": [
        {
          "text": "A type that affects whether or not a test or suite is parallelized.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ParallelizationTrait"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/ParallelizationTrait",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ParallelizationTrait"
        }
      ],
      "role": "symbol",
      "title": "ParallelizationTrait",
      "type": "topic",
      "url": "/documentation/testing/parallelizationtrait"
    },
    "doc://org.swift.testing/documentation/Testing/SuiteTrait": {
      "abstract": [
        {
          "text": "A protocol describing traits that can be added to a test suite.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SuiteTrait"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/SuiteTrait",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SuiteTrait"
        }
      ],
      "role": "symbol",
      "title": "SuiteTrait",
      "type": "topic",
      "url": "/documentation/testing/suitetrait"
    },
    "doc://org.swift.testing/documentation/Testing/Tag": {
      "abstract": [
        {
          "text": "A type representing a tag that can be applied to a test.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Tag"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Tag",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Tag"
        }
      ],
      "role": "symbol",
      "title": "Tag",
      "type": "topic",
      "url": "/documentation/testing/tag"
    },
    "doc://org.swift.testing/documentation/Testing/Tag/List": {
      "abstract": [
        {
          "text": "A type representing one or more tags applied to a test.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "List"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Tag/List",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "List"
        }
      ],
      "role": "symbol",
      "title": "Tag.List",
      "type": "topic",
      "url": "/documentation/testing/tag/list"
    },
    "doc://org.swift.testing/documentation/Testing/TestTrait": {
      "abstract": [
        {
          "text": "A protocol describing traits that can be added to a test function.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TestTrait"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/TestTrait",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TestTrait"
        }
      ],
      "role": "symbol",
      "title": "TestTrait",
      "type": "topic",
      "url": "/documentation/testing/testtrait"
    },
    "doc://org.swift.testing/documentation/Testing/TimeLimitTrait": {
      "abstract": [
        {
          "text": "A type that defines a time limit to apply to a test.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TimeLimitTrait"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/TimeLimitTrait",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TimeLimitTrait"
        }
      ],
      "role": "symbol",
      "title": "TimeLimitTrait",
      "type": "topic",
      "url": "/documentation/testing/timelimittrait"
    },
    "doc://org.swift.testing/documentation/Testing/Trait": {
      "abstract": [
        {
          "text": "A protocol describing traits that can be added to a test function or to a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "test suite.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Trait"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Trait"
        }
      ],
      "role": "symbol",
      "title": "Trait",
      "type": "topic",
      "url": "/documentation/testing/trait"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/bug(_:_:)": {
      "abstract": [
        {
          "text": "Construct a bug to track with a test.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Bug",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bug"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/bug(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "bug(_:_:)",
      "type": "topic",
      "url": "/documentation/testing/trait/bug(_:_:)"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/bug(_:id:_:)-10yf5": {
      "abstract": [
        {
          "text": "Construct a bug to track with a test.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Bug",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bug"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/bug(_:id:_:)-10yf5",
      "kind": "symbol",
      "role": "symbol",
      "title": "bug(_:id:_:)",
      "type": "topic",
      "url": "/documentation/testing/trait/bug(_:id:_:)-10yf5"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/bug(_:id:_:)-3vtpl": {
      "abstract": [
        {
          "text": "Construct a bug to track with a test.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Bug",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bug"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sj",
          "text": "Numeric"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/bug(_:id:_:)-3vtpl",
      "kind": "symbol",
      "role": "symbol",
      "title": "bug(_:id:_:)",
      "type": "topic",
      "url": "/documentation/testing/trait/bug(_:id:_:)-3vtpl"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s8CopyableP",
        "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:Se",
        "doc://com.externally.resolved.symbol/s:SE",
        "doc://com.externally.resolved.symbol/s:SQ",
        "doc://com.externally.resolved.symbol/s:s43ExpressibleByExtendedGraphemeClusterLiteralP",
        "doc://com.externally.resolved.symbol/s:s32ExpressibleByStringInterpolationP",
        "doc://com.externally.resolved.symbol/s:s26ExpressibleByStringLiteralP",
        "doc://com.externally.resolved.symbol/s:s33ExpressibleByUnicodeScalarLiteralP",
        "doc://com.externally.resolved.symbol/s:SH",
        "doc://com.externally.resolved.symbol/s:SY",
        "doc://com.externally.resolved.symbol/s:s8SendableP",
        "doc://org.swift.testing/documentation/Testing/SuiteTrait",
        "doc://org.swift.testing/documentation/Testing/TestTrait",
        "doc://org.swift.testing/documentation/Testing/Trait"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Supporting-types",
      "generated": true,
      "identifiers": [
        "doc://org.swift.testing/documentation/Testing/Bug",
        "doc://org.swift.testing/documentation/Testing/ConditionTrait",
        "doc://org.swift.testing/documentation/Testing/ParallelizationTrait",
        "doc://org.swift.testing/documentation/Testing/Tag",
        "doc://org.swift.testing/documentation/Testing/Tag/List",
        "doc://org.swift.testing/documentation/Testing/TimeLimitTrait"
      ],
      "title": "Supporting types"
    }
  ],
  "topicSections": [
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://org.swift.testing/documentation/Testing/Comment/init(rawValue:)"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://org.swift.testing/documentation/Testing/Comment/rawValue-swift.property"
      ],
      "title": "Instance Properties"
    },
    {
      "anchor": "Type-Aliases",
      "generated": true,
      "identifiers": [
        "doc://org.swift.testing/documentation/Testing/Comment/RawValue-swift.typealias"
      ],
      "title": "Type Aliases"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://org.swift.testing/documentation/Testing/Comment/CustomStringConvertible-Implementations",
        "doc://org.swift.testing/documentation/Testing/Comment/Equatable-Implementations",
        "doc://org.swift.testing/documentation/Testing/Comment/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
        "doc://org.swift.testing/documentation/Testing/Comment/ExpressibleByStringInterpolation-Implementations",
        "doc://org.swift.testing/documentation/Testing/Comment/ExpressibleByStringLiteral-Implementations",
        "doc://org.swift.testing/documentation/Testing/Comment/ExpressibleByUnicodeScalarLiteral-Implementations",
        "doc://org.swift.testing/documentation/Testing/Comment/RawRepresentable-Implementations",
        "doc://org.swift.testing/documentation/Testing/Comment/SuiteTrait-Implementations",
        "doc://org.swift.testing/documentation/Testing/Comment/Trait-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/testing/comment"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
