{
  "abstract": [
    {
      "text": "Set limits on how long a test can run for until it fails.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://org.swift.testing/documentation/Testing",
        "doc://org.swift.testing/documentation/Testing/Traits"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://org.swift.testing/documentation/Testing/LimitingExecutionTime"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Swift Testing"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Limiting the running time of tests"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Some tests may naturally run slowly: they may require significant system",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "resources to complete, may rely on downloaded data from a server, or may",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "otherwise be dependent on external factors.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If a test may hang indefinitely or may consume too many system resources to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "complete effectively, consider setting a time limit for it so that it’s marked as failing if it runs for an excessive amount of time. Use the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/Trait/timeLimit(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " trait as an upper bound:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Test(.timeLimit(.minutes(60))",
            "func serve100CustomersInOneHour() async {",
            "  for _ in 0 ..< 100 {",
            "    let customer = await Customer.next()",
            "    await customer.order()",
            "    ...",
            "  }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "If the above test function takes longer than an",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "hour (60 x 60 seconds) to execute, the task in which it’s running is",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "https://developer.apple.com/documentation/swift/task/cancel()",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "and the test fails with an issue of kind",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/timeLimitExceeded(timeLimitComponents:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "If multiple time limit traits apply to a test, the shortest time limit",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "is used.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "inlineContent": [
            {
              "text": "The testing library may adjust the specified time limit for performance reasons",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "or to ensure tests have enough time to run. In particular, a granularity of (by",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "default) one minute is applied to tests. The testing library can also be",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "configured with a maximum time limit per test that overrides any applied time",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "limit traits.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Time-limits-applied-to-test-suites",
          "level": 3,
          "text": "Time limits applied to test suites",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When a time limit is applied to a test suite, it’s recursively applied to all",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "test functions and child test suites within that suite.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Time-limits-applied-to-parameterized-tests",
          "level": 3,
          "text": "Time limits applied to parameterized tests",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When a time limit is applied to a parameterized test function, it’s applied to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "each invocation ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "separately",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " so that if only some arguments cause failures, then",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "successful arguments aren’t incorrectly marked as failing too.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://org.swift.testing/documentation/Testing": {
      "abstract": [
        {
          "text": "Create and run tests for your Swift packages and Xcode projects.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing",
      "kind": "symbol",
      "role": "collection",
      "title": "Swift Testing",
      "type": "topic",
      "url": "/documentation/testing"
    },
    "doc://org.swift.testing/documentation/Testing/EnablingAndDisabling": {
      "abstract": [
        {
          "text": "Conditionally enable or disable individual tests before they run.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/EnablingAndDisabling",
      "kind": "article",
      "role": "article",
      "title": "Enabling and disabling tests",
      "type": "topic",
      "url": "/documentation/testing/enablinganddisabling"
    },
    "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/timeLimitExceeded(timeLimitComponents:)": {
      "abstract": [
        {
          "text": "An issue due to a test reaching its time limit and timing out.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "timeLimitExceeded"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "timeLimitComponents"
        },
        {
          "kind": "text",
          "text": ": (seconds"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", attoseconds"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": "))"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/timeLimitExceeded(timeLimitComponents:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "Issue.Kind.timeLimitExceeded(timeLimitComponents:)",
      "type": "topic",
      "url": "/documentation/testing/issue/kind-swift.enum/timelimitexceeded(timelimitcomponents:)"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/disabled(_:sourceLocation:)": {
      "abstract": [
        {
          "text": "Construct a condition trait that disables a test unconditionally.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "ConditionTrait",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "disabled"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/disabled(_:sourceLocation:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "disabled(_:sourceLocation:)",
      "type": "topic",
      "url": "/documentation/testing/trait/disabled(_:sourcelocation:)"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/disabled(_:sourceLocation:_:)": {
      "abstract": [
        {
          "text": "Construct a condition trait that causes a test to be disabled if it",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "returns ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "ConditionTrait",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "disabled"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ", () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/disabled(_:sourceLocation:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "disabled(_:sourceLocation:_:)",
      "type": "topic",
      "url": "/documentation/testing/trait/disabled(_:sourcelocation:_:)"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/disabled(if:_:sourceLocation:)": {
      "abstract": [
        {
          "text": "Construct a condition trait that causes a test to be disabled if it",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "returns ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "ConditionTrait",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "disabled"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "if"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/disabled(if:_:sourceLocation:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "disabled(if:_:sourceLocation:)",
      "type": "topic",
      "url": "/documentation/testing/trait/disabled(if:_:sourcelocation:)"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/enabled(_:sourceLocation:_:)": {
      "abstract": [
        {
          "text": "Construct a condition trait that causes a test to be disabled if it",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "returns ",
          "type": "text"
        },
        {
          "code": "false",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "ConditionTrait",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "enabled"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ", () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/enabled(_:sourceLocation:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "enabled(_:sourceLocation:_:)",
      "type": "topic",
      "url": "/documentation/testing/trait/enabled(_:sourcelocation:_:)"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/enabled(if:_:sourceLocation:)": {
      "abstract": [
        {
          "text": "Construct a condition trait that causes a test to be disabled if it",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "returns ",
          "type": "text"
        },
        {
          "code": "false",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "ConditionTrait",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "enabled"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "if"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/enabled(if:_:sourceLocation:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "enabled(if:_:sourceLocation:)",
      "type": "topic",
      "url": "/documentation/testing/trait/enabled(if:_:sourcelocation:)"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/timeLimit(_:)": {
      "abstract": [
        {
          "text": "Construct a time limit trait that causes a test to time out if it runs for",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "too long.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "TimeLimitTrait",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "timeLimit"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14TimeLimitTraitV",
          "text": "TimeLimitTrait"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14TimeLimitTraitV8DurationV",
          "text": "Duration"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/timeLimit(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "timeLimit(_:)",
      "type": "topic",
      "url": "/documentation/testing/trait/timelimit(_:)"
    },
    "doc://org.swift.testing/documentation/Testing/Traits": {
      "abstract": [
        {
          "text": "Add traits to tests to annotate them or customize their behavior.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Traits",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Traits",
      "type": "topic",
      "url": "/documentation/testing/traits"
    },
    "https://developer.apple.com/documentation/swift/task/cancel()": {
      "identifier": "https://developer.apple.com/documentation/swift/task/cancel()",
      "title": "cancelled",
      "titleInlineContent": [
        {
          "text": "cancelled",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/documentation/swift/task/cancel()"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Customizing-runtime-behaviors",
      "generated": true,
      "identifiers": [
        "doc://org.swift.testing/documentation/Testing/EnablingAndDisabling",
        "doc://org.swift.testing/documentation/Testing/Trait/enabled(if:_:sourceLocation:)",
        "doc://org.swift.testing/documentation/Testing/Trait/enabled(_:sourceLocation:_:)",
        "doc://org.swift.testing/documentation/Testing/Trait/disabled(_:sourceLocation:)",
        "doc://org.swift.testing/documentation/Testing/Trait/disabled(if:_:sourceLocation:)",
        "doc://org.swift.testing/documentation/Testing/Trait/disabled(_:sourceLocation:_:)",
        "doc://org.swift.testing/documentation/Testing/Trait/timeLimit(_:)"
      ],
      "title": "Customizing runtime behaviors"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/testing/limitingexecutiontime"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
