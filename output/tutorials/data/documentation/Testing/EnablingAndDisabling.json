{
  "abstract": [
    {
      "text": "Conditionally enable or disable individual tests before they run.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://org.swift.testing/documentation/Testing",
        "doc://org.swift.testing/documentation/Testing/Traits"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://org.swift.testing/documentation/Testing/EnablingAndDisabling"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Swift Testing"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Enabling and disabling tests"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Often, a test is only applicable in specific circumstances. For instance,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you might want to write a test that only runs on devices with particular",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "hardware capabilities, or performs locale-dependent operations. The testing",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "library allows you to add traits to your tests that cause runners to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "automatically skip them if conditions like these are not met.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A condition may be evaluated multiple times during testing.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Note",
          "style": "note",
          "type": "aside"
        },
        {
          "anchor": "Disable-a-test",
          "level": 3,
          "text": "Disable a test",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If you need to disable a test unconditionally, use the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/Trait/disabled(_:sourceLocation:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function. Given the following test",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "function:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Test(\"Food truck sells burritos\")",
            "func sellsBurritos() async throws { ... }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Add the trait ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "after",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " the test’s display name:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Test(\"Food truck sells burritos\", .disabled())",
            "func sellsBurritos() async throws { ... }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The test will now always be skipped.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "It’s also possible to add a comment to the trait to present in the output from",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the runner when it skips the test:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Test(\"Food truck sells burritos\", .disabled(\"We only sell Thai cuisine\"))",
            "func sellsBurritos() async throws { ... }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Enable-or-disable-a-test-conditionally",
          "level": 3,
          "text": "Enable or disable a test conditionally",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Sometimes, it makes sense to enable a test only when a certain condition is met. Consider",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the following test function:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Test(\"Ice cream is cold\")",
            "func isCold() async throws { ... }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "If it’s currently winter, then presumably ice cream won’t be available for",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "sale and this test will fail. It therefore makes sense to only enable it if it’s currently summer. You can conditionally enable a test with",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/Trait/enabled(if:_:sourceLocation:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Test(\"Ice cream is cold\", .enabled(if: Season.current == .summer))",
            "func isCold() async throws { ... }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "It’s also possible to conditionally ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "disable",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " a test and to combine multiple",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "conditions:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Test(",
            "  \"Ice cream is cold\",",
            "  .enabled(if: Season.current == .summer),",
            "  .disabled(\"We ran out of sprinkles\")",
            ")",
            "func isCold() async throws { ... }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "If a test is disabled because of a problem for which there is a corresponding",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "bug report, you can use one of these functions to show the relationship",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "between the test and the bug report:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/bug(_:_:)",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/bug(_:id:_:)-10yf5",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/bug(_:id:_:)-3vtpl",
                      "isActive": true,
                      "type": "reference"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "For example, the following test cannot run due to bug number ",
              "type": "text"
            },
            {
              "code": "\"12345\"",
              "type": "codeVoice"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "@Test(",
            "  \"Ice cream is cold\",",
            "  .enabled(if: Season.current == .summer),",
            "  .disabled(\"We ran out of sprinkles\"),",
            "  .bug(id: \"12345\")",
            ")",
            "func isCold() async throws { ... }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "If a test has multiple conditions applied to it, they must ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "all",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": " pass for it to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "run. Otherwise, the test notes the first condition to fail as the reason the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "test is skipped.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Handle-complex-conditions",
          "level": 3,
          "text": "Handle complex conditions",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If a condition is complex, consider factoring it out into a helper function to",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "improve readability:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "func allIngredientsAvailable(for food: Food) -> Bool { ... }",
            "",
            "@Test(",
            "  \"Can make sundaes\",",
            "  .enabled(if: Season.current == .summer),",
            "  .enabled(if: allIngredientsAvailable(for: .sundae))",
            ")",
            "func makeSundae() async throws { ... }"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://org.swift.testing/documentation/Testing": {
      "abstract": [
        {
          "text": "Create and run tests for your Swift packages and Xcode projects.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing",
      "kind": "symbol",
      "role": "collection",
      "title": "Swift Testing",
      "type": "topic",
      "url": "/documentation/testing"
    },
    "doc://org.swift.testing/documentation/Testing/LimitingExecutionTime": {
      "abstract": [
        {
          "text": "Set limits on how long a test can run for until it fails.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/LimitingExecutionTime",
      "kind": "article",
      "role": "article",
      "title": "Limiting the running time of tests",
      "type": "topic",
      "url": "/documentation/testing/limitingexecutiontime"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/bug(_:_:)": {
      "abstract": [
        {
          "text": "Construct a bug to track with a test.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Bug",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bug"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/bug(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "bug(_:_:)",
      "type": "topic",
      "url": "/documentation/testing/trait/bug(_:_:)"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/bug(_:id:_:)-10yf5": {
      "abstract": [
        {
          "text": "Construct a bug to track with a test.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Bug",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bug"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/bug(_:id:_:)-10yf5",
      "kind": "symbol",
      "role": "symbol",
      "title": "bug(_:id:_:)",
      "type": "topic",
      "url": "/documentation/testing/trait/bug(_:id:_:)-10yf5"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/bug(_:id:_:)-3vtpl": {
      "abstract": [
        {
          "text": "Construct a bug to track with a test.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Bug",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "bug"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "id"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sj",
          "text": "Numeric"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/bug(_:id:_:)-3vtpl",
      "kind": "symbol",
      "role": "symbol",
      "title": "bug(_:id:_:)",
      "type": "topic",
      "url": "/documentation/testing/trait/bug(_:id:_:)-3vtpl"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/disabled(_:sourceLocation:)": {
      "abstract": [
        {
          "text": "Construct a condition trait that disables a test unconditionally.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "ConditionTrait",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "disabled"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/disabled(_:sourceLocation:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "disabled(_:sourceLocation:)",
      "type": "topic",
      "url": "/documentation/testing/trait/disabled(_:sourcelocation:)"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/disabled(_:sourceLocation:_:)": {
      "abstract": [
        {
          "text": "Construct a condition trait that causes a test to be disabled if it",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "returns ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "ConditionTrait",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "disabled"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ", () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/disabled(_:sourceLocation:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "disabled(_:sourceLocation:_:)",
      "type": "topic",
      "url": "/documentation/testing/trait/disabled(_:sourcelocation:_:)"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/disabled(if:_:sourceLocation:)": {
      "abstract": [
        {
          "text": "Construct a condition trait that causes a test to be disabled if it",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "returns ",
          "type": "text"
        },
        {
          "code": "true",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "ConditionTrait",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "disabled"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "if"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/disabled(if:_:sourceLocation:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "disabled(if:_:sourceLocation:)",
      "type": "topic",
      "url": "/documentation/testing/trait/disabled(if:_:sourcelocation:)"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/enabled(_:sourceLocation:_:)": {
      "abstract": [
        {
          "text": "Construct a condition trait that causes a test to be disabled if it",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "returns ",
          "type": "text"
        },
        {
          "code": "false",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "ConditionTrait",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "enabled"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ", () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/enabled(_:sourceLocation:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "enabled(_:sourceLocation:_:)",
      "type": "topic",
      "url": "/documentation/testing/trait/enabled(_:sourcelocation:_:)"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/enabled(if:_:sourceLocation:)": {
      "abstract": [
        {
          "text": "Construct a condition trait that causes a test to be disabled if it",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "returns ",
          "type": "text"
        },
        {
          "code": "false",
          "type": "codeVoice"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "ConditionTrait",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "enabled"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "if"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/enabled(if:_:sourceLocation:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "enabled(if:_:sourceLocation:)",
      "type": "topic",
      "url": "/documentation/testing/trait/enabled(if:_:sourcelocation:)"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/timeLimit(_:)": {
      "abstract": [
        {
          "text": "Construct a time limit trait that causes a test to time out if it runs for",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "too long.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "TimeLimitTrait",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "timeLimit"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14TimeLimitTraitV",
          "text": "TimeLimitTrait"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14TimeLimitTraitV8DurationV",
          "text": "Duration"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/timeLimit(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "timeLimit(_:)",
      "type": "topic",
      "url": "/documentation/testing/trait/timelimit(_:)"
    },
    "doc://org.swift.testing/documentation/Testing/Traits": {
      "abstract": [
        {
          "text": "Add traits to tests to annotate them or customize their behavior.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Traits",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Traits",
      "type": "topic",
      "url": "/documentation/testing/traits"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Customizing-runtime-behaviors",
      "generated": true,
      "identifiers": [
        "doc://org.swift.testing/documentation/Testing/LimitingExecutionTime",
        "doc://org.swift.testing/documentation/Testing/Trait/enabled(if:_:sourceLocation:)",
        "doc://org.swift.testing/documentation/Testing/Trait/enabled(_:sourceLocation:_:)",
        "doc://org.swift.testing/documentation/Testing/Trait/disabled(_:sourceLocation:)",
        "doc://org.swift.testing/documentation/Testing/Trait/disabled(if:_:sourceLocation:)",
        "doc://org.swift.testing/documentation/Testing/Trait/disabled(_:sourceLocation:_:)",
        "doc://org.swift.testing/documentation/Testing/Trait/timeLimit(_:)"
      ],
      "title": "Customizing runtime behaviors"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/testing/enablinganddisabling"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
