{
  "abstract": [
    {
      "text": "Get this traitâ€™s scope provider for the specified test and/or test case,",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "if any.",
      "type": "text"
    }
  ],
  "defaultImplementationsSections": [
    {
      "anchor": "Trait-Implementations",
      "identifiers": [
        "doc://org.swift.testing/documentation/Testing/Trait/scopeProvider(for:testCase:)-inmj",
        "doc://org.swift.testing/documentation/Testing/Trait/scopeProvider(for:testCase:)-9fxg4",
        "doc://org.swift.testing/documentation/Testing/Trait/scopeProvider(for:testCase:)-1z8kh"
      ],
      "title": "Trait Implementations"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "added",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    },
    "minor": {
      "change": "added",
      "platform": "Xcode",
      "versions": [
        "16.2",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://org.swift.testing/documentation/Testing",
        "doc://org.swift.testing/documentation/Testing/Trait"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://org.swift.testing/documentation/Testing/Trait/scopeProvider(for:testCase:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7Testing5TraitP13scopeProvider3for8testCase09TestScopeD0QzSgAA0H0V_AK0G0VSgtF",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "scopeProvider"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "externalParam",
        "text": "for"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Testing4TestV",
        "text": "Test"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "testCase"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Testing4TestV",
        "text": "Test"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Testing4TestV4CaseV",
        "text": "Case"
      },
      {
        "kind": "text",
        "text": "?) -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "Self"
      },
      {
        "kind": "text",
        "text": "."
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Testing5TraitP17TestScopeProviderQa",
        "text": "TestScopeProvider"
      },
      {
        "kind": "text",
        "text": "?"
      }
    ],
    "modules": [
      {
        "name": "Swift Testing"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "introducedAt": "6.1",
        "name": "Swift"
      },
      {
        "beta": false,
        "introducedAt": "16.3",
        "name": "Xcode"
      }
    ],
    "required": true,
    "role": "symbol",
    "roleHeading": "Instance Method",
    "symbolKind": "method",
    "title": "scopeProvider(for:testCase:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "scopeProvider"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "for"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "test"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/Test",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Testing4TestV",
              "text": "Test"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "testCase"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/Test",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Testing4TestV",
              "text": "Test"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/Test/Case",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Testing4TestV4CaseV",
              "text": "Case"
            },
            {
              "kind": "text",
              "text": "?) -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "Self"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/Trait/TestScopeProvider",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Testing5TraitP17TestScopeProviderQa",
              "text": "TestScopeProvider"
            },
            {
              "kind": "text",
              "text": "?"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The test for which a scope provider is being requested.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "test"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The test case for which a scope provider is being requested,",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "if any. When ",
                  "type": "text"
                },
                {
                  "code": "test",
                  "type": "codeVoice"
                },
                {
                  "text": " represents a suite, the value of this argument is",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "code": "nil",
                  "type": "codeVoice"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "testCase"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "A value conforming to ",
              "type": "text"
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/Trait/TestScopeProvider",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " which may be",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "used to provide custom scoping for ",
              "type": "text"
            },
            {
              "code": "test",
              "type": "codeVoice"
            },
            {
              "text": " and/or ",
              "type": "text"
            },
            {
              "code": "testCase",
              "type": "codeVoice"
            },
            {
              "text": ", or ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " if",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "they should not have any custom scope.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If this traitâ€™s type conforms to ",
              "type": "text"
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/TestScoping",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ", the default value",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "returned by this method depends on ",
              "type": "text"
            },
            {
              "code": "test",
              "type": "codeVoice"
            },
            {
              "text": " and/or ",
              "type": "text"
            },
            {
              "code": "testCase",
              "type": "codeVoice"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "If ",
                      "type": "text"
                    },
                    {
                      "code": "test",
                      "type": "codeVoice"
                    },
                    {
                      "text": " represents a suite, this trait must conform to ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://org.swift.testing/documentation/Testing/SuiteTrait",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "If the value of this suite traitâ€™s ",
                      "type": "text"
                    },
                    {
                      "identifier": "doc://org.swift.testing/documentation/Testing/SuiteTrait/isRecursive",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " property",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "is ",
                      "type": "text"
                    },
                    {
                      "code": "true",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", then this method returns ",
                      "type": "text"
                    },
                    {
                      "code": "nil",
                      "type": "codeVoice"
                    },
                    {
                      "text": "; otherwise, it returns ",
                      "type": "text"
                    },
                    {
                      "code": "self",
                      "type": "codeVoice"
                    },
                    {
                      "text": ".",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "This means that by default, a suite trait will ",
                      "type": "text"
                    },
                    {
                      "inlineContent": [
                        {
                          "text": "either",
                          "type": "text"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "text": " provide its",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "custom scope once for the entire suite, or once per-test function it",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "contains.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Otherwise ",
                      "type": "text"
                    },
                    {
                      "code": "test",
                      "type": "codeVoice"
                    },
                    {
                      "text": " represents a test function. If ",
                      "type": "text"
                    },
                    {
                      "code": "testCase",
                      "type": "codeVoice"
                    },
                    {
                      "text": " is ",
                      "type": "text"
                    },
                    {
                      "code": "nil",
                      "type": "codeVoice"
                    },
                    {
                      "text": ",",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "this method returns ",
                      "type": "text"
                    },
                    {
                      "code": "nil",
                      "type": "codeVoice"
                    },
                    {
                      "text": "; otherwise, it returns ",
                      "type": "text"
                    },
                    {
                      "code": "self",
                      "type": "codeVoice"
                    },
                    {
                      "text": ". This means that",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "by default, a trait which is applied to or inherited by a test function",
                      "type": "text"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "text": "will provide its custom scope once for each of that functionâ€™s cases.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "A trait may explicitly implement this method to further customize the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "default behaviors above. For example, if a trait should provide custom",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "test scope both once per-suite and once per-test function in that suite,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "it may implement the method and return a non-",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " scope provider under",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "those conditions.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "A trait may also implement this method and return ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " if it determines",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "that it does not need to provide a custom scope for a particular test at",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "runtime, even if the test has the trait applied. This can improve",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "performance and make diagnostics clearer by avoiding an unnecessary call",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to ",
              "type": "text"
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/TestScoping/provideScope(for:testCase:performing:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "If this traitâ€™s type does not conform to ",
              "type": "text"
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/TestScoping",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and its",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "associated ",
              "type": "text"
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/Trait/TestScopeProvider",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " type is the default ",
              "type": "text"
            },
            {
              "code": "Never",
              "type": "codeVoice"
            },
            {
              "text": ", then",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "this method returns ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " by default. This means that instances of this",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "trait will not provide a custom scope for tests to which theyâ€™re applied.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://org.swift.testing/documentation/Testing": {
      "abstract": [
        {
          "text": "Create and run tests for your Swift packages and Xcode projects.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing",
      "kind": "symbol",
      "role": "collection",
      "title": "Swift Testing",
      "type": "topic",
      "url": "/documentation/testing"
    },
    "doc://org.swift.testing/documentation/Testing/SuiteTrait": {
      "abstract": [
        {
          "text": "A protocol describing traits that can be added to a test suite.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SuiteTrait"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/SuiteTrait",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SuiteTrait"
        }
      ],
      "role": "symbol",
      "title": "SuiteTrait",
      "type": "topic",
      "url": "/documentation/testing/suitetrait"
    },
    "doc://org.swift.testing/documentation/Testing/SuiteTrait/isRecursive": {
      "abstract": [
        {
          "text": "Whether this instance should be applied recursively to child test suites",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "and test functions or should only be applied to the test suite to which it",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "was directly added.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "isRecursive"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/SuiteTrait/isRecursive",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "isRecursive",
      "type": "topic",
      "url": "/documentation/testing/suitetrait/isrecursive"
    },
    "doc://org.swift.testing/documentation/Testing/Test": {
      "abstract": [
        {
          "text": "A type representing a test or suite.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Test"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Test",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Test"
        }
      ],
      "role": "symbol",
      "title": "Test",
      "type": "topic",
      "url": "/documentation/testing/test"
    },
    "doc://org.swift.testing/documentation/Testing/Test/Case": {
      "abstract": [
        {
          "text": "A single test case from a parameterized ",
          "type": "text"
        },
        {
          "identifier": "doc://org.swift.testing/documentation/Testing/Test",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Case"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Test/Case",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Case"
        }
      ],
      "role": "symbol",
      "title": "Test.Case",
      "type": "topic",
      "url": "/documentation/testing/test/case"
    },
    "doc://org.swift.testing/documentation/Testing/TestScoping": {
      "abstract": [
        {
          "text": "A protocol that allows providing a custom execution scope for a test",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "function (and each of its cases) or a test suite by performing custom code",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "before or after it runs.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TestScoping"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/TestScoping",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TestScoping"
        }
      ],
      "role": "symbol",
      "title": "TestScoping",
      "type": "topic",
      "url": "/documentation/testing/testscoping"
    },
    "doc://org.swift.testing/documentation/Testing/TestScoping/provideScope(for:testCase:performing:)": {
      "abstract": [
        {
          "text": "Provide custom execution scope for a function call which is related to the",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "specified test and/or test case.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "provideScope"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV",
          "text": "Test"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "testCase"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV",
          "text": "Test"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV4CaseV",
          "text": "Case"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "performing"
        },
        {
          "kind": "text",
          "text": ": () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Voida",
          "text": "Void"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/TestScoping/provideScope(for:testCase:performing:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "provideScope(for:testCase:performing:)",
      "type": "topic",
      "url": "/documentation/testing/testscoping/providescope(for:testcase:performing:)"
    },
    "doc://org.swift.testing/documentation/Testing/Trait": {
      "abstract": [
        {
          "text": "A protocol describing traits that can be added to a test function or to a",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "test suite.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Trait"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Trait"
        }
      ],
      "role": "symbol",
      "title": "Trait",
      "type": "topic",
      "url": "/documentation/testing/trait"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/TestScopeProvider": {
      "abstract": [
        {
          "text": "The type of the test scope provider for this trait.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TestScopeProvider"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing11TestScopingP",
          "text": "TestScoping"
        },
        {
          "kind": "text",
          "text": " = "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5NeverO",
          "text": "Never"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/TestScopeProvider",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "TestScopeProvider",
      "type": "topic",
      "url": "/documentation/testing/trait/testscopeprovider"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/scopeProvider(for:testCase:)": {
      "abstract": [
        {
          "text": "Get this traitâ€™s scope provider for the specified test and/or test case,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "if any.",
          "type": "text"
        }
      ],
      "defaultImplementations": 3,
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "scopeProvider"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV",
          "text": "Test"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "testCase"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV",
          "text": "Test"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV4CaseV",
          "text": "Case"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing5TraitP17TestScopeProviderQa",
          "text": "TestScopeProvider"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/scopeProvider(for:testCase:)",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "scopeProvider(for:testCase:)",
      "type": "topic",
      "url": "/documentation/testing/trait/scopeprovider(for:testcase:)"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/scopeProvider(for:testCase:)-1z8kh": {
      "abstract": [
        {
          "text": "Get this traitâ€™s scope provider for the specified test and/or test case,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "if any.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "TestScoping",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "scopeProvider"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV",
          "text": "Test"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "testCase"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV",
          "text": "Test"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV4CaseV",
          "text": "Case"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/scopeProvider(for:testCase:)-1z8kh",
      "kind": "symbol",
      "role": "symbol",
      "title": "scopeProvider(for:testCase:)",
      "type": "topic",
      "url": "/documentation/testing/trait/scopeprovider(for:testcase:)-1z8kh"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/scopeProvider(for:testCase:)-9fxg4": {
      "abstract": [
        {
          "text": "Get this traitâ€™s scope provider for the specified test and/or test case,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "if any.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "TestScopeProvider",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "Never",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "scopeProvider"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV",
          "text": "Test"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "testCase"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV",
          "text": "Test"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV4CaseV",
          "text": "Case"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5NeverO",
          "text": "Never"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/scopeProvider(for:testCase:)-9fxg4",
      "kind": "symbol",
      "role": "symbol",
      "title": "scopeProvider(for:testCase:)",
      "type": "topic",
      "url": "/documentation/testing/trait/scopeprovider(for:testcase:)-9fxg4"
    },
    "doc://org.swift.testing/documentation/Testing/Trait/scopeProvider(for:testCase:)-inmj": {
      "abstract": [
        {
          "text": "Get this traitâ€™s scope provider for the specified test and/or test case,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "if any.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " conforms to ",
            "type": "text"
          },
          {
            "code": "TestScoping",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "scopeProvider"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV",
          "text": "Test"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "testCase"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV",
          "text": "Test"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing4TestV4CaseV",
          "text": "Case"
        },
        {
          "kind": "text",
          "text": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Trait/scopeProvider(for:testCase:)-inmj",
      "kind": "symbol",
      "role": "symbol",
      "title": "scopeProvider(for:testCase:)",
      "type": "topic",
      "url": "/documentation/testing/trait/scopeprovider(for:testcase:)-inmj"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Providing-custom-execution-scope-for-tests",
      "generated": true,
      "identifiers": [
        "doc://org.swift.testing/documentation/Testing/TestScoping",
        "doc://org.swift.testing/documentation/Testing/Trait/TestScopeProvider"
      ],
      "title": "Providing custom execution scope for tests"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/testing/trait/scopeprovider(for:testcase:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
