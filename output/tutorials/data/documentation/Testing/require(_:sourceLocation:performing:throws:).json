{
  "abstract": [
    {
      "text": "Check that an expression always throws an error matching some condition, and",
      "type": "text"
    },
    {
      "text": " ",
      "type": "text"
    },
    {
      "text": "throw an error if it does not.",
      "type": "text"
    }
  ],
  "deprecationSummary": [
    {
      "inlineContent": [
        {
          "text": "Examine the result of ",
          "type": "text"
        },
        {
          "identifier": "doc://org.swift.testing/documentation/Testing/require(throws:_:sourceLocation:performing:)-7n34r",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "or ",
          "type": "text"
        },
        {
          "identifier": "doc://org.swift.testing/documentation/Testing/require(throws:_:sourceLocation:performing:)-4djuw",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " instead:",
          "type": "text"
        }
      ],
      "type": "paragraph"
    },
    {
      "code": [
        "let error = try #require(throws: FoodTruckError.self) {",
        "  ...",
        "}",
        "#expect(error.napkinCount == 0)"
      ],
      "syntax": "swift",
      "type": "codeListing"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "added",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    },
    "minor": {
      "change": "added",
      "platform": "Xcode",
      "versions": [
        "16.2",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://org.swift.testing/documentation/Testing"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://org.swift.testing/documentation/Testing/require(_:sourceLocation:performing:throws:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7Testing7require_14sourceLocation10performing6throwss5Error_pAA7CommentVSgyXK_AA06SourceD0VxyYaKXESbsAF_pYaKXEtclufm",
    "fragments": [
      {
        "kind": "keyword",
        "text": "macro"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "require"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "genericParameter",
        "text": "R"
      },
      {
        "kind": "text",
        "text": ">("
      },
      {
        "kind": "attribute",
        "text": "@autoclosure "
      },
      {
        "kind": "text",
        "text": "() -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Testing7CommentV",
        "text": "Comment"
      },
      {
        "kind": "text",
        "text": "?, "
      },
      {
        "kind": "externalParam",
        "text": "sourceLocation"
      },
      {
        "kind": "text",
        "text": ": "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:7Testing14SourceLocationV",
        "text": "SourceLocation"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "performing"
      },
      {
        "kind": "text",
        "text": ": () "
      },
      {
        "kind": "keyword",
        "text": "async"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "text": "R"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "externalParam",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": ": (any "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s5ErrorP",
        "text": "Error"
      },
      {
        "kind": "text",
        "text": ") "
      },
      {
        "kind": "keyword",
        "text": "async"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "keyword",
        "text": "throws"
      },
      {
        "kind": "text",
        "text": " -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sb",
        "text": "Bool"
      },
      {
        "kind": "text",
        "text": ") -> any "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s5ErrorP",
        "text": "Error"
      }
    ],
    "modules": [
      {
        "name": "Swift Testing"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "introducedAt": "6.0",
        "name": "Swift"
      },
      {
        "beta": false,
        "introducedAt": "16.0",
        "name": "Xcode"
      }
    ],
    "role": "symbol",
    "roleHeading": "Macro",
    "symbolKind": "macro",
    "title": "require(_:sourceLocation:performing:throws:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "attribute",
              "text": "@discardableResult"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "attribute",
              "text": "@freestanding"
            },
            {
              "kind": "text",
              "text": "(expression) "
            },
            {
              "kind": "keyword",
              "text": "macro"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "require"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "genericParameter",
              "text": "R"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "comment"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "attribute",
              "text": "@autoclosure "
            },
            {
              "kind": "text",
              "text": "() -> "
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/Comment",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Testing7CommentV",
              "text": "Comment"
            },
            {
              "kind": "text",
              "text": "? = nil, "
            },
            {
              "kind": "externalParam",
              "text": "sourceLocation"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://org.swift.testing/documentation/Testing/SourceLocation",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:7Testing14SourceLocationV",
              "text": "SourceLocation"
            },
            {
              "kind": "text",
              "text": " = #_sourceLocation, "
            },
            {
              "kind": "externalParam",
              "text": "performing"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "expression"
            },
            {
              "kind": "text",
              "text": ": () "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "text": "R"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "errorMatcher"
            },
            {
              "kind": "text",
              "text": ": (any "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s5ErrorP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s5ErrorP",
              "text": "Error"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sb",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": ") -> any "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s5ErrorP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s5ErrorP",
              "text": "Error"
            }
          ]
        }
      ],
      "kind": "declarations"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:Sb": {
      "abstract": [
        {
          "text": "A value type whose instances are either `true` or `false`.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Bool"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Sb",
      "kind": "symbol",
      "role": "symbol",
      "title": "Bool",
      "type": "topic",
      "url": "/documentation/Swift/Bool"
    },
    "doc://com.externally.resolved.symbol/s:s5ErrorP": {
      "abstract": [
        {
          "text": "A type representing an error value that can be thrown.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s8SendableP",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s5ErrorP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Error",
      "type": "topic",
      "url": "/documentation/Swift/Error"
    },
    "doc://org.swift.testing/documentation/Testing": {
      "abstract": [
        {
          "text": "Create and run tests for your Swift packages and Xcode projects.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing",
      "kind": "symbol",
      "role": "collection",
      "title": "Swift Testing",
      "type": "topic",
      "url": "/documentation/testing"
    },
    "doc://org.swift.testing/documentation/Testing/Comment": {
      "abstract": [
        {
          "text": "A type representing a comment related to a test.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Comment"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Comment",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Comment"
        }
      ],
      "role": "symbol",
      "title": "Comment",
      "type": "topic",
      "url": "/documentation/testing/comment"
    },
    "doc://org.swift.testing/documentation/Testing/SourceLocation": {
      "abstract": [
        {
          "text": "A type representing a location in source code.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SourceLocation"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/SourceLocation",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SourceLocation"
        }
      ],
      "role": "symbol",
      "title": "SourceLocation",
      "type": "topic",
      "url": "/documentation/testing/sourcelocation"
    },
    "doc://org.swift.testing/documentation/Testing/expect(_:sourceLocation:performing:throws:)": {
      "abstract": [
        {
          "text": "Check that an expression always throws an error matching some condition.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "expect"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "performing"
        },
        {
          "kind": "text",
          "text": ": () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": ": (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ")?"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/expect(_:sourceLocation:performing:throws:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "expect(_:sourceLocation:performing:throws:)",
      "type": "topic",
      "url": "/documentation/testing/expect(_:sourcelocation:performing:throws:)"
    },
    "doc://org.swift.testing/documentation/Testing/expect(throws:_:sourceLocation:performing:)-1hfms": {
      "abstract": [
        {
          "text": "Check that an expression always throws an error of a given type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "expect"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "performing"
        },
        {
          "kind": "text",
          "text": ": () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/expect(throws:_:sourceLocation:performing:)-1hfms",
      "kind": "symbol",
      "role": "symbol",
      "title": "expect(throws:_:sourceLocation:performing:)",
      "type": "topic",
      "url": "/documentation/testing/expect(throws:_:sourcelocation:performing:)-1hfms"
    },
    "doc://org.swift.testing/documentation/Testing/expect(throws:_:sourceLocation:performing:)-7du1h": {
      "abstract": [
        {
          "text": "Check that an expression always throws a specific error.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "expect"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "performing"
        },
        {
          "kind": "text",
          "text": ": () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": "?"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/expect(throws:_:sourceLocation:performing:)-7du1h",
      "kind": "symbol",
      "role": "symbol",
      "title": "expect(throws:_:sourceLocation:performing:)",
      "type": "topic",
      "url": "/documentation/testing/expect(throws:_:sourcelocation:performing:)-7du1h"
    },
    "doc://org.swift.testing/documentation/Testing/require(_:sourceLocation:performing:throws:)": {
      "abstract": [
        {
          "text": "Check that an expression always throws an error matching some condition, and",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "throw an error if it does not.",
          "type": "text"
        }
      ],
      "deprecated": true,
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "require"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "performing"
        },
        {
          "kind": "text",
          "text": ": () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": ": (any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ") "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/require(_:sourceLocation:performing:throws:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "require(_:sourceLocation:performing:throws:)",
      "type": "topic",
      "url": "/documentation/testing/require(_:sourcelocation:performing:throws:)"
    },
    "doc://org.swift.testing/documentation/Testing/require(throws:_:sourceLocation:performing:)-4djuw": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "require"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "performing"
        },
        {
          "kind": "text",
          "text": ": () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/require(throws:_:sourceLocation:performing:)-4djuw",
      "kind": "symbol",
      "role": "symbol",
      "title": "require(throws:_:sourceLocation:performing:)",
      "type": "topic",
      "url": "/documentation/testing/require(throws:_:sourcelocation:performing:)-4djuw"
    },
    "doc://org.swift.testing/documentation/Testing/require(throws:_:sourceLocation:performing:)-7n34r": {
      "abstract": [
        {
          "text": "Check that an expression always throws an error of a given type, and throw",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "an error if it does not.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "require"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "genericParameter",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "externalParam",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        },
        {
          "kind": "text",
          "text": ".Type, "
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "performing"
        },
        {
          "kind": "text",
          "text": ": () "
        },
        {
          "kind": "keyword",
          "text": "async"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "R"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "text": "E"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/require(throws:_:sourceLocation:performing:)-7n34r",
      "kind": "symbol",
      "role": "symbol",
      "title": "require(throws:_:sourceLocation:performing:)",
      "type": "topic",
      "url": "/documentation/testing/require(throws:_:sourcelocation:performing:)-7n34r"
    },
    "doc://org.swift.testing/documentation/Testing/testing-for-errors-in-swift-code": {
      "abstract": [
        {
          "text": "Ensure that your code handles errors in the way you expect.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/testing-for-errors-in-swift-code",
      "kind": "article",
      "role": "article",
      "title": "Testing for errors in Swift code",
      "type": "topic",
      "url": "/documentation/testing/testing-for-errors-in-swift-code"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Checking-that-errors-are-thrown",
      "generated": true,
      "identifiers": [
        "doc://org.swift.testing/documentation/Testing/testing-for-errors-in-swift-code",
        "doc://org.swift.testing/documentation/Testing/expect(throws:_:sourceLocation:performing:)-1hfms",
        "doc://org.swift.testing/documentation/Testing/expect(throws:_:sourceLocation:performing:)-7du1h",
        "doc://org.swift.testing/documentation/Testing/expect(_:sourceLocation:performing:throws:)",
        "doc://org.swift.testing/documentation/Testing/require(throws:_:sourceLocation:performing:)-7n34r",
        "doc://org.swift.testing/documentation/Testing/require(throws:_:sourceLocation:performing:)-4djuw"
      ],
      "title": "Checking that errors are thrown"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/testing/require(_:sourcelocation:performing:throws:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
