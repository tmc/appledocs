{
  "abstract": [
    {
      "text": "Kinds of issues which may be recorded.",
      "type": "text"
    }
  ],
  "diffAvailability": {
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.0",
        "16.3 beta 2"
      ]
    },
    "minor": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "16.2",
        "16.3 beta 2"
      ]
    }
  },
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://org.swift.testing/documentation/Testing",
        "doc://org.swift.testing/documentation/Testing/Issue"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "s:7Testing5IssueV4KindO",
    "fragments": [
      {
        "kind": "keyword",
        "text": "enum"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "Kind"
      }
    ],
    "modules": [
      {
        "name": "Swift Testing"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "Kind"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "name": "watchOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "6.0",
        "name": "Swift",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "16.0",
        "name": "Xcode",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Enumeration",
    "symbolKind": "enum",
    "title": "Issue.Kind"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "enum"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "Kind"
            }
          ]
        }
      ],
      "kind": "declarations"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP": {
      "abstract": [
        {
          "text": "A type with a customized textual representation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomStringConvertible"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
      "kind": "symbol",
      "role": "symbol",
      "title": "CustomStringConvertible",
      "type": "topic",
      "url": "/documentation/Swift/CustomStringConvertible"
    },
    "doc://com.externally.resolved.symbol/s:s8CopyableP": {
      "abstract": [
        {
          "text": "A type whose values can be implicitly or explicitly copied.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Copyable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8CopyableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Copyable",
      "type": "topic",
      "url": "/documentation/Swift/Copyable"
    },
    "doc://com.externally.resolved.symbol/s:s8SendableP": {
      "abstract": [
        {
          "text": "A thread-safe type whose values can be shared across arbitrary concurrent contexts without introducing a risk of data races.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Sendable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s8SendableP",
      "kind": "symbol",
      "role": "symbol",
      "title": "Sendable",
      "type": "topic",
      "url": "/documentation/Swift/Sendable"
    },
    "doc://org.swift.testing/documentation/Testing": {
      "abstract": [
        {
          "text": "Create and run tests for your Swift packages and Xcode projects.",
          "type": "text"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing",
      "kind": "symbol",
      "role": "collection",
      "title": "Swift Testing",
      "type": "topic",
      "url": "/documentation/testing"
    },
    "doc://org.swift.testing/documentation/Testing/Issue": {
      "abstract": [
        {
          "text": "A type describing a failure or warning which occurred during a test.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Issue"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Issue",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Issue"
        }
      ],
      "role": "symbol",
      "title": "Issue",
      "type": "topic",
      "url": "/documentation/testing/issue"
    },
    "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum": {
      "abstract": [
        {
          "text": "Kinds of issues which may be recorded.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Kind"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Kind"
        }
      ],
      "role": "symbol",
      "title": "Issue.Kind",
      "type": "topic",
      "url": "/documentation/testing/issue/kind-swift.enum"
    },
    "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/CustomStringConvertible-Implementations": {
      "abstract": [],
      "identifier": "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/CustomStringConvertible-Implementations",
      "kind": "article",
      "role": "collectionGroup",
      "title": "CustomStringConvertible Implementations",
      "type": "topic",
      "url": "/documentation/testing/issue/kind-swift.enum/customstringconvertible-implementations"
    },
    "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/apiMisused": {
      "abstract": [
        {
          "text": "An issue occurred due to misuse of the testing library.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "apiMisused"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/apiMisused",
      "kind": "symbol",
      "role": "symbol",
      "title": "Issue.Kind.apiMisused",
      "type": "topic",
      "url": "/documentation/testing/issue/kind-swift.enum/apimisused"
    },
    "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/confirmationMiscounted(actual:expected:)": {
      "abstract": [
        {
          "text": "An issue due to a confirmation being confirmed the wrong number of",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "times.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "confirmationMiscounted"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "actual"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "expected"
        },
        {
          "kind": "text",
          "text": ": any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SX",
          "text": "RangeExpression"
        },
        {
          "kind": "text",
          "text": " & "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s8SendableP",
          "text": "Sendable"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/confirmationMiscounted(actual:expected:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "Issue.Kind.confirmationMiscounted(actual:expected:)",
      "type": "topic",
      "url": "/documentation/testing/issue/kind-swift.enum/confirmationmiscounted(actual:expected:)"
    },
    "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/errorCaught(_:)": {
      "abstract": [
        {
          "text": "An issue due to an ",
          "type": "text"
        },
        {
          "code": "Error",
          "type": "codeVoice"
        },
        {
          "text": " being thrown by a test function and caught by",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "the testing library.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "errorCaught"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5ErrorP",
          "text": "Error"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/errorCaught(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "Issue.Kind.errorCaught(_:)",
      "type": "topic",
      "url": "/documentation/testing/issue/kind-swift.enum/errorcaught(_:)"
    },
    "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/expectationFailed(_:)": {
      "abstract": [
        {
          "text": "An issue due to a failed expectation, such as those produced by",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "identifier": "doc://org.swift.testing/documentation/Testing/expect(_:_:sourceLocation:)",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "expectationFailed"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing11ExpectationV",
          "text": "Expectation"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/expectationFailed(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "Issue.Kind.expectationFailed(_:)",
      "type": "topic",
      "url": "/documentation/testing/issue/kind-swift.enum/expectationfailed(_:)"
    },
    "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/knownIssueNotRecorded": {
      "abstract": [
        {
          "text": "A known issue was expected, but was not recorded.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "knownIssueNotRecorded"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/knownIssueNotRecorded",
      "kind": "symbol",
      "role": "symbol",
      "title": "Issue.Kind.knownIssueNotRecorded",
      "type": "topic",
      "url": "/documentation/testing/issue/kind-swift.enum/knownissuenotrecorded"
    },
    "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/system": {
      "abstract": [
        {
          "text": "An issue due to a failure in the underlying system, not due to a failure",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "within the tests being run.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "system"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/system",
      "kind": "symbol",
      "role": "symbol",
      "title": "Issue.Kind.system",
      "type": "topic",
      "url": "/documentation/testing/issue/kind-swift.enum/system"
    },
    "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/timeLimitExceeded(timeLimitComponents:)": {
      "abstract": [
        {
          "text": "An issue due to a test reaching its time limit and timing out.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "timeLimitExceeded"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "timeLimitComponents"
        },
        {
          "kind": "text",
          "text": ": (seconds"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": ", attoseconds"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5Int64V",
          "text": "Int64"
        },
        {
          "kind": "text",
          "text": "))"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/timeLimitExceeded(timeLimitComponents:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "Issue.Kind.timeLimitExceeded(timeLimitComponents:)",
      "type": "topic",
      "url": "/documentation/testing/issue/kind-swift.enum/timelimitexceeded(timelimitcomponents:)"
    },
    "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/unconditional": {
      "abstract": [
        {
          "text": "An issue which occurred unconditionally, for example by using",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "identifier": "doc://org.swift.testing/documentation/Testing/Issue/record(_:sourceLocation:)",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "case"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "unconditional"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/unconditional",
      "kind": "symbol",
      "role": "symbol",
      "title": "Issue.Kind.unconditional",
      "type": "topic",
      "url": "/documentation/testing/issue/kind-swift.enum/unconditional"
    },
    "doc://org.swift.testing/documentation/Testing/Issue/record(_:sourceLocation:)": {
      "abstract": [
        {
          "text": "Record an issue when a running test fails unexpectedly.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "record"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing5IssueV",
          "text": "Issue"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/Issue/record(_:sourceLocation:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "record(_:sourceLocation:)",
      "type": "topic",
      "url": "/documentation/testing/issue/record(_:sourcelocation:)"
    },
    "doc://org.swift.testing/documentation/Testing/expect(_:_:sourceLocation:)": {
      "abstract": [
        {
          "text": "Check that an expectation has passed after a condition has been evaluated.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "macro"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "expect"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "attribute",
          "text": "@autoclosure "
        },
        {
          "kind": "text",
          "text": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing7CommentV",
          "text": "Comment"
        },
        {
          "kind": "text",
          "text": "?, "
        },
        {
          "kind": "externalParam",
          "text": "sourceLocation"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7Testing14SourceLocationV",
          "text": "SourceLocation"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://org.swift.testing/documentation/Testing/expect(_:_:sourceLocation:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "expect(_:_:sourceLocation:)",
      "type": "topic",
      "url": "/documentation/testing/expect(_:_:sourcelocation:)"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://com.externally.resolved.symbol/s:s8CopyableP",
        "doc://com.externally.resolved.symbol/s:s23CustomStringConvertibleP",
        "doc://com.externally.resolved.symbol/s:s8SendableP"
      ],
      "kind": "relationships",
      "title": "Conforms To",
      "type": "conformsTo"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "topicSections": [
    {
      "anchor": "Enumeration-Cases",
      "generated": true,
      "identifiers": [
        "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/apiMisused",
        "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/confirmationMiscounted(actual:expected:)",
        "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/errorCaught(_:)",
        "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/expectationFailed(_:)",
        "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/knownIssueNotRecorded",
        "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/system",
        "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/timeLimitExceeded(timeLimitComponents:)",
        "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/unconditional"
      ],
      "title": "Enumeration Cases"
    },
    {
      "anchor": "Default-Implementations",
      "generated": true,
      "identifiers": [
        "doc://org.swift.testing/documentation/Testing/Issue/Kind-swift.enum/CustomStringConvertible-Implementations"
      ],
      "title": "Default Implementations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/testing/issue/kind-swift.enum"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
