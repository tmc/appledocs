{
  "abstract": [
    {
      "text": "Train a machine learning model to predict the class label of time-series signals.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/creating-a-time-series-classifier"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "Create ML Components"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Creating a time-series classifier"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Some signals have patterns that repeat over time or have clear trends.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For example, the accelerometer data from an Apple Watch while the wearer is exercising.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "It’s common practice to refer to these signals as ",
              "type": "text"
            },
            {
              "inlineContent": [
                {
                  "text": "time-series data",
                  "type": "text"
                }
              ],
              "type": "emphasis"
            },
            {
              "text": ".",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Other examples of time-series data are:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The temperature of a machine in a factory.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Your heart rate during a gym session.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The audio signal in a song.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "inlineContent": [
            {
              "text": "Even though there are patterns to the data, these patterns aren’t trivial to classify.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "You can perform classification on these data by training an ML model.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "For example, you can classify hand gestures from the accelerometer data from an Apple Watch.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Training a time-series classifier with the Create ML Components framework shares common training behavior with other model types.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "Prepare-your-training-data",
          "level": 3,
          "text": "Prepare your training data",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The first step to begin classifying the throwing movement of a baseball is to prepare the data.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "The model predicts the baseball throw as fastball, breaking ball, or changeup.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Organize the data by using the following directory structure:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "/",
            "    fastball/",
            "        recording1.csv",
            "        recording2.csv",
            "        ...",
            "    breaking/",
            "        recording3.csv",
            "        recording4.csv",
            "        ...",
            "    changeup/",
            "        recording5.csv",
            "        recording6.csv",
            "        ..."
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Each move contains a subdirectory with CSV files that contains information about a throw.",
              "type": "text"
            },
            {
              "text": "\n",
              "type": "text"
            },
            {
              "text": "Each data file represents one throw and uses the following structure:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "header": "row",
          "rows": [
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "accelerometerAccelerationX(G)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "accelerometerAccelerationY(G)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "accelerometerAccelerationZ(G)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "motionRotationRateX(rad/s)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "motionRotationRateY(rad/s)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "motionRotationRateZ(rad/s)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "0.031036",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "0.056931",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "-1.005661",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "0.05611",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "-0.029355",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "-0.023368",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "0.02655",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "0.04863",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "-0.996994",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "0.096923",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "-0.040154",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "-0.020962",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent": [
                    {
                      "text": "0.023743",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "0.045242",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "-1.004333",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "0.053917",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "-0.033634",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              [
                {
                  "inlineContent": [
                    {
                      "text": "-0.016979",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            ]
          ],
          "type": "table"
        },
        {
          "inlineContent": [
            {
              "text": "The table shows the acceleration and rotation rate for a thrown baseball.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "You use these data points to identify the trajectory of the object that helps the model learn the throwing pattern.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Each column denotes a feature for the model.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Read the training data files from the directory by using ",
              "type": "text"
            },
            {
              "code": "AnnotatedFiles",
              "type": "codeVoice"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let annotatedFiles = try AnnotatedFiles(",
            "    labeledBySubdirectoryNamesAt: url,",
            "    type: .commaSeparatedText,",
            "    continueOnFailure: true",
            ")"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The recordings you produce may have differing time durations, resulting in a different number of rows for each CSV file you associate with it.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Configure the maximum number of samples that the framework classifies by using ",
              "type": "text"
            },
            {
              "code": "maximumSequenceLength",
              "type": "codeVoice"
            },
            {
              "text": ":",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "var configuration = TimeSeriesClassifierConfiguration()",
            "configuration.maximumSequenceLength = 120"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "The next step is to process each CSV file into an ",
              "type": "text"
            },
            {
              "code": "AnnotatedFeature",
              "type": "codeVoice"
            },
            {
              "text": " and process the features as an ",
              "type": "text"
            },
            {
              "code": "MLShapedArray",
              "type": "codeVoice"
            },
            {
              "text": " with a label as a String.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let featureColumns = [",
            "    \"accelerometerAccelerationX(G)\",",
            "    \"accelerometerAccelerationY(G)\",",
            "    \"accelerometerAccelerationZ(G)\",",
            "    \"motionRotationRateX(rad/s)\",",
            "    \"motionRotationRateY(rad/s)\",",
            "    \"motionRotationRateZ(rad/s)\"",
            "]",
            "",
            "let options = CSVReadingOptions(floatingPointType: .float)",
            "var result = [AnnotatedFeature<MLShapedArray<Float>, String>]()",
            "for file in annotatedFiles {",
            "    let df = try DataFrame(contentsOfCSVFile: file.feature, columns: featureColumns, options: options)",
            "    var arrays = [MLShapedArray<Float>]()",
            "    for featureColumn in featureColumns {",
            "        let featureValues = df[featureColumn, Float.self].filled(with: .nan)",
            "        let processedFeatureValues: MLShapedArray<Float>",
            "        if featureValues.count > configuration.maximumSequenceLength {",
            "            processedFeatureValues = MLShapedArray(",
            "                scalars: featureValues[..<configuration.maximumSequenceLength],",
            "                shape: [configuration.maximumSequenceLength, 1]",
            "            )",
            "        } else {",
            "            processedFeatureValues = MLShapedArray(scalars: featureValues, shape: [featureValues.count, 1])",
            "        }",
            "        arrays.append(processedFeatureValues)",
            "    }",
            "",
            "    let feature = MLShapedArray(concatenating: arrays, alongAxis: 1)",
            "    result.append(AnnotatedFeature(feature: feature, annotation: file.annotation))",
            "}",
            "",
            "// Shuffle the samples to introduce randomness.",
            "result.shuffle()"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Finally, divide the data into training, validation, and testing sets where 80 percent of the data goes into the training set, and 10 percent each for validation and testing.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let sampleCount = Double(result.count)",
            "let training = result[0 ..< Int(sampleCount * 0.8)]",
            "let validation = result[Int(sampleCount * 0.8) ..< Int(sampleCount * 0.9)]",
            "let testing = result[Int(sampleCount * 0.9)...]"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Build-and-train-a-time-series-classifier",
          "level": 3,
          "text": "Build and train a time-series classifier",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "After preparing your training data, configure your classifier model with the number of training iterations and class labels:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "configuration.maximumIterationCount = 5",
            "",
            "let estimator = TimeSeriesClassifier<Float, String>(",
            "    labels: [\"fastball\", \"breaking\", \"changeup\", \"other\"],",
            "    configuration: configuration",
            ")"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Train your classifier model and print the training and validation accuracy at every iteration to monitor the progress:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "swift",
            "let model = try await estimator.fitted(to: training, validateOn: validation) { event in",
            "    if let trainingAccuracy = event.metrics[MetricsKey.trainingAccuracy] as? Double {",
            "        print(\"Training accuracy: \\(trainingAccuracy)\")",
            "    }",
            "    if let validationAccuracy = event.metrics[MetricsKey.validationAccuracy] as? Double {",
            "        print(\"Validation accuracy: \\(validationAccuracy)\")",
            "    }",
            "}"
          ],
          "syntax": null,
          "type": "codeListing"
        },
        {
          "anchor": "Evaluate-the-model",
          "level": 3,
          "text": "Evaluate the model",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use your testing set to evaluate your model.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Classification provides an accuracy metric with a value between 0 and 1, where 0 represents the least accurate.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Look at how accurate it classified your labeled test data to determine whether to export the model.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let classificationDistributions = try await model.applied(to: testing.map(\\.feature))",
            "let predictedLabels = classificationDistributions.map(\\.mostLikelyLabel!)",
            "let metrics = ClassificationMetrics(predictedLabels, testing.map(\\.annotation))",
            "",
            "print(\"Accuracy: (metrics.accuracy)\")"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Export-the-model",
          "level": 3,
          "text": "Export the model",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "When you’re satisfied with the model’s accuracy, export it as a Core ML package:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "try model.export(to: URL(filePath: \"classifier.mlpackage\"))"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Deploy the model you export and use Core ML to perform predictions.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "When you use the model, create a single shaped array of features with the shape ",
              "type": "text"
            },
            {
              "code": "[sequenceLength, 1]",
              "type": "codeVoice"
            },
            {
              "text": ":.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "let mlmodel = try MLModel(contentsOf: modelURL)",
            "let featureValue = MLFeatureValue(shapedArray: features)",
            "let featureProvider = try MLDictionaryFeatureProvider(",
            "    dictionary: [",
            "        \"input\": featureValue,",
            "        \"sequenceLength\": MLFeatureValue(shapedArray: MLShapedArray(scalars: [Int32(sequenceLength)], shape: [1])),",
            "    ]",
            ")",
            "let modelOutput = try await model.prediction(from: featureProvider)",
            "let probabilities = modelOutput.featureValue(for: \"labelProbabilities\")!.dictionaryValue as! [String: NSNumber]",
            "let label = probabilities.max(by: { $0.value.doubleValue < $1.value.doubleValue })?.key"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents": {
      "abstract": [
        {
          "text": "Create more customizable machine learning models in your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents",
      "kind": "symbol",
      "role": "collection",
      "title": "Create ML Components",
      "type": "topic",
      "url": "/documentation/createmlcomponents"
    },
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/DateFeatureExtractor": {
      "abstract": [
        {
          "text": "A time and date feature extractor.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DateFeatureExtractor"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/DateFeatureExtractor",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DateFeatureExtractor"
        }
      ],
      "role": "symbol",
      "title": "DateFeatureExtractor",
      "type": "topic",
      "url": "/documentation/createmlcomponents/datefeatureextractor"
    },
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/DateFeatures": {
      "abstract": [
        {
          "text": "A set of date and time features.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DateFeatures"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/DateFeatures",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DateFeatures"
        }
      ],
      "role": "symbol",
      "title": "DateFeatures",
      "type": "topic",
      "url": "/documentation/createmlcomponents/datefeatures"
    },
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/Downsampler": {
      "abstract": [
        {
          "text": "A temporal transformer that down samples the input stream.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Downsampler"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/Downsampler",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Downsampler"
        }
      ],
      "role": "symbol",
      "title": "Downsampler",
      "type": "topic",
      "url": "/documentation/createmlcomponents/downsampler"
    },
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/LinearTimeSeriesForecaster": {
      "abstract": [
        {
          "text": "A time-series forecasting estimator.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LinearTimeSeriesForecaster"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/LinearTimeSeriesForecaster",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LinearTimeSeriesForecaster"
        }
      ],
      "role": "symbol",
      "title": "LinearTimeSeriesForecaster",
      "type": "topic",
      "url": "/documentation/createmlcomponents/lineartimeseriesforecaster"
    },
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/LinearTimeSeriesForecasterConfiguration": {
      "abstract": [
        {
          "text": "The configuration for a linear time-series forecaster.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LinearTimeSeriesForecasterConfiguration"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/LinearTimeSeriesForecasterConfiguration",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LinearTimeSeriesForecasterConfiguration"
        }
      ],
      "role": "symbol",
      "title": "LinearTimeSeriesForecasterConfiguration",
      "type": "topic",
      "url": "/documentation/createmlcomponents/lineartimeseriesforecasterconfiguration"
    },
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/SlidingWindowTransformer": {
      "abstract": [
        {
          "text": "A temporal transformer that groups input elements.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SlidingWindowTransformer"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/SlidingWindowTransformer",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SlidingWindowTransformer"
        }
      ],
      "role": "symbol",
      "title": "SlidingWindowTransformer",
      "type": "topic",
      "url": "/documentation/createmlcomponents/slidingwindowtransformer"
    },
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/SlidingWindows": {
      "abstract": [
        {
          "text": "A sequence of windows on a time series shaped array.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "SlidingWindows"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/SlidingWindows",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "SlidingWindows"
        }
      ],
      "role": "symbol",
      "title": "SlidingWindows",
      "type": "topic",
      "url": "/documentation/createmlcomponents/slidingwindows"
    },
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TemporalFeature": {
      "abstract": [
        {
          "text": "A temporal feature contains a segment identifier and a feature value.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TemporalFeature"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TemporalFeature",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TemporalFeature"
        }
      ],
      "role": "symbol",
      "title": "TemporalFeature",
      "type": "topic",
      "url": "/documentation/createmlcomponents/temporalfeature"
    },
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TemporalFileSegment": {
      "abstract": [
        {
          "text": "A URL and a time range identifying a specific segment of a time-based (temporal) file.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TemporalFileSegment"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TemporalFileSegment",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TemporalFileSegment"
        }
      ],
      "role": "symbol",
      "title": "TemporalFileSegment",
      "type": "topic",
      "url": "/documentation/createmlcomponents/temporalfilesegment"
    },
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TemporalSegmentIdentifier": {
      "abstract": [
        {
          "text": "Uniquely identifiers a segment of a temporal sequence.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TemporalSegmentIdentifier"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TemporalSegmentIdentifier",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TemporalSegmentIdentifier"
        }
      ],
      "role": "symbol",
      "title": "TemporalSegmentIdentifier",
      "type": "topic",
      "url": "/documentation/createmlcomponents/temporalsegmentidentifier"
    },
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TemporalSequence": {
      "abstract": [
        {
          "text": "Async sequence for temporal features.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TemporalSequence"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TemporalSequence",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TemporalSequence"
        }
      ],
      "role": "symbol",
      "title": "TemporalSequence",
      "type": "topic",
      "url": "/documentation/createmlcomponents/temporalsequence"
    },
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TimeSeriesForecasterAnnotatedWindows": {
      "abstract": [
        {
          "text": "A sequence of forecasting windows on a time series shaped array.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TimeSeriesForecasterAnnotatedWindows"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TimeSeriesForecasterAnnotatedWindows",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TimeSeriesForecasterAnnotatedWindows"
        }
      ],
      "role": "symbol",
      "title": "TimeSeriesForecasterAnnotatedWindows",
      "type": "topic",
      "url": "/documentation/createmlcomponents/timeseriesforecasterannotatedwindows"
    },
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TimeSeriesForecasterBatches": {
      "abstract": [
        {
          "text": "A sequence of forecaster batches on a time series shaped array.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TimeSeriesForecasterBatches"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TimeSeriesForecasterBatches",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "TimeSeriesForecasterBatches"
        }
      ],
      "role": "symbol",
      "title": "TimeSeriesForecasterBatches",
      "type": "topic",
      "url": "/documentation/createmlcomponents/timeseriesforecasterbatches"
    },
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/VideoReader": {
      "abstract": [
        {
          "text": "A video file reader.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "VideoReader"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/VideoReader",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "VideoReader"
        }
      ],
      "role": "symbol",
      "title": "VideoReader",
      "type": "topic",
      "url": "/documentation/createmlcomponents/videoreader"
    },
    "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/creating-a-time-series-forecaster": {
      "abstract": [
        {
          "text": "Forecast future data points by training a machine learning model using historical data.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/creating-a-time-series-forecaster",
      "kind": "article",
      "role": "article",
      "title": "Creating a time-series forecaster",
      "type": "topic",
      "url": "/documentation/createmlcomponents/creating-a-time-series-forecaster"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Time-based-components",
      "generated": true,
      "identifiers": [
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/creating-a-time-series-forecaster",
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/DateFeatures",
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/DateFeatureExtractor",
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/LinearTimeSeriesForecaster",
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/LinearTimeSeriesForecasterConfiguration",
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TimeSeriesForecasterBatches",
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TimeSeriesForecasterAnnotatedWindows",
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TemporalFeature",
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TemporalSequence",
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TemporalSegmentIdentifier",
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/SlidingWindows",
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/SlidingWindowTransformer",
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/Downsampler",
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/VideoReader",
        "doc://com.apple.CreateMLComponents/documentation/CreateMLComponents/TemporalFileSegment"
      ],
      "title": "Time-based components"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/createmlcomponents/creating-a-time-series-classifier"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}
