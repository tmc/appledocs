{
  "abstract": [
    {
      "text": "Registers a service.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.dnssd/documentation/dnssd"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRegister(_:_:_:_:_:_:_:_:_:_:_:_:)"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:@F@DNSServiceRegister",
    "fragments": [
      {
        "kind": "keyword",
        "text": "func"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "DNSServiceRegister"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sp",
        "text": "UnsafeMutablePointer"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "c:@T@DNSServiceRef",
        "text": "DNSServiceRef"
      },
      {
        "kind": "text",
        "text": "?>!, "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "c:@T@DNSServiceFlags",
        "text": "DNSServiceFlags"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s6UInt32V",
        "text": "UInt32"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:SP",
        "text": "UnsafePointer"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s5CChara",
        "text": "CChar"
      },
      {
        "kind": "text",
        "text": ">!, "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:SP",
        "text": "UnsafePointer"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s5CChara",
        "text": "CChar"
      },
      {
        "kind": "text",
        "text": ">!, "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:SP",
        "text": "UnsafePointer"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s5CChara",
        "text": "CChar"
      },
      {
        "kind": "text",
        "text": ">!, "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:SP",
        "text": "UnsafePointer"
      },
      {
        "kind": "text",
        "text": "<"
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s5CChara",
        "text": "CChar"
      },
      {
        "kind": "text",
        "text": ">!, "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s6UInt16V",
        "text": "UInt16"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:s6UInt16V",
        "text": "UInt16"
      },
      {
        "kind": "text",
        "text": ", "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:SV",
        "text": "UnsafeRawPointer"
      },
      {
        "kind": "text",
        "text": "!, "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "c:@T@DNSServiceRegisterReply",
        "text": "DNSServiceRegisterReply"
      },
      {
        "kind": "text",
        "text": "!, "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "s:Sv",
        "text": "UnsafeMutableRawPointer"
      },
      {
        "kind": "text",
        "text": "!) -> "
      },
      {
        "kind": "typeIdentifier",
        "preciseIdentifier": "c:@T@DNSServiceErrorType",
        "text": "DNSServiceErrorType"
      }
    ],
    "modules": [
      {
        "name": "dnssd"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "DNSServiceRegister"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "iOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "iPadOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "13.0",
        "name": "Mac Catalyst",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.12",
        "name": "macOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "10.0",
        "name": "tvOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      },
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "3.0",
        "name": "watchOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Function",
    "symbolKind": "func",
    "title": "DNSServiceRegister(_:_:_:_:_:_:_:_:_:_:_:_:)"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "Mac Catalyst",
            "macOS",
            "tvOS",
            "visionOS",
            "watchOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "DNSServiceRegister"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "sdRef"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sp",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sp",
              "text": "UnsafeMutablePointer"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRef",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@DNSServiceRef",
              "text": "DNSServiceRef"
            },
            {
              "kind": "text",
              "text": "?>!, "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "flags"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceFlags",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@DNSServiceFlags",
              "text": "DNSServiceFlags"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "interfaceIndex"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s6UInt32V",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s6UInt32V",
              "text": "UInt32"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "name"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:SP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SP",
              "text": "UnsafePointer"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s5CChara",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s5CChara",
              "text": "CChar"
            },
            {
              "kind": "text",
              "text": ">!, "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "regtype"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:SP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SP",
              "text": "UnsafePointer"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s5CChara",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s5CChara",
              "text": "CChar"
            },
            {
              "kind": "text",
              "text": ">!, "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "domain"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:SP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SP",
              "text": "UnsafePointer"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s5CChara",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s5CChara",
              "text": "CChar"
            },
            {
              "kind": "text",
              "text": ">!, "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "host"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:SP",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SP",
              "text": "UnsafePointer"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s5CChara",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s5CChara",
              "text": "CChar"
            },
            {
              "kind": "text",
              "text": ">!, "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "port"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s6UInt16V",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s6UInt16V",
              "text": "UInt16"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "txtLen"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:s6UInt16V",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s6UInt16V",
              "text": "UInt16"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "txtRecord"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:SV",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SV",
              "text": "UnsafeRawPointer"
            },
            {
              "kind": "text",
              "text": "!, "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "callBack"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRegisterReply",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@DNSServiceRegisterReply",
              "text": "DNSServiceRegisterReply"
            },
            {
              "kind": "text",
              "text": "!, "
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "context"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/s:Sv",
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sv",
              "text": "UnsafeMutableRawPointer"
            },
            {
              "kind": "text",
              "text": "!) -> "
            },
            {
              "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceErrorType",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@DNSServiceErrorType",
              "text": "DNSServiceErrorType"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "A pointer to an uninitialized DNSServiceRef. If the call succeeds then it initializes the DNSServiceRef, returns ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.dnssd/documentation/dnssd/kDNSServiceErr_NoError",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ", and the registration will remain active indefinitely until the client terminates it by passing this DNSServiceRef to ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRefDeallocate(_:)",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "sdRef"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "Indicates the renaming behavior on name conflict (most applications will pass 0). See flag definitions above for details.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "flags"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "If non-zero, specifies the interface on which to register the service (the index for a given interface is determined via the ",
                  "type": "text"
                },
                {
                  "code": "if_nametoindex()",
                  "type": "codeVoice"
                },
                {
                  "text": " family of calls.) Most applications will pass 0 to register on all available interfaces. See “Constants for specifying an interface index” for more details.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "interfaceIndex"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "If non-NULL, specifies the service name to be registered. Most applications will not specify a name, in which case the computer name is used (this name is communicated to the client via the callback). If a name is specified, it must be 1-63 bytes of UTF-8 text. If the name is longer than 63 bytes it will be automatically truncated to a legal length, unless the ",
                  "type": "text"
                },
                {
                  "code": "NoAutoRename",
                  "type": "codeVoice"
                },
                {
                  "text": " flag is set, in which case ",
                  "type": "text"
                },
                {
                  "code": "kDNSServiceErr_BadParam",
                  "type": "codeVoice"
                },
                {
                  "text": " will be returned.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "name"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The service type followed by the protocol, separated by a dot (for example, “_ftp._tcp”). The service type must be an underscore, followed by 1-15 characters, which may be letters, digits, or hyphens. The transport protocol must be “_tcp” or “_udp”. New service types should be registered at ",
                  "type": "text"
                },
                {
                  "identifier": "http://www.dns-sd.org/ServiceTypes.html",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            },
            {
              "inlineContent": [
                {
                  "text": "Additional subtypes of the primary service type (where a service type has defined subtypes) follow the primary service type in a comma-separated list, with no additional spaces. For example, “_primarytype._tcp,_subtype1,_subtype2,_subtype3” . Subtypes provide a mechanism for filtered browsing: A client browsing for “_primarytype._tcp” will discover all instances of this type; a client browsing for “_primarytype._tcp,_subtype2” will discover only those instances that were registered with “_subtype2” in their list of registered subtypes.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            },
            {
              "inlineContent": [
                {
                  "text": "The subtype mechanism can be illustrated with some examples using the dns-sd command-line tool:",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            },
            {
              "inlineContent": [
                {
                  "text": "% dns-sd -R Simple _test._tcp “” 1001 & % dns-sd -R Better _test._tcp,HasFeatureA “” 1002 & % dns-sd -R Best _test._tcp,HasFeatureA,HasFeatureB “” 1003 &",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            },
            {
              "inlineContent": [
                {
                  "text": "Now: ",
                  "type": "text"
                },
                {
                  "code": "% dns-sd -B _test._tcp #",
                  "type": "codeVoice"
                },
                {
                  "text": " will find all three services, ",
                  "type": "text"
                },
                {
                  "code": "% dns-sd -B _test._tcp,HasFeatureA #",
                  "type": "codeVoice"
                },
                {
                  "text": " finds “Better” and “Best”, and ",
                  "type": "text"
                },
                {
                  "code": "% dns-sd -B _test._tcp,HasFeatureB #",
                  "type": "codeVoice"
                },
                {
                  "text": " finds only “Best”",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            },
            {
              "inlineContent": [
                {
                  "text": "Subtype labels may be up to 63 bytes long, and may contain any eight- bit byte values, including zero bytes. However, due to the nature of using a C-string-based API, conventional DNS escaping must be used for dots (’.’), commas (’,’), backslashes (’’) and zero bytes, as shown below:",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            },
            {
              "inlineContent": [
                {
                  "code": "% dns-sd -R Test '_test._tcp,s.one,s,two,s\\three,s000four' local 123",
                  "type": "codeVoice"
                }
              ],
              "type": "paragraph"
            },
            {
              "inlineContent": [
                {
                  "text": "When a service is registered, all the clients browsing for the registered type (“regtype”) will discover it. If the discovery should be restricted to a smaller set of well known peers, the service can be registered with additional data (group identifier) that is known only to a smaller set of peers. The group identifier should follow primary service type using a colon (”:”) as a delimiter. If subtypes are also present, it should be given before the subtype as shown below.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            },
            {
              "inlineContent": [
                {
                  "code": "% dns-sd -R _test1 _http._tcp:mygroup1 local 1001 % dns-sd -R _test2 _http._tcp:mygroup2 local 1001 % dns-sd -R _test3 _http._tcp:mygroup3,HasFeatureA local 1001",
                  "type": "codeVoice"
                }
              ],
              "type": "paragraph"
            },
            {
              "inlineContent": [
                {
                  "text": "Now: ",
                  "type": "text"
                },
                {
                  "code": "% dns-sd -B _http._tcp:\"mygroup1\" #",
                  "type": "codeVoice"
                },
                {
                  "text": " will discover only test1, ",
                  "type": "text"
                },
                {
                  "code": "% dns-sd -B _http._tcp:\"mygroup2\" #",
                  "type": "codeVoice"
                },
                {
                  "text": " will discover only test2 %, and ",
                  "type": "text"
                },
                {
                  "code": "dns-sd -B _http._tcp:\"mygroup3\",HasFeatureA #",
                  "type": "codeVoice"
                },
                {
                  "text": " will discover only test3.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            },
            {
              "inlineContent": [
                {
                  "text": "By specifying the group information, only the members of that group are discovered.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            },
            {
              "inlineContent": [
                {
                  "text": "The group identifier itself is not sent in clear. Only a hash of the group identifier is sent and the clients discover them anonymously. The group identifier may be up to 256 bytes long and may contain any eight bit values except comma which should be escaped.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "regtype"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "If non-NULL, specifies the domain on which to advertise the service. Most applications will not specify a domain, instead automatically registering in the default domain(s).",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "domain"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "If non-NULL, specifies the SRV target host name. Most applications will not specify a host, instead automatically using the machine’s default host name(s). Note that specifying a non-NULL host does NOT create an address record for that host - the application is responsible for ensuring that the appropriate address record exists, or creating it via ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRegisterRecord(_:_:_:_:_:_:_:_:_:_:_:_:)",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "host"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The port, in network byte order, on which the service accepts connections. Pass 0 for a “placeholder” service (that is, a service that will not be discovered by browsing, but will cause a name conflict if another client tries to register that same name). Most clients will not use placeholder services.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "port"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The length of the ",
                  "type": "text"
                },
                {
                  "code": "txtRecord",
                  "type": "codeVoice"
                },
                {
                  "text": ", in bytes. Must be zero if the ",
                  "type": "text"
                },
                {
                  "code": "txtRecord",
                  "type": "codeVoice"
                },
                {
                  "text": " is NULL.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "txtLen"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The TXT record ",
                  "type": "text"
                },
                {
                  "code": "rdata",
                  "type": "codeVoice"
                },
                {
                  "text": ". A non-NULL ",
                  "type": "text"
                },
                {
                  "code": "txtRecord",
                  "type": "codeVoice"
                },
                {
                  "text": " MUST be a properly formatted DNS TXT record—that is, <length byte> <data> <length byte> <data> … Passing ",
                  "type": "text"
                },
                {
                  "code": "NULL",
                  "type": "codeVoice"
                },
                {
                  "text": " for the ",
                  "type": "text"
                },
                {
                  "code": "txtRecord",
                  "type": "codeVoice"
                },
                {
                  "text": " is allowed as a synonym for ",
                  "type": "text"
                },
                {
                  "code": "txtLen=1, txtRecord=\"\"",
                  "type": "codeVoice"
                },
                {
                  "text": "—it creates a TXT record of length one containing a single empty string. RFC 1035 doesn’t allow a TXT record to contain *zero* strings, so a single empty string is the smallest legal DNS TXT record. As with the other parameters, the DNSServiceRegister call copies the txtRecord data; for example, if you allocated the storage for the ",
                  "type": "text"
                },
                {
                  "code": "txtRecord",
                  "type": "codeVoice"
                },
                {
                  "text": " parameter with ",
                  "type": "text"
                },
                {
                  "code": "malloc()",
                  "type": "codeVoice"
                },
                {
                  "text": " then you can safely free that memory right after the DNSServiceRegister call returns.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "txtRecord"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The function to be called when the registration completes or asynchronously fails. The client may pass ",
                  "type": "text"
                },
                {
                  "code": "NULL",
                  "type": "codeVoice"
                },
                {
                  "text": " for the callback;  the client will not be notified of the default values picked on its behalf, and the client will not be notified of any asynchronous errors (for example, out of memory errors, and so forth) that may prevent the registration of the service. The client may not pass the ",
                  "type": "text"
                },
                {
                  "code": "NoAutoRename",
                  "type": "codeVoice"
                },
                {
                  "text": " flag if the callback is ",
                  "type": "text"
                },
                {
                  "code": "NULL",
                  "type": "codeVoice"
                },
                {
                  "text": ". The client may still deregister the service at any time via ",
                  "type": "text"
                },
                {
                  "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRefDeallocate(_:)",
                  "isActive": true,
                  "type": "reference"
                },
                {
                  "text": ".",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "callBack"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "An application context pointer that is passed to the callback function (may be ",
                  "type": "text"
                },
                {
                  "code": "NULL",
                  "type": "codeVoice"
                },
                {
                  "text": ").",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "context"
        }
      ]
    },
    {
      "content": [
        {
          "anchor": "return-value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Returns ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.dnssd/documentation/dnssd/kDNSServiceErr_NoError",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " on success (any subsequent, asynchronous errors are delivered to the callback), otherwise returns an error code indicating the error that occurred (the callback is never invoked and the DNSServiceRef is not initialized).",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.dnssd/documentation/dnssd": {
      "abstract": [
        {
          "text": "Discover, publish, and resolve network services on a local area or wide area network.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.dnssd/documentation/dnssd",
      "kind": "symbol",
      "role": "collection",
      "title": "dnssd",
      "type": "topic",
      "url": "/documentation/dnssd"
    },
    "doc://com.apple.dnssd/documentation/dnssd/DNSServiceAddRecord(_:_:_:_:_:_:_:)": {
      "abstract": [
        {
          "text": "Adds a record to a registered service.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DNSServiceAddRecord"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceRef",
          "text": "DNSServiceRef"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sp",
          "text": "UnsafeMutablePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSRecordRef",
          "text": "DNSRecordRef"
        },
        {
          "kind": "text",
          "text": "?>!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceFlags",
          "text": "DNSServiceFlags"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt16V",
          "text": "UInt16"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt16V",
          "text": "UInt16"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SV",
          "text": "UnsafeRawPointer"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt32V",
          "text": "UInt32"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceErrorType",
          "text": "DNSServiceErrorType"
        }
      ],
      "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceAddRecord(_:_:_:_:_:_:_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DNSServiceAddRecord"
        }
      ],
      "role": "symbol",
      "title": "DNSServiceAddRecord(_:_:_:_:_:_:_:)",
      "type": "topic",
      "url": "/documentation/dnssd/dnsserviceaddrecord(_:_:_:_:_:_:_:)"
    },
    "doc://com.apple.dnssd/documentation/dnssd/DNSServiceErrorType": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DNSServiceErrorType"
        }
      ],
      "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceErrorType",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DNSServiceErrorType"
        }
      ],
      "role": "symbol",
      "title": "DNSServiceErrorType",
      "type": "topic",
      "url": "/documentation/dnssd/dnsserviceerrortype"
    },
    "doc://com.apple.dnssd/documentation/dnssd/DNSServiceFlags": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DNSServiceFlags"
        }
      ],
      "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceFlags",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DNSServiceFlags"
        }
      ],
      "role": "symbol",
      "title": "DNSServiceFlags",
      "type": "topic",
      "url": "/documentation/dnssd/dnsserviceflags"
    },
    "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRef": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DNSServiceRef"
        }
      ],
      "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRef",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DNSServiceRef"
        }
      ],
      "role": "symbol",
      "title": "DNSServiceRef",
      "type": "topic",
      "url": "/documentation/dnssd/dnsserviceref"
    },
    "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRefDeallocate(_:)": {
      "abstract": [
        {
          "text": "Terminates a connection with the daemon and frees memory associated with the DNSServiceRef.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DNSServiceRefDeallocate"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceRef",
          "text": "DNSServiceRef"
        },
        {
          "kind": "text",
          "text": "!)"
        }
      ],
      "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRefDeallocate(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DNSServiceRefDeallocate"
        }
      ],
      "role": "symbol",
      "title": "DNSServiceRefDeallocate(_:)",
      "type": "topic",
      "url": "/documentation/dnssd/dnsservicerefdeallocate(_:)"
    },
    "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRegister(_:_:_:_:_:_:_:_:_:_:_:_:)": {
      "abstract": [
        {
          "text": "Registers a service.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DNSServiceRegister"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sp",
          "text": "UnsafeMutablePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceRef",
          "text": "DNSServiceRef"
        },
        {
          "kind": "text",
          "text": "?>!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceFlags",
          "text": "DNSServiceFlags"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt32V",
          "text": "UInt32"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ">!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ">!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ">!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ">!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt16V",
          "text": "UInt16"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt16V",
          "text": "UInt16"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SV",
          "text": "UnsafeRawPointer"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceRegisterReply",
          "text": "DNSServiceRegisterReply"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sv",
          "text": "UnsafeMutableRawPointer"
        },
        {
          "kind": "text",
          "text": "!) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceErrorType",
          "text": "DNSServiceErrorType"
        }
      ],
      "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRegister(_:_:_:_:_:_:_:_:_:_:_:_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DNSServiceRegister"
        }
      ],
      "role": "symbol",
      "title": "DNSServiceRegister(_:_:_:_:_:_:_:_:_:_:_:_:)",
      "type": "topic",
      "url": "/documentation/dnssd/dnsserviceregister(_:_:_:_:_:_:_:_:_:_:_:_:)"
    },
    "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRegisterRecord(_:_:_:_:_:_:_:_:_:_:_:_:)": {
      "abstract": [
        {
          "text": "Registers an individual resource record on a connected DNSServiceRef.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DNSServiceRegisterRecord"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceRef",
          "text": "DNSServiceRef"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sp",
          "text": "UnsafeMutablePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSRecordRef",
          "text": "DNSRecordRef"
        },
        {
          "kind": "text",
          "text": "?>!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceFlags",
          "text": "DNSServiceFlags"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt32V",
          "text": "UInt32"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SP",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5CChara",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": ">!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt16V",
          "text": "UInt16"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt16V",
          "text": "UInt16"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt16V",
          "text": "UInt16"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SV",
          "text": "UnsafeRawPointer"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt32V",
          "text": "UInt32"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceRegisterRecordReply",
          "text": "DNSServiceRegisterRecordReply"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sv",
          "text": "UnsafeMutableRawPointer"
        },
        {
          "kind": "text",
          "text": "!) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceErrorType",
          "text": "DNSServiceErrorType"
        }
      ],
      "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRegisterRecord(_:_:_:_:_:_:_:_:_:_:_:_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DNSServiceRegisterRecord"
        }
      ],
      "role": "symbol",
      "title": "DNSServiceRegisterRecord(_:_:_:_:_:_:_:_:_:_:_:_:)",
      "type": "topic",
      "url": "/documentation/dnssd/dnsserviceregisterrecord(_:_:_:_:_:_:_:_:_:_:_:_:)"
    },
    "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRegisterReply": {
      "abstract": [
        {
          "text": "Handler for the results from a previous call to ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRegister(_:_:_:_:_:_:_:_:_:_:_:_:)",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DNSServiceRegisterReply"
        }
      ],
      "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRegisterReply",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DNSServiceRegisterReply"
        }
      ],
      "role": "symbol",
      "title": "DNSServiceRegisterReply",
      "type": "topic",
      "url": "/documentation/dnssd/dnsserviceregisterreply"
    },
    "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRemoveRecord(_:_:_:)": {
      "abstract": [
        {
          "text": "Removes a record previously added to a service record set via ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceAddRecord(_:_:_:_:_:_:_:)",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ", or deregister an record registered individually via ",
          "type": "text"
        },
        {
          "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRegisterRecord(_:_:_:_:_:_:_:_:_:_:_:_:)",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DNSServiceRemoveRecord"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceRef",
          "text": "DNSServiceRef"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSRecordRef",
          "text": "DNSRecordRef"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceFlags",
          "text": "DNSServiceFlags"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceErrorType",
          "text": "DNSServiceErrorType"
        }
      ],
      "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRemoveRecord(_:_:_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DNSServiceRemoveRecord"
        }
      ],
      "role": "symbol",
      "title": "DNSServiceRemoveRecord(_:_:_:)",
      "type": "topic",
      "url": "/documentation/dnssd/dnsserviceremoverecord(_:_:_:)"
    },
    "doc://com.apple.dnssd/documentation/dnssd/DNSServiceUpdateRecord(_:_:_:_:_:_:)": {
      "abstract": [
        {
          "text": "Updates a registered resource record.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "DNSServiceUpdateRecord"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceRef",
          "text": "DNSServiceRef"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSRecordRef",
          "text": "DNSRecordRef"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceFlags",
          "text": "DNSServiceFlags"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt16V",
          "text": "UInt16"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SV",
          "text": "UnsafeRawPointer"
        },
        {
          "kind": "text",
          "text": "!, "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s6UInt32V",
          "text": "UInt32"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@DNSServiceErrorType",
          "text": "DNSServiceErrorType"
        }
      ],
      "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceUpdateRecord(_:_:_:_:_:_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "DNSServiceUpdateRecord"
        }
      ],
      "role": "symbol",
      "title": "DNSServiceUpdateRecord(_:_:_:_:_:_:)",
      "type": "topic",
      "url": "/documentation/dnssd/dnsserviceupdaterecord(_:_:_:_:_:_:)"
    },
    "doc://com.apple.dnssd/documentation/dnssd/kDNSServiceErr_NoError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "kDNSServiceErr_NoError"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Si",
          "text": "Int"
        }
      ],
      "identifier": "doc://com.apple.dnssd/documentation/dnssd/kDNSServiceErr_NoError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "kDNSServiceErr_NoError"
        }
      ],
      "role": "symbol",
      "title": "kDNSServiceErr_NoError",
      "type": "topic",
      "url": "/documentation/dnssd/kdnsserviceerr_noerror"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/s:SP": {
      "abstract": [
        {
          "text": "A pointer for accessing data of a specific type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Pointee"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Pointee"
        },
        {
          "kind": "text",
          "text": " : ~Copyable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SP",
      "kind": "symbol",
      "role": "symbol",
      "title": "UnsafePointer",
      "type": "topic",
      "url": "/documentation/Swift/UnsafePointer"
    },
    "doc://com.externally.resolved.symbol/s:SV": {
      "abstract": [
        {
          "text": "A raw pointer for accessing untyped data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeRawPointer"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:SV",
      "kind": "symbol",
      "role": "symbol",
      "title": "UnsafeRawPointer",
      "type": "topic",
      "url": "/documentation/Swift/UnsafeRawPointer"
    },
    "doc://com.externally.resolved.symbol/s:Sp": {
      "abstract": [
        {
          "text": "A pointer for accessing and manipulating data of a specific type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeMutablePointer"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "Pointee"
        },
        {
          "kind": "text",
          "text": "> "
        },
        {
          "kind": "keyword",
          "text": "where"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "text": "Pointee"
        },
        {
          "kind": "text",
          "text": " : ~Copyable"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Sp",
      "kind": "symbol",
      "role": "symbol",
      "title": "UnsafeMutablePointer",
      "type": "topic",
      "url": "/documentation/Swift/UnsafeMutablePointer"
    },
    "doc://com.externally.resolved.symbol/s:Sv": {
      "abstract": [
        {
          "text": "A raw pointer for accessing and manipulating untyped data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UnsafeMutableRawPointer"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:Sv",
      "kind": "symbol",
      "role": "symbol",
      "title": "UnsafeMutableRawPointer",
      "type": "topic",
      "url": "/documentation/Swift/UnsafeMutableRawPointer"
    },
    "doc://com.externally.resolved.symbol/s:s5CChara": {
      "abstract": [
        {
          "text": "The C ‘char’ type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CChar"
        },
        {
          "kind": "text",
          "text": " = "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s4Int8V",
          "text": "Int8"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s5CChara",
      "kind": "symbol",
      "role": "symbol",
      "title": "CChar",
      "type": "topic",
      "url": "/documentation/Swift/CChar"
    },
    "doc://com.externally.resolved.symbol/s:s6UInt16V": {
      "abstract": [
        {
          "text": "A 16-bit unsigned integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt16"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s6UInt16V",
      "kind": "symbol",
      "role": "symbol",
      "title": "UInt16",
      "type": "topic",
      "url": "/documentation/Swift/UInt16"
    },
    "doc://com.externally.resolved.symbol/s:s6UInt32V": {
      "abstract": [
        {
          "text": "A 32-bit unsigned integer value type.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "attribute",
          "text": "@frozen"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "UInt32"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/s:s6UInt32V",
      "kind": "symbol",
      "role": "symbol",
      "title": "UInt32",
      "type": "topic",
      "url": "/documentation/Swift/UInt32"
    },
    "http://www.dns-sd.org/ServiceTypes.html": {
      "identifier": "http://www.dns-sd.org/ServiceTypes.html",
      "title": "http://www.dns-sd.org/ServiceTypes.html",
      "titleInlineContent": [
        {
          "text": "http://www.dns-sd.org/ServiceTypes.html",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "http://www.dns-sd.org/ServiceTypes.html"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Service-Registration",
      "generated": true,
      "identifiers": [
        "doc://com.apple.dnssd/documentation/dnssd/DNSServiceAddRecord(_:_:_:_:_:_:_:)",
        "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRemoveRecord(_:_:_:)",
        "doc://com.apple.dnssd/documentation/dnssd/DNSServiceUpdateRecord(_:_:_:_:_:_:)"
      ],
      "title": "Service Registration"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "replace",
          "path": "/metadata/platforms",
          "value": [
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.0",
              "name": "iOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.0",
              "name": "iPadOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "13.0",
              "name": "Mac Catalyst",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.12",
              "name": "macOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "10.0",
              "name": "tvOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "1.0",
              "name": "visionOS",
              "unavailable": false
            },
            {
              "beta": false,
              "deprecated": false,
              "introducedAt": "3.0",
              "name": "watchOS",
              "unavailable": false
            }
          ]
        },
        {
          "op": "replace",
          "path": "/metadata/roleHeading",
          "value": "Function"
        },
        {
          "op": "replace",
          "path": "/metadata/title",
          "value": "DNSServiceRegister"
        },
        {
          "op": "replace",
          "path": "/metadata/symbolKind",
          "value": "func"
        },
        {
          "op": "replace",
          "path": "/metadata/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "DNSServiceRegister"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/hierarchy",
          "value": {
            "paths": [
              [
                "doc://com.apple.documentation/documentation/technologies",
                "doc://com.apple.dnssd/documentation/dnssd"
              ]
            ]
          }
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "add",
          "path": "/relationshipsSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Service-Registration",
              "generated": true,
              "identifiers": [
                "doc://com.apple.dnssd/documentation/dnssd/DNSServiceAddRecord(_:_:_:_:_:_:_:)",
                "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRemoveRecord(_:_:_:)",
                "doc://com.apple.dnssd/documentation/dnssd/DNSServiceUpdateRecord(_:_:_:_:_:_:)"
              ],
              "title": "Service Registration"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/0",
          "value": {
            "declarations": [
              {
                "languages": [
                  "occ"
                ],
                "platforms": [
                  "iOS",
                  "iPadOS",
                  "Mac Catalyst",
                  "macOS",
                  "tvOS",
                  "visionOS",
                  "watchOS"
                ],
                "tokens": [
                  {
                    "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceErrorType",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:@T@DNSServiceErrorType",
                    "text": "DNSServiceErrorType"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "identifier",
                    "text": "DNSServiceRegister"
                  },
                  {
                    "kind": "text",
                    "text": "("
                  },
                  {
                    "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRef",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:@T@DNSServiceRef",
                    "text": "DNSServiceRef"
                  },
                  {
                    "kind": "text",
                    "text": " * "
                  },
                  {
                    "kind": "internalParam",
                    "text": "sdRef"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceFlags",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:@T@DNSServiceFlags",
                    "text": "DNSServiceFlags"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "internalParam",
                    "text": "flags"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:@T@uint32_t",
                    "text": "uint32_t"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "internalParam",
                    "text": "interfaceIndex"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "keyword",
                    "text": "const"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:C",
                    "text": "char"
                  },
                  {
                    "kind": "text",
                    "text": " * "
                  },
                  {
                    "kind": "internalParam",
                    "text": "name"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "keyword",
                    "text": "const"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:C",
                    "text": "char"
                  },
                  {
                    "kind": "text",
                    "text": " * "
                  },
                  {
                    "kind": "internalParam",
                    "text": "regtype"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "keyword",
                    "text": "const"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:C",
                    "text": "char"
                  },
                  {
                    "kind": "text",
                    "text": " * "
                  },
                  {
                    "kind": "internalParam",
                    "text": "domain"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "keyword",
                    "text": "const"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:C",
                    "text": "char"
                  },
                  {
                    "kind": "text",
                    "text": " * "
                  },
                  {
                    "kind": "internalParam",
                    "text": "host"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:@T@uint16_t",
                    "text": "uint16_t"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "internalParam",
                    "text": "port"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:@T@uint16_t",
                    "text": "uint16_t"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "internalParam",
                    "text": "txtLen"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "keyword",
                    "text": "const"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:v",
                    "text": "void"
                  },
                  {
                    "kind": "text",
                    "text": " * "
                  },
                  {
                    "kind": "internalParam",
                    "text": "txtRecord"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRegisterReply",
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:@T@DNSServiceRegisterReply",
                    "text": "DNSServiceRegisterReply"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "internalParam",
                    "text": "callBack"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "typeIdentifier",
                    "preciseIdentifier": "c:v",
                    "text": "void"
                  },
                  {
                    "kind": "text",
                    "text": " * "
                  },
                  {
                    "kind": "internalParam",
                    "text": "context"
                  },
                  {
                    "kind": "text",
                    "text": ");"
                  }
                ]
              }
            ],
            "kind": "declarations"
          }
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/1",
          "value": {
            "kind": "parameters",
            "parameters": [
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "A pointer to an uninitialized DNSServiceRef. If the call succeeds then it initializes the DNSServiceRef, returns ",
                        "type": "text"
                      },
                      {
                        "identifier": "doc://com.apple.dnssd/documentation/dnssd/kDNSServiceErr_NoError",
                        "isActive": true,
                        "type": "reference"
                      },
                      {
                        "text": ", and the registration will remain active indefinitely until the client terminates it by passing this DNSServiceRef to ",
                        "type": "text"
                      },
                      {
                        "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRefDeallocate(_:)",
                        "isActive": true,
                        "type": "reference"
                      },
                      {
                        "text": ".",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "sdRef"
              },
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "Indicates the renaming behavior on name conflict (most applications will pass 0). See flag definitions above for details.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "flags"
              },
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "If non-zero, specifies the interface on which to register the service (the index for a given interface is determined via the ",
                        "type": "text"
                      },
                      {
                        "code": "if_nametoindex()",
                        "type": "codeVoice"
                      },
                      {
                        "text": " family of calls.) Most applications will pass 0 to register on all available interfaces. See “Constants for specifying an interface index” for more details.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "interfaceIndex"
              },
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "If non-NULL, specifies the service name to be registered. Most applications will not specify a name, in which case the computer name is used (this name is communicated to the client via the callback). If a name is specified, it must be 1-63 bytes of UTF-8 text. If the name is longer than 63 bytes it will be automatically truncated to a legal length, unless the ",
                        "type": "text"
                      },
                      {
                        "code": "NoAutoRename",
                        "type": "codeVoice"
                      },
                      {
                        "text": " flag is set, in which case ",
                        "type": "text"
                      },
                      {
                        "code": "kDNSServiceErr_BadParam",
                        "type": "codeVoice"
                      },
                      {
                        "text": " will be returned.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "name"
              },
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "The service type followed by the protocol, separated by a dot (for example, “_ftp._tcp”). The service type must be an underscore, followed by 1-15 characters, which may be letters, digits, or hyphens. The transport protocol must be “_tcp” or “_udp”. New service types should be registered at ",
                        "type": "text"
                      },
                      {
                        "identifier": "http://www.dns-sd.org/ServiceTypes.html",
                        "isActive": true,
                        "type": "reference"
                      },
                      {
                        "text": ".",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  },
                  {
                    "inlineContent": [
                      {
                        "text": "Additional subtypes of the primary service type (where a service type has defined subtypes) follow the primary service type in a comma-separated list, with no additional spaces. For example, “_primarytype._tcp,_subtype1,_subtype2,_subtype3” . Subtypes provide a mechanism for filtered browsing: A client browsing for “_primarytype._tcp” will discover all instances of this type; a client browsing for “_primarytype._tcp,_subtype2” will discover only those instances that were registered with “_subtype2” in their list of registered subtypes.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  },
                  {
                    "inlineContent": [
                      {
                        "text": "The subtype mechanism can be illustrated with some examples using the dns-sd command-line tool:",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  },
                  {
                    "inlineContent": [
                      {
                        "text": "% dns-sd -R Simple _test._tcp “” 1001 & % dns-sd -R Better _test._tcp,HasFeatureA “” 1002 & % dns-sd -R Best _test._tcp,HasFeatureA,HasFeatureB “” 1003 &",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  },
                  {
                    "inlineContent": [
                      {
                        "text": "Now: ",
                        "type": "text"
                      },
                      {
                        "code": "% dns-sd -B _test._tcp #",
                        "type": "codeVoice"
                      },
                      {
                        "text": " will find all three services, ",
                        "type": "text"
                      },
                      {
                        "code": "% dns-sd -B _test._tcp,HasFeatureA #",
                        "type": "codeVoice"
                      },
                      {
                        "text": " finds “Better” and “Best”, and ",
                        "type": "text"
                      },
                      {
                        "code": "% dns-sd -B _test._tcp,HasFeatureB #",
                        "type": "codeVoice"
                      },
                      {
                        "text": " finds only “Best”",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  },
                  {
                    "inlineContent": [
                      {
                        "text": "Subtype labels may be up to 63 bytes long, and may contain any eight- bit byte values, including zero bytes. However, due to the nature of using a C-string-based API, conventional DNS escaping must be used for dots (’.’), commas (’,’), backslashes (’’) and zero bytes, as shown below:",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  },
                  {
                    "inlineContent": [
                      {
                        "code": "% dns-sd -R Test '_test._tcp,s.one,s,two,s\\three,s000four' local 123",
                        "type": "codeVoice"
                      }
                    ],
                    "type": "paragraph"
                  },
                  {
                    "inlineContent": [
                      {
                        "text": "When a service is registered, all the clients browsing for the registered type (“regtype”) will discover it. If the discovery should be restricted to a smaller set of well known peers, the service can be registered with additional data (group identifier) that is known only to a smaller set of peers. The group identifier should follow primary service type using a colon (”:”) as a delimiter. If subtypes are also present, it should be given before the subtype as shown below.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  },
                  {
                    "inlineContent": [
                      {
                        "code": "% dns-sd -R _test1 _http._tcp:mygroup1 local 1001 % dns-sd -R _test2 _http._tcp:mygroup2 local 1001 % dns-sd -R _test3 _http._tcp:mygroup3,HasFeatureA local 1001",
                        "type": "codeVoice"
                      }
                    ],
                    "type": "paragraph"
                  },
                  {
                    "inlineContent": [
                      {
                        "text": "Now: ",
                        "type": "text"
                      },
                      {
                        "code": "% dns-sd -B _http._tcp:\"mygroup1\" #",
                        "type": "codeVoice"
                      },
                      {
                        "text": " will discover only test1, ",
                        "type": "text"
                      },
                      {
                        "code": "% dns-sd -B _http._tcp:\"mygroup2\" #",
                        "type": "codeVoice"
                      },
                      {
                        "text": " will discover only test2 %, and ",
                        "type": "text"
                      },
                      {
                        "code": "dns-sd -B _http._tcp:\"mygroup3\",HasFeatureA #",
                        "type": "codeVoice"
                      },
                      {
                        "text": " will discover only test3.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  },
                  {
                    "inlineContent": [
                      {
                        "text": "By specifying the group information, only the members of that group are discovered.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  },
                  {
                    "inlineContent": [
                      {
                        "text": "The group identifier itself is not sent in clear. Only a hash of the group identifier is sent and the clients discover them anonymously. The group identifier may be up to 256 bytes long and may contain any eight bit values except comma which should be escaped.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "regtype"
              },
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "If non-NULL, specifies the domain on which to advertise the service. Most applications will not specify a domain, instead automatically registering in the default domain(s).",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "domain"
              },
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "If non-NULL, specifies the SRV target host name. Most applications will not specify a host, instead automatically using the machine’s default host name(s). Note that specifying a non-NULL host does NOT create an address record for that host - the application is responsible for ensuring that the appropriate address record exists, or creating it via ",
                        "type": "text"
                      },
                      {
                        "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRegisterRecord(_:_:_:_:_:_:_:_:_:_:_:_:)",
                        "isActive": true,
                        "type": "reference"
                      },
                      {
                        "text": ".",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "host"
              },
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "The port, in network byte order, on which the service accepts connections. Pass 0 for a “placeholder” service (that is, a service that will not be discovered by browsing, but will cause a name conflict if another client tries to register that same name). Most clients will not use placeholder services.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "port"
              },
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "The length of the ",
                        "type": "text"
                      },
                      {
                        "code": "txtRecord",
                        "type": "codeVoice"
                      },
                      {
                        "text": ", in bytes. Must be zero if the ",
                        "type": "text"
                      },
                      {
                        "code": "txtRecord",
                        "type": "codeVoice"
                      },
                      {
                        "text": " is NULL.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "txtLen"
              },
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "The TXT record ",
                        "type": "text"
                      },
                      {
                        "code": "rdata",
                        "type": "codeVoice"
                      },
                      {
                        "text": ". A non-NULL ",
                        "type": "text"
                      },
                      {
                        "code": "txtRecord",
                        "type": "codeVoice"
                      },
                      {
                        "text": " MUST be a properly formatted DNS TXT record—that is, <length byte> <data> <length byte> <data> … Passing ",
                        "type": "text"
                      },
                      {
                        "code": "NULL",
                        "type": "codeVoice"
                      },
                      {
                        "text": " for the ",
                        "type": "text"
                      },
                      {
                        "code": "txtRecord",
                        "type": "codeVoice"
                      },
                      {
                        "text": " is allowed as a synonym for ",
                        "type": "text"
                      },
                      {
                        "code": "txtLen=1, txtRecord=\"\"",
                        "type": "codeVoice"
                      },
                      {
                        "text": "—it creates a TXT record of length one containing a single empty string. RFC 1035 doesn’t allow a TXT record to contain *zero* strings, so a single empty string is the smallest legal DNS TXT record. As with the other parameters, the DNSServiceRegister call copies the txtRecord data; for example, if you allocated the storage for the ",
                        "type": "text"
                      },
                      {
                        "code": "txtRecord",
                        "type": "codeVoice"
                      },
                      {
                        "text": " parameter with ",
                        "type": "text"
                      },
                      {
                        "code": "malloc()",
                        "type": "codeVoice"
                      },
                      {
                        "text": " then you can safely free that memory right after the DNSServiceRegister call returns.",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "txtRecord"
              },
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "The function to be called when the registration completes or asynchronously fails. The client may pass ",
                        "type": "text"
                      },
                      {
                        "code": "NULL",
                        "type": "codeVoice"
                      },
                      {
                        "text": " for the callback;  the client will not be notified of the default values picked on its behalf, and the client will not be notified of any asynchronous errors (for example, out of memory errors, and so forth) that may prevent the registration of the service. The client may not pass the ",
                        "type": "text"
                      },
                      {
                        "code": "NoAutoRename",
                        "type": "codeVoice"
                      },
                      {
                        "text": " flag if the callback is ",
                        "type": "text"
                      },
                      {
                        "code": "NULL",
                        "type": "codeVoice"
                      },
                      {
                        "text": ". The client may still deregister the service at any time via ",
                        "type": "text"
                      },
                      {
                        "identifier": "doc://com.apple.dnssd/documentation/dnssd/DNSServiceRefDeallocate(_:)",
                        "isActive": true,
                        "type": "reference"
                      },
                      {
                        "text": ".",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "callBack"
              },
              {
                "content": [
                  {
                    "inlineContent": [
                      {
                        "text": "An application context pointer that is passed to the callback function (may be ",
                        "type": "text"
                      },
                      {
                        "code": "NULL",
                        "type": "codeVoice"
                      },
                      {
                        "text": ").",
                        "type": "text"
                      }
                    ],
                    "type": "paragraph"
                  }
                ],
                "name": "context"
              }
            ]
          }
        },
        {
          "op": "replace",
          "path": "/primaryContentSections/2",
          "value": {
            "content": [
              {
                "anchor": "return-value",
                "level": 2,
                "text": "Return Value",
                "type": "heading"
              },
              {
                "inlineContent": [
                  {
                    "text": "Returns ",
                    "type": "text"
                  },
                  {
                    "identifier": "doc://com.apple.dnssd/documentation/dnssd/kDNSServiceErr_NoError",
                    "isActive": true,
                    "type": "reference"
                  },
                  {
                    "text": " on success (any subsequent, asynchronous errors are delivered to the callback), otherwise returns an error code indicating the error that occurred (the callback is never invoked and the DNSServiceRef is not initialized).",
                    "type": "text"
                  }
                ],
                "type": "paragraph"
              }
            ],
            "kind": "content"
          }
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceUpdateRecord(_:_:_:_:_:_:)/title",
          "value": "DNSServiceUpdateRecord"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceUpdateRecord(_:_:_:_:_:_:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "DNSServiceUpdateRecord"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1kDNSServiceErr_NoError/title",
          "value": "kDNSServiceErr_NoError"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1kDNSServiceErr_NoError/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "kDNSServiceErr_NoError"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceRemoveRecord(_:_:_:)/title",
          "value": "DNSServiceRemoveRecord"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceRemoveRecord(_:_:_:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "DNSServiceRemoveRecord"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceRefDeallocate(_:)/title",
          "value": "DNSServiceRefDeallocate"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceRefDeallocate(_:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "DNSServiceRefDeallocate"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceRegisterReply/title",
          "value": "DNSServiceRegisterReply"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceRegisterReply/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "DNSServiceRegisterReply"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceRegisterReply/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "DNSServiceRegisterReply"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceRef/title",
          "value": "DNSServiceRef"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceRef/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "DNSServiceRef"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceRef/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "DNSServiceRef"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceRegister(_:_:_:_:_:_:_:_:_:_:_:_:)/title",
          "value": "DNSServiceRegister"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceRegister(_:_:_:_:_:_:_:_:_:_:_:_:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "DNSServiceRegister"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceRegisterRecord(_:_:_:_:_:_:_:_:_:_:_:_:)/title",
          "value": "DNSServiceRegisterRecord"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceRegisterRecord(_:_:_:_:_:_:_:_:_:_:_:_:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "DNSServiceRegisterRecord"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceAddRecord(_:_:_:_:_:_:_:)/title",
          "value": "DNSServiceAddRecord"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceAddRecord(_:_:_:_:_:_:_:)/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "DNSServiceAddRecord"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceFlags/title",
          "value": "DNSServiceFlags"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceFlags/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "DNSServiceFlags"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceFlags/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "DNSServiceFlags"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceErrorType/title",
          "value": "DNSServiceErrorType"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceErrorType/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "DNSServiceErrorType"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.dnssd~1documentation~1dnssd~1DNSServiceErrorType/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "DNSServiceErrorType"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/dnssd/dnsserviceregister(_:_:_:_:_:_:_:_:_:_:_:_:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/dnssd/dnsserviceregister(_:_:_:_:_:_:_:_:_:_:_:_:)"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
