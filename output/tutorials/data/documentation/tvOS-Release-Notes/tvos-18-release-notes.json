{
  "abstract": [
    {
      "text": "Update your apps to use new features, and test your apps against API changes.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.tvOS-Release-Notes/documentation/tvos-release-notes"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.tvOS-Release-Notes/documentation/tvOS-Release-Notes/tvos-18-release-notes"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "role": "article",
    "roleHeading": "Article",
    "title": "tvOS 18 Release Notes"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The tvOS 18 SDK provides support to develop tvOS apps for Apple TV devices running tvOS 18. The SDK comes bundled with Xcode 16, available from the Mac App Store. For information on the compatibility requirements for Xcode 16, see ",
              "type": "text"
            },
            {
              "identifier": "/documentation/Xcode-Release-Notes/xcode-16-release-notes",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "anchor": "App-Intents",
          "level": 3,
          "text": "App Intents",
          "type": "heading"
        },
        {
          "anchor": "Resolved-Issues",
          "level": 4,
          "text": "Resolved Issues",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: Parameterless ",
                      "type": "text"
                    },
                    {
                      "code": "@Parameter",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "@Property",
                      "type": "codeVoice"
                    },
                    {
                      "text": " wrappers might cause protocol conformance failures.  (130219933)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "App-Store",
          "level": 3,
          "text": "App Store",
          "type": "heading"
        },
        {
          "anchor": "New-Features",
          "level": 4,
          "text": "New Features",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "On-demand resources limits were increased for iOS 18, iPadOS 18, tvOS 18 and visionOS 2. See ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/help/app-store-connect/reference/on-demand-resources-size-limits/",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " for more information.  (122163236)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "CFNetwork",
          "level": 3,
          "text": "CFNetwork",
          "type": "heading"
        },
        {
          "anchor": "Resolved-Issues",
          "level": 4,
          "text": "Resolved Issues",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: ",
                      "type": "text"
                    },
                    {
                      "code": "CFNetworkExecuteProxyAutoConfigurationScript",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "CFNetworkExecuteProxyAutoConfigurationURL",
                      "type": "codeVoice"
                    },
                    {
                      "text": " have always returned a +1 retained CF type object, but the function declarations were not decorated with the ",
                      "type": "text"
                    },
                    {
                      "code": "CF_RETURNS_RETAINED",
                      "type": "codeVoice"
                    },
                    {
                      "text": " attribute until iOS 18, macOS 15, tvOS 18, and visionOS 2.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "inlineContent": [
                    {
                      "text": "For C-based languages, the clang static analyzer might note if the object is leaked. No source code changes are required, but they are encouraged to fix the leak.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "inlineContent": [
                    {
                      "text": "For Swift, this changes the return type of these functions from ",
                      "type": "text"
                    },
                    {
                      "code": "Unmanaged<>",
                      "type": "codeVoice"
                    },
                    {
                      "text": " to the actual CF type returned, which will require a source change to fix when compiling with newer SDKs. However, Swift programs compiled with older SDKs will continue to work on the new OSes, though the returned CF type object will continue to leak as it did prior to this change.  (126154509)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Fitness",
          "level": 3,
          "text": "Fitness",
          "type": "heading"
        },
        {
          "anchor": "Resolved-Issues",
          "level": 4,
          "text": "Resolved Issues",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: If a user with multiple devices signs out of the Fitness app or connection times out, the Devices list might appear empty when attempting to reconnect a device and clicking the Play/Pause button to show other device options.   (131489055)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Foundation",
          "level": 3,
          "text": "Foundation",
          "type": "heading"
        },
        {
          "anchor": "New-Features",
          "level": 4,
          "text": "New Features",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "JSONEncoder.OutputFormatting.sortedKeys will now sort keys with a different ordering. Previously, keys were sorted using a numeric, case-insensitive, or localized ordering. Beginning in beta 4, keys are sorted lexicographically based on the keys’ UTF-8 contents.  (126874437)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Resolved-Issues",
          "level": 4,
          "text": "Resolved Issues",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/foundation/date/componentsformatstyle",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " was incorrectly producing strings like ",
                      "type": "text"
                    },
                    {
                      "code": "\"1m\"",
                      "type": "codeVoice"
                    },
                    {
                      "text": " with the ",
                      "type": "text"
                    },
                    {
                      "code": "Date.ComponentsFormatStyle.Style.condensedAbbreviated",
                      "type": "codeVoice"
                    },
                    {
                      "text": " style and strings like ",
                      "type": "text"
                    },
                    {
                      "code": "\"1min\"",
                      "type": "codeVoice"
                    },
                    {
                      "text": " with the ",
                      "type": "text"
                    },
                    {
                      "code": ".narrow",
                      "type": "codeVoice"
                    },
                    {
                      "text": " style instead of the other way around. The behavior was corrected to match the behavior of ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/swift/duration/unitsformatstyle/unitwidth-swift.struct",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ".  (125790342)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Maps",
          "level": 3,
          "text": "Maps",
          "type": "heading"
        },
        {
          "anchor": "Resolved-Issues",
          "level": 4,
          "text": "Resolved Issues",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: In searches that use MKLocalSearch.Request, the result type option physicalFeature is ignored.  (128961972)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Networking",
          "level": 3,
          "text": "Networking",
          "type": "heading"
        },
        {
          "anchor": "Resolved-Issues",
          "level": 4,
          "text": "Resolved Issues",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: For apps linked on macOS 15 / iOS 18 or newer, the default User-Agent request header field value generated by URLSession now includes the unlocalized bundle name instead of the localized bundle name.  (117380285)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Platform",
          "level": 3,
          "text": "Platform",
          "type": "heading"
        },
        {
          "anchor": "New-Features",
          "level": 4,
          "text": "New Features",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The firmware image for iBoot will be made available in cleartext in the PCC image. To reduce the overhead imposed by firmware encryption and align policies where appropriate, firmware encryption has been disabled for iBoot on iOS, macOS, watchOS, tvOS, and visionOS. See ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://security.apple.com/blog/private-cloud-compute/",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " for more details.  (125171074)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Screensaver",
          "level": 3,
          "text": "Screensaver",
          "type": "heading"
        },
        {
          "anchor": "Known-Issues",
          "level": 4,
          "text": "Known Issues",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Portrait Screensaver displays text “Processing your photos for this screen saver. Check back later.” for multiple days, while iCloud syncs and photos get processed.  (129876578)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Sign-In",
          "level": 3,
          "text": "Sign In",
          "type": "heading"
        },
        {
          "anchor": "Resolved-Issues",
          "level": 4,
          "text": "Resolved Issues",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: Adding a new user to Apple TV using an iPhone or iPad (running iOS 17.x or earlier) might result in a failure when signed into separate Apple Accounts for iCloud, iTunes, and / or Game Center.  (129012991)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "StoreKit",
          "level": 3,
          "text": "StoreKit",
          "type": "heading"
        },
        {
          "anchor": "New-Features",
          "level": 4,
          "text": "New Features",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/storekit/subscriptionstoreview",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " now supports custom control styles. To create a custom control style, declare a type that conforms to ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/storekit/subscriptionstorecontrolstyle",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " and implement ",
                      "type": "text"
                    },
                    {
                      "code": "makeBody(configuration:)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " method.  (106819454)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Use types such as ",
                      "type": "text"
                    },
                    {
                      "code": "SubscriptionOptionGroup",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "SubscriptionPeriodGroupSet",
                      "type": "codeVoice"
                    },
                    {
                      "text": " to declare a hierarchical structure for your ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/storekit/subscriptionstoreview",
                      "isActive": true,
                      "overridingTitle": "SubscriptionStoreView",
                      "overridingTitleInlineContent": [
                        {
                          "code": "SubscriptionStoreView",
                          "type": "codeVoice"
                        }
                      ],
                      "type": "reference"
                    },
                    {
                      "text": ". You can use the ",
                      "type": "text"
                    },
                    {
                      "code": "subscriptionStoreOptionGroupStyle(_:)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " to choose between presenting groups as a tab view or as navigation links.  (110429924) (FB12264937)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The subscription status ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/storekit/product/subscriptioninfo/status/3822294-renewalinfo",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " object now supports new properties ",
                      "type": "text"
                    },
                    {
                      "code": "renewalPrice",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "currency",
                      "type": "codeVoice"
                    },
                    {
                      "text": " to indicate the price at which the subscription will renew, and its currency. There is also a new ",
                      "type": "text"
                    },
                    {
                      "code": "offer",
                      "type": "codeVoice"
                    },
                    {
                      "text": " property containing the information of the offer that will be applied to the next renewal, if there is any. This includes the offer ID, the offer type, and the payment mode.  (114217892)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Finished consumables can now be included when using the ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/storekit/transaction",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " APIs. Users can enable this feature by setting ",
                      "type": "text"
                    },
                    {
                      "code": "SKInAppPurchaseHistoryIncludesConsumables",
                      "type": "codeVoice"
                    },
                    {
                      "text": " to true in app’s Info.plist.  (115079880)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "When configuring the control style for a ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/storekit/subscriptionstoreview",
                      "isActive": true,
                      "overridingTitle": "SubscriptionStoreView",
                      "overridingTitleInlineContent": [
                        {
                          "code": "SubscriptionStoreView",
                          "type": "codeVoice"
                        }
                      ],
                      "type": "reference"
                    },
                    {
                      "text": ", users can specify a placement for the controls using the ",
                      "type": "text"
                    },
                    {
                      "code": "subscriptionStoreControlStyle(_:placement:)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " view modifier. For tvOS, by default ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/storekit/subscriptionstoreview",
                      "isActive": true,
                      "overridingTitle": "SubscriptionStoreView",
                      "overridingTitleInlineContent": [
                        {
                          "code": "SubscriptionStoreView",
                          "type": "codeVoice"
                        }
                      ],
                      "type": "reference"
                    },
                    {
                      "text": " will place the controls trailing the marketing content.  (115319543)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Users can now use APIs like monthly or yearly to get common ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/storekit/product/subscriptionperiod",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " values when comparing subscription periods.  (122684230)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Resolved-Issues",
          "level": 4,
          "text": "Resolved Issues",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: VoiceOver does not read a product’s title and description in ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/storekit/productview",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/storekit/storeview",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": ".  (124254957) (FB13679318)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Deprecations",
          "level": 4,
          "text": "Deprecations",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "The Original API for In-App Purchase is now deprecated, including: SKStoreReviewController, SKProduct, SKReceiptRefreshRequest, SKStorefront, SKPayment, SKRequest, SKProductsRequest, and SKProductDiscount. Please upgrade to ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/storekit/",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " for current APIs and future enhancements.  (116600524)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Swift-Charts",
          "level": 3,
          "text": "Swift Charts",
          "type": "heading"
        },
        {
          "anchor": "New-Features",
          "level": 4,
          "text": "New Features",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Plot math functions using ",
                      "type": "text"
                    },
                    {
                      "code": "LinePlot",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "AreaPlot",
                      "type": "codeVoice"
                    },
                    {
                      "text": ".  (117186178)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Visualize large datasets more efficiently using vectorized plot APIs such as ",
                      "type": "text"
                    },
                    {
                      "code": "PointPlot",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "RectanglePlot",
                      "type": "codeVoice"
                    },
                    {
                      "text": ".  (117469419)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Resolved-Issues",
          "level": 4,
          "text": "Resolved Issues",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: Rotated axis labels stretch to incorrect sizes.  (106013386)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: Blur and shadow effects on marks might disappear during animation.  (125493885)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: Glitches when animating a connected scatter plot made of ",
                      "type": "text"
                    },
                    {
                      "code": "LineMark",
                      "type": "codeVoice"
                    },
                    {
                      "text": ".  (127196185)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: Stroke styles can now be animated.  (127465359)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: For function plots, the Y domain cannot be inferred automatically.  (128877906)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "SwiftUI",
          "level": 3,
          "text": "SwiftUI",
          "type": "heading"
        },
        {
          "anchor": "New-Features",
          "level": 4,
          "text": "New Features",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "When using a ",
                      "type": "text"
                    },
                    {
                      "code": "TabView",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", tapping on the current tab now pops any embedded navigation stack.  (50924017)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "For ",
                      "type": "text"
                    },
                    {
                      "code": "ObservableObject",
                      "type": "codeVoice"
                    },
                    {
                      "text": " subclasses used with ",
                      "type": "text"
                    },
                    {
                      "code": "@EnvironmentObject",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", ",
                      "type": "text"
                    },
                    {
                      "code": "@ObservedObject",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", and ",
                      "type": "text"
                    },
                    {
                      "code": "@StateObject",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", SwiftUI will now only call ",
                      "type": "text"
                    },
                    {
                      "code": "objectWillChange",
                      "type": "codeVoice"
                    },
                    {
                      "text": " once per property per object instance. If you use ",
                      "type": "text"
                    },
                    {
                      "code": "@Published",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and the default ",
                      "type": "text"
                    },
                    {
                      "code": "ObservableObjectPublisher",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", you do not need to change anything. If you override ",
                      "type": "text"
                    },
                    {
                      "code": "objectWillChange",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", ensure the lifetime of the publisher you return matches the lifetime of its enclosing ",
                      "type": "text"
                    },
                    {
                      "code": "ObservableObject",
                      "type": "codeVoice"
                    },
                    {
                      "text": ".  (116197689)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Types conforming to the View protocol, and other similar SwiftUI protocols, are now isolated to the ",
                      "type": "text"
                    },
                    {
                      "code": "@MainActor",
                      "type": "codeVoice"
                    },
                    {
                      "text": " by default. SwiftUI’s runtime behavior with respect to actor isolation has not changed: SwiftUI views and similar types have always been evaluated on the main actor at runtime; this change improves compile-time diagnostics for potential data-race safety issues. To opt out of the new default main actor isolation and restore the previous default isolation, add the nonisolated keyword to methods and properties as needed, or move the protocol conformance to an extension to opt out the entire type.  (120815051)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "identifier": "https://developer.apple.com/documentation/swiftui/text/init(_:format:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " now automatically injects ",
                      "type": "text"
                    },
                    {
                      "code": "FormatStyle",
                      "type": "codeVoice"
                    },
                    {
                      "text": " known to SwiftUI with the ",
                      "type": "text"
                    },
                    {
                      "code": "TimeZone",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "Calendar",
                      "type": "codeVoice"
                    },
                    {
                      "text": " from the environment.  (123662780)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "code": "@Entry",
                      "type": "codeVoice"
                    },
                    {
                      "text": " macro can now be used to simplify declarations of custom ",
                      "type": "text"
                    },
                    {
                      "code": "EnvironmentValues",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", ",
                      "type": "text"
                    },
                    {
                      "code": "FocusedValues",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", ",
                      "type": "text"
                    },
                    {
                      "code": "Transaction",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", and ",
                      "type": "text"
                    },
                    {
                      "code": "ContainerValues",
                      "type": "codeVoice"
                    },
                    {
                      "text": " properties.  (125568810)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Added the ability to give a gesture a name, which gets surfaced to UIGestureRecognizers when establishing dependencies.  (126527559)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "NavigationSplitView on tvOS provides a floating sidebar presentation by default. The prior collapsed stack behavior can be obtained by using the ",
                      "type": "text"
                    },
                    {
                      "code": ".balanced",
                      "type": "codeVoice"
                    },
                    {
                      "text": " NavigationSplitViewStyle.  (128565845)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "anchor": "Resolved-Issues",
          "level": 4,
          "text": "Resolved Issues",
          "type": "heading"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: ",
                      "type": "text"
                    },
                    {
                      "code": "ForEach",
                      "type": "codeVoice"
                    },
                    {
                      "text": " is now able to reclaim persistent state of unused child views. ",
                      "type": "text"
                    },
                    {
                      "code": "@State",
                      "type": "codeVoice"
                    },
                    {
                      "text": " values created by views inside ",
                      "type": "text"
                    },
                    {
                      "code": "ForEach",
                      "type": "codeVoice"
                    },
                    {
                      "text": " elements might be destroyed earlier than previously observed.  (90667238)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: A ",
                      "type": "text"
                    },
                    {
                      "code": "DismissAction",
                      "type": "codeVoice"
                    },
                    {
                      "text": " captured in the content or detail column of a ",
                      "type": "text"
                    },
                    {
                      "code": "NavigationSplitView",
                      "type": "codeVoice"
                    },
                    {
                      "text": " now pops the implicit stack.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "inlineContent": [
                    {
                      "text": "For apps linked on or after iOS 18 and aligned releases, the button in the example below will now clear any selection in the sidebar ",
                      "type": "text"
                    },
                    {
                      "code": "List",
                      "type": "codeVoice"
                    },
                    {
                      "text": ". Previously, this would fail silently on iOS, and close the window on macOS.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "code": [
                    " NavigationSplitView {",
                    "   List(…)",
                    " } detail: {",
                    "   DetailView()",
                    " }",
                    " ",
                    " struct DetailView: View {",
                    "   @Environment(\\.dismiss) private var dismiss",
                    " ",
                    "   var body: some View { ",
                    "     Button(\"Pop\") { dismiss() }",
                    "   }",
                    " }"
                  ],
                  "syntax": null,
                  "type": "codeListing"
                },
                {
                  "inlineContent": [
                    {
                      "text": "To retain the previous behavior, capture the ",
                      "type": "text"
                    },
                    {
                      "code": "DismissAction",
                      "type": "codeVoice"
                    },
                    {
                      "text": " from the environment above the ",
                      "type": "text"
                    },
                    {
                      "code": "NavigationSplitView",
                      "type": "codeVoice"
                    },
                    {
                      "text": ".  (92522613)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: ",
                      "type": "text"
                    },
                    {
                      "code": "View._printChanges",
                      "type": "codeVoice"
                    },
                    {
                      "text": " now outputs key path of mutated observable properties instead of “@dependencies”.  (111392797)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: SwiftUI will now assert that types conforming to the ",
                      "type": "text"
                    },
                    {
                      "code": "App",
                      "type": "codeVoice"
                    },
                    {
                      "text": " protocol are value types.  (113634782)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: Automatically updating ",
                      "type": "text"
                    },
                    {
                      "code": "Text",
                      "type": "codeVoice"
                    },
                    {
                      "text": " created via ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/swiftui/text/init(_:style:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " or ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/swiftui/text/init(timerinterval:pausetime:countsdown:showshours:)",
                      "isActive": true,
                      "type": "reference"
                    },
                    {
                      "text": " was causing increased battery drain when used in long running Live Activities. They now no longer animate changes in digits that signal the seconds value, keeping the power impact to a minimum.  (115906895)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: ",
                      "type": "text"
                    },
                    {
                      "code": ".navigationDestination(for:destination)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " modifiers inside of lazy containers are no longer evaluated. ",
                      "type": "text"
                    },
                    {
                      "code": ".navigationDestination(isPresented:destination:)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and ",
                      "type": "text"
                    },
                    {
                      "code": "navigationDestination(item:destination)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " will log warning when used in lazy containers. Lazy containers in this context include: ",
                      "type": "text"
                    },
                    {
                      "code": "List",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", ",
                      "type": "text"
                    },
                    {
                      "code": "LazyVGrid",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", ",
                      "type": "text"
                    },
                    {
                      "code": "LazyHGrid",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", ",
                      "type": "text"
                    },
                    {
                      "code": "LazyHStack",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", ",
                      "type": "text"
                    },
                    {
                      "code": "LazyVStack",
                      "type": "codeVoice"
                    },
                    {
                      "text": " ",
                      "type": "text"
                    },
                    {
                      "code": "Table",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", and ",
                      "type": "text"
                    },
                    {
                      "code": "TabView",
                      "type": "codeVoice"
                    },
                    {
                      "text": ". If using ",
                      "type": "text"
                    },
                    {
                      "code": "navigationDestination",
                      "type": "codeVoice"
                    },
                    {
                      "text": "s in lazy containers, users will see logged errors at runtime. Lift the modifiers higher up in the view hierarchy so they are outside of the lazy containers. Allowing navigation destination modifiers in lazy containers had two significant costs: (1) app navigation state could be undefined if a navigationDestination had been scrolled off screen (2) The navigation system had to explore all list contents to ensure navigation destinations remained up to date. Only allowing these modifiers outside of lazy containers improves app navigation reliability and performance.  (117998693)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: The order of ",
                      "type": "text"
                    },
                    {
                      "code": "ShapeStyle",
                      "type": "codeVoice"
                    },
                    {
                      "text": " compositing modifiers is now honored with respect to shadows. Previously in ",
                      "type": "text"
                    },
                    {
                      "code": "fill(style.blendMode(…).shadow(…))",
                      "type": "codeVoice"
                    },
                    {
                      "text": " the added blend mode would also apply to the shadow, that is no longer the case. The blend mode modifier must be added after the shadow modifier to affect it. As a consequence, the fill and any shadows added can now use different blend modes. Similar rules apply to ",
                      "type": "text"
                    },
                    {
                      "code": "ShapeStyle.opacity()",
                      "type": "codeVoice"
                    },
                    {
                      "text": " except that outer ",
                      "type": "text"
                    },
                    {
                      "code": "opacity()",
                      "type": "codeVoice"
                    },
                    {
                      "text": " modifiers multiply with inner modifiers, e.g. in ",
                      "type": "text"
                    },
                    {
                      "code": "fill(style.opacity(0.5).shadow(…).opacity(0.5))",
                      "type": "codeVoice"
                    },
                    {
                      "text": " the shadow is drawn with 50% opacity (of whatever ",
                      "type": "text"
                    },
                    {
                      "code": "style",
                      "type": "codeVoice"
                    },
                    {
                      "text": " draws) and ",
                      "type": "text"
                    },
                    {
                      "code": "style",
                      "type": "codeVoice"
                    },
                    {
                      "text": " itself draws with 25% opacity.  (119738072)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: The meaning of the boolean value passed to the ",
                      "type": "text"
                    },
                    {
                      "code": "ContentTransition.numericText(countsDown:)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " function has been flipped for apps deployed prior to iOS 18 aligned releases.  (120561508)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: Gestures might not pick up a modified content shape, such as when increasing the tappable area of a button.  (120938385)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed an issue when a ",
                      "type": "text"
                    },
                    {
                      "code": "sheet",
                      "type": "codeVoice"
                    },
                    {
                      "text": " modifier is removed from a view hierarchy. This can happen if the ",
                      "type": "text"
                    },
                    {
                      "code": "sheet",
                      "type": "codeVoice"
                    },
                    {
                      "text": " modifier is in one branch of an ",
                      "type": "text"
                    },
                    {
                      "code": "if",
                      "type": "codeVoice"
                    },
                    {
                      "text": " statement and the statement’s condition changes. For apps linked on or after iOS 18 and aligned releases, when a ",
                      "type": "text"
                    },
                    {
                      "code": "sheet",
                      "type": "codeVoice"
                    },
                    {
                      "text": " modifier is completely removed from the hierarchy, the binding associated with the sheet will not be reset.  (123742063)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: ",
                      "type": "text"
                    },
                    {
                      "code": "ForEach",
                      "type": "codeVoice"
                    },
                    {
                      "text": " child views are no longer re-evaluated unconditionally, only when a parameter of the ",
                      "type": "text"
                    },
                    {
                      "code": "ForEach",
                      "type": "codeVoice"
                    },
                    {
                      "text": " view might have changed.  (123902210)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: Elements along a ",
                      "type": "text"
                    },
                    {
                      "code": "NavigationPath",
                      "type": "codeVoice"
                    },
                    {
                      "text": " or the data structure passed to the ",
                      "type": "text"
                    },
                    {
                      "code": "path",
                      "type": "codeVoice"
                    },
                    {
                      "text": " parameter of ",
                      "type": "text"
                    },
                    {
                      "code": "NavigationStack(path:root:)",
                      "type": "codeVoice"
                    },
                    {
                      "text": " are now compared more efficiently. Any side-effects from setting a ",
                      "type": "text"
                    },
                    {
                      "code": "path",
                      "type": "codeVoice"
                    },
                    {
                      "text": " equal to itself are no longer reliable and likely will not occur.  (125093883)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: The state of the root view of ",
                      "type": "text"
                    },
                    {
                      "code": "UIHostingConfiguration",
                      "type": "codeVoice"
                    },
                    {
                      "text": " is now reset before the associated cell is displayed.  (125100960)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: ",
                      "type": "text"
                    },
                    {
                      "code": "SceneBuilder",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", ",
                      "type": "text"
                    },
                    {
                      "code": "WidgetBundleBuilder",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", ",
                      "type": "text"
                    },
                    {
                      "code": "TableColumnBuilder",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", ",
                      "type": "text"
                    },
                    {
                      "code": "TableRowBuilder",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", ",
                      "type": "text"
                    },
                    {
                      "code": "CommandsBuilder",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", and ",
                      "type": "text"
                    },
                    {
                      "code": "ToolbarContentBuilder",
                      "type": "codeVoice"
                    },
                    {
                      "text": " now diagnose unsupported ",
                      "type": "text"
                    },
                    {
                      "code": "if #available",
                      "type": "codeVoice"
                    },
                    {
                      "text": " conditions at compile time instead of crashing at run time.  (125379937)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: ",
                      "type": "text"
                    },
                    {
                      "code": "UIViewRepresentable",
                      "type": "codeVoice"
                    },
                    {
                      "text": ", ",
                      "type": "text"
                    },
                    {
                      "code": "NSViewRepresentable",
                      "type": "codeVoice"
                    },
                    {
                      "text": " and their view controller variants no longer create a layer with ",
                      "type": "text"
                    },
                    {
                      "code": "allowsGroupOpacity",
                      "type": "codeVoice"
                    },
                    {
                      "text": " set to true.  (125561916)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: In certain scenarios, ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/swiftui/text/init(_:style:)",
                      "isActive": true,
                      "overridingTitle": "Text(_:style:)",
                      "overridingTitleInlineContent": [
                        {
                          "code": "Text(_:style:)",
                          "type": "codeVoice"
                        }
                      ],
                      "type": "reference"
                    },
                    {
                      "text": " produced suboptimal output, such as choosing an unnecessarily small calendar unit, showing zero values for large calendar units instead of omitting them, or showing seconds in Always On Display.  (125885307)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: ",
                      "type": "text"
                    },
                    {
                      "identifier": "https://developer.apple.com/documentation/swiftui/text/init(timerinterval:pausetime:countsdown:showshours:)",
                      "isActive": true,
                      "overridingTitle": "Text(timerInterval:pauseTime:countsDown:showsHours:)",
                      "overridingTitleInlineContent": [
                        {
                          "code": "Text(timerInterval:pauseTime:countsDown:showsHours:)",
                          "type": "codeVoice"
                        }
                      ],
                      "type": "reference"
                    },
                    {
                      "text": " was redacting the seconds value even when the timer was paused, had not started yet, or had already reached its end.  (125885429)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: Resolved an issue where scroll views would not receive touches if placed near a tappable control. When rebuilt with the newer SDK, make sure that small buttons and tap targets are correctly enlarged. You can use the ",
                      "type": "text"
                    },
                    {
                      "code": "contentShape",
                      "type": "codeVoice"
                    },
                    {
                      "text": " modifier.  (126232279)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Fixed: In the Swift 6 language mode, the ",
                      "type": "text"
                    },
                    {
                      "code": "@Entry",
                      "type": "codeVoice"
                    },
                    {
                      "text": " macro now works with non-",
                      "type": "text"
                    },
                    {
                      "code": "Sendable",
                      "type": "codeVoice"
                    },
                    {
                      "text": " types if the type of the entry is declared explicitly.  (129073803)",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "/documentation/Xcode-Release-Notes/xcode-16-release-notes": {
      "identifier": "/documentation/Xcode-Release-Notes/xcode-16-release-notes",
      "title": "Xcode 16 Release Notes",
      "titleInlineContent": [
        {
          "text": "Xcode 16 Release Notes",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "/documentation/Xcode-Release-Notes/xcode-16-release-notes"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.tvOS-Release-Notes/documentation/tvOS-Release-Notes/tvos-18_1-release-notes": {
      "abstract": [
        {
          "text": "Update your apps to use new features, and test your apps against API changes.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.tvOS-Release-Notes/documentation/tvOS-Release-Notes/tvos-18_1-release-notes",
      "kind": "article",
      "role": "article",
      "title": "tvOS 18.1 Release Notes",
      "type": "topic",
      "url": "/documentation/tvos-release-notes/tvos-18_1-release-notes"
    },
    "doc://com.apple.tvOS-Release-Notes/documentation/tvOS-Release-Notes/tvos-18_2-release-notes": {
      "abstract": [
        {
          "text": "Update your apps to use new features, and test your apps against API changes.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.tvOS-Release-Notes/documentation/tvOS-Release-Notes/tvos-18_2-release-notes",
      "kind": "article",
      "role": "article",
      "title": "tvOS 18.2 Release Notes",
      "type": "topic",
      "url": "/documentation/tvos-release-notes/tvos-18_2-release-notes"
    },
    "doc://com.apple.tvOS-Release-Notes/documentation/tvOS-Release-Notes/tvos-18_3-release-notes": {
      "abstract": [
        {
          "text": "Update your apps to use new features, and test your apps against API changes.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.tvOS-Release-Notes/documentation/tvOS-Release-Notes/tvos-18_3-release-notes",
      "kind": "article",
      "role": "article",
      "title": "tvOS 18.3 Release Notes",
      "type": "topic",
      "url": "/documentation/tvos-release-notes/tvos-18_3-release-notes"
    },
    "doc://com.apple.tvOS-Release-Notes/documentation/tvOS-Release-Notes/tvos-18_4-release-notes": {
      "abstract": [
        {
          "text": "Update your apps to use new features, and test your apps against API changes.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.tvOS-Release-Notes/documentation/tvOS-Release-Notes/tvos-18_4-release-notes",
      "kind": "article",
      "role": "article",
      "title": "tvOS 18.4 Beta 2 Release Notes",
      "type": "topic",
      "url": "/documentation/tvos-release-notes/tvos-18_4-release-notes"
    },
    "doc://com.apple.tvOS-Release-Notes/documentation/tvos-release-notes": {
      "abstract": [
        {
          "text": "Learn about changes to the tvOS SDK.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.tvOS-Release-Notes/documentation/tvos-release-notes",
      "kind": "article",
      "role": "collection",
      "title": "tvOS Release Notes",
      "type": "topic",
      "url": "/documentation/tvos-release-notes"
    },
    "https://developer.apple.com/documentation/foundation/date/componentsformatstyle": {
      "identifier": "https://developer.apple.com/documentation/foundation/date/componentsformatstyle",
      "title": "Date.ComponentsFormatStyle",
      "titleInlineContent": [
        {
          "code": "Date.ComponentsFormatStyle",
          "type": "codeVoice"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/documentation/foundation/date/componentsformatstyle"
    },
    "https://developer.apple.com/documentation/storekit/product/subscriptioninfo/status/3822294-renewalinfo": {
      "identifier": "https://developer.apple.com/documentation/storekit/product/subscriptioninfo/status/3822294-renewalinfo",
      "title": "RenewalInfo",
      "titleInlineContent": [
        {
          "code": "RenewalInfo",
          "type": "codeVoice"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/documentation/storekit/product/subscriptioninfo/status/3822294-renewalinfo"
    },
    "https://developer.apple.com/documentation/storekit/product/subscriptionperiod": {
      "identifier": "https://developer.apple.com/documentation/storekit/product/subscriptionperiod",
      "title": "Product.SubscriptionPeriod",
      "titleInlineContent": [
        {
          "code": "Product.SubscriptionPeriod",
          "type": "codeVoice"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/documentation/storekit/product/subscriptionperiod"
    },
    "https://developer.apple.com/documentation/storekit/productview": {
      "identifier": "https://developer.apple.com/documentation/storekit/productview",
      "title": "ProductView",
      "titleInlineContent": [
        {
          "code": "ProductView",
          "type": "codeVoice"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/documentation/storekit/productview"
    },
    "https://developer.apple.com/documentation/storekit/storeview": {
      "identifier": "https://developer.apple.com/documentation/storekit/storeview",
      "title": "StoreView",
      "titleInlineContent": [
        {
          "code": "StoreView",
          "type": "codeVoice"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/documentation/storekit/storeview"
    },
    "https://developer.apple.com/documentation/storekit/subscriptionstorecontrolstyle": {
      "identifier": "https://developer.apple.com/documentation/storekit/subscriptionstorecontrolstyle",
      "title": "SubscriptionStoreControlStyle",
      "titleInlineContent": [
        {
          "code": "SubscriptionStoreControlStyle",
          "type": "codeVoice"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/documentation/storekit/subscriptionstorecontrolstyle"
    },
    "https://developer.apple.com/documentation/storekit/subscriptionstoreview": {
      "identifier": "https://developer.apple.com/documentation/storekit/subscriptionstoreview",
      "title": "SubscriptionStoreView",
      "titleInlineContent": [
        {
          "code": "SubscriptionStoreView",
          "type": "codeVoice"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/documentation/storekit/subscriptionstoreview"
    },
    "https://developer.apple.com/documentation/storekit/transaction": {
      "identifier": "https://developer.apple.com/documentation/storekit/transaction",
      "title": "Transaction",
      "titleInlineContent": [
        {
          "code": "Transaction",
          "type": "codeVoice"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/documentation/storekit/transaction"
    },
    "https://developer.apple.com/documentation/swift/duration/unitsformatstyle/unitwidth-swift.struct": {
      "identifier": "https://developer.apple.com/documentation/swift/duration/unitsformatstyle/unitwidth-swift.struct",
      "title": "Duration.UnitsFormatStyle.UnitWidth",
      "titleInlineContent": [
        {
          "code": "Duration.UnitsFormatStyle.UnitWidth",
          "type": "codeVoice"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/documentation/swift/duration/unitsformatstyle/unitwidth-swift.struct"
    },
    "https://developer.apple.com/documentation/swiftui/text/init(_:format:)": {
      "identifier": "https://developer.apple.com/documentation/swiftui/text/init(_:format:)",
      "title": "Text(_:format:)",
      "titleInlineContent": [
        {
          "code": "Text(_:format:)",
          "type": "codeVoice"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/documentation/swiftui/text/init(_:format:)"
    },
    "https://developer.apple.com/documentation/swiftui/text/init(_:style:)": {
      "identifier": "https://developer.apple.com/documentation/swiftui/text/init(_:style:)",
      "title": "Text(_:style:)",
      "titleInlineContent": [
        {
          "code": "Text(_:style:)",
          "type": "codeVoice"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/documentation/swiftui/text/init(_:style:)"
    },
    "https://developer.apple.com/documentation/swiftui/text/init(timerinterval:pausetime:countsdown:showshours:)": {
      "identifier": "https://developer.apple.com/documentation/swiftui/text/init(timerinterval:pausetime:countsdown:showshours:)",
      "title": "Text(timerInterval:pauseTime:countsDown:showsHours:)",
      "titleInlineContent": [
        {
          "code": "Text(timerInterval:pauseTime:countsDown:showsHours:)",
          "type": "codeVoice"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/documentation/swiftui/text/init(timerinterval:pausetime:countsdown:showshours:)"
    },
    "https://developer.apple.com/help/app-store-connect/reference/on-demand-resources-size-limits/": {
      "identifier": "https://developer.apple.com/help/app-store-connect/reference/on-demand-resources-size-limits/",
      "title": "On-demand resources size limits",
      "titleInlineContent": [
        {
          "text": "On-demand resources size limits",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/help/app-store-connect/reference/on-demand-resources-size-limits/"
    },
    "https://developer.apple.com/storekit/": {
      "identifier": "https://developer.apple.com/storekit/",
      "title": "StoreKit 2",
      "titleInlineContent": [
        {
          "text": "StoreKit 2",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://developer.apple.com/storekit/"
    },
    "https://security.apple.com/blog/private-cloud-compute/": {
      "identifier": "https://security.apple.com/blog/private-cloud-compute/",
      "title": "Private Cloud Compute",
      "titleInlineContent": [
        {
          "text": "Private Cloud Compute",
          "type": "text"
        }
      ],
      "type": "link",
      "url": "https://security.apple.com/blog/private-cloud-compute/"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "tvOS-18",
      "generated": true,
      "identifiers": [
        "doc://com.apple.tvOS-Release-Notes/documentation/tvOS-Release-Notes/tvos-18_4-release-notes",
        "doc://com.apple.tvOS-Release-Notes/documentation/tvOS-Release-Notes/tvos-18_3-release-notes",
        "doc://com.apple.tvOS-Release-Notes/documentation/tvOS-Release-Notes/tvos-18_2-release-notes",
        "doc://com.apple.tvOS-Release-Notes/documentation/tvOS-Release-Notes/tvos-18_1-release-notes"
      ],
      "title": "tvOS 18"
    }
  ]
}
