{
  "abstract": [
    {
      "text": "Specifies the world position and orientation to apply to the current frame.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.compositorservices/documentation/CompositorServices"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "occ",
    "url": "doc://com.apple.compositorservices/documentation/CompositorServices/cp_drawable_set_device_anchor"
  },
  "kind": "symbol",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "externalID": "c:@F@cp_drawable_set_device_anchor",
    "fragments": [
      {
        "kind": "identifier",
        "text": "cp_drawable_set_device_anchor"
      }
    ],
    "modules": [
      {
        "name": "Compositor Services"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "cp_drawable_set_device_anchor"
      }
    ],
    "platforms": [
      {
        "beta": false,
        "deprecated": false,
        "introducedAt": "1.0",
        "name": "visionOS",
        "unavailable": false
      }
    ],
    "role": "symbol",
    "roleHeading": "Function",
    "symbolKind": "func",
    "title": "cp_drawable_set_device_anchor"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "occ"
          ],
          "platforms": [
            "visionOS"
          ],
          "tokens": [
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:v",
              "text": "void"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "cp_drawable_set_device_anchor"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "identifier": "doc://com.apple.compositorservices/documentation/CompositorServices/cp_drawable_t",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@cp_drawable_t",
              "text": "cp_drawable_t"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "drawable"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "identifier": "doc://com.externally.resolved.symbol/c:@T@ar_device_anchor_t",
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@ar_device_anchor_t",
              "text": "ar_device_anchor_t"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "device_anchor"
            },
            {
              "kind": "text",
              "text": ");"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "kind": "parameters",
      "parameters": [
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The drawable for a frame.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "drawable"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "The anchor that specifies the 3D rotation, translation,",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "and scaling factors you applied to your content when you rendered the frame.",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "If you specify ",
                  "type": "text"
                },
                {
                  "code": "nil",
                  "type": "codeVoice"
                },
                {
                  "text": ", Compositor Services doesn’t adjust your content to match",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "the actual display-time position and orientation of the device.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "device_anchor"
        }
      ]
    },
    {
      "kind": "mentions",
      "mentions": [
        "doc://com.apple.compositorservices/documentation/CompositorServices/drawing-fully-immersive-content-using-metal"
      ]
    },
    {
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "During rendering, match the camera position in your scene to the device anchor",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "to create a better experience.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "In a visionOS app, the device anchor corresponds to the movements of someone’s head.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If your camera movements aren’t synchronized to the device movements,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the person might experience discomfort while viewing your content.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Because you encode your drawing commands before the final rendered frame appears,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "you must predict the device anchor in advance.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "ARKit provides the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.documentation/documentation/ARKit/ar_world_tracking_provider_query_device_anchor_at_timestamp",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "function to help you determine this information.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Use the value from the ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.compositorservices/documentation/CompositorServices/cp_frame_timing_get_presentation_time",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "function as the time for the request.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "Start the prediction process at some point after the time the",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.compositorservices/documentation/CompositorServices/cp_frame_timing_get_optimal_input_time",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " function returns.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "At display time, Compositor Services compares your predicted device anchor with",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "the actual position and orientation of the device at that time.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If the two values don’t match, Compositor Services adjusts the pixels",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "of your frame to align it with the hardware.",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "If you don’t want it to make this adjustment,",
              "type": "text"
            },
            {
              "text": " ",
              "type": "text"
            },
            {
              "text": "specify ",
              "type": "text"
            },
            {
              "code": "nil",
              "type": "codeVoice"
            },
            {
              "text": " for the ",
              "type": "text"
            },
            {
              "code": "device_anchor",
              "type": "codeVoice"
            },
            {
              "text": " parameter or don’t call this function.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.compositorservices/documentation/CompositorServices": {
      "abstract": [
        {
          "text": "Take control of the drawing environment and render your own content using Metal.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.compositorservices/documentation/CompositorServices",
      "kind": "symbol",
      "role": "collection",
      "title": "Compositor Services",
      "type": "topic",
      "url": "/documentation/compositorservices"
    },
    "doc://com.apple.compositorservices/documentation/CompositorServices/cp_drawable_get_device_anchor": {
      "abstract": [
        {
          "text": "Returns the position and orientation you specified for the frame.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "cp_drawable_get_device_anchor"
        }
      ],
      "identifier": "doc://com.apple.compositorservices/documentation/CompositorServices/cp_drawable_get_device_anchor",
      "kind": "symbol",
      "role": "symbol",
      "title": "cp_drawable_get_device_anchor",
      "type": "topic",
      "url": "/documentation/compositorservices/cp_drawable_get_device_anchor"
    },
    "doc://com.apple.compositorservices/documentation/CompositorServices/cp_drawable_set_device_anchor": {
      "abstract": [
        {
          "text": "Specifies the world position and orientation to apply to the current frame.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "cp_drawable_set_device_anchor"
        }
      ],
      "identifier": "doc://com.apple.compositorservices/documentation/CompositorServices/cp_drawable_set_device_anchor",
      "kind": "symbol",
      "role": "symbol",
      "title": "cp_drawable_set_device_anchor",
      "type": "topic",
      "url": "/documentation/compositorservices/cp_drawable_set_device_anchor"
    },
    "doc://com.apple.compositorservices/documentation/CompositorServices/cp_drawable_t": {
      "abstract": [
        {
          "text": "A type that provides the textures and information you need to draw a frame of content.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "cp_drawable_t"
        }
      ],
      "identifier": "doc://com.apple.compositorservices/documentation/CompositorServices/cp_drawable_t",
      "kind": "symbol",
      "role": "symbol",
      "title": "cp_drawable_t",
      "type": "topic",
      "url": "/documentation/compositorservices/cp_drawable_t"
    },
    "doc://com.apple.compositorservices/documentation/CompositorServices/cp_frame_timing_get_optimal_input_time": {
      "abstract": [
        {
          "text": "Returns the optimal time to start the frame submission process.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "cp_frame_timing_get_optimal_input_time"
        }
      ],
      "identifier": "doc://com.apple.compositorservices/documentation/CompositorServices/cp_frame_timing_get_optimal_input_time",
      "kind": "symbol",
      "role": "symbol",
      "title": "cp_frame_timing_get_optimal_input_time",
      "type": "topic",
      "url": "/documentation/compositorservices/cp_frame_timing_get_optimal_input_time"
    },
    "doc://com.apple.compositorservices/documentation/CompositorServices/cp_frame_timing_get_presentation_time": {
      "abstract": [
        {
          "text": "Returns the time at which the system displays the frame.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "identifier",
          "text": "cp_frame_timing_get_presentation_time"
        }
      ],
      "identifier": "doc://com.apple.compositorservices/documentation/CompositorServices/cp_frame_timing_get_presentation_time",
      "kind": "symbol",
      "role": "symbol",
      "title": "cp_frame_timing_get_presentation_time",
      "type": "topic",
      "url": "/documentation/compositorservices/cp_frame_timing_get_presentation_time"
    },
    "doc://com.apple.compositorservices/documentation/CompositorServices/drawing-fully-immersive-content-using-metal": {
      "abstract": [
        {
          "text": "Create a fully immersive experience in visionOS using a custom Metal-based rendering engine.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.compositorservices/documentation/CompositorServices/drawing-fully-immersive-content-using-metal",
      "kind": "article",
      "role": "article",
      "title": "Drawing fully immersive content using Metal",
      "type": "topic",
      "url": "/documentation/compositorservices/drawing-fully-immersive-content-using-metal"
    },
    "doc://com.apple.documentation/documentation/ARKit/ar_world_tracking_provider_query_device_anchor_at_timestamp": {
      "abstract": [
        {
          "text": "Queries the predicted pose of the current device at a given time.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "extern"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@EA@ar_device_anchor_query_status_t",
          "text": "ar_device_anchor_query_status_t"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ar_world_tracking_provider_query_device_anchor_at_timestamp"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@ar_world_tracking_provider_t",
          "text": "ar_world_tracking_provider_t"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "world_tracking_provider"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@CFTimeInterval",
          "text": "CFTimeInterval"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "timestamp"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:@T@ar_device_anchor_t",
          "text": "ar_device_anchor_t"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "internalParam",
          "text": "device_anchor"
        },
        {
          "kind": "text",
          "text": ");"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/ARKit/ar_world_tracking_provider_query_device_anchor_at_timestamp",
      "kind": "symbol",
      "role": "symbol",
      "title": "ar_world_tracking_provider_query_device_anchor_at_timestamp",
      "type": "topic",
      "url": "/documentation/ARKit/ar_world_tracking_provider_query_device_anchor_at_timestamp"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.externally.resolved.symbol/c:@T@ar_device_anchor_t": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typedef"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:Q$objc(cs)NSObjectobjc(pl)OS_ar_device_anchor",
          "text": "NSObject<OS_ar_device_anchor>"
        },
        {
          "kind": "text",
          "text": " * "
        },
        {
          "kind": "identifier",
          "text": "ar_device_anchor_t"
        },
        {
          "kind": "text",
          "text": ";"
        }
      ],
      "identifier": "doc://com.externally.resolved.symbol/c:@T@ar_device_anchor_t",
      "kind": "symbol",
      "role": "symbol",
      "title": "ar_device_anchor_t",
      "type": "topic",
      "url": "/documentation/ARKit/ar_device_anchor_t"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Accessing-the-device-orientation",
      "generated": true,
      "identifiers": [
        "doc://com.apple.compositorservices/documentation/CompositorServices/cp_drawable_get_device_anchor"
      ],
      "title": "Accessing the device orientation"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/compositorservices/cp_drawable_set_device_anchor"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
