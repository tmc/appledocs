{
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.Swift/documentation/RegexBuilder",
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/RegexComponent-Implementations"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "RegexBuilder"
      }
    ],
    "role": "collectionGroup",
    "roleHeading": "API Collection",
    "title": "RegexComponent Implementations"
  },
  "references": {
    "doc://com.apple.Swift/documentation/RegexBuilder": {
      "abstract": [
        {
          "text": "Use an expressive domain-specific language to build regular expressions,",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "for operations like searching and replacing in text.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder",
      "kind": "symbol",
      "role": "collection",
      "title": "RegexBuilder",
      "type": "topic",
      "url": "/documentation/regexbuilder"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass": {
      "abstract": [
        {
          "text": "A class of characters that match in a regex.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CharacterClass"
        }
      ],
      "role": "symbol",
      "title": "CharacterClass",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/RegexOutput": {
      "abstract": [
        {
          "text": "The output type for this regular expression.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RegexOutput"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/RegexOutput",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RegexOutput"
        }
      ],
      "role": "symbol",
      "title": "CharacterClass.RegexOutput",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass/regexoutput"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/any": {
      "abstract": [
        {
          "text": "A character class that matches any element.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "any"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/any",
      "kind": "symbol",
      "role": "symbol",
      "title": "any",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass/any"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/anyGraphemeCluster": {
      "abstract": [
        {
          "text": "A character class that matches any single ",
          "type": "text"
        },
        {
          "code": "Character",
          "type": "codeVoice"
        },
        {
          "text": ", or extended",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "grapheme cluster, regardless of the current semantic level.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "anyGraphemeCluster"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/anyGraphemeCluster",
      "kind": "symbol",
      "role": "symbol",
      "title": "anyGraphemeCluster",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass/anygraphemecluster"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/anyNonNewline": {
      "abstract": [
        {
          "text": "A character class that matches any element that isn’t a newline.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "anyNonNewline"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/anyNonNewline",
      "kind": "symbol",
      "role": "symbol",
      "title": "anyNonNewline",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass/anynonnewline"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/anyOf(_:)-1s0kt": {
      "abstract": [
        {
          "text": "Returns a character class that matches any character in the given string",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "or sequence.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "anyOf"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/anyOf(_:)-1s0kt",
      "kind": "symbol",
      "role": "symbol",
      "title": "anyOf(_:)",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass/anyof(_:)-1s0kt"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/anyOf(_:)-zvpp": {
      "abstract": [
        {
          "text": "Returns a character class that matches any Unicode scalar in the given",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "sequence.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "anyOf"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "genericParameter",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ">("
        },
        {
          "kind": "typeIdentifier",
          "text": "S"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/anyOf(_:)-zvpp",
      "kind": "symbol",
      "role": "symbol",
      "title": "anyOf(_:)",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass/anyof(_:)-zvpp"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/digit": {
      "abstract": [
        {
          "text": "A character class that matches any digit.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "digit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/digit",
      "kind": "symbol",
      "role": "symbol",
      "title": "digit",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass/digit"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/hexDigit": {
      "abstract": [
        {
          "text": "A character class that matches any hexadecimal digit.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "hexDigit"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/hexDigit",
      "kind": "symbol",
      "role": "symbol",
      "title": "hexDigit",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass/hexdigit"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/horizontalWhitespace": {
      "abstract": [
        {
          "text": "A character class that matches any element that is classified as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "horizontal whitespace.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "horizontalWhitespace"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/horizontalWhitespace",
      "kind": "symbol",
      "role": "symbol",
      "title": "horizontalWhitespace",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass/horizontalwhitespace"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/init(_:_:)": {
      "abstract": [
        {
          "text": "Creates a character class that combines the given classes in a union.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "identifier",
          "text": "init"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        },
        {
          "kind": "text",
          "text": "...)"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/init(_:_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "init(_:_:)",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass/init(_:_:)"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/newlineSequence": {
      "abstract": [
        {
          "text": "A character class that matches any newline sequence.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "newlineSequence"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/newlineSequence",
      "kind": "symbol",
      "role": "symbol",
      "title": "newlineSequence",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass/newlinesequence"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/regex": {
      "abstract": [
        {
          "text": "The regular expression represented by this component.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "regex"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:17_StringProcessing5RegexV",
          "text": "Regex"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Ss",
          "text": "Substring"
        },
        {
          "kind": "text",
          "text": ">"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/regex",
      "kind": "symbol",
      "role": "symbol",
      "title": "regex",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass/regex"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/verticalWhitespace": {
      "abstract": [
        {
          "text": "A character class that matches any element that is classified as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "vertical whitespace.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "verticalWhitespace"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/verticalWhitespace",
      "kind": "symbol",
      "role": "symbol",
      "title": "verticalWhitespace",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass/verticalwhitespace"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/whitespace": {
      "abstract": [
        {
          "text": "A character class that matches any element that is classified as",
          "type": "text"
        },
        {
          "text": " ",
          "type": "text"
        },
        {
          "text": "whitespace.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "whitespace"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/whitespace",
      "kind": "symbol",
      "role": "symbol",
      "title": "whitespace",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass/whitespace"
    },
    "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/word": {
      "abstract": [
        {
          "text": "A character class that matches any element that is a “word character”.",
          "type": "text"
        }
      ],
      "conformance": {
        "availabilityPrefix": [
          {
            "text": "Available when",
            "type": "text"
          }
        ],
        "conformancePrefix": [
          {
            "text": "Conforms when",
            "type": "text"
          }
        ],
        "constraints": [
          {
            "code": "Self",
            "type": "codeVoice"
          },
          {
            "text": " is ",
            "type": "text"
          },
          {
            "code": "CharacterClass",
            "type": "codeVoice"
          },
          {
            "text": ".",
            "type": "text"
          }
        ]
      },
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "var"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "word"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:12RegexBuilder14CharacterClassV",
          "text": "CharacterClass"
        }
      ],
      "identifier": "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/word",
      "kind": "symbol",
      "role": "symbol",
      "title": "word",
      "type": "topic",
      "url": "/documentation/regexbuilder/characterclass/word"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "topicSections": [
    {
      "anchor": "Initializers",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/init(_:_:)"
      ],
      "title": "Initializers"
    },
    {
      "anchor": "Instance-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/regex"
      ],
      "title": "Instance Properties"
    },
    {
      "anchor": "Type-Aliases",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/RegexOutput"
      ],
      "title": "Type Aliases"
    },
    {
      "anchor": "Type-Properties",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/any",
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/anyGraphemeCluster",
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/anyNonNewline",
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/digit",
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/hexDigit",
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/horizontalWhitespace",
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/newlineSequence",
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/verticalWhitespace",
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/whitespace",
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/word"
      ],
      "title": "Type Properties"
    },
    {
      "anchor": "Type-Methods",
      "generated": true,
      "identifiers": [
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/anyOf(_:)-1s0kt",
        "doc://com.apple.Swift/documentation/RegexBuilder/CharacterClass/anyOf(_:)-zvpp"
      ],
      "title": "Type Methods"
    }
  ]
}
