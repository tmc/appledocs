{
  "abstract": [
    {
      "text": "Improve your UI test’s stability by handling interface changes that block the UI elements under test.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.xctest/documentation/XCTest",
        "doc://com.apple.xctest/documentation/XCTest/XCTestCase"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://com.apple.xctest/documentation/XCTest/handling-ui-interruptions"
  },
  "kind": "article",
  "legalNotices": {
    "copyright": "Copyright &copy; 2025 Apple Inc. All rights reserved.",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html"
  },
  "metadata": {
    "modules": [
      {
        "name": "XCTest"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Handling UI Interruptions"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Use XCTestCase UI interruption monitors to handle situations in which unrelated UI elements might appear and block the test’s interaction with elements in the workflow under test. The following situations could result in a blocked test:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "items": [
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Your app presents a modal view that takes focus away from the UI under test, as can happen, for example, when a background task fails and you notify the user of the failure.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            },
            {
              "content": [
                {
                  "inlineContent": [
                    {
                      "text": "Your app performs an action that causes the operating system to present a modal UI. An example is an action that presents a photo picker, which may make the system request access to photos if the user hasn’t already granted it.",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ]
            }
          ],
          "type": "unorderedList"
        },
        {
          "content": [
            {
              "inlineContent": [
                {
                  "text": "",
                  "type": "text"
                },
                {
                  "text": " ",
                  "type": "text"
                },
                {
                  "text": "When an alert or other modal UI is an expected part of the test workflow, don’t write a UI interruption monitor. The test won’t use the monitor because the modal UI isn’t blocking the test. A UI test only tries its UI interruption monitors if the elements it needs to interact with to complete the test are blocked by an interruption from an unrelated UI.",
                  "type": "text"
                }
              ],
              "type": "paragraph"
            }
          ],
          "name": "Important",
          "style": "important",
          "type": "aside"
        },
        {
          "anchor": "Add-a-UI-Interruption-Monitor-to-Your-Test",
          "level": 3,
          "text": "Add a UI Interruption Monitor to Your Test",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Call ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.xctest/documentation/XCTest/XCTestCase/addUIInterruptionMonitor(withDescription:handler:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " with a block that handles the interrupting UI and gets the test back on its expected path. Your block should return ",
              "type": "text"
            },
            {
              "code": "true",
              "type": "codeVoice"
            },
            {
              "text": " if it clears the interruption, and ",
              "type": "text"
            },
            {
              "code": "false",
              "type": "codeVoice"
            },
            {
              "text": " otherwise. UI interruption monitors are stored in a stack and their blocks are tried in last-in, first-out order, so returning ",
              "type": "text"
            },
            {
              "code": "false",
              "type": "codeVoice"
            },
            {
              "text": " gives other interruption monitors the chance to run.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "code": "XCTest",
              "type": "codeVoice"
            },
            {
              "text": " removes added UI interruption monitors when the test completes, so it’s not necessary to explicitly remove them. However, if you need to remove a monitor during test execution, call ",
              "type": "text"
            },
            {
              "identifier": "doc://com.apple.xctest/documentation/XCTest/XCTestCase/removeUIInterruptionMonitor(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/technologies": {
      "abstract": [
        {
          "text": "",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "kind": "technologies",
      "role": "overview",
      "title": "Technologies",
      "type": "topic",
      "url": "/documentation/technologies"
    },
    "doc://com.apple.xctest/documentation/XCTest": {
      "abstract": [
        {
          "text": "Create and run unit tests, performance tests, and UI tests for your Xcode project.",
          "type": "text"
        }
      ],
      "identifier": "doc://com.apple.xctest/documentation/XCTest",
      "kind": "symbol",
      "role": "collection",
      "title": "XCTest",
      "type": "topic",
      "url": "/documentation/xctest"
    },
    "doc://com.apple.xctest/documentation/XCTest/XCTestCase": {
      "abstract": [
        {
          "text": "The primary class for defining test cases, test methods, and performance tests.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "XCTestCase"
        }
      ],
      "identifier": "doc://com.apple.xctest/documentation/XCTest/XCTestCase",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "XCTestCase"
        }
      ],
      "role": "symbol",
      "title": "XCTestCase",
      "type": "topic",
      "url": "/documentation/xctest/xctestcase"
    },
    "doc://com.apple.xctest/documentation/XCTest/XCTestCase/addUIInterruptionMonitor(withDescription:handler:)": {
      "abstract": [
        {
          "text": "Adds a handler to the current context.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "addUIInterruptionMonitor"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "withDescription"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "handler"
        },
        {
          "kind": "text",
          "text": ": ("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(cs)XCUIElement",
          "text": "XCUIElement"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:Sb",
          "text": "Bool"
        },
        {
          "kind": "text",
          "text": ") -> any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        }
      ],
      "identifier": "doc://com.apple.xctest/documentation/XCTest/XCTestCase/addUIInterruptionMonitor(withDescription:handler:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "addUIInterruptionMonitorWithDescription:handler:"
        }
      ],
      "role": "symbol",
      "title": "addUIInterruptionMonitor(withDescription:handler:)",
      "type": "topic",
      "url": "/documentation/xctest/xctestcase/adduiinterruptionmonitor(withdescription:handler:)"
    },
    "doc://com.apple.xctest/documentation/XCTest/XCTestCase/removeUIInterruptionMonitor(_:)": {
      "abstract": [
        {
          "text": "Removes a handler using the token from when you added the handler.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "removeUIInterruptionMonitor"
        },
        {
          "kind": "text",
          "text": "(any "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "c:objc(pl)NSObject",
          "text": "NSObjectProtocol"
        },
        {
          "kind": "text",
          "text": ")"
        }
      ],
      "identifier": "doc://com.apple.xctest/documentation/XCTest/XCTestCase/removeUIInterruptionMonitor(_:)",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "removeUIInterruptionMonitor:"
        }
      ],
      "role": "symbol",
      "title": "removeUIInterruptionMonitor(_:)",
      "type": "topic",
      "url": "/documentation/xctest/xctestcase/removeuiinterruptionmonitor(_:)"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "anchor": "Monitoring-UI-Interruptions",
      "generated": true,
      "identifiers": [
        "doc://com.apple.xctest/documentation/XCTest/XCTestCase/addUIInterruptionMonitor(withDescription:handler:)",
        "doc://com.apple.xctest/documentation/XCTest/XCTestCase/removeUIInterruptionMonitor(_:)"
      ],
      "title": "Monitoring UI Interruptions"
    }
  ],
  "variantOverrides": [
    {
      "patch": [
        {
          "op": "replace",
          "path": "/identifier/interfaceLanguage",
          "value": "occ"
        },
        {
          "op": "add",
          "path": "/topicSections",
          "value": null
        },
        {
          "op": "replace",
          "path": "/seeAlsoSections",
          "value": [
            {
              "anchor": "Monitoring-UI-Interruptions",
              "generated": true,
              "identifiers": [
                "doc://com.apple.xctest/documentation/XCTest/XCTestCase/addUIInterruptionMonitor(withDescription:handler:)",
                "doc://com.apple.xctest/documentation/XCTest/XCTestCase/removeUIInterruptionMonitor(_:)"
              ],
              "title": "Monitoring UI Interruptions"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.xctest~1documentation~1XCTest~1XCTestCase/title",
          "value": "XCTestCase"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.xctest~1documentation~1XCTest~1XCTestCase/fragments",
          "value": [
            {
              "kind": "identifier",
              "text": "XCTestCase"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.xctest~1documentation~1XCTest~1XCTestCase/navigatorTitle",
          "value": [
            {
              "kind": "identifier",
              "text": "XCTestCase"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.xctest~1documentation~1XCTest~1XCTestCase~1removeUIInterruptionMonitor(_:)/title",
          "value": "removeUIInterruptionMonitor:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.xctest~1documentation~1XCTest~1XCTestCase~1removeUIInterruptionMonitor(_:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "removeUIInterruptionMonitor:"
            }
          ]
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.xctest~1documentation~1XCTest~1XCTestCase~1addUIInterruptionMonitor(withDescription:handler:)/title",
          "value": "addUIInterruptionMonitorWithDescription:handler:"
        },
        {
          "op": "replace",
          "path": "/references/doc:~1~1com.apple.xctest~1documentation~1XCTest~1XCTestCase~1addUIInterruptionMonitor(withDescription:handler:)/fragments",
          "value": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "identifier",
              "text": "addUIInterruptionMonitorWithDescription:handler:"
            }
          ]
        }
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/xctest/handling-ui-interruptions"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    },
    {
      "paths": [
        "/documentation/xctest/handling-ui-interruptions"
      ],
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ]
    }
  ]
}
