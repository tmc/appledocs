{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/roomplan/create-a-3d-model-of-an-interior-room-by-guiding-the-user-through-an-ar-experience",
            "title": "Create a 3D model of an interior room by guiding the user through an AR experience",
            "type": "sampleCode"
          },
          {
            "title": "User Interface",
            "type": "groupMarker"
          },
          {
            "title": "Scanning Protocol",
            "type": "groupMarker"
          },
          {
            "title": "Captured Data",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/roomplan/merging-multiple-scans-into-a-single-structure",
            "title": "Merging multiple scans into a single structure",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/roomplan/scanning-the-rooms-of-a-single-structure",
            "title": "Scanning the rooms of a single structure",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Accessing object details",
                "type": "groupMarker"
              },
              {
                "title": "Describing chairs",
                "type": "groupMarker"
              },
              {
                "title": "Describing sofas",
                "type": "groupMarker"
              },
              {
                "title": "Describing closets",
                "type": "groupMarker"
              },
              {
                "title": "Describing tables",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/roomplan/captured-object-attributes",
            "title": "Captured Object Attributes",
            "type": "collection"
          },
          {
            "title": "3D Asset Output",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/roomplan/providing-custom-models-for-captured-rooms-and-structure-exports",
            "title": "Providing custom models for captured rooms and structure exports",
            "type": "sampleCode"
          }
        ],
        "path": "/documentation/roomplan",
        "title": "RoomPlan",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/roomplan/create-a-3d-model-of-an-interior-room-by-guiding-the-user-through-an-ar-experience",
            "title": "Create a 3D model of an interior room by guiding the user through an AR experience",
            "type": "sampleCode"
          },
          {
            "title": "User Interface",
            "type": "groupMarker"
          },
          {
            "title": "Scanning Protocol",
            "type": "groupMarker"
          },
          {
            "title": "Captured Data",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/roomplan/merging-multiple-scans-into-a-single-structure",
            "title": "Merging multiple scans into a single structure",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/roomplan/scanning-the-rooms-of-a-single-structure",
            "title": "Scanning the rooms of a single structure",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Accessing object details",
                "type": "groupMarker"
              },
              {
                "title": "Describing chairs",
                "type": "groupMarker"
              },
              {
                "title": "Describing sofas",
                "type": "groupMarker"
              },
              {
                "title": "Describing closets",
                "type": "groupMarker"
              },
              {
                "title": "Describing tables",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/roomplan/captured-object-attributes",
            "title": "Captured Object Attributes",
            "type": "collection"
          },
          {
            "title": "3D Asset Output",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/roomplan/providing-custom-models-for-captured-rooms-and-structure-exports",
            "title": "Providing custom models for captured rooms and structure exports",
            "type": "sampleCode"
          }
        ],
        "path": "/documentation/roomplan",
        "title": "RoomPlan",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/roomplan/create-a-3d-model-of-an-interior-room-by-guiding-the-user-through-an-ar-experience",
            "title": "Create a 3D model of an interior room by guiding the user through an AR experience",
            "type": "sampleCode"
          },
          {
            "title": "User Interface",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a room-capture view",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcaptureview/init(frame:arsession:)",
                "title": "init(frame: CGRect, arSession: ARSession)",
                "type": "init"
              },
              {
                "path": "/documentation/roomplan/roomcaptureview/init(frame:)",
                "title": "init(frame: CGRect)",
                "type": "init"
              },
              {
                "path": "/documentation/roomplan/roomcaptureview/init(coder:)",
                "title": "init?(coder: NSCoder)",
                "type": "init"
              },
              {
                "title": "Reacting to scan events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcaptureview/capturesession",
                "title": "var captureSession: RoomCaptureSession!",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/roomcaptureview/delegate",
                "title": "var delegate: (any RoomCaptureViewDelegate)?",
                "type": "property"
              },
              {
                "title": "Displaying scan progress",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcaptureview/ismodelenabled",
                "title": "var isModelEnabled: Bool",
                "type": "property"
              },
              {
                "title": "Accessing view features",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcaptureview/subviews",
                "title": "var subviews: [UIView]",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/roomcaptureview/layoutsubviews()",
                "title": "func layoutSubviews()",
                "type": "method"
              },
              {
                "path": "/documentation/roomplan/roomcaptureview/encode(with:)",
                "title": "func encode(with: NSCoder)",
                "type": "method"
              },
              {
                "path": "/documentation/roomplan/roomcaptureview/traitcollectiondidchange(_:)",
                "title": "func traitCollectionDidChange(UITraitCollection?)",
                "type": "method"
              }
            ],
            "path": "/documentation/roomplan/roomcaptureview",
            "title": "RoomCaptureView",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Post-processing scan results",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcaptureviewdelegate/captureview(shouldpresent:error:)",
                "title": "func captureView(shouldPresent: CapturedRoomData, error: (any Error)?) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/roomplan/roomcaptureviewdelegate/captureview(didpresent:error:)",
                "title": "func captureView(didPresent: CapturedRoom, error: (any Error)?)",
                "type": "method"
              },
              {
                "title": "Default implementations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcaptureviewdelegate/captureview(shouldpresent:error:)-5l74q",
                "title": "func captureView(shouldPresent: CapturedRoomData, error: (any Error)?) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/roomplan/roomcaptureviewdelegate/captureview(didpresent:error:)-6em1r",
                "title": "func captureView(didPresent: CapturedRoom, error: (any Error)?)",
                "type": "method"
              }
            ],
            "path": "/documentation/roomplan/roomcaptureviewdelegate",
            "title": "RoomCaptureViewDelegate",
            "type": "protocol"
          },
          {
            "title": "Scanning Protocol",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcapturesession/init(arsession:)",
                "title": "init(arSession: ARSession?)",
                "type": "init"
              },
              {
                "title": "Ensuring device support",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcapturesession/issupported",
                "title": "static var isSupported: Bool",
                "type": "property"
              },
              {
                "title": "Controlling a session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcapturesession/run(configuration:)",
                "title": "func run(configuration: RoomCaptureSession.Configuration)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/configuration/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Configuring a session",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/configuration/iscoachingenabled",
                    "title": "var isCoachingEnabled: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/roomplan/roomcapturesession/configuration",
                "title": "RoomCaptureSession.Configuration",
                "type": "struct"
              },
              {
                "path": "/documentation/roomplan/roomcapturesession/stop(pausearsession:)",
                "title": "func stop(pauseARSession: Bool)",
                "type": "method"
              },
              {
                "title": "Responding to events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcapturesession/delegate",
                "title": "var delegate: (any RoomCaptureSessionDelegate)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Identifying the error cause",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/devicenotsupported",
                    "title": "case deviceNotSupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/devicetoohot",
                    "title": "case deviceTooHot",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/exceedscenesizelimit",
                    "title": "case exceedSceneSizeLimit",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/invalidarconfiguration",
                    "title": "case invalidARConfiguration",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/worldtrackingfailure",
                    "title": "case worldTrackingFailure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/internalerror",
                    "title": "case internalError",
                    "type": "case"
                  },
                  {
                    "title": "Inspecting error information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/errordescription",
                    "title": "var errorDescription: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/failurereason",
                    "title": "var failureReason: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/helpanchor",
                    "title": "var helpAnchor: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/localizeddescription",
                    "title": "var localizedDescription: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/recoverysuggestion",
                    "title": "var recoverySuggestion: String?",
                    "type": "property"
                  },
                  {
                    "title": "Comparing errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/==(_:_:)",
                    "title": "static func == (RoomCaptureSession.CaptureError, RoomCaptureSession.CaptureError) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/roomcapturesession/captureerror/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/roomcapturesession/captureerror/flatdescription",
                        "title": "var flatDescription: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/roomcapturesession/captureerror/localizeddescription",
                        "title": "var localizedDescription: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/roomcapturesession/captureerror/nesteddescription",
                        "title": "var nestedDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/error-implementations",
                    "title": "Error Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/roomcapturesession/captureerror/errordescription-29vjo",
                        "title": "var errorDescription: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/roomcapturesession/captureerror/failurereason",
                        "title": "var failureReason: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/roomcapturesession/captureerror/helpanchor",
                        "title": "var helpAnchor: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/roomcapturesession/captureerror/recoverysuggestion",
                        "title": "var recoverySuggestion: String?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/roomplan/roomcapturesession/captureerror/localizederror-implementations",
                    "title": "LocalizedError Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/roomcapturesession/captureerror",
                "title": "RoomCaptureSession.CaptureError",
                "type": "enum"
              },
              {
                "title": "Accessing the AR session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcapturesession/arsession",
                "title": "var arSession: ARSession",
                "type": "property"
              },
              {
                "title": "Displaying user instructions",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Determining a coaching recommendation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/instruction/normal",
                    "title": "case normal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/instruction/moveclosetowall",
                    "title": "case moveCloseToWall",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/instruction/moveawayfromwall",
                    "title": "case moveAwayFromWall",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/instruction/turnonlight",
                    "title": "case turnOnLight",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/instruction/slowdown",
                    "title": "case slowDown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/instruction/lowtexture",
                    "title": "case lowTexture",
                    "type": "case"
                  },
                  {
                    "title": "Comparing instructions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/instruction/==(_:_:)",
                    "title": "static func == (RoomCaptureSession.Instruction, RoomCaptureSession.Instruction) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/instruction/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/instruction/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/roomcapturesession/instruction/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/roomcapturesession/instruction/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/roomcapturesession/instruction/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/roomcapturesession/instruction",
                "title": "RoomCaptureSession.Instruction",
                "type": "enum"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcapturesession/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcapturesession/stop()",
                "title": "func stop()",
                "type": "method"
              }
            ],
            "path": "/documentation/roomplan/roomcapturesession",
            "title": "RoomCaptureSession",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Beginning a session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcapturesessiondelegate/capturesession(_:didstartwith:)",
                "title": "func captureSession(RoomCaptureSession, didStartWith: RoomCaptureSession.Configuration)",
                "type": "method"
              },
              {
                "title": "Updating a session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcapturesessiondelegate/capturesession(_:didadd:)",
                "title": "func captureSession(RoomCaptureSession, didAdd: CapturedRoom)",
                "type": "method"
              },
              {
                "path": "/documentation/roomplan/roomcapturesessiondelegate/capturesession(_:didremove:)",
                "title": "func captureSession(RoomCaptureSession, didRemove: CapturedRoom)",
                "type": "method"
              },
              {
                "path": "/documentation/roomplan/roomcapturesessiondelegate/capturesession(_:didchange:)",
                "title": "func captureSession(RoomCaptureSession, didChange: CapturedRoom)",
                "type": "method"
              },
              {
                "path": "/documentation/roomplan/roomcapturesessiondelegate/capturesession(_:didupdate:)",
                "title": "func captureSession(RoomCaptureSession, didUpdate: CapturedRoom)",
                "type": "method"
              },
              {
                "title": "Coaching the user",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcapturesessiondelegate/capturesession(_:didprovide:)",
                "title": "func captureSession(RoomCaptureSession, didProvide: RoomCaptureSession.Instruction)",
                "type": "method"
              },
              {
                "title": "Completing a session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcapturesessiondelegate/capturesession(_:didendwith:error:)",
                "title": "func captureSession(RoomCaptureSession, didEndWith: CapturedRoomData, error: (any Error)?)",
                "type": "method"
              },
              {
                "title": "Default implementations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roomcapturesessiondelegate/capturesession(_:didstartwith:)-3c74n",
                "title": "func captureSession(RoomCaptureSession, didStartWith: RoomCaptureSession.Configuration)",
                "type": "method"
              },
              {
                "path": "/documentation/roomplan/roomcapturesessiondelegate/capturesession(_:didupdate:)-77zyg",
                "title": "func captureSession(RoomCaptureSession, didUpdate: CapturedRoom)",
                "type": "method"
              },
              {
                "path": "/documentation/roomplan/roomcapturesessiondelegate/capturesession(_:didremove:)-9gs76",
                "title": "func captureSession(RoomCaptureSession, didRemove: CapturedRoom)",
                "type": "method"
              },
              {
                "path": "/documentation/roomplan/roomcapturesessiondelegate/capturesession(_:didchange:)-gv3t",
                "title": "func captureSession(RoomCaptureSession, didChange: CapturedRoom)",
                "type": "method"
              },
              {
                "path": "/documentation/roomplan/roomcapturesessiondelegate/capturesession(_:didprovide:)-5hvhl",
                "title": "func captureSession(RoomCaptureSession, didProvide: RoomCaptureSession.Instruction)",
                "type": "method"
              },
              {
                "path": "/documentation/roomplan/roomcapturesessiondelegate/capturesession(_:didendwith:error:)-5f0mc",
                "title": "func captureSession(RoomCaptureSession, didEndWith: CapturedRoomData, error: (any Error)?)",
                "type": "method"
              }
            ],
            "path": "/documentation/roomplan/roomcapturesessiondelegate",
            "title": "RoomCaptureSessionDelegate",
            "type": "protocol"
          },
          {
            "title": "Captured Data",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/roomplan/merging-multiple-scans-into-a-single-structure",
            "title": "Merging multiple scans into a single structure",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/roomplan/scanning-the-rooms-of-a-single-structure",
            "title": "Scanning the rooms of a single structure",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a captured room",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/capturedroom/init(from:)",
                "title": "init(from: any Decoder) throws",
                "type": "init"
              },
              {
                "title": "Inspecting room details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/capturedroom/identifier",
                "title": "var identifier: UUID",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedroom/story",
                "title": "var story: Int",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedroom/floors",
                "title": "var floors: [CapturedRoom.Surface]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating a surface",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/surface/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Identifying a surface",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/surface/identifier",
                    "title": "var identifier: UUID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/surface/parentidentifier",
                    "title": "var parentIdentifier: UUID?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/surface/category-swift.property",
                    "title": "var category: CapturedRoom.Surface.Category",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a surface category",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/category-swift.enum/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Determining the surface category",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/category-swift.enum/floor",
                        "title": "case floor",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/category-swift.enum/door(isopen:)",
                        "title": "case door(isOpen: Bool)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/category-swift.enum/opening",
                        "title": "case opening",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/category-swift.enum/wall",
                        "title": "case wall",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/category-swift.enum/window",
                        "title": "case window",
                        "type": "case"
                      },
                      {
                        "title": "Serializing a surface category",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/category-swift.enum/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "title": "Comparing surface categories",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/category-swift.enum/==(_:_:)",
                        "title": "static func == (CapturedRoom.Surface.Category, CapturedRoom.Surface.Category) -> Bool",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/category-swift.enum/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/category-swift.enum/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/category-swift.enum/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/roomplan/capturedroom/surface/category-swift.enum/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/roomplan/capturedroom/surface/category-swift.enum/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/roomplan/capturedroom/surface/category-swift.enum",
                    "title": "CapturedRoom.Surface.Category",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/surface/confidence",
                    "title": "var confidence: CapturedRoom.Confidence",
                    "type": "property"
                  },
                  {
                    "title": "Positioning and sizing a surface",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/surface/transform",
                    "title": "var transform: simd_float4x4",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/surface/dimensions",
                    "title": "var dimensions: simd_float3",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/surface/story",
                    "title": "var story: Int",
                    "type": "property"
                  },
                  {
                    "title": "Shaping a surface",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/surface/completededges",
                    "title": "var completedEdges: Set<CapturedRoom.Surface.Edge>",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an edge",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/edge/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Accessing edge types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/edge/top",
                        "title": "case top",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/edge/bottom",
                        "title": "case bottom",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/edge/left",
                        "title": "case left",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/edge/right",
                        "title": "case right",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/edge/allcases-swift.type.property",
                        "title": "static var allCases: [CapturedRoom.Surface.Edge]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/edge/allcases-swift.typealias",
                        "title": "CapturedRoom.Surface.Edge.AllCases",
                        "type": "typealias"
                      },
                      {
                        "title": "Comparing edges",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/edge/==(_:_:)",
                        "title": "static func == (CapturedRoom.Surface.Edge, CapturedRoom.Surface.Edge) -> Bool",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/edge/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/edge/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/edge/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Serializing an edge",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/edge/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/roomplan/capturedroom/surface/edge/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/roomplan/capturedroom/surface/edge/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/roomplan/capturedroom/surface/edge",
                    "title": "CapturedRoom.Surface.Edge",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/surface/curve-swift.property",
                    "title": "var curve: CapturedRoom.Surface.Curve?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a curve",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/curve-swift.struct/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Measuring a curve",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/curve-swift.struct/startangle",
                        "title": "var startAngle: Measurement<UnitAngle>",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/curve-swift.struct/endangle",
                        "title": "var endAngle: Measurement<UnitAngle>",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/curve-swift.struct/radius",
                        "title": "var radius: Float",
                        "type": "property"
                      },
                      {
                        "title": "Serializing a curve",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/curve-swift.struct/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/surface/curve-swift.struct/center",
                        "title": "var center: simd_float2",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/roomplan/capturedroom/surface/curve-swift.struct",
                    "title": "CapturedRoom.Surface.Curve",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/surface/polygoncorners",
                    "title": "var polygonCorners: [simd_float3]",
                    "type": "property"
                  },
                  {
                    "title": "Serializing a surface",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/surface/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/roomplan/capturedroom/surface",
                "title": "CapturedRoom.Surface",
                "type": "struct"
              },
              {
                "path": "/documentation/roomplan/capturedroom/doors",
                "title": "var doors: [CapturedRoom.Surface]",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedroom/objects",
                "title": "var objects: [CapturedRoom.Object]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating an object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/object/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Identifying an object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/object/identifier",
                    "title": "var identifier: UUID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/object/parentidentifier",
                    "title": "var parentIdentifier: UUID?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/object/category-swift.property",
                    "title": "var category: CapturedRoom.Object.Category",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an object category",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Determining the object category",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/bathtub",
                        "title": "case bathtub",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/bed",
                        "title": "case bed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/chair",
                        "title": "case chair",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/dishwasher",
                        "title": "case dishwasher",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/fireplace",
                        "title": "case fireplace",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/oven",
                        "title": "case oven",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/refrigerator",
                        "title": "case refrigerator",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/sink",
                        "title": "case sink",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/sofa",
                        "title": "case sofa",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/stairs",
                        "title": "case stairs",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/storage",
                        "title": "case storage",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/stove",
                        "title": "case stove",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/table",
                        "title": "case table",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/television",
                        "title": "case television",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/toilet",
                        "title": "case toilet",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/washerdryer",
                        "title": "case washerDryer",
                        "type": "case"
                      },
                      {
                        "title": "Determining supported attributes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/supportedattributetypes",
                        "title": "var supportedAttributeTypes: [any CapturedRoomAttribute.Type]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/supportedcombinations",
                        "title": "var supportedCombinations: [[any CapturedRoomAttribute]]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/supportscombination(_:)",
                        "title": "func supportsCombination([any CapturedRoomAttribute]) -> Bool",
                        "type": "method"
                      },
                      {
                        "title": "Serializing an object category",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "title": "Comparing object categories",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/==(_:_:)",
                        "title": "static func == (CapturedRoom.Object.Category, CapturedRoom.Object.Category) -> Bool",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/allcases-swift.typealias",
                        "title": "CapturedRoom.Object.Category.AllCases",
                        "type": "typealias"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/allcases-swift.type.property",
                        "title": "static var allCases: [CapturedRoom.Object.Category]",
                        "type": "property"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/roomplan/capturedroom/object/category-swift.enum/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/roomplan/capturedroom/object/category-swift.enum",
                    "title": "CapturedRoom.Object.Category",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/object/confidence",
                    "title": "var confidence: CapturedRoom.Confidence",
                    "type": "property"
                  },
                  {
                    "title": "Positioning and sizing an object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/object/transform",
                    "title": "var transform: simd_float4x4",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/object/dimensions",
                    "title": "var dimensions: simd_float3",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/object/story",
                    "title": "var story: Int",
                    "type": "property"
                  },
                  {
                    "title": "Describing an object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/object/attributes",
                    "title": "var attributes: [any CapturedRoomAttribute]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/object/attribute(of:)",
                    "title": "func attribute<T>(of: T.Type) -> T?",
                    "type": "method"
                  },
                  {
                    "title": "Serializing an object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/object/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/roomplan/capturedroom/object",
                "title": "CapturedRoom.Object",
                "type": "struct"
              },
              {
                "path": "/documentation/roomplan/capturedroom/openings",
                "title": "var openings: [CapturedRoom.Surface]",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedroom/walls",
                "title": "var walls: [CapturedRoom.Surface]",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedroom/windows",
                "title": "var windows: [CapturedRoom.Surface]",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedroom/sections",
                "title": "var sections: [CapturedRoom.Section]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating a section",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/section/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Describing a section",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/section/label-swift.property",
                    "title": "var label: CapturedRoom.Section.Label",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a section label",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/init(rawvalue:)",
                        "title": "init?(rawValue: String)",
                        "type": "init"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/bathroom",
                        "title": "case bathroom",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/bedroom",
                        "title": "case bedroom",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/diningroom",
                        "title": "case diningRoom",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/kitchen",
                        "title": "case kitchen",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/livingroom",
                        "title": "case livingRoom",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/unidentified",
                        "title": "case unidentified",
                        "type": "case"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/rawvalue-swift.property",
                        "title": "var rawValue: String",
                        "type": "property"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/rawvalue-swift.typealias",
                        "title": "CapturedRoom.Section.Label.RawValue",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/roomplan/capturedroom/section/label-swift.enum/rawrepresentable-implementations",
                        "title": "RawRepresentable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/roomplan/capturedroom/section/label-swift.enum",
                    "title": "CapturedRoom.Section.Label",
                    "type": "enum"
                  },
                  {
                    "title": "Locating a section",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/section/story",
                    "title": "var story: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/section/center",
                    "title": "var center: simd_float3",
                    "type": "property"
                  },
                  {
                    "title": "Serializing a section",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/section/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/roomplan/capturedroom/section",
                "title": "CapturedRoom.Section",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a confidence value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/confidence/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Assessing a confidence value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/confidence/high",
                    "title": "case high",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/confidence/medium",
                    "title": "case medium",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/confidence/low",
                    "title": "case low",
                    "type": "case"
                  },
                  {
                    "title": "Comparing confidence values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/confidence/==(_:_:)",
                    "title": "static func == (CapturedRoom.Confidence, CapturedRoom.Confidence) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/confidence/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/confidence/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/confidence/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Serializing a confidence value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/confidence/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/confidence/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/capturedroom/confidence/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/capturedroom/confidence",
                "title": "CapturedRoom.Confidence",
                "type": "enum"
              },
              {
                "path": "/documentation/roomplan/capturedroom/version",
                "title": "var version: Int",
                "type": "property"
              },
              {
                "title": "Serializing a captured room",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/capturedroom/encode(to:)",
                "title": "func encode(to: any Encoder) throws",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an attributes codable representation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/attributescodablerepresentation/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/attributescodablerepresentation/init(attributes:)",
                    "title": "init(attributes: [any CapturedRoomAttribute])",
                    "type": "init"
                  },
                  {
                    "title": "Accessing room attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/attributescodablerepresentation/attributes",
                    "title": "let attributes: [any CapturedRoomAttribute]",
                    "type": "property"
                  },
                  {
                    "title": "Serializing an attributes codable representation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/attributescodablerepresentation/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/roomplan/capturedroom/attributescodablerepresentation",
                "title": "CapturedRoom.AttributesCodableRepresentation",
                "type": "struct"
              },
              {
                "title": "Generating a USDZ file",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/capturedroom/export(to:exportoptions:)",
                "title": "func export(to: URL, exportOptions: CapturedRoom.USDExportOptions) throws",
                "type": "method"
              },
              {
                "path": "/documentation/roomplan/capturedroom/export(to:metadataurl:modelprovider:exportoptions:)",
                "title": "func export(to: URL, metadataURL: URL?, modelProvider: CapturedRoom.ModelProvider?, exportOptions: CapturedRoom.USDExportOptions) throws",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Choosing an export option",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/parametric",
                    "title": "static let parametric: CapturedRoom.USDExportOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/mesh",
                    "title": "static let mesh: CapturedRoom.USDExportOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/model",
                    "title": "static let model: CapturedRoom.USDExportOptions",
                    "type": "property"
                  },
                  {
                    "title": "Creating an export option",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/init(rawvalue:)",
                    "title": "init(rawValue: Int32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/rawvalue-swift.property",
                    "title": "let rawValue: Int32",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/arrayliteralelement",
                    "title": "CapturedRoom.USDExportOptions.ArrayLiteralElement",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/element",
                    "title": "CapturedRoom.USDExportOptions.Element",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/rawvalue-swift.typealias",
                    "title": "CapturedRoom.USDExportOptions.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/contains(_:)",
                        "title": "func contains(Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/formintersection(_:)",
                        "title": "func formIntersection(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/formsymmetricdifference(_:)",
                        "title": "func formSymmetricDifference(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/formunion(_:)",
                        "title": "func formUnion(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/insert(_:)",
                        "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/intersection(_:)",
                        "title": "func intersection(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/remove(_:)",
                        "title": "func remove(Self.Element) -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/symmetricdifference(_:)",
                        "title": "func symmetricDifference(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/union(_:)",
                        "title": "func union(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/update(with:)",
                        "title": "func update(with: Self.Element) -> Self.Element?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/optionset-implementations",
                    "title": "OptionSet Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/init(_:)",
                        "title": "init<S>(S)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/init(arrayliteral:)",
                        "title": "init(arrayLiteral: Self.Element...)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/isempty",
                        "title": "var isEmpty: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/isdisjoint(with:)",
                        "title": "func isDisjoint(with: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/isstrictsubset(of:)",
                        "title": "func isStrictSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/isstrictsuperset(of:)",
                        "title": "func isStrictSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/issubset(of:)",
                        "title": "func isSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/issuperset(of:)",
                        "title": "func isSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/subtract(_:)",
                        "title": "func subtract(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/usdexportoptions/subtracting(_:)",
                        "title": "func subtracting(Self) -> Self",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/setalgebra-implementations",
                    "title": "SetAlgebra Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/capturedroom/usdexportoptions",
                "title": "CapturedRoom.USDExportOptions",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a model provider",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/modelprovider/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Managing models",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/modelprovider/modelfileurls",
                    "title": "var modelFileURLs: [URL]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/modelprovider/modelfileurl(for:)-9irqx",
                    "title": "func modelFileURL(for: CapturedRoom.Object.Category) throws -> URL?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/modelprovider/modelfileurl(for:)-96rvb",
                    "title": "func modelFileURL(for: CapturedRoom.Object) throws -> URL?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/modelprovider/modelfileurl(for:)-58ykp",
                    "title": "func modelFileURL(for: [any CapturedRoomAttribute]) throws -> URL?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/modelprovider/setmodelfileurl(_:for:)-8xio",
                    "title": "func setModelFileURL(URL?, for: [any CapturedRoomAttribute]) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/modelprovider/setmodelfileurl(_:for:)-4law9",
                    "title": "func setModelFileURL(URL?, for: CapturedRoom.Object.Category) throws",
                    "type": "method"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Interpreting the error",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/modelprovider/error/attributecombinationnotsupported",
                        "title": "case attributeCombinationNotSupported",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/modelprovider/error/nonexistingfile(url:)",
                        "title": "case nonExistingFile(url: URL)",
                        "type": "case"
                      },
                      {
                        "title": "Inspecting error information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/modelprovider/error/errordescription",
                        "title": "var errorDescription: String?",
                        "type": "property"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/roomplan/capturedroom/modelprovider/error/flatdescription",
                            "title": "var flatDescription: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/roomplan/capturedroom/modelprovider/error/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/roomplan/capturedroom/modelprovider/error/nesteddescription",
                            "title": "var nestedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/roomplan/capturedroom/modelprovider/error/error-implementations",
                        "title": "Error Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/roomplan/capturedroom/modelprovider/error/errordescription-332hk",
                            "title": "var errorDescription: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/roomplan/capturedroom/modelprovider/error/failurereason",
                            "title": "var failureReason: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/roomplan/capturedroom/modelprovider/error/helpanchor",
                            "title": "var helpAnchor: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/roomplan/capturedroom/modelprovider/error/recoverysuggestion",
                            "title": "var recoverySuggestion: String?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/roomplan/capturedroom/modelprovider/error/localizederror-implementations",
                        "title": "LocalizedError Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/roomplan/capturedroom/modelprovider/error",
                    "title": "CapturedRoom.ModelProvider.Error",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/roomplan/capturedroom/modelprovider",
                "title": "CapturedRoom.ModelProvider",
                "type": "struct"
              },
              {
                "title": "Handling errors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Interpreting the error",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/error/devicenotsupported",
                    "title": "case deviceNotSupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/error/urlinvalidfileextension",
                    "title": "case urlInvalidFileExtension",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/error/urlinvalidfilepath",
                    "title": "case urlInvalidFilePath",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/error/urlinvalidscheme",
                    "title": "case urlInvalidScheme",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/error/urlmissingfileextension",
                    "title": "case urlMissingFileExtension",
                    "type": "case"
                  },
                  {
                    "title": "Inspecting error information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/error/errordescription",
                    "title": "var errorDescription: String?",
                    "type": "property"
                  },
                  {
                    "title": "Comparing errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/error/==(_:_:)",
                    "title": "static func == (CapturedRoom.Error, CapturedRoom.Error) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/error/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/error/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/error/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/error/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/capturedroom/error/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/error/flatdescription",
                        "title": "var flatDescription: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/error/localizeddescription",
                        "title": "var localizedDescription: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/error/nesteddescription",
                        "title": "var nestedDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/roomplan/capturedroom/error/error-implementations",
                    "title": "Error Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/error/errordescription-9j2cx",
                        "title": "var errorDescription: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/error/failurereason",
                        "title": "var failureReason: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/error/helpanchor",
                        "title": "var helpAnchor: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/capturedroom/error/recoverysuggestion",
                        "title": "var recoverySuggestion: String?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/roomplan/capturedroom/error/localizederror-implementations",
                    "title": "LocalizedError Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/capturedroom/error",
                "title": "CapturedRoom.Error",
                "type": "enum"
              }
            ],
            "path": "/documentation/roomplan/capturedroom",
            "title": "CapturedRoom",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a captured room",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/init(from:)",
                "title": "init(from: any Decoder) throws",
                "type": "init"
              },
              {
                "title": "Inspecting structure details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/identifier",
                "title": "var identifier: UUID",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/rooms",
                "title": "var rooms: [CapturedRoom]",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/floors",
                "title": "var floors: [CapturedStructure.Surface]",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/surface",
                "title": "CapturedStructure.Surface",
                "type": "typealias"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/doors",
                "title": "var doors: [CapturedStructure.Surface]",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/objects",
                "title": "var objects: [CapturedStructure.Object]",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/object",
                "title": "CapturedStructure.Object",
                "type": "typealias"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/openings",
                "title": "var openings: [CapturedStructure.Surface]",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/walls",
                "title": "var walls: [CapturedStructure.Surface]",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/windows",
                "title": "var windows: [CapturedStructure.Surface]",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/sections",
                "title": "var sections: [CapturedStructure.Section]",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/section",
                "title": "CapturedStructure.Section",
                "type": "typealias"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/version",
                "title": "var version: Int",
                "type": "property"
              },
              {
                "title": "Serializing a captured structure",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/encode(to:)",
                "title": "func encode(to: any Encoder) throws",
                "type": "method"
              },
              {
                "title": "Generating a USDZ file",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/export(to:metadataurl:modelprovider:exportoptions:)",
                "title": "func export(to: URL, metadataURL: URL?, modelProvider: CapturedStructure.ModelProvider?, exportOptions: CapturedStructure.USDExportOptions) throws",
                "type": "method"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/usdexportoptions",
                "title": "CapturedStructure.USDExportOptions",
                "type": "typealias"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/modelprovider",
                "title": "CapturedStructure.ModelProvider",
                "type": "typealias"
              },
              {
                "title": "Handling errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/capturedstructure/error",
                "title": "CapturedStructure.Error",
                "type": "typealias"
              }
            ],
            "path": "/documentation/roomplan/capturedstructure",
            "title": "CapturedStructure",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Deserializing a prior scan",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/capturedroomdata/init(from:)",
                "title": "init(from: any Decoder) throws",
                "type": "init"
              },
              {
                "title": "Serializing a prior scan",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/capturedroomdata/encode(to:)",
                "title": "func encode(to: any Encoder) throws",
                "type": "method"
              }
            ],
            "path": "/documentation/roomplan/capturedroomdata",
            "title": "CapturedRoomData",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Accessing object details",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Identifying an attribute",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroomattribute/shortidentifier",
                    "title": "var shortIdentifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Determining an attribute’s category",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroomattribute/parentcategory",
                    "title": "static var parentCategory: CapturedElementCategory?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/roomplan/capturedroomattribute",
                "title": "CapturedRoomAttribute",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Determining the category type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedelementcategory/object(_:)",
                    "title": "case object(CapturedRoom.Object.Category)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/capturedelementcategory/surface(_:)",
                    "title": "case surface(CapturedRoom.Surface.Category)",
                    "type": "case"
                  },
                  {
                    "title": "Creating a category",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedelementcategory/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedelementcategory/==(_:_:)",
                    "title": "static func == (CapturedElementCategory, CapturedElementCategory) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedelementcategory/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/capturedelementcategory/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/capturedelementcategory/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/capturedelementcategory",
                "title": "CapturedElementCategory",
                "type": "enum"
              },
              {
                "title": "Describing chairs",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Choosing a chair type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairtype/dining",
                    "title": "case dining",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/chairtype/stool",
                    "title": "case stool",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/chairtype/swivel",
                    "title": "case swivel",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/chairtype/other",
                    "title": "case other",
                    "type": "case"
                  },
                  {
                    "title": "Identifying a chair type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairtype/shortidentifier",
                    "title": "var shortIdentifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Categorizing a chair type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairtype/parentcategory",
                    "title": "static var parentCategory: CapturedElementCategory?",
                    "type": "property"
                  },
                  {
                    "title": "Creating a chair type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairtype/init(rawvalue:)",
                    "title": "init?(rawValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairtype/unidentified",
                    "title": "case unidentified",
                    "type": "case"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairtype/rawvalue-swift.property",
                    "title": "var rawValue: String",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairtype/allcases-swift.typealias",
                    "title": "ChairType.AllCases",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/roomplan/chairtype/rawvalue-swift.typealias",
                    "title": "ChairType.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairtype/allcases-swift.type.property",
                    "title": "static var allCases: [ChairType]",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/chairtype/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/chairtype/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/chairtype/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/chairtype/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/roomplan/chairtype/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/chairtype",
                "title": "ChairType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Choosing a chair arm type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairarmtype/existing",
                    "title": "case existing",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/chairarmtype/missing",
                    "title": "case missing",
                    "type": "case"
                  },
                  {
                    "title": "Identifying a chair arm type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairarmtype/shortidentifier",
                    "title": "var shortIdentifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Categorizing a chair arm type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairarmtype/parentcategory",
                    "title": "static var parentCategory: CapturedElementCategory?",
                    "type": "property"
                  },
                  {
                    "title": "Creating a chair arm type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairarmtype/init(rawvalue:)",
                    "title": "init?(rawValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairarmtype/rawvalue-swift.property",
                    "title": "var rawValue: String",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairarmtype/allcases-swift.typealias",
                    "title": "ChairArmType.AllCases",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/roomplan/chairarmtype/rawvalue-swift.typealias",
                    "title": "ChairArmType.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairarmtype/allcases-swift.type.property",
                    "title": "static var allCases: [ChairArmType]",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/chairarmtype/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/chairarmtype/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/chairarmtype/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/chairarmtype/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/roomplan/chairarmtype/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/chairarmtype",
                "title": "ChairArmType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Choosing a chair leg type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairlegtype/four",
                    "title": "case four",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/chairlegtype/star",
                    "title": "case star",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/chairlegtype/other",
                    "title": "case other",
                    "type": "case"
                  },
                  {
                    "title": "Identifying a chair leg type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairlegtype/shortidentifier",
                    "title": "var shortIdentifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Categorizing a chair leg type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairlegtype/parentcategory",
                    "title": "static var parentCategory: CapturedElementCategory?",
                    "type": "property"
                  },
                  {
                    "title": "Creating a chair leg type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairlegtype/init(rawvalue:)",
                    "title": "init?(rawValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairlegtype/unidentified",
                    "title": "case unidentified",
                    "type": "case"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairlegtype/rawvalue-swift.property",
                    "title": "var rawValue: String",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairlegtype/allcases-swift.typealias",
                    "title": "ChairLegType.AllCases",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/roomplan/chairlegtype/rawvalue-swift.typealias",
                    "title": "ChairLegType.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairlegtype/allcases-swift.type.property",
                    "title": "static var allCases: [ChairLegType]",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/chairlegtype/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/chairlegtype/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/chairlegtype/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/chairlegtype/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/roomplan/chairlegtype/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/chairlegtype",
                "title": "ChairLegType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Choosing a chair back type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairbacktype/existing",
                    "title": "case existing",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/chairbacktype/missing",
                    "title": "case missing",
                    "type": "case"
                  },
                  {
                    "title": "Identifying a chair back type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairbacktype/shortidentifier",
                    "title": "var shortIdentifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Categorizing a chair back type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairbacktype/parentcategory",
                    "title": "static var parentCategory: CapturedElementCategory?",
                    "type": "property"
                  },
                  {
                    "title": "Creating a chair back type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairbacktype/init(rawvalue:)",
                    "title": "init?(rawValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairbacktype/rawvalue-swift.property",
                    "title": "var rawValue: String",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairbacktype/allcases-swift.typealias",
                    "title": "ChairBackType.AllCases",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/roomplan/chairbacktype/rawvalue-swift.typealias",
                    "title": "ChairBackType.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/chairbacktype/allcases-swift.type.property",
                    "title": "static var allCases: [ChairBackType]",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/chairbacktype/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/chairbacktype/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/chairbacktype/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/chairbacktype/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/roomplan/chairbacktype/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/chairbacktype",
                "title": "ChairBackType",
                "type": "enum"
              },
              {
                "title": "Describing sofas",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Choosing a sofa type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/sofatype/rectangular",
                    "title": "case rectangular",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/sofatype/singleseat",
                    "title": "case singleSeat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/sofatype/lshaped",
                    "title": "case lShaped",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/sofatype/lshapedextension",
                    "title": "case lShapedExtension",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/sofatype/other",
                    "title": "case other",
                    "type": "case"
                  },
                  {
                    "title": "Identifying a sofa type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/sofatype/shortidentifier",
                    "title": "var shortIdentifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Categorizing a sofa type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/sofatype/parentcategory",
                    "title": "static var parentCategory: CapturedElementCategory?",
                    "type": "property"
                  },
                  {
                    "title": "Creating a sofa type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/sofatype/init(rawvalue:)",
                    "title": "init?(rawValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/sofatype/unidentified",
                    "title": "case unidentified",
                    "type": "case"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/sofatype/rawvalue-swift.property",
                    "title": "var rawValue: String",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/sofatype/allcases-swift.typealias",
                    "title": "SofaType.AllCases",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/roomplan/sofatype/rawvalue-swift.typealias",
                    "title": "SofaType.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/sofatype/allcases-swift.type.property",
                    "title": "static var allCases: [SofaType]",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/sofatype/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/sofatype/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/sofatype/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/sofatype/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/roomplan/sofatype/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/sofatype",
                "title": "SofaType",
                "type": "enum"
              },
              {
                "title": "Describing closets",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Choosing a storage area type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/storagetype/cabinet",
                    "title": "case cabinet",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/storagetype/shelf",
                    "title": "case shelf",
                    "type": "case"
                  },
                  {
                    "title": "Identifying a storage area type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/storagetype/shortidentifier",
                    "title": "var shortIdentifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Categorizing a storage area type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/storagetype/parentcategory",
                    "title": "static var parentCategory: CapturedElementCategory?",
                    "type": "property"
                  },
                  {
                    "title": "Creating a storage area type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/storagetype/init(rawvalue:)",
                    "title": "init?(rawValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/storagetype/rawvalue-swift.property",
                    "title": "var rawValue: String",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/storagetype/allcases-swift.typealias",
                    "title": "StorageType.AllCases",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/roomplan/storagetype/rawvalue-swift.typealias",
                    "title": "StorageType.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/storagetype/allcases-swift.type.property",
                    "title": "static var allCases: [StorageType]",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/storagetype/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/storagetype/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/storagetype/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/storagetype/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/roomplan/storagetype/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/storagetype",
                "title": "StorageType",
                "type": "enum"
              },
              {
                "title": "Describing tables",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/tabletype/coffee",
                    "title": "case coffee",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/tabletype/dining",
                    "title": "case dining",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/tabletype/other",
                    "title": "case other",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/tabletype/unidentified",
                    "title": "case unidentified",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/tabletype/init(rawvalue:)",
                    "title": "init?(rawValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/tabletype/rawvalue-swift.property",
                    "title": "var rawValue: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/tabletype/shortidentifier",
                    "title": "var shortIdentifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/tabletype/allcases-swift.typealias",
                    "title": "TableType.AllCases",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/roomplan/tabletype/rawvalue-swift.typealias",
                    "title": "TableType.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/tabletype/allcases-swift.type.property",
                    "title": "static var allCases: [TableType]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/tabletype/parentcategory",
                    "title": "static var parentCategory: CapturedElementCategory?",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/tabletype/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/tabletype/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/tabletype/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/tabletype/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/roomplan/tabletype/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/tabletype",
                "title": "TableType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Choosing a chair type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/tableshapetype/rectangular",
                    "title": "case rectangular",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/tableshapetype/circularelliptic",
                    "title": "case circularElliptic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/tableshapetype/lshaped",
                    "title": "case lShaped",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/tableshapetype/other",
                    "title": "case other",
                    "type": "case"
                  },
                  {
                    "title": "Identifying a chair type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/tableshapetype/shortidentifier",
                    "title": "var shortIdentifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Categorizing a chair type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/tableshapetype/parentcategory",
                    "title": "static var parentCategory: CapturedElementCategory?",
                    "type": "property"
                  },
                  {
                    "title": "Creating a chair type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/tableshapetype/init(rawvalue:)",
                    "title": "init?(rawValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/tableshapetype/unidentified",
                    "title": "case unidentified",
                    "type": "case"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/tableshapetype/rawvalue-swift.property",
                    "title": "var rawValue: String",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/tableshapetype/allcases-swift.typealias",
                    "title": "TableShapeType.AllCases",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/roomplan/tableshapetype/rawvalue-swift.typealias",
                    "title": "TableShapeType.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/tableshapetype/allcases-swift.type.property",
                    "title": "static var allCases: [TableShapeType]",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/tableshapetype/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/tableshapetype/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/tableshapetype/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/tableshapetype/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/roomplan/tableshapetype/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/tableshapetype",
                "title": "TableShapeType",
                "type": "enum"
              }
            ],
            "path": "/documentation/roomplan/captured-object-attributes",
            "title": "Captured Object Attributes",
            "type": "collection"
          },
          {
            "title": "3D Asset Output",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/roomplan/providing-custom-models-for-captured-rooms-and-structure-exports",
            "title": "Providing custom models for captured rooms and structure exports",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Creating a room builder",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roombuilder/init(options:)",
                "title": "init(options: RoomBuilder.ConfigurationOptions)",
                "type": "init"
              },
              {
                "children": [
                  {
                    "title": "Creating a configuration option",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/configurationoptions/init(rawvalue:)",
                    "title": "init(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/configurationoptions/rawvalue-swift.property",
                    "title": "let rawValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Choosing a configuration option",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/configurationoptions/beautifyobjects",
                    "title": "static let beautifyObjects: RoomBuilder.ConfigurationOptions",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/configurationoptions/arrayliteralelement",
                    "title": "RoomBuilder.ConfigurationOptions.ArrayLiteralElement",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/configurationoptions/element",
                    "title": "RoomBuilder.ConfigurationOptions.Element",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/configurationoptions/rawvalue-swift.typealias",
                    "title": "RoomBuilder.ConfigurationOptions.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/roombuilder/configurationoptions/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/contains(_:)",
                        "title": "func contains(Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/formintersection(_:)",
                        "title": "func formIntersection(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/formsymmetricdifference(_:)",
                        "title": "func formSymmetricDifference(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/formunion(_:)",
                        "title": "func formUnion(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/insert(_:)",
                        "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/intersection(_:)",
                        "title": "func intersection(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/remove(_:)",
                        "title": "func remove(Self.Element) -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/symmetricdifference(_:)",
                        "title": "func symmetricDifference(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/union(_:)",
                        "title": "func union(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/update(with:)",
                        "title": "func update(with: Self.Element) -> Self.Element?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/roomplan/roombuilder/configurationoptions/optionset-implementations",
                    "title": "OptionSet Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/init(_:)",
                        "title": "init<S>(S)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/init(arrayliteral:)",
                        "title": "init(arrayLiteral: Self.Element...)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/isempty",
                        "title": "var isEmpty: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/isdisjoint(with:)",
                        "title": "func isDisjoint(with: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/isstrictsubset(of:)",
                        "title": "func isStrictSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/isstrictsuperset(of:)",
                        "title": "func isStrictSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/issubset(of:)",
                        "title": "func isSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/issuperset(of:)",
                        "title": "func isSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/subtract(_:)",
                        "title": "func subtract(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/configurationoptions/subtracting(_:)",
                        "title": "func subtracting(Self) -> Self",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/roomplan/roombuilder/configurationoptions/setalgebra-implementations",
                    "title": "SetAlgebra Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/roombuilder/configurationoptions",
                "title": "RoomBuilder.ConfigurationOptions",
                "type": "struct"
              },
              {
                "title": "Processing a prior scan",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/roombuilder/capturedroom(from:)",
                "title": "func capturedRoom(from: CapturedRoomData) async throws -> CapturedRoom",
                "type": "method"
              },
              {
                "title": "Handling errors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Interpreting the error cause",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/builderror/insufficientinput",
                    "title": "case insufficientInput",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/builderror/invalidinput",
                    "title": "case invalidInput",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/builderror/exceedscenesizelimit",
                    "title": "case exceedSceneSizeLimit",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/builderror/internalerror",
                    "title": "case internalError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/builderror/devicenotsupported",
                    "title": "case deviceNotSupported",
                    "type": "case"
                  },
                  {
                    "title": "Inspecting error information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/builderror/errordescription",
                    "title": "var errorDescription: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/builderror/recoverysuggestion",
                    "title": "var recoverySuggestion: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/builderror/localizeddescription",
                    "title": "var localizedDescription: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/builderror/helpanchor",
                    "title": "var helpAnchor: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/builderror/failurereason",
                    "title": "var failureReason: String?",
                    "type": "property"
                  },
                  {
                    "title": "Comparing build errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/builderror/==(_:_:)",
                    "title": "static func == (RoomBuilder.BuildError, RoomBuilder.BuildError) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/builderror/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/builderror/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/roombuilder/builderror/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/builderror/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/roombuilder/builderror/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/builderror/flatdescription",
                        "title": "var flatDescription: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/builderror/localizeddescription",
                        "title": "var localizedDescription: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/builderror/nesteddescription",
                        "title": "var nestedDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/roomplan/roombuilder/builderror/error-implementations",
                    "title": "Error Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/builderror/errordescription-5noa1",
                        "title": "var errorDescription: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/builderror/failurereason",
                        "title": "var failureReason: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/builderror/helpanchor",
                        "title": "var helpAnchor: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/roombuilder/builderror/recoverysuggestion",
                        "title": "var recoverySuggestion: String?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/roomplan/roombuilder/builderror/localizederror-implementations",
                    "title": "LocalizedError Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/roombuilder/builderror",
                "title": "RoomBuilder.BuildError",
                "type": "enum"
              }
            ],
            "path": "/documentation/roomplan/roombuilder",
            "title": "RoomBuilder",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a structure builder",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/structurebuilder/init(options:)",
                "title": "init(options: StructureBuilder.ConfigurationOptions)",
                "type": "init"
              },
              {
                "path": "/documentation/roomplan/structurebuilder/configurationoptions",
                "title": "StructureBuilder.ConfigurationOptions",
                "type": "typealias"
              },
              {
                "title": "Building a captured structure",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/structurebuilder/capturedstructure(from:)",
                "title": "func capturedStructure(from: [CapturedRoom]) async throws -> CapturedStructure",
                "type": "method"
              },
              {
                "title": "Interpreting build errors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/structurebuilder/builderror/==(_:_:)",
                    "title": "static func == (StructureBuilder.BuildError, StructureBuilder.BuildError) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/structurebuilder/builderror/devicenotsupported",
                    "title": "case deviceNotSupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/structurebuilder/builderror/exceedscenesizelimit",
                    "title": "case exceedSceneSizeLimit",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/structurebuilder/builderror/insufficientinput",
                    "title": "case insufficientInput",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/structurebuilder/builderror/internalerror",
                    "title": "case internalError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/structurebuilder/builderror/invalidinput",
                    "title": "case invalidInput",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/roomplan/structurebuilder/builderror/invalidroomlocation",
                    "title": "case invalidRoomLocation",
                    "type": "case"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/structurebuilder/builderror/errordescription",
                    "title": "var errorDescription: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/roomplan/structurebuilder/builderror/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/structurebuilder/builderror/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/structurebuilder/builderror/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/roomplan/structurebuilder/builderror/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/structurebuilder/builderror/flatdescription",
                        "title": "var flatDescription: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/structurebuilder/builderror/localizeddescription",
                        "title": "var localizedDescription: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/structurebuilder/builderror/nesteddescription",
                        "title": "var nestedDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/roomplan/structurebuilder/builderror/error-implementations",
                    "title": "Error Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/roomplan/structurebuilder/builderror/errordescription-4nz8u",
                        "title": "var errorDescription: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/structurebuilder/builderror/failurereason",
                        "title": "var failureReason: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/structurebuilder/builderror/helpanchor",
                        "title": "var helpAnchor: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/roomplan/structurebuilder/builderror/recoverysuggestion",
                        "title": "var recoverySuggestion: String?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/roomplan/structurebuilder/builderror/localizederror-implementations",
                    "title": "LocalizedError Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/roomplan/structurebuilder/builderror",
                "title": "StructureBuilder.BuildError",
                "type": "enum"
              }
            ],
            "path": "/documentation/roomplan/structurebuilder",
            "title": "StructureBuilder",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Choosing an export option",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/capturedroom/usdexportoptions/parametric",
                "title": "static let parametric: CapturedRoom.USDExportOptions",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedroom/usdexportoptions/mesh",
                "title": "static let mesh: CapturedRoom.USDExportOptions",
                "type": "property"
              },
              {
                "path": "/documentation/roomplan/capturedroom/usdexportoptions/model",
                "title": "static let model: CapturedRoom.USDExportOptions",
                "type": "property"
              },
              {
                "title": "Creating an export option",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/capturedroom/usdexportoptions/init(rawvalue:)",
                "title": "init(rawValue: Int32)",
                "type": "init"
              },
              {
                "path": "/documentation/roomplan/capturedroom/usdexportoptions/rawvalue-swift.property",
                "title": "let rawValue: Int32",
                "type": "property"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/roomplan/capturedroom/usdexportoptions/arrayliteralelement",
                "title": "CapturedRoom.USDExportOptions.ArrayLiteralElement",
                "type": "typealias"
              },
              {
                "path": "/documentation/roomplan/capturedroom/usdexportoptions/element",
                "title": "CapturedRoom.USDExportOptions.Element",
                "type": "typealias"
              },
              {
                "path": "/documentation/roomplan/capturedroom/usdexportoptions/rawvalue-swift.typealias",
                "title": "CapturedRoom.USDExportOptions.RawValue",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/roomplan/capturedroom/usdexportoptions/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/contains(_:)",
                    "title": "func contains(Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/formintersection(_:)",
                    "title": "func formIntersection(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/formsymmetricdifference(_:)",
                    "title": "func formSymmetricDifference(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/formunion(_:)",
                    "title": "func formUnion(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/insert(_:)",
                    "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/intersection(_:)",
                    "title": "func intersection(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/remove(_:)",
                    "title": "func remove(Self.Element) -> Self.Element?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/symmetricdifference(_:)",
                    "title": "func symmetricDifference(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/union(_:)",
                    "title": "func union(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/update(with:)",
                    "title": "func update(with: Self.Element) -> Self.Element?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/roomplan/capturedroom/usdexportoptions/optionset-implementations",
                "title": "OptionSet Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/init(_:)",
                    "title": "init<S>(S)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/init(arrayliteral:)",
                    "title": "init(arrayLiteral: Self.Element...)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/isempty",
                    "title": "var isEmpty: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/isdisjoint(with:)",
                    "title": "func isDisjoint(with: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/isstrictsubset(of:)",
                    "title": "func isStrictSubset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/isstrictsuperset(of:)",
                    "title": "func isStrictSuperset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/issubset(of:)",
                    "title": "func isSubset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/issuperset(of:)",
                    "title": "func isSuperset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/subtract(_:)",
                    "title": "func subtract(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/roomplan/capturedroom/usdexportoptions/subtracting(_:)",
                    "title": "func subtracting(Self) -> Self",
                    "type": "method"
                  }
                ],
                "path": "/documentation/roomplan/capturedroom/usdexportoptions/setalgebra-implementations",
                "title": "SetAlgebra Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/roomplan/capturedroom/usdexportoptions",
            "title": "CapturedRoom.USDExportOptions",
            "type": "struct"
          }
        ],
        "path": "/documentation/roomplan",
        "title": "RoomPlan",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
