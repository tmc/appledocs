{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/eventkit/accessing-the-event-store",
            "title": "Accessing the event store",
            "type": "article"
          },
          {
            "path": "/documentation/eventkit/accessing-calendar-using-eventkit-and-eventkitui",
            "title": "Accessing Calendar using EventKit and EventKitUI",
            "type": "sampleCode"
          },
          {
            "title": "Events and reminders",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/eventkit/creating-events-and-reminders",
            "title": "Creating events and reminders",
            "type": "article"
          },
          {
            "path": "/documentation/eventkit/retrieving-events-and-reminders",
            "title": "Retrieving events and reminders",
            "type": "article"
          },
          {
            "path": "/documentation/eventkit/updating-with-notifications",
            "title": "Updating with notifications",
            "type": "collection"
          },
          {
            "path": "/documentation/eventkit/managing-location-based-reminders",
            "title": "Managing Location-Based Reminders",
            "type": "sampleCode"
          },
          {
            "title": "Calendars",
            "type": "groupMarker"
          },
          {
            "title": "Recurrence",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/eventkit/creating-a-recurring-event",
            "title": "Creating a recurring event",
            "type": "article"
          },
          {
            "title": "Alarms",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/eventkit/setting-an-alarm",
            "title": "Setting an alarm",
            "type": "article"
          },
          {
            "title": "Common objects",
            "type": "groupMarker"
          },
          {
            "title": "Virtual conferences",
            "type": "groupMarker"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/eventkit",
        "title": "EventKit",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/eventkit/accessing-the-event-store",
            "title": "Accessing the event store",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating event stores",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/init(sources:)",
                "title": "- initWithSources:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/eventstoreidentifier",
                "title": "eventStoreIdentifier",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekeventstore/initwithaccesstoentitytypes:",
                "title": "- initWithAccessToEntityTypes:",
                "type": "method"
              },
              {
                "title": "Requesting access to events and reminders",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/requestwriteonlyaccesstoevents(completion:)",
                "title": "- requestWriteOnlyAccessToEventsWithCompletion:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/requestfullaccesstoevents(completion:)",
                "title": "- requestFullAccessToEventsWithCompletion:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/requestfullaccesstoreminders(completion:)",
                "title": "- requestFullAccessToRemindersWithCompletion:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/authorizationstatus(for:)",
                "title": "+ authorizationStatusForEntityType:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekauthorizationstatus/fullaccess",
                    "title": "EKAuthorizationStatusFullAccess",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekauthorizationstatus/writeonly",
                    "title": "EKAuthorizationStatusWriteOnly",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekauthorizationstatus/denied",
                    "title": "EKAuthorizationStatusDenied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekauthorizationstatus/notdetermined",
                    "title": "EKAuthorizationStatusNotDetermined",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekauthorizationstatus/restricted",
                    "title": "EKAuthorizationStatusRestricted",
                    "type": "case"
                  },
                  {
                    "title": "Deprecated values",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekauthorizationstatus/authorized",
                    "title": "EKAuthorizationStatusAuthorized",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekauthorizationstatus",
                "title": "EKAuthorizationStatus",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/ekeventstorerequestaccesscompletionhandler",
                "title": "EKEventStoreRequestAccessCompletionHandler",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nscalendarsfullaccessusagedescription",
                "title": "NSCalendarsFullAccessUsageDescription",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nscalendarswriteonlyaccessusagedescription",
                "title": "NSCalendarsWriteOnlyAccessUsageDescription",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nsremindersfullaccessusagedescription",
                "title": "NSRemindersFullAccessUsageDescription",
                "type": "typealias"
              },
              {
                "title": "Accessing account sources",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/sources",
                "title": "sources",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/delegatesources",
                "title": "delegateSources",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/source(withidentifier:)",
                "title": "- sourceWithIdentifier:",
                "type": "method"
              },
              {
                "title": "Saving and restoring state",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/commit()",
                "title": "- commit:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/reset()",
                "title": "- reset",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/refreshsourcesifnecessary()",
                "title": "- refreshSourcesIfNecessary",
                "type": "method"
              },
              {
                "title": "Accessing calendars",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/defaultcalendarfornewevents",
                "title": "defaultCalendarForNewEvents",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/defaultcalendarfornewreminders()",
                "title": "- defaultCalendarForNewReminders",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/calendars(for:)",
                "title": "- calendarsForEntityType:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/calendar(withidentifier:)",
                "title": "- calendarWithIdentifier:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/savecalendar(_:commit:)",
                "title": "- saveCalendar:commit:error:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/removecalendar(_:commit:)",
                "title": "- removeCalendar:commit:error:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekeventstore/calendars",
                "title": "calendars",
                "type": "property"
              },
              {
                "title": "Accessing calendar events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/event(withidentifier:)",
                "title": "- eventWithIdentifier:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/calendaritem(withidentifier:)",
                "title": "- calendarItemWithIdentifier:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/calendaritems(withexternalidentifier:)",
                "title": "- calendarItemsWithExternalIdentifier:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/remove(_:span:)",
                "title": "- removeEvent:span:error:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/remove(_:span:commit:)",
                "title": "- removeEvent:span:commit:error:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/remove(_:commit:)",
                "title": "- removeReminder:commit:error:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/save(_:span:)",
                "title": "- saveEvent:span:error:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/save(_:span:commit:)",
                "title": "- saveEvent:span:commit:error:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/save(_:commit:)",
                "title": "- saveReminder:commit:error:",
                "type": "method"
              },
              {
                "title": "Searching calendars",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/enumerateevents(matching:using:)",
                "title": "- enumerateEventsMatchingPredicate:usingBlock:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/events(matching:)",
                "title": "- eventsMatchingPredicate:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/fetchreminders(matching:completion:)",
                "title": "- fetchRemindersMatchingPredicate:completion:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/cancelfetchrequest(_:)",
                "title": "- cancelFetchRequest:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/predicateforevents(withstart:end:calendars:)",
                "title": "- predicateForEventsWithStartDate:endDate:calendars:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/predicateforreminders(in:)",
                "title": "- predicateForRemindersInCalendars:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/predicateforcompletedreminders(withcompletiondatestarting:ending:calendars:)",
                "title": "- predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/predicateforincompletereminders(withduedatestarting:ending:calendars:)",
                "title": "- predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventsearchcallback",
                "title": "EKEventSearchCallback",
                "type": "typealias"
              },
              {
                "title": "Deprecated methods",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekeventstore/requestaccess(to:completion:)",
                "title": "- requestAccessToEntityType:completion:",
                "type": "method"
              }
            ],
            "path": "/documentation/eventkit/ekeventstore",
            "title": "EKEventStore",
            "type": "class"
          },
          {
            "path": "/documentation/eventkit/accessing-calendar-using-eventkit-and-eventkitui",
            "title": "Accessing Calendar using EventKit and EventKitUI",
            "type": "sampleCode"
          },
          {
            "title": "Events and reminders",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/eventkit/creating-events-and-reminders",
            "title": "Creating events and reminders",
            "type": "article"
          },
          {
            "path": "/documentation/eventkit/retrieving-events-and-reminders",
            "title": "Retrieving events and reminders",
            "type": "article"
          },
          {
            "path": "/documentation/eventkit/updating-with-notifications",
            "title": "Updating with notifications",
            "type": "collection"
          },
          {
            "path": "/documentation/eventkit/managing-location-based-reminders",
            "title": "Managing Location-Based Reminders",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Creating Events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekevent/init(eventstore:)",
                "title": "+ eventWithEventStore:",
                "type": "method"
              },
              {
                "title": "Scheduling Events",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventstatus/none",
                    "title": "EKEventStatusNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventstatus/confirmed",
                    "title": "EKEventStatusConfirmed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventstatus/tentative",
                    "title": "EKEventStatusTentative",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventstatus/canceled",
                    "title": "EKEventStatusCanceled",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekeventstatus",
                "title": "EKEventStatus",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventavailability/notsupported",
                    "title": "EKEventAvailabilityNotSupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventavailability/busy",
                    "title": "EKEventAvailabilityBusy",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventavailability/free",
                    "title": "EKEventAvailabilityFree",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventavailability/tentative",
                    "title": "EKEventAvailabilityTentative",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventavailability/unavailable",
                    "title": "EKEventAvailabilityUnavailable",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekeventavailability",
                "title": "EKEventAvailability",
                "type": "enum"
              },
              {
                "title": "Comparing Events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekevent/comparestartdate(with:)",
                "title": "- compareStartDateWithEvent:",
                "type": "method"
              },
              {
                "title": "Accessing Event Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekevent/eventidentifier",
                "title": "eventIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/availability",
                "title": "availability",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/startdate",
                "title": "startDate",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/enddate",
                "title": "endDate",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/isallday",
                "title": "allDay",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/occurrencedate",
                "title": "occurrenceDate",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/isdetached",
                "title": "isDetached",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/organizer",
                "title": "organizer",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/status",
                "title": "status",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/birthdaycontactidentifier",
                "title": "birthdayContactIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/structuredlocation",
                "title": "structuredLocation",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekevent/birthdaypersonid",
                "title": "birthdayPersonID",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekevent/birthdaypersonuniqueid",
                "title": "birthdayPersonUniqueID",
                "type": "property"
              },
              {
                "title": "Refreshing Event Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekevent/refresh()",
                "title": "- refresh",
                "type": "method"
              }
            ],
            "path": "/documentation/eventkit/ekevent",
            "title": "EKEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Reminder",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekreminder/init(eventstore:)",
                "title": "+ reminderWithEventStore:",
                "type": "method"
              },
              {
                "title": "Accessing Reminder Properties",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekreminderpriority/none",
                    "title": "EKReminderPriorityNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekreminderpriority/high",
                    "title": "EKReminderPriorityHigh",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekreminderpriority/medium",
                    "title": "EKReminderPriorityMedium",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekreminderpriority/low",
                    "title": "EKReminderPriorityLow",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekreminderpriority",
                "title": "EKReminderPriority",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/ekreminder/priority",
                "title": "priority",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekreminder/startdatecomponents",
                "title": "startDateComponents",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekreminder/duedatecomponents",
                "title": "dueDateComponents",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekreminder/iscompleted",
                "title": "completed",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekreminder/completiondate",
                "title": "completionDate",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/ekreminder",
            "title": "EKReminder",
            "type": "class"
          },
          {
            "title": "Calendars",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating Calendars",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/init(for:eventstore:)",
                "title": "+ calendarForEntityType:eventStore:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekcalendar/init(eventstore:)",
                "title": "+ calendarWithEventStore:",
                "type": "method"
              },
              {
                "title": "Accessing Calendar Properties",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendartype/local",
                    "title": "EKCalendarTypeLocal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendartype/caldav",
                    "title": "EKCalendarTypeCalDAV",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendartype/exchange",
                    "title": "EKCalendarTypeExchange",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendartype/subscription",
                    "title": "EKCalendarTypeSubscription",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendartype/birthday",
                    "title": "EKCalendarTypeBirthday",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekcalendartype",
                "title": "EKCalendarType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendareventavailabilitymask/busy",
                    "title": "EKCalendarEventAvailabilityBusy",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendareventavailabilitymask/free",
                    "title": "EKCalendarEventAvailabilityFree",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendareventavailabilitymask/tentative",
                    "title": "EKCalendarEventAvailabilityTentative",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendareventavailabilitymask/unavailable",
                    "title": "EKCalendarEventAvailabilityUnavailable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendareventavailabilitymask/ekcalendareventavailabilitynone",
                    "title": "EKCalendarEventAvailabilityNone",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekcalendareventavailabilitymask",
                "title": "EKCalendarEventAvailabilityMask",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/allowscontentmodifications",
                "title": "allowsContentModifications",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/cgcolor",
                "title": "CGColor",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/color",
                "title": "color",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/isimmutable",
                "title": "immutable",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/title",
                "title": "title",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/type",
                "title": "type",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/allowedentitytypes",
                "title": "allowedEntityTypes",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/source",
                "title": "source",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/issubscribed",
                "title": "subscribed",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/supportedeventavailabilities",
                "title": "supportedEventAvailabilities",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/calendaridentifier",
                "title": "calendarIdentifier",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/datetime_components_do_not_use()",
                "title": "DATETIME_COMPONENTS_DO_NOT_USE",
                "type": "func"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/date_components_do_not_use()",
                "title": "DATE_COMPONENTS_DO_NOT_USE",
                "type": "func"
              }
            ],
            "path": "/documentation/eventkit/ekcalendar",
            "title": "EKCalendar",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Defining Participants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantrole/unknown",
                    "title": "EKParticipantRoleUnknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantrole/required",
                    "title": "EKParticipantRoleRequired",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantrole/optional",
                    "title": "EKParticipantRoleOptional",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantrole/chair",
                    "title": "EKParticipantRoleChair",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantrole/nonparticipant",
                    "title": "EKParticipantRoleNonParticipant",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekparticipantrole",
                "title": "EKParticipantRole",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipanttype/unknown",
                    "title": "EKParticipantTypeUnknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipanttype/person",
                    "title": "EKParticipantTypePerson",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipanttype/room",
                    "title": "EKParticipantTypeRoom",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipanttype/resource",
                    "title": "EKParticipantTypeResource",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipanttype/group",
                    "title": "EKParticipantTypeGroup",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekparticipanttype",
                "title": "EKParticipantType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/unknown",
                    "title": "EKParticipantStatusUnknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/pending",
                    "title": "EKParticipantStatusPending",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/accepted",
                    "title": "EKParticipantStatusAccepted",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/declined",
                    "title": "EKParticipantStatusDeclined",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/tentative",
                    "title": "EKParticipantStatusTentative",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/delegated",
                    "title": "EKParticipantStatusDelegated",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/completed",
                    "title": "EKParticipantStatusCompleted",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/inprocess",
                    "title": "EKParticipantStatusInProcess",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekparticipantstatus",
                "title": "EKParticipantStatus",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/none",
                    "title": "EKParticipantScheduleStatusNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/pending",
                    "title": "EKParticipantScheduleStatusPending",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/sent",
                    "title": "EKParticipantScheduleStatusSent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/delivered",
                    "title": "EKParticipantScheduleStatusDelivered",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/recipientnotrecognized",
                    "title": "EKParticipantScheduleStatusRecipientNotRecognized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/noprivileges",
                    "title": "EKParticipantScheduleStatusNoPrivileges",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/deliveryfailed",
                    "title": "EKParticipantScheduleStatusDeliveryFailed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/cannotdeliver",
                    "title": "EKParticipantScheduleStatusCannotDeliver",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/recipientnotallowed",
                    "title": "EKParticipantScheduleStatusRecipientNotAllowed",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekparticipantschedulestatus",
                "title": "EKParticipantScheduleStatus",
                "type": "enum"
              },
              {
                "title": "Accessing Participant Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/iscurrentuser",
                "title": "currentUser",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/name",
                "title": "name",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/participantrole",
                "title": "participantRole",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/participantstatus",
                "title": "participantStatus",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/participanttype",
                "title": "participantType",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/url",
                "title": "URL",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/contactpredicate",
                "title": "contactPredicate",
                "type": "property"
              },
              {
                "title": "Finding Participant Address Book Records",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/abrecord(with:)",
                "title": "- ABRecordWithAddressBook:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekparticipant/abperson(in:)",
                "title": "- ABPersonInAddressBook:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/abaddressbook",
                "title": "ABAddressBookRef",
                "type": "typealias"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/abrecord",
                "title": "ABRecordRef",
                "type": "typealias"
              }
            ],
            "path": "/documentation/eventkit/ekparticipant",
            "title": "EKParticipant",
            "type": "class"
          },
          {
            "title": "Recurrence",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/eventkit/creating-a-recurring-event",
            "title": "Creating a recurring event",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a Day of the Week",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekweekday/sunday",
                    "title": "EKWeekdaySunday",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekweekday/monday",
                    "title": "EKWeekdayMonday",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekweekday/tuesday",
                    "title": "EKWeekdayTuesday",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekweekday/wednesday",
                    "title": "EKWeekdayWednesday",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekweekday/thursday",
                    "title": "EKWeekdayThursday",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekweekday/friday",
                    "title": "EKWeekdayFriday",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekweekday/saturday",
                    "title": "EKWeekdaySaturday",
                    "type": "case"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekweekday/eksunday",
                    "title": "EKSunday",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekweekday/ekmonday",
                    "title": "EKMonday",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekweekday/ektuesday",
                    "title": "EKTuesday",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekweekday/ekwednesday",
                    "title": "EKWednesday",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekweekday/ekthursday",
                    "title": "EKThursday",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekweekday/ekfriday",
                    "title": "EKFriday",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekweekday/eksaturday",
                    "title": "EKSaturday",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekweekday",
                "title": "EKWeekday",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencedayofweek/init(_:)",
                "title": "+ dayOfWeek:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencedayofweek/init(_:weeknumber:)",
                "title": "+ dayOfWeek:weekNumber:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencedayofweek/init(dayoftheweek:weeknumber:)",
                "title": "- initWithDayOfTheWeek:weekNumber:",
                "type": "method"
              },
              {
                "title": "Accessing Properties of a Day of the Week",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencedayofweek/dayoftheweek",
                "title": "dayOfTheWeek",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencedayofweek/weeknumber",
                "title": "weekNumber",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/ekrecurrencedayofweek",
            "title": "EKRecurrenceDayOfWeek",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Recurrence End",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekrecurrenceend/init(end:)",
                "title": "+ recurrenceEndWithEndDate:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekrecurrenceend/init(occurrencecount:)",
                "title": "+ recurrenceEndWithOccurrenceCount:",
                "type": "method"
              },
              {
                "title": "Accessing Recurrence End Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekrecurrenceend/enddate",
                "title": "endDate",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrenceend/occurrencecount",
                "title": "occurrenceCount",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/ekrecurrenceend",
            "title": "EKRecurrenceEnd",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Basic Recurrence Rule",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekspan/thisevent",
                    "title": "EKSpanThisEvent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekspan/futureevents",
                    "title": "EKSpanFutureEvents",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekspan",
                "title": "EKSpan",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/init(recurrencewith:interval:end:)",
                "title": "- initRecurrenceWithFrequency:interval:end:",
                "type": "method"
              },
              {
                "title": "Creating a Complex Recurrence Rule",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/init(recurrencewith:interval:daysoftheweek:daysofthemonth:monthsoftheyear:weeksoftheyear:daysoftheyear:setpositions:end:)",
                "title": "- initRecurrenceWithFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:",
                "type": "method"
              },
              {
                "title": "Accessing Recurrence Rule Properties",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekrecurrencefrequency/daily",
                    "title": "EKRecurrenceFrequencyDaily",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekrecurrencefrequency/weekly",
                    "title": "EKRecurrenceFrequencyWeekly",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekrecurrencefrequency/monthly",
                    "title": "EKRecurrenceFrequencyMonthly",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekrecurrencefrequency/yearly",
                    "title": "EKRecurrenceFrequencyYearly",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekrecurrencefrequency",
                "title": "EKRecurrenceFrequency",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/calendaridentifier",
                "title": "calendarIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/recurrenceend",
                "title": "recurrenceEnd",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/frequency",
                "title": "frequency",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/interval",
                "title": "interval",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/firstdayoftheweek",
                "title": "firstDayOfTheWeek",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/daysoftheweek",
                "title": "daysOfTheWeek",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/daysofthemonth",
                "title": "daysOfTheMonth",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/daysoftheyear",
                "title": "daysOfTheYear",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/weeksoftheyear",
                "title": "weeksOfTheYear",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/monthsoftheyear",
                "title": "monthsOfTheYear",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/setpositions",
                "title": "setPositions",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ek_lose_fractional_seconds_do_not_use()",
                "title": "EK_LOSE_FRACTIONAL_SECONDS_DO_NOT_USE",
                "type": "func"
              }
            ],
            "path": "/documentation/eventkit/ekrecurrencerule",
            "title": "EKRecurrenceRule",
            "type": "class"
          },
          {
            "title": "Alarms",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/eventkit/setting-an-alarm",
            "title": "Setting an alarm",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating an Alarm",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekalarm/init(absolutedate:)",
                "title": "+ alarmWithAbsoluteDate:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekalarm/init(relativeoffset:)",
                "title": "+ alarmWithRelativeOffset:",
                "type": "method"
              },
              {
                "title": "Accessing Alarm Dates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekalarm/absolutedate",
                "title": "absoluteDate",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekalarm/relativeoffset",
                "title": "relativeOffset",
                "type": "property"
              },
              {
                "title": "Setting GeoFence-based Alarms",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmproximity/none",
                    "title": "EKAlarmProximityNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmproximity/enter",
                    "title": "EKAlarmProximityEnter",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmproximity/leave",
                    "title": "EKAlarmProximityLeave",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekalarmproximity",
                "title": "EKAlarmProximity",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/ekalarm/proximity",
                "title": "proximity",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekalarm/structuredlocation",
                "title": "structuredLocation",
                "type": "property"
              },
              {
                "title": "Triggering Alarm Actions",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmtype/display",
                    "title": "EKAlarmTypeDisplay",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmtype/audio",
                    "title": "EKAlarmTypeAudio",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmtype/procedure",
                    "title": "EKAlarmTypeProcedure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmtype/email",
                    "title": "EKAlarmTypeEmail",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekalarmtype",
                "title": "EKAlarmType",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/ekalarm/type",
                "title": "type",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekalarm/emailaddress",
                "title": "emailAddress",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekalarm/soundname",
                "title": "soundName",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekalarm/url",
                "title": "url",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/ekalarm",
            "title": "EKAlarm",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating Structured Locations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekstructuredlocation/init(title:)",
                "title": "+ locationWithTitle:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekstructuredlocation/init(mapitem:)",
                "title": "+ locationWithMapItem:",
                "type": "method"
              },
              {
                "title": "Accessing Structured Location Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekstructuredlocation/title",
                "title": "title",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekstructuredlocation/geolocation",
                "title": "geoLocation",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekstructuredlocation/radius",
                "title": "radius",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/ekstructuredlocation",
            "title": "EKStructuredLocation",
            "type": "class"
          },
          {
            "title": "Common objects",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Accessing Calendar Items",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/calendaritemidentifier",
                "title": "calendarItemIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/calendaritemexternalidentifier",
                "title": "calendarItemExternalIdentifier",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekcalendaritem/uuid",
                "title": "UUID",
                "type": "property"
              },
              {
                "title": "Accessing Calendar Item Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/calendar",
                "title": "calendar",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/title",
                "title": "title",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/location",
                "title": "location",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/creationdate",
                "title": "creationDate",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/lastmodifieddate",
                "title": "lastModifiedDate",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/timezone",
                "title": "timeZone",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/url",
                "title": "URL",
                "type": "property"
              },
              {
                "title": "Attaching Notes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/hasnotes",
                "title": "hasNotes",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/notes",
                "title": "notes",
                "type": "property"
              },
              {
                "title": "Displaying Attendees",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/hasattendees",
                "title": "hasAttendees",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/attendees",
                "title": "attendees",
                "type": "property"
              },
              {
                "title": "Adding and Removing Alarms",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/hasalarms",
                "title": "hasAlarms",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/addalarm(_:)",
                "title": "- addAlarm:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/removealarm(_:)",
                "title": "- removeAlarm:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/alarms",
                "title": "alarms",
                "type": "property"
              },
              {
                "title": "Setting Recurrence Rules",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/hasrecurrencerules",
                "title": "hasRecurrenceRules",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/addrecurrencerule(_:)",
                "title": "- addRecurrenceRule:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/removerecurrencerule(_:)",
                "title": "- removeRecurrenceRule:",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/recurrencerules",
                "title": "recurrenceRules",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/ekcalendaritem",
            "title": "EKCalendarItem",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Saving and Restoring State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekobject/haschanges",
                "title": "hasChanges",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekobject/isnew",
                "title": "new",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekobject/refresh()",
                "title": "- refresh",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekobject/reset()",
                "title": "- reset",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekobject/rollback()",
                "title": "- rollback",
                "type": "method"
              }
            ],
            "path": "/documentation/eventkit/ekobject",
            "title": "EKObject",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessing Source Properties",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "EventKit Source Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/eksourcetype/local",
                    "title": "EKSourceTypeLocal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/eksourcetype/exchange",
                    "title": "EKSourceTypeExchange",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/eksourcetype/caldav",
                    "title": "EKSourceTypeCalDAV",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/eksourcetype/mobileme",
                    "title": "EKSourceTypeMobileMe",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/eksourcetype/subscribed",
                    "title": "EKSourceTypeSubscribed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/eksourcetype/birthdays",
                    "title": "EKSourceTypeBirthdays",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/eksourcetype",
                "title": "EKSourceType",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/eksource/sourceidentifier",
                "title": "sourceIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/eksource/sourcetype",
                "title": "sourceType",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/eksource/title",
                "title": "title",
                "type": "property"
              },
              {
                "title": "Accessing Calendars",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/eksource/calendars(for:)",
                "title": "- calendarsForEntityType:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/eksource/calendars",
                "title": "calendars",
                "type": "property"
              },
              {
                "title": "Entity Type",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Specifying Multiple Entities",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/eventkit/ekentitymask/event",
                        "title": "EKEntityMaskEvent",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/eventkit/ekentitymask/reminder",
                        "title": "EKEntityMaskReminder",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/eventkit/ekentitymask",
                    "title": "EKEntityMask",
                    "type": "enum"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekentitytype/event",
                    "title": "EKEntityTypeEvent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekentitytype/reminder",
                    "title": "EKEntityTypeReminder",
                    "type": "case"
                  }
                ],
                "path": "/documentation/eventkit/ekentitytype",
                "title": "EKEntityType",
                "type": "enum"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/eksource/isdelegate",
                "title": "isDelegate",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/eksource",
            "title": "EKSource",
            "type": "class"
          },
          {
            "title": "Virtual conferences",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Providing Rooms",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferenceprovider/fetchavailableroomtypes(completionhandler:)",
                "title": "- fetchAvailableRoomTypesWithCompletionHandler:",
                "type": "method"
              },
              {
                "title": "Providing Virtual Conferences",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferenceprovider/fetchvirtualconference(identifier:completionhandler:)",
                "title": "- fetchVirtualConferenceForIdentifier:completionHandler:",
                "type": "method"
              }
            ],
            "path": "/documentation/eventkit/ekvirtualconferenceprovider",
            "title": "EKVirtualConferenceProvider",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating Conference Descriptors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferencedescriptor/init(title:urldescriptors:conferencedetails:)",
                "title": "- initWithTitle:URLDescriptors:conferenceDetails:",
                "type": "method"
              },
              {
                "title": "Configuring Virtual Conferences",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferencedescriptor/title",
                "title": "title",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferencedescriptor/urldescriptors",
                "title": "URLDescriptors",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating URL Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekvirtualconferenceurldescriptor/init(title:url:)",
                    "title": "- initWithTitle:URL:",
                    "type": "method"
                  },
                  {
                    "title": "Configuring URL Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekvirtualconferenceurldescriptor/title",
                    "title": "title",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/eventkit/ekvirtualconferenceurldescriptor/url",
                    "title": "URL",
                    "type": "property"
                  }
                ],
                "path": "/documentation/eventkit/ekvirtualconferenceurldescriptor",
                "title": "EKVirtualConferenceURLDescriptor",
                "type": "class"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferencedescriptor/conferencedetails",
                "title": "conferenceDetails",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/ekvirtualconferencedescriptor",
            "title": "EKVirtualConferenceDescriptor",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating Room Type Descriptors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferenceroomtypedescriptor/init(title:identifier:)",
                "title": "- initWithTitle:identifier:",
                "type": "method"
              },
              {
                "title": "Configuring Room Type Descriptors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferenceroomtypedescriptor/title",
                "title": "title",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferenceroomtypedescriptor/identifier",
                "title": "identifier",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferenceroomtypeidentifier",
                "title": "EKVirtualConferenceRoomTypeIdentifier",
                "type": "typealias"
              }
            ],
            "path": "/documentation/eventkit/ekvirtualconferenceroomtypedescriptor",
            "title": "EKVirtualConferenceRoomTypeDescriptor",
            "type": "class"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/eventnotmutable",
                "title": "EKErrorEventNotMutable",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/nocalendar",
                "title": "EKErrorNoCalendar",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/nostartdate",
                "title": "EKErrorNoStartDate",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/noenddate",
                "title": "EKErrorNoEndDate",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/datesinverted",
                "title": "EKErrorDatesInverted",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/internalfailure",
                "title": "EKErrorInternalFailure",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/calendarreadonly",
                "title": "EKErrorCalendarReadOnly",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/durationgreaterthanrecurrence",
                "title": "EKErrorDurationGreaterThanRecurrence",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/alarmgreaterthanrecurrence",
                "title": "EKErrorAlarmGreaterThanRecurrence",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/startdatetoofarinfuture",
                "title": "EKErrorStartDateTooFarInFuture",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/startdatecollideswithotheroccurrence",
                "title": "EKErrorStartDateCollidesWithOtherOccurrence",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/objectbelongstodifferentstore",
                "title": "EKErrorObjectBelongsToDifferentStore",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/invitescannotbemoved",
                "title": "EKErrorInvitesCannotBeMoved",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/invalidspan",
                "title": "EKErrorInvalidSpan",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/calendarhasnosource",
                "title": "EKErrorCalendarHasNoSource",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/calendarsourcecannotbemodified",
                "title": "EKErrorCalendarSourceCannotBeModified",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/calendarisimmutable",
                "title": "EKErrorCalendarIsImmutable",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/sourcedoesnotallowcalendaradddelete",
                "title": "EKErrorSourceDoesNotAllowCalendarAddDelete",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/recurringreminderrequiresduedate",
                "title": "EKErrorRecurringReminderRequiresDueDate",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/structuredlocationsnotsupported",
                "title": "EKErrorStructuredLocationsNotSupported",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/reminderlocationsnotsupported",
                "title": "EKErrorReminderLocationsNotSupported",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/alarmproximitynotsupported",
                "title": "EKErrorAlarmProximityNotSupported",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/calendardoesnotallowevents",
                "title": "EKErrorCalendarDoesNotAllowEvents",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/calendardoesnotallowreminders",
                "title": "EKErrorCalendarDoesNotAllowReminders",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/sourcedoesnotallowreminders",
                "title": "EKErrorSourceDoesNotAllowReminders",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/sourcedoesnotallowevents",
                "title": "EKErrorSourceDoesNotAllowEvents",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/priorityisinvalid",
                "title": "EKErrorPriorityIsInvalid",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/invalidentitytype",
                "title": "EKErrorInvalidEntityType",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/procedurealarmsnotmutable",
                "title": "EKErrorProcedureAlarmsNotMutable",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/eventstorenotauthorized",
                "title": "EKErrorEventStoreNotAuthorized",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/osnotsupported",
                "title": "EKErrorOSNotSupported",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/invalidinvitereplycalendar",
                "title": "EKErrorInvalidInviteReplyCalendar",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/notificationscollectionflagnotset",
                "title": "EKErrorNotificationsCollectionFlagNotSet",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/sourcemismatch",
                "title": "EKErrorSourceMismatch",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/notificationcollectionmismatch",
                "title": "EKErrorNotificationCollectionMismatch",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/notificationsavedwithoutcollection",
                "title": "EKErrorNotificationSavedWithoutCollection",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/last",
                "title": "EKErrorLast",
                "type": "case"
              },
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/reminderalarmcontainsemailorurl",
                "title": "EKErrorReminderAlarmContainsEmailOrUrl",
                "type": "case"
              }
            ],
            "path": "/documentation/eventkit/ekerror/code",
            "title": "EKErrorCode",
            "type": "enum"
          },
          {
            "path": "/documentation/eventkit/ekerrordomain",
            "title": "EKErrorDomain",
            "type": "var"
          }
        ],
        "path": "/documentation/eventkit",
        "title": "EventKit",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/eventkit/accessing-the-event-store",
            "title": "Accessing the event store",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating event stores",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/init(sources:)",
                "title": "init(sources: [EKSource])",
                "type": "init"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/eventstoreidentifier",
                "title": "var eventStoreIdentifier: String",
                "type": "property"
              },
              {
                "title": "Requesting access to events and reminders",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/requestwriteonlyaccesstoevents(completion:)",
                "title": "func requestWriteOnlyAccessToEvents(completion: EKEventStoreRequestAccessCompletionHandler)",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/requestfullaccesstoevents(completion:)",
                "title": "func requestFullAccessToEvents(completion: EKEventStoreRequestAccessCompletionHandler)",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/requestfullaccesstoreminders(completion:)",
                "title": "func requestFullAccessToReminders(completion: EKEventStoreRequestAccessCompletionHandler)",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/authorizationstatus(for:)",
                "title": "class func authorizationStatus(for: EKEntityType) -> EKAuthorizationStatus",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekauthorizationstatus/fullaccess",
                    "title": "case fullAccess",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekauthorizationstatus/writeonly",
                    "title": "case writeOnly",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekauthorizationstatus/denied",
                    "title": "case denied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekauthorizationstatus/notdetermined",
                    "title": "case notDetermined",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekauthorizationstatus/restricted",
                    "title": "case restricted",
                    "type": "case"
                  },
                  {
                    "title": "Deprecated values",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekauthorizationstatus/authorized",
                    "title": "static var authorized: EKAuthorizationStatus",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekauthorizationstatus/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/ekauthorizationstatus",
                "title": "EKAuthorizationStatus",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/ekeventstorerequestaccesscompletionhandler",
                "title": "EKEventStoreRequestAccessCompletionHandler",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nscalendarsfullaccessusagedescription",
                "title": "NSCalendarsFullAccessUsageDescription",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nscalendarswriteonlyaccessusagedescription",
                "title": "NSCalendarsWriteOnlyAccessUsageDescription",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nsremindersfullaccessusagedescription",
                "title": "NSRemindersFullAccessUsageDescription",
                "type": "typealias"
              },
              {
                "title": "Accessing account sources",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/sources",
                "title": "var sources: [EKSource]",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/delegatesources",
                "title": "var delegateSources: [EKSource]",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/source(withidentifier:)",
                "title": "func source(withIdentifier: String) -> EKSource?",
                "type": "method"
              },
              {
                "title": "Saving and restoring state",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/commit()",
                "title": "func commit() throws",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/reset()",
                "title": "func reset()",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/refreshsourcesifnecessary()",
                "title": "func refreshSourcesIfNecessary()",
                "type": "method"
              },
              {
                "title": "Accessing calendars",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/defaultcalendarfornewevents",
                "title": "var defaultCalendarForNewEvents: EKCalendar?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/defaultcalendarfornewreminders()",
                "title": "func defaultCalendarForNewReminders() -> EKCalendar?",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/calendars(for:)",
                "title": "func calendars(for: EKEntityType) -> [EKCalendar]",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/calendar(withidentifier:)",
                "title": "func calendar(withIdentifier: String) -> EKCalendar?",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/savecalendar(_:commit:)",
                "title": "func saveCalendar(EKCalendar, commit: Bool) throws",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/removecalendar(_:commit:)",
                "title": "func removeCalendar(EKCalendar, commit: Bool) throws",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekeventstore/calendars",
                "title": "var calendars: [EKCalendar]",
                "type": "property"
              },
              {
                "title": "Accessing calendar events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/event(withidentifier:)",
                "title": "func event(withIdentifier: String) -> EKEvent?",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/calendaritem(withidentifier:)",
                "title": "func calendarItem(withIdentifier: String) -> EKCalendarItem?",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/calendaritems(withexternalidentifier:)",
                "title": "func calendarItems(withExternalIdentifier: String) -> [EKCalendarItem]",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/remove(_:span:)",
                "title": "func remove(EKEvent, span: EKSpan) throws",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/remove(_:span:commit:)",
                "title": "func remove(EKEvent, span: EKSpan, commit: Bool) throws",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/remove(_:commit:)",
                "title": "func remove(EKReminder, commit: Bool) throws",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/save(_:span:)",
                "title": "func save(EKEvent, span: EKSpan) throws",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/save(_:span:commit:)",
                "title": "func save(EKEvent, span: EKSpan, commit: Bool) throws",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/save(_:commit:)",
                "title": "func save(EKReminder, commit: Bool) throws",
                "type": "method"
              },
              {
                "title": "Searching calendars",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/enumerateevents(matching:using:)",
                "title": "func enumerateEvents(matching: NSPredicate, using: EKEventSearchCallback)",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/events(matching:)",
                "title": "func events(matching: NSPredicate) -> [EKEvent]",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/fetchreminders(matching:completion:)",
                "title": "func fetchReminders(matching: NSPredicate, completion: ([EKReminder]?) -> Void) -> Any",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/cancelfetchrequest(_:)",
                "title": "func cancelFetchRequest(Any)",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/predicateforevents(withstart:end:calendars:)",
                "title": "func predicateForEvents(withStart: Date, end: Date, calendars: [EKCalendar]?) -> NSPredicate",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/predicateforreminders(in:)",
                "title": "func predicateForReminders(in: [EKCalendar]?) -> NSPredicate",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/predicateforcompletedreminders(withcompletiondatestarting:ending:calendars:)",
                "title": "func predicateForCompletedReminders(withCompletionDateStarting: Date?, ending: Date?, calendars: [EKCalendar]?) -> NSPredicate",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventstore/predicateforincompletereminders(withduedatestarting:ending:calendars:)",
                "title": "func predicateForIncompleteReminders(withDueDateStarting: Date?, ending: Date?, calendars: [EKCalendar]?) -> NSPredicate",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekeventsearchcallback",
                "title": "EKEventSearchCallback",
                "type": "typealias"
              },
              {
                "title": "Deprecated methods",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekeventstore/requestaccess(to:completion:)",
                "title": "func requestAccess(to: EKEntityType, completion: EKEventStoreRequestAccessCompletionHandler)",
                "type": "method"
              }
            ],
            "path": "/documentation/eventkit/ekeventstore",
            "title": "EKEventStore",
            "type": "class"
          },
          {
            "path": "/documentation/eventkit/accessing-calendar-using-eventkit-and-eventkitui",
            "title": "Accessing Calendar using EventKit and EventKitUI",
            "type": "sampleCode"
          },
          {
            "title": "Events and reminders",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/eventkit/creating-events-and-reminders",
            "title": "Creating events and reminders",
            "type": "article"
          },
          {
            "path": "/documentation/eventkit/retrieving-events-and-reminders",
            "title": "Retrieving events and reminders",
            "type": "article"
          },
          {
            "path": "/documentation/eventkit/updating-with-notifications",
            "title": "Updating with notifications",
            "type": "collection"
          },
          {
            "path": "/documentation/eventkit/managing-location-based-reminders",
            "title": "Managing Location-Based Reminders",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Creating Events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekevent/init(eventstore:)",
                "title": "init(eventStore: EKEventStore)",
                "type": "init"
              },
              {
                "title": "Scheduling Events",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventstatus/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventstatus/confirmed",
                    "title": "case confirmed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventstatus/tentative",
                    "title": "case tentative",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventstatus/canceled",
                    "title": "case canceled",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventstatus/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/ekeventstatus",
                "title": "EKEventStatus",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventavailability/notsupported",
                    "title": "case notSupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventavailability/busy",
                    "title": "case busy",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventavailability/free",
                    "title": "case free",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventavailability/tentative",
                    "title": "case tentative",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventavailability/unavailable",
                    "title": "case unavailable",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekeventavailability/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/ekeventavailability",
                "title": "EKEventAvailability",
                "type": "enum"
              },
              {
                "title": "Comparing Events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekevent/comparestartdate(with:)",
                "title": "func compareStartDate(with: EKEvent) -> ComparisonResult",
                "type": "method"
              },
              {
                "title": "Accessing Event Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekevent/eventidentifier",
                "title": "var eventIdentifier: String!",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/availability",
                "title": "var availability: EKEventAvailability",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/startdate",
                "title": "var startDate: Date!",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/enddate",
                "title": "var endDate: Date!",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/isallday",
                "title": "var isAllDay: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/occurrencedate",
                "title": "var occurrenceDate: Date!",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/isdetached",
                "title": "var isDetached: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/organizer",
                "title": "var organizer: EKParticipant?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/status",
                "title": "var status: EKEventStatus",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/birthdaycontactidentifier",
                "title": "var birthdayContactIdentifier: String?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekevent/structuredlocation",
                "title": "var structuredLocation: EKStructuredLocation?",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekevent/birthdaypersonid",
                "title": "var birthdayPersonID: Int",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekevent/birthdaypersonuniqueid",
                "title": "var birthdayPersonUniqueID: String?",
                "type": "property"
              },
              {
                "title": "Refreshing Event Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekevent/refresh()",
                "title": "func refresh() -> Bool",
                "type": "method"
              }
            ],
            "path": "/documentation/eventkit/ekevent",
            "title": "EKEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Reminder",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekreminder/init(eventstore:)",
                "title": "init(eventStore: EKEventStore)",
                "type": "init"
              },
              {
                "title": "Accessing Reminder Properties",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekreminderpriority/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekreminderpriority/high",
                    "title": "case high",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekreminderpriority/medium",
                    "title": "case medium",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekreminderpriority/low",
                    "title": "case low",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekreminderpriority/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/ekreminderpriority",
                "title": "EKReminderPriority",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/ekreminder/priority",
                "title": "var priority: Int",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekreminder/startdatecomponents",
                "title": "var startDateComponents: DateComponents?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekreminder/duedatecomponents",
                "title": "var dueDateComponents: DateComponents?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekreminder/iscompleted",
                "title": "var isCompleted: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekreminder/completiondate",
                "title": "var completionDate: Date?",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/ekreminder",
            "title": "EKReminder",
            "type": "class"
          },
          {
            "title": "Calendars",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating Calendars",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/init(for:eventstore:)",
                "title": "init(for: EKEntityType, eventStore: EKEventStore)",
                "type": "init"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekcalendar/init(eventstore:)",
                "title": "init(eventStore: EKEventStore)",
                "type": "init"
              },
              {
                "title": "Accessing Calendar Properties",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendartype/local",
                    "title": "case local",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendartype/caldav",
                    "title": "case calDAV",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendartype/exchange",
                    "title": "case exchange",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendartype/subscription",
                    "title": "case subscription",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendartype/birthday",
                    "title": "case birthday",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendartype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/ekcalendartype",
                "title": "EKCalendarType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendareventavailabilitymask/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendareventavailabilitymask/busy",
                    "title": "static var busy: EKCalendarEventAvailabilityMask",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendareventavailabilitymask/free",
                    "title": "static var free: EKCalendarEventAvailabilityMask",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendareventavailabilitymask/tentative",
                    "title": "static var tentative: EKCalendarEventAvailabilityMask",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/eventkit/ekcalendareventavailabilitymask/unavailable",
                    "title": "static var unavailable: EKCalendarEventAvailabilityMask",
                    "type": "property"
                  }
                ],
                "path": "/documentation/eventkit/ekcalendareventavailabilitymask",
                "title": "EKCalendarEventAvailabilityMask",
                "type": "struct"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/allowscontentmodifications",
                "title": "var allowsContentModifications: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/cgcolor",
                "title": "var cgColor: CGColor!",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/color",
                "title": "var color: NSColor!",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/isimmutable",
                "title": "var isImmutable: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/title",
                "title": "var title: String",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/type",
                "title": "var type: EKCalendarType",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/allowedentitytypes",
                "title": "var allowedEntityTypes: EKEntityMask",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/source",
                "title": "var source: EKSource!",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/issubscribed",
                "title": "var isSubscribed: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/supportedeventavailabilities",
                "title": "var supportedEventAvailabilities: EKCalendarEventAvailabilityMask",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendar/calendaridentifier",
                "title": "var calendarIdentifier: String",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/datetime_components_do_not_use()",
                "title": "func DATETIME_COMPONENTS_DO_NOT_USE()",
                "type": "func"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/date_components_do_not_use()",
                "title": "func DATE_COMPONENTS_DO_NOT_USE()",
                "type": "func"
              }
            ],
            "path": "/documentation/eventkit/ekcalendar",
            "title": "EKCalendar",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Defining Participants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantrole/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantrole/required",
                    "title": "case required",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantrole/optional",
                    "title": "case optional",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantrole/chair",
                    "title": "case chair",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantrole/nonparticipant",
                    "title": "case nonParticipant",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantrole/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/ekparticipantrole",
                "title": "EKParticipantRole",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipanttype/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipanttype/person",
                    "title": "case person",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipanttype/room",
                    "title": "case room",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipanttype/resource",
                    "title": "case resource",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipanttype/group",
                    "title": "case group",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipanttype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/ekparticipanttype",
                "title": "EKParticipantType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/pending",
                    "title": "case pending",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/accepted",
                    "title": "case accepted",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/declined",
                    "title": "case declined",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/tentative",
                    "title": "case tentative",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/delegated",
                    "title": "case delegated",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/completed",
                    "title": "case completed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/inprocess",
                    "title": "case inProcess",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantstatus/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/ekparticipantstatus",
                "title": "EKParticipantStatus",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/pending",
                    "title": "case pending",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/sent",
                    "title": "case sent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/delivered",
                    "title": "case delivered",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/recipientnotrecognized",
                    "title": "case recipientNotRecognized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/noprivileges",
                    "title": "case noPrivileges",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/deliveryfailed",
                    "title": "case deliveryFailed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/cannotdeliver",
                    "title": "case cannotDeliver",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/recipientnotallowed",
                    "title": "case recipientNotAllowed",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekparticipantschedulestatus/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/ekparticipantschedulestatus",
                "title": "EKParticipantScheduleStatus",
                "type": "enum"
              },
              {
                "title": "Accessing Participant Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/iscurrentuser",
                "title": "var isCurrentUser: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/name",
                "title": "var name: String?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/participantrole",
                "title": "var participantRole: EKParticipantRole",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/participantstatus",
                "title": "var participantStatus: EKParticipantStatus",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/participanttype",
                "title": "var participantType: EKParticipantType",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/url",
                "title": "var url: URL",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/contactpredicate",
                "title": "var contactPredicate: NSPredicate",
                "type": "property"
              },
              {
                "title": "Finding Participant Address Book Records",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekparticipant/abrecord(with:)",
                "title": "func abRecord(with: ABAddressBook) -> ABRecord?",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekparticipant/abperson(in:)",
                "title": "func abPerson(in: ABAddressBook) -> ABPerson?",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/abaddressbook",
                "title": "ABAddressBook",
                "type": "typealias"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/abrecord",
                "title": "ABRecord",
                "type": "typealias"
              }
            ],
            "path": "/documentation/eventkit/ekparticipant",
            "title": "EKParticipant",
            "type": "class"
          },
          {
            "title": "Recurrence",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/eventkit/creating-a-recurring-event",
            "title": "Creating a recurring event",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a Day of the Week",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekweekday/sunday",
                    "title": "case sunday",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekweekday/monday",
                    "title": "case monday",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekweekday/tuesday",
                    "title": "case tuesday",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekweekday/wednesday",
                    "title": "case wednesday",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekweekday/thursday",
                    "title": "case thursday",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekweekday/friday",
                    "title": "case friday",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekweekday/saturday",
                    "title": "case saturday",
                    "type": "case"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekweekday/eksunday",
                    "title": "static var EKSunday: EKWeekday",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekweekday/ekmonday",
                    "title": "static var EKMonday: EKWeekday",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekweekday/ektuesday",
                    "title": "static var EKTuesday: EKWeekday",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekweekday/ekwednesday",
                    "title": "static var EKWednesday: EKWeekday",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekweekday/ekthursday",
                    "title": "static var EKThursday: EKWeekday",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekweekday/ekfriday",
                    "title": "static var EKFriday: EKWeekday",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/eventkit/ekweekday/eksaturday",
                    "title": "static var EKSaturday: EKWeekday",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekweekday/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/ekweekday",
                "title": "EKWeekday",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencedayofweek/init(_:)",
                "title": "convenience init(EKWeekday)",
                "type": "init"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencedayofweek/init(_:weeknumber:)",
                "title": "convenience init(EKWeekday, weekNumber: Int)",
                "type": "init"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencedayofweek/init(dayoftheweek:weeknumber:)",
                "title": "init(dayOfTheWeek: EKWeekday, weekNumber: Int)",
                "type": "init"
              },
              {
                "title": "Accessing Properties of a Day of the Week",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencedayofweek/dayoftheweek",
                "title": "var dayOfTheWeek: EKWeekday",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencedayofweek/weeknumber",
                "title": "var weekNumber: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/ekrecurrencedayofweek",
            "title": "EKRecurrenceDayOfWeek",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Recurrence End",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekrecurrenceend/init(end:)",
                "title": "convenience init(end: Date)",
                "type": "init"
              },
              {
                "path": "/documentation/eventkit/ekrecurrenceend/init(occurrencecount:)",
                "title": "convenience init(occurrenceCount: Int)",
                "type": "init"
              },
              {
                "title": "Accessing Recurrence End Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekrecurrenceend/enddate",
                "title": "var endDate: Date?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrenceend/occurrencecount",
                "title": "var occurrenceCount: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/ekrecurrenceend",
            "title": "EKRecurrenceEnd",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Basic Recurrence Rule",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekspan/thisevent",
                    "title": "case thisEvent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekspan/futureevents",
                    "title": "case futureEvents",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekspan/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/ekspan",
                "title": "EKSpan",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/init(recurrencewith:interval:end:)",
                "title": "init(recurrenceWith: EKRecurrenceFrequency, interval: Int, end: EKRecurrenceEnd?)",
                "type": "init"
              },
              {
                "title": "Creating a Complex Recurrence Rule",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/init(recurrencewith:interval:daysoftheweek:daysofthemonth:monthsoftheyear:weeksoftheyear:daysoftheyear:setpositions:end:)",
                "title": "init(recurrenceWith: EKRecurrenceFrequency, interval: Int, daysOfTheWeek: [EKRecurrenceDayOfWeek]?, daysOfTheMonth: [NSNumber]?, monthsOfTheYear: [NSNumber]?, weeksOfTheYear: [NSNumber]?, daysOfTheYear: [NSNumber]?, setPositions: [NSNumber]?, end: EKRecurrenceEnd?)",
                "type": "init"
              },
              {
                "title": "Accessing Recurrence Rule Properties",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekrecurrencefrequency/daily",
                    "title": "case daily",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekrecurrencefrequency/weekly",
                    "title": "case weekly",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekrecurrencefrequency/monthly",
                    "title": "case monthly",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekrecurrencefrequency/yearly",
                    "title": "case yearly",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekrecurrencefrequency/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/ekrecurrencefrequency",
                "title": "EKRecurrenceFrequency",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/calendaridentifier",
                "title": "var calendarIdentifier: String",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/recurrenceend",
                "title": "var recurrenceEnd: EKRecurrenceEnd?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/frequency",
                "title": "var frequency: EKRecurrenceFrequency",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/interval",
                "title": "var interval: Int",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/firstdayoftheweek",
                "title": "var firstDayOfTheWeek: Int",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/daysoftheweek",
                "title": "var daysOfTheWeek: [EKRecurrenceDayOfWeek]?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/daysofthemonth",
                "title": "var daysOfTheMonth: [NSNumber]?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/daysoftheyear",
                "title": "var daysOfTheYear: [NSNumber]?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/weeksoftheyear",
                "title": "var weeksOfTheYear: [NSNumber]?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/monthsoftheyear",
                "title": "var monthsOfTheYear: [NSNumber]?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekrecurrencerule/setpositions",
                "title": "var setPositions: [NSNumber]?",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ek_lose_fractional_seconds_do_not_use()",
                "title": "func EK_LOSE_FRACTIONAL_SECONDS_DO_NOT_USE()",
                "type": "func"
              }
            ],
            "path": "/documentation/eventkit/ekrecurrencerule",
            "title": "EKRecurrenceRule",
            "type": "class"
          },
          {
            "title": "Alarms",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/eventkit/setting-an-alarm",
            "title": "Setting an alarm",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating an Alarm",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekalarm/init(absolutedate:)",
                "title": "init(absoluteDate: Date)",
                "type": "init"
              },
              {
                "path": "/documentation/eventkit/ekalarm/init(relativeoffset:)",
                "title": "init(relativeOffset: TimeInterval)",
                "type": "init"
              },
              {
                "title": "Accessing Alarm Dates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekalarm/absolutedate",
                "title": "var absoluteDate: Date?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekalarm/relativeoffset",
                "title": "var relativeOffset: TimeInterval",
                "type": "property"
              },
              {
                "title": "Setting GeoFence-based Alarms",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmproximity/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmproximity/enter",
                    "title": "case enter",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmproximity/leave",
                    "title": "case leave",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmproximity/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/ekalarmproximity",
                "title": "EKAlarmProximity",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/ekalarm/proximity",
                "title": "var proximity: EKAlarmProximity",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekalarm/structuredlocation",
                "title": "var structuredLocation: EKStructuredLocation?",
                "type": "property"
              },
              {
                "title": "Triggering Alarm Actions",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmtype/display",
                    "title": "case display",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmtype/audio",
                    "title": "case audio",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmtype/procedure",
                    "title": "case procedure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmtype/email",
                    "title": "case email",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekalarmtype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/ekalarmtype",
                "title": "EKAlarmType",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/ekalarm/type",
                "title": "var type: EKAlarmType",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekalarm/emailaddress",
                "title": "var emailAddress: String?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekalarm/soundname",
                "title": "var soundName: String?",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/ekalarm",
            "title": "EKAlarm",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating Structured Locations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekstructuredlocation/init(title:)",
                "title": "convenience init(title: String)",
                "type": "init"
              },
              {
                "path": "/documentation/eventkit/ekstructuredlocation/init(mapitem:)",
                "title": "convenience init(mapItem: MKMapItem)",
                "type": "init"
              },
              {
                "title": "Accessing Structured Location Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekstructuredlocation/title",
                "title": "var title: String?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekstructuredlocation/geolocation",
                "title": "var geoLocation: CLLocation?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekstructuredlocation/radius",
                "title": "var radius: Double",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/ekstructuredlocation",
            "title": "EKStructuredLocation",
            "type": "class"
          },
          {
            "title": "Common objects",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Accessing Calendar Items",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/calendaritemidentifier",
                "title": "var calendarItemIdentifier: String",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/calendaritemexternalidentifier",
                "title": "var calendarItemExternalIdentifier: String!",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/ekcalendaritem/uuid",
                "title": "var uuid: String",
                "type": "property"
              },
              {
                "title": "Accessing Calendar Item Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/calendar",
                "title": "var calendar: EKCalendar!",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/title",
                "title": "var title: String!",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/location",
                "title": "var location: String?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/creationdate",
                "title": "var creationDate: Date?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/lastmodifieddate",
                "title": "var lastModifiedDate: Date?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/timezone",
                "title": "var timeZone: TimeZone?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/url",
                "title": "var url: URL?",
                "type": "property"
              },
              {
                "title": "Attaching Notes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/hasnotes",
                "title": "var hasNotes: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/notes",
                "title": "var notes: String?",
                "type": "property"
              },
              {
                "title": "Displaying Attendees",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/hasattendees",
                "title": "var hasAttendees: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/attendees",
                "title": "var attendees: [EKParticipant]?",
                "type": "property"
              },
              {
                "title": "Adding and Removing Alarms",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/hasalarms",
                "title": "var hasAlarms: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/addalarm(_:)",
                "title": "func addAlarm(EKAlarm)",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/removealarm(_:)",
                "title": "func removeAlarm(EKAlarm)",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/alarms",
                "title": "var alarms: [EKAlarm]?",
                "type": "property"
              },
              {
                "title": "Setting Recurrence Rules",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/hasrecurrencerules",
                "title": "var hasRecurrenceRules: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/addrecurrencerule(_:)",
                "title": "func addRecurrenceRule(EKRecurrenceRule)",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/removerecurrencerule(_:)",
                "title": "func removeRecurrenceRule(EKRecurrenceRule)",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekcalendaritem/recurrencerules",
                "title": "var recurrenceRules: [EKRecurrenceRule]?",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/ekcalendaritem",
            "title": "EKCalendarItem",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Saving and Restoring State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekobject/haschanges",
                "title": "var hasChanges: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekobject/isnew",
                "title": "var isNew: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekobject/refresh()",
                "title": "func refresh() -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekobject/reset()",
                "title": "func reset()",
                "type": "method"
              },
              {
                "path": "/documentation/eventkit/ekobject/rollback()",
                "title": "func rollback()",
                "type": "method"
              }
            ],
            "path": "/documentation/eventkit/ekobject",
            "title": "EKObject",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessing Source Properties",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "EventKit Source Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/eksourcetype/local",
                    "title": "case local",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/eksourcetype/exchange",
                    "title": "case exchange",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/eksourcetype/caldav",
                    "title": "case calDAV",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/eksourcetype/mobileme",
                    "title": "case mobileMe",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/eksourcetype/subscribed",
                    "title": "case subscribed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/eksourcetype/birthdays",
                    "title": "case birthdays",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/eksourcetype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/eksourcetype",
                "title": "EKSourceType",
                "type": "enum"
              },
              {
                "path": "/documentation/eventkit/eksource/sourceidentifier",
                "title": "var sourceIdentifier: String",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/eksource/sourcetype",
                "title": "var sourceType: EKSourceType",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/eksource/title",
                "title": "var title: String",
                "type": "property"
              },
              {
                "title": "Accessing Calendars",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/eksource/calendars(for:)",
                "title": "func calendars(for: EKEntityType) -> Set<EKCalendar>",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/eventkit/eksource/calendars",
                "title": "var calendars: Set<EKCalendar>",
                "type": "property"
              },
              {
                "title": "Entity Type",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Specifying Multiple Entities",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/eventkit/ekentitymask/init(rawvalue:)",
                        "title": "init(rawValue: UInt)",
                        "type": "init"
                      },
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/eventkit/ekentitymask/event",
                        "title": "static var event: EKEntityMask",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/eventkit/ekentitymask/reminder",
                        "title": "static var reminder: EKEntityMask",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/eventkit/ekentitymask",
                    "title": "EKEntityMask",
                    "type": "struct"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekentitytype/event",
                    "title": "case event",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/eventkit/ekentitytype/reminder",
                    "title": "case reminder",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekentitytype/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/eventkit/ekentitytype",
                "title": "EKEntityType",
                "type": "enum"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/eksource/isdelegate",
                "title": "var isDelegate: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/eksource",
            "title": "EKSource",
            "type": "class"
          },
          {
            "title": "Virtual conferences",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Providing Rooms",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferenceprovider/fetchavailableroomtypes(completionhandler:)",
                "title": "func fetchAvailableRoomTypes(completionHandler: ([EKVirtualConferenceRoomTypeDescriptor]?, (any Error)?) -> Void)",
                "type": "method"
              },
              {
                "title": "Providing Virtual Conferences",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferenceprovider/fetchvirtualconference(identifier:completionhandler:)",
                "title": "func fetchVirtualConference(identifier: EKVirtualConferenceRoomTypeIdentifier, completionHandler: (EKVirtualConferenceDescriptor?, (any Error)?) -> Void)",
                "type": "method"
              }
            ],
            "path": "/documentation/eventkit/ekvirtualconferenceprovider",
            "title": "EKVirtualConferenceProvider",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating Conference Descriptors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferencedescriptor/init(title:urldescriptors:conferencedetails:)",
                "title": "init(title: String?, urlDescriptors: [EKVirtualConferenceURLDescriptor], conferenceDetails: String?)",
                "type": "init"
              },
              {
                "title": "Configuring Virtual Conferences",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferencedescriptor/title",
                "title": "var title: String?",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferencedescriptor/urldescriptors",
                "title": "var urlDescriptors: [EKVirtualConferenceURLDescriptor]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating URL Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekvirtualconferenceurldescriptor/init(title:url:)",
                    "title": "init(title: String?, url: URL)",
                    "type": "init"
                  },
                  {
                    "title": "Configuring URL Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/eventkit/ekvirtualconferenceurldescriptor/title",
                    "title": "var title: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/eventkit/ekvirtualconferenceurldescriptor/url",
                    "title": "var url: URL",
                    "type": "property"
                  }
                ],
                "path": "/documentation/eventkit/ekvirtualconferenceurldescriptor",
                "title": "EKVirtualConferenceURLDescriptor",
                "type": "class"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferencedescriptor/conferencedetails",
                "title": "var conferenceDetails: String?",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/ekvirtualconferencedescriptor",
            "title": "EKVirtualConferenceDescriptor",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating Room Type Descriptors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferenceroomtypedescriptor/init(title:identifier:)",
                "title": "init(title: String, identifier: EKVirtualConferenceRoomTypeIdentifier)",
                "type": "init"
              },
              {
                "title": "Configuring Room Type Descriptors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferenceroomtypedescriptor/title",
                "title": "var title: String",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferenceroomtypedescriptor/identifier",
                "title": "var identifier: EKVirtualConferenceRoomTypeIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekvirtualconferenceroomtypeidentifier",
                "title": "EKVirtualConferenceRoomTypeIdentifier",
                "type": "typealias"
              }
            ],
            "path": "/documentation/eventkit/ekvirtualconferenceroomtypedescriptor",
            "title": "EKVirtualConferenceRoomTypeDescriptor",
            "type": "class"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Error Codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekerror/eventnotmutable",
                "title": "static var eventNotMutable: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/nocalendar",
                "title": "static var noCalendar: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/noenddate",
                "title": "static var noEndDate: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/nostartdate",
                "title": "static var noStartDate: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/datesinverted",
                "title": "static var datesInverted: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/internalfailure",
                "title": "static var internalFailure: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/calendarreadonly",
                "title": "static var calendarReadOnly: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/durationgreaterthanrecurrence",
                "title": "static var durationGreaterThanRecurrence: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/alarmgreaterthanrecurrence",
                "title": "static var alarmGreaterThanRecurrence: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/startdatetoofarinfuture",
                "title": "static var startDateTooFarInFuture: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/startdatecollideswithotheroccurrence",
                "title": "static var startDateCollidesWithOtherOccurrence: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/objectbelongstodifferentstore",
                "title": "static var objectBelongsToDifferentStore: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/invitescannotbemoved",
                "title": "static var invitesCannotBeMoved: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/invalidspan",
                "title": "static var invalidSpan: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/calendarhasnosource",
                "title": "static var calendarHasNoSource: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/calendarsourcecannotbemodified",
                "title": "static var calendarSourceCannotBeModified: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/calendarisimmutable",
                "title": "static var calendarIsImmutable: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/sourcedoesnotallowcalendaradddelete",
                "title": "static var sourceDoesNotAllowCalendarAddDelete: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/recurringreminderrequiresduedate",
                "title": "static var recurringReminderRequiresDueDate: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/structuredlocationsnotsupported",
                "title": "static var structuredLocationsNotSupported: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/reminderlocationsnotsupported",
                "title": "static var reminderLocationsNotSupported: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/alarmproximitynotsupported",
                "title": "static var alarmProximityNotSupported: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/calendardoesnotallowevents",
                "title": "static var calendarDoesNotAllowEvents: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/calendardoesnotallowreminders",
                "title": "static var calendarDoesNotAllowReminders: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/sourcedoesnotallowreminders",
                "title": "static var sourceDoesNotAllowReminders: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/sourcedoesnotallowevents",
                "title": "static var sourceDoesNotAllowEvents: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/priorityisinvalid",
                "title": "static var priorityIsInvalid: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/invalidentitytype",
                "title": "static var invalidEntityType: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/procedurealarmsnotmutable",
                "title": "static var procedureAlarmsNotMutable: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/eventstorenotauthorized",
                "title": "static var eventStoreNotAuthorized: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/osnotsupported",
                "title": "static var osNotSupported: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/invalidinvitereplycalendar",
                "title": "static var invalidInviteReplyCalendar: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/notificationscollectionflagnotset",
                "title": "static var notificationsCollectionFlagNotSet: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/sourcemismatch",
                "title": "static var sourceMismatch: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/notificationcollectionmismatch",
                "title": "static var notificationCollectionMismatch: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/notificationsavedwithoutcollection",
                "title": "static var notificationSavedWithoutCollection: EKError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/last",
                "title": "static var last: EKError.Code",
                "type": "property"
              },
              {
                "title": "Error Domain",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekerrordomain",
                "title": "let EKErrorDomain: String",
                "type": "var"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekerror/errordomain",
                "title": "static var errorDomain: String",
                "type": "property"
              },
              {
                "path": "/documentation/eventkit/ekerror/reminderalarmcontainsemailorurl",
                "title": "static var reminderAlarmContainsEmailOrUrl: EKError.Code",
                "type": "property"
              }
            ],
            "path": "/documentation/eventkit/ekerror",
            "title": "EKError",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/eventnotmutable",
                "title": "case eventNotMutable",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/nocalendar",
                "title": "case noCalendar",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/nostartdate",
                "title": "case noStartDate",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/noenddate",
                "title": "case noEndDate",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/datesinverted",
                "title": "case datesInverted",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/internalfailure",
                "title": "case internalFailure",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/calendarreadonly",
                "title": "case calendarReadOnly",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/durationgreaterthanrecurrence",
                "title": "case durationGreaterThanRecurrence",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/alarmgreaterthanrecurrence",
                "title": "case alarmGreaterThanRecurrence",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/startdatetoofarinfuture",
                "title": "case startDateTooFarInFuture",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/startdatecollideswithotheroccurrence",
                "title": "case startDateCollidesWithOtherOccurrence",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/objectbelongstodifferentstore",
                "title": "case objectBelongsToDifferentStore",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/invitescannotbemoved",
                "title": "case invitesCannotBeMoved",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/invalidspan",
                "title": "case invalidSpan",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/calendarhasnosource",
                "title": "case calendarHasNoSource",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/calendarsourcecannotbemodified",
                "title": "case calendarSourceCannotBeModified",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/calendarisimmutable",
                "title": "case calendarIsImmutable",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/sourcedoesnotallowcalendaradddelete",
                "title": "case sourceDoesNotAllowCalendarAddDelete",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/recurringreminderrequiresduedate",
                "title": "case recurringReminderRequiresDueDate",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/structuredlocationsnotsupported",
                "title": "case structuredLocationsNotSupported",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/reminderlocationsnotsupported",
                "title": "case reminderLocationsNotSupported",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/alarmproximitynotsupported",
                "title": "case alarmProximityNotSupported",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/calendardoesnotallowevents",
                "title": "case calendarDoesNotAllowEvents",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/calendardoesnotallowreminders",
                "title": "case calendarDoesNotAllowReminders",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/sourcedoesnotallowreminders",
                "title": "case sourceDoesNotAllowReminders",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/sourcedoesnotallowevents",
                "title": "case sourceDoesNotAllowEvents",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/priorityisinvalid",
                "title": "case priorityIsInvalid",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/invalidentitytype",
                "title": "case invalidEntityType",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/procedurealarmsnotmutable",
                "title": "case procedureAlarmsNotMutable",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/eventstorenotauthorized",
                "title": "case eventStoreNotAuthorized",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/osnotsupported",
                "title": "case osNotSupported",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/invalidinvitereplycalendar",
                "title": "case invalidInviteReplyCalendar",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/notificationscollectionflagnotset",
                "title": "case notificationsCollectionFlagNotSet",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/sourcemismatch",
                "title": "case sourceMismatch",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/notificationcollectionmismatch",
                "title": "case notificationCollectionMismatch",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/notificationsavedwithoutcollection",
                "title": "case notificationSavedWithoutCollection",
                "type": "case"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/last",
                "title": "case last",
                "type": "case"
              },
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/reminderalarmcontainsemailorurl",
                "title": "case reminderAlarmContainsEmailOrUrl",
                "type": "case"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/eventkit/ekerror/code/init(rawvalue:)",
                "title": "init?(rawValue: Int)",
                "type": "init"
              }
            ],
            "path": "/documentation/eventkit/ekerror/code",
            "title": "EKError.Code",
            "type": "enum"
          },
          {
            "path": "/documentation/eventkit/ekerrordomain",
            "title": "let EKErrorDomain: String",
            "type": "var"
          }
        ],
        "path": "/documentation/eventkit",
        "title": "EventKit",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
