{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/coretransferable/choosing-a-transfer-representation-for-a-model-type",
            "title": "Choosing a transfer representation for a model type",
            "type": "article"
          },
          {
            "title": "Data transfer",
            "type": "groupMarker"
          },
          {
            "title": "File transfer",
            "type": "groupMarker"
          },
          {
            "title": "Transfer customization",
            "type": "groupMarker"
          },
          {
            "title": "Supporting types",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/coretransferable",
        "title": "Core Transferable",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/coretransferable/choosing-a-transfer-representation-for-a-model-type",
            "title": "Choosing a transfer representation for a model type",
            "type": "article"
          },
          {
            "title": "Data transfer",
            "type": "groupMarker"
          },
          {
            "title": "File transfer",
            "type": "groupMarker"
          },
          {
            "title": "Transfer customization",
            "type": "groupMarker"
          },
          {
            "title": "Supporting types",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/coretransferable",
        "title": "Core Transferable",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Implementing a transfer representation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/transferable/transferrepresentation",
                "title": "static var transferRepresentation: Self.Representation",
                "type": "property"
              },
              {
                "path": "/documentation/coretransferable/transferable/representation",
                "title": "Representation",
                "type": "associatedtype"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/transferable/init(importing:contenttype:)-4pfpm",
                "title": "init(importing: URL, contentType: UTType?) async throws",
                "type": "init"
              },
              {
                "path": "/documentation/coretransferable/transferable/init(importing:contenttype:)-74t08",
                "title": "init(importing: Data, contentType: UTType?) async throws",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/transferable/suggestedfilename",
                "title": "var suggestedFilename: String?",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/transferable/export(to:contenttype:)",
                "title": "func export(to: URL, contentType: UTType?) async throws -> URL",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferable/exported(as:)",
                "title": "func exported(as: UTType?) async throws -> Data",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferable/exportedcontenttypes(_:)",
                "title": "func exportedContentTypes(TransferRepresentationVisibility) -> [UTType]",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferable/importedcontenttypes()-swift.method",
                "title": "func importedContentTypes() -> [UTType]",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferable/withexportedfile(contenttype:filehandler:)",
                "title": "func withExportedFile<Result>(contentType: UTType?, fileHandler: (URL) async throws -> Result) async throws -> Result",
                "type": "method"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/transferable/exportedcontenttypes(visibility:)",
                "title": "static func exportedContentTypes(visibility: TransferRepresentationVisibility) -> [UTType]",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferable/importedcontenttypes()-swift.type.method",
                "title": "static func importedContentTypes() -> [UTType]",
                "type": "method"
              }
            ],
            "path": "/documentation/coretransferable/transferable",
            "title": "Transferable",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Implementing a transfer representation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentation/body-swift.property",
                "title": "var body: Self.Body",
                "type": "property"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentation/body-swift.associatedtype",
                "title": "Body",
                "type": "associatedtype"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentation/item",
                "title": "Item",
                "type": "associatedtype"
              },
              {
                "title": "Configuring exports",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentation/exportingcondition(_:)",
                "title": "func exportingCondition((Self.Item) -> Bool) -> _ConditionalTransferRepresentation<Self>",
                "type": "method"
              },
              {
                "title": "Controlling visibility",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentation/visibility(_:)",
                "title": "func visibility(TransferRepresentationVisibility) -> some TransferRepresentation<Self.Item>\n",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentation/suggestedfilename(_:)-2yln2",
                "title": "func suggestedFileName(String) -> some TransferRepresentation<Self.Item>\n",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentation/suggestedfilename(_:)-47rg0",
                "title": "func suggestedFileName((Self.Item) -> String?) -> some TransferRepresentation<Self.Item>\n",
                "type": "method"
              }
            ],
            "path": "/documentation/coretransferable/transferrepresentation",
            "title": "TransferRepresentation",
            "type": "protocol"
          },
          {
            "path": "/documentation/coretransferable/choosing-a-transfer-representation-for-a-model-type",
            "title": "Choosing a transfer representation for a model type",
            "type": "article"
          },
          {
            "title": "Data transfer",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a transfer representation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/codablerepresentation/init(for:contenttype:)",
                "title": "init(for: Item.Type, contentType: UTType)",
                "type": "init"
              },
              {
                "path": "/documentation/coretransferable/codablerepresentation/init(for:contenttype:encoder:decoder:)",
                "title": "init(for: Item.Type, contentType: UTType, encoder: Encoder, decoder: Decoder)",
                "type": "init"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/codablerepresentation/body",
                "title": "CodableRepresentation.Body",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coretransferable/codablerepresentation/exportingcondition(_:)",
                    "title": "func exportingCondition((Self.Item) -> Bool) -> _ConditionalTransferRepresentation<Self>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coretransferable/codablerepresentation/suggestedfilename(_:)-1ixmb",
                    "title": "func suggestedFileName((Self.Item) -> String?) -> some TransferRepresentation<Self.Item>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coretransferable/codablerepresentation/suggestedfilename(_:)-9xa3h",
                    "title": "func suggestedFileName(String) -> some TransferRepresentation<Self.Item>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coretransferable/codablerepresentation/visibility(_:)",
                    "title": "func visibility(TransferRepresentationVisibility) -> some TransferRepresentation<Self.Item>\n",
                    "type": "method"
                  }
                ],
                "path": "/documentation/coretransferable/codablerepresentation/transferrepresentation-implementations",
                "title": "TransferRepresentation Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/coretransferable/codablerepresentation",
            "title": "CodableRepresentation",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a transfer representation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/datarepresentation/init(contenttype:exporting:importing:)",
                "title": "init(contentType: UTType, exporting: (Item) async throws -> Data, importing: (Data) async throws -> Item)",
                "type": "init"
              },
              {
                "path": "/documentation/coretransferable/datarepresentation/init(importedcontenttype:importing:)",
                "title": "init(importedContentType: UTType, importing: (Data) async throws -> Item)",
                "type": "init"
              },
              {
                "path": "/documentation/coretransferable/datarepresentation/init(exportedcontenttype:exporting:)",
                "title": "init(exportedContentType: UTType, exporting: (Item) async throws -> Data)",
                "type": "init"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/datarepresentation/body",
                "title": "DataRepresentation.Body",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coretransferable/datarepresentation/exportingcondition(_:)",
                    "title": "func exportingCondition((Self.Item) -> Bool) -> _ConditionalTransferRepresentation<Self>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coretransferable/datarepresentation/suggestedfilename(_:)-3p1cr",
                    "title": "func suggestedFileName(String) -> some TransferRepresentation<Self.Item>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coretransferable/datarepresentation/suggestedfilename(_:)-6zayd",
                    "title": "func suggestedFileName((Self.Item) -> String?) -> some TransferRepresentation<Self.Item>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coretransferable/datarepresentation/visibility(_:)",
                    "title": "func visibility(TransferRepresentationVisibility) -> some TransferRepresentation<Self.Item>\n",
                    "type": "method"
                  }
                ],
                "path": "/documentation/coretransferable/datarepresentation/transferrepresentation-implementations",
                "title": "TransferRepresentation Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/coretransferable/datarepresentation",
            "title": "DataRepresentation",
            "type": "struct"
          },
          {
            "title": "File transfer",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a transfer representation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/filerepresentation/init(contenttype:shouldattempttoopeninplace:exporting:importing:)",
                "title": "init(contentType: UTType, shouldAttemptToOpenInPlace: Bool, exporting: (Item) async throws -> SentTransferredFile, importing: (ReceivedTransferredFile) async throws -> Item)",
                "type": "init"
              },
              {
                "path": "/documentation/coretransferable/filerepresentation/init(importedcontenttype:shouldattempttoopeninplace:importing:)",
                "title": "init(importedContentType: UTType, shouldAttemptToOpenInPlace: Bool, importing: (ReceivedTransferredFile) async throws -> Item)",
                "type": "init"
              },
              {
                "path": "/documentation/coretransferable/filerepresentation/init(exportedcontenttype:shouldallowtoopeninplace:exporting:)",
                "title": "init(exportedContentType: UTType, shouldAllowToOpenInPlace: Bool, exporting: (Item) async throws -> SentTransferredFile)",
                "type": "init"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/filerepresentation/body",
                "title": "FileRepresentation.Body",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coretransferable/filerepresentation/exportingcondition(_:)",
                    "title": "func exportingCondition((Self.Item) -> Bool) -> _ConditionalTransferRepresentation<Self>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coretransferable/filerepresentation/suggestedfilename(_:)-4cna5",
                    "title": "func suggestedFileName(String) -> some TransferRepresentation<Self.Item>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coretransferable/filerepresentation/suggestedfilename(_:)-4ys18",
                    "title": "func suggestedFileName((Self.Item) -> String?) -> some TransferRepresentation<Self.Item>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coretransferable/filerepresentation/visibility(_:)",
                    "title": "func visibility(TransferRepresentationVisibility) -> some TransferRepresentation<Self.Item>\n",
                    "type": "method"
                  }
                ],
                "path": "/documentation/coretransferable/filerepresentation/transferrepresentation-implementations",
                "title": "TransferRepresentation Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/coretransferable/filerepresentation",
            "title": "FileRepresentation",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Configuring a file transfer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/senttransferredfile/init(_:allowaccessingoriginalfile:)",
                "title": "init(URL, allowAccessingOriginalFile: Bool)",
                "type": "init"
              },
              {
                "path": "/documentation/coretransferable/senttransferredfile/file",
                "title": "let file: URL",
                "type": "property"
              },
              {
                "path": "/documentation/coretransferable/senttransferredfile/allowaccessingoriginalfile",
                "title": "let allowAccessingOriginalFile: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/coretransferable/senttransferredfile",
            "title": "SentTransferredFile",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Configuring a file transfer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/receivedtransferredfile/file",
                "title": "let file: URL",
                "type": "property"
              },
              {
                "path": "/documentation/coretransferable/receivedtransferredfile/isoriginalfile",
                "title": "let isOriginalFile: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/coretransferable/receivedtransferredfile",
            "title": "ReceivedTransferredFile",
            "type": "struct"
          },
          {
            "title": "Transfer customization",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/coretransferable/proxyrepresentation/init(exporting:)-6gjdh",
                "title": "init(exporting: (Item) async throws -> ProxyRepresentation)",
                "type": "init"
              },
              {
                "path": "/documentation/coretransferable/proxyrepresentation/init(exporting:)-q3qp",
                "title": "init(exporting: (Item) throws -> ProxyRepresentation)",
                "type": "init"
              },
              {
                "path": "/documentation/coretransferable/proxyrepresentation/init(exporting:importing:)-4aiur",
                "title": "init(exporting: (Item) throws -> ProxyRepresentation, importing: (ProxyRepresentation) throws -> Item)",
                "type": "init"
              },
              {
                "deprecated": true,
                "path": "/documentation/coretransferable/proxyrepresentation/init(exporting:importing:)-8q8zv",
                "title": "init(exporting: (Item) async throws -> ProxyRepresentation, importing: (ProxyRepresentation) async throws -> Item)",
                "type": "init"
              },
              {
                "path": "/documentation/coretransferable/proxyrepresentation/init(exporting:importing:)-h69f",
                "title": "init(exporting: (Item) throws -> ProxyRepresentation, importing: (ProxyRepresentation) async throws -> Item)",
                "type": "init"
              },
              {
                "path": "/documentation/coretransferable/proxyrepresentation/init(importing:)-4w9l5",
                "title": "init(importing: (ProxyRepresentation) async throws -> Item)",
                "type": "init"
              },
              {
                "path": "/documentation/coretransferable/proxyrepresentation/init(importing:)-pq40",
                "title": "init(importing: (ProxyRepresentation) throws -> Item)",
                "type": "init"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/proxyrepresentation/body",
                "title": "ProxyRepresentation.Body",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coretransferable/proxyrepresentation/exportingcondition(_:)",
                    "title": "func exportingCondition((Self.Item) -> Bool) -> _ConditionalTransferRepresentation<Self>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coretransferable/proxyrepresentation/suggestedfilename(_:)-1r7ku",
                    "title": "func suggestedFileName((Self.Item) -> String?) -> some TransferRepresentation<Self.Item>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coretransferable/proxyrepresentation/suggestedfilename(_:)-3wdhy",
                    "title": "func suggestedFileName(String) -> some TransferRepresentation<Self.Item>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coretransferable/proxyrepresentation/visibility(_:)",
                    "title": "func visibility(TransferRepresentationVisibility) -> some TransferRepresentation<Self.Item>\n",
                    "type": "method"
                  }
                ],
                "path": "/documentation/coretransferable/proxyrepresentation/transferrepresentation-implementations",
                "title": "TransferRepresentation Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/coretransferable/proxyrepresentation",
            "title": "ProxyRepresentation",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Specifying transfer visibility",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationvisibility/all",
                "title": "static let all: TransferRepresentationVisibility",
                "type": "property"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationvisibility/team",
                "title": "static let team: TransferRepresentationVisibility",
                "type": "property"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationvisibility/group",
                "title": "static let group: TransferRepresentationVisibility",
                "type": "property"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationvisibility/ownprocess",
                "title": "static let ownProcess: TransferRepresentationVisibility",
                "type": "property"
              },
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationvisibility/==(_:_:)",
                "title": "static func == (TransferRepresentationVisibility, TransferRepresentationVisibility) -> Bool",
                "type": "op"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coretransferable/transferrepresentationvisibility/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/coretransferable/transferrepresentationvisibility/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/coretransferable/transferrepresentationvisibility",
            "title": "TransferRepresentationVisibility",
            "type": "struct"
          },
          {
            "title": "Supporting types",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Building a transfer representation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationbuilder/buildblock(_:)",
                "title": "static func buildBlock<Content>(Content) -> Content",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationbuilder/buildexpression(_:)-3z8sl",
                "title": "static func buildExpression<R>(R) -> R",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationbuilder/buildexpression(_:)-6qtdp",
                "title": "static func buildExpression<Encoder, Decoder>(CodableRepresentation<Item, Encoder, Decoder>) -> CodableRepresentation<Item, Encoder, Decoder>",
                "type": "method"
              },
              {
                "title": "Combining transfer representations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationbuilder/buildblock(_:_:)",
                "title": "static func buildBlock<C1, C2>(C1, C2) -> TupleTransferRepresentation<Item, (C1, C2)>",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationbuilder/buildblock(_:_:_:)",
                "title": "static func buildBlock<C1, C2, C3>(C1, C2, C3) -> TupleTransferRepresentation<Item, (C1, C2, C3)>",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationbuilder/buildblock(_:_:_:_:)",
                "title": "static func buildBlock<C1, C2, C3, C4>(C1, C2, C3, C4) -> TupleTransferRepresentation<Item, (C1, C2, C3, C4)>",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationbuilder/buildblock(_:_:_:_:_:)",
                "title": "static func buildBlock<C1, C2, C3, C4, C5>(C1, C2, C3, C4, C5) -> TupleTransferRepresentation<Item, (C1, C2, C3, C4, C5)>",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationbuilder/buildblock(_:_:_:_:_:_:)",
                "title": "static func buildBlock<C1, C2, C3, C4, C5, C6>(C1, C2, C3, C4, C5, C6) -> TupleTransferRepresentation<Item, (C1, C2, C3, C4, C5, C6)>",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationbuilder/buildblock(_:_:_:_:_:_:_:)",
                "title": "static func buildBlock<C1, C2, C3, C4, C5, C6, C7>(C1, C2, C3, C4, C5, C6, C7) -> TupleTransferRepresentation<Item, (C1, C2, C3, C4, C5, C6, C7)>",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationbuilder/buildblock(_:_:_:_:_:_:_:_:)",
                "title": "static func buildBlock<C1, C2, C3, C4, C5, C6, C7, C8>(C1, C2, C3, C4, C5, C6, C7, C8) -> TupleTransferRepresentation<Item, (C1, C2, C3, C4, C5, C6, C7, C8)>",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationbuilder/buildblock(_:_:_:_:_:_:_:_:_:)",
                "title": "static func buildBlock<C1, C2, C3, C4, C5, C6, C7, C8, C9>(C1, C2, C3, C4, C5, C6, C7, C8, C9) -> TupleTransferRepresentation<Item, (C1, C2, C3, C4, C5, C6, C7, C8, C9)>",
                "type": "method"
              },
              {
                "path": "/documentation/coretransferable/transferrepresentationbuilder/buildblock(_:_:_:_:_:_:_:_:_:_:)",
                "title": "static func buildBlock<C1, C2, C3, C4, C5, C6, C7, C8, C9, C10>(C1, C2, C3, C4, C5, C6, C7, C8, C9, C10) -> TupleTransferRepresentation<Item, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10)>",
                "type": "method"
              }
            ],
            "path": "/documentation/coretransferable/transferrepresentationbuilder",
            "title": "TransferRepresentationBuilder",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Building a transfer representation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/tupletransferrepresentation/body-swift.property",
                "title": "var body: some TransferRepresentation",
                "type": "property"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coretransferable/tupletransferrepresentation/body-swift.typealias",
                "title": "TupleTransferRepresentation.Body",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coretransferable/tupletransferrepresentation/exportingcondition(_:)",
                    "title": "func exportingCondition((Self.Item) -> Bool) -> _ConditionalTransferRepresentation<Self>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coretransferable/tupletransferrepresentation/suggestedfilename(_:)-73r2p",
                    "title": "func suggestedFileName(String) -> some TransferRepresentation<Self.Item>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coretransferable/tupletransferrepresentation/suggestedfilename(_:)-8hetv",
                    "title": "func suggestedFileName((Self.Item) -> String?) -> some TransferRepresentation<Self.Item>\n",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coretransferable/tupletransferrepresentation/visibility(_:)",
                    "title": "func visibility(TransferRepresentationVisibility) -> some TransferRepresentation<Self.Item>\n",
                    "type": "method"
                  }
                ],
                "path": "/documentation/coretransferable/tupletransferrepresentation/transferrepresentation-implementations",
                "title": "TransferRepresentation Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/coretransferable/tupletransferrepresentation",
            "title": "TupleTransferRepresentation",
            "type": "struct"
          }
        ],
        "path": "/documentation/coretransferable",
        "title": "Core Transferable",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
